                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:23 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl_mrhof
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _rpl_get_nbr
                                     13 	.globl _ACTIVE
                                     14 	.globl _TX_BYTE
                                     15 	.globl _RX_BYTE
                                     16 	.globl _ERR
                                     17 	.globl _FE
                                     18 	.globl _SLAVE
                                     19 	.globl _RE
                                     20 	.globl _MODE
                                     21 	.globl _T3OVFIF
                                     22 	.globl _T3CH0IF
                                     23 	.globl _T3CH1IF
                                     24 	.globl _T4OVFIF
                                     25 	.globl _T4CH0IF
                                     26 	.globl _T4CH1IF
                                     27 	.globl _OVFIM
                                     28 	.globl _B_0
                                     29 	.globl _B_1
                                     30 	.globl _B_2
                                     31 	.globl _B_3
                                     32 	.globl _B_4
                                     33 	.globl _B_5
                                     34 	.globl _B_6
                                     35 	.globl _B_7
                                     36 	.globl _P2IF
                                     37 	.globl _UTX0IF
                                     38 	.globl _UTX1IF
                                     39 	.globl _P1IF
                                     40 	.globl _WDTIF
                                     41 	.globl _ACC_0
                                     42 	.globl _ACC_1
                                     43 	.globl _ACC_2
                                     44 	.globl _ACC_3
                                     45 	.globl _ACC_4
                                     46 	.globl _ACC_5
                                     47 	.globl _ACC_6
                                     48 	.globl _ACC_7
                                     49 	.globl _P
                                     50 	.globl _F1
                                     51 	.globl _OV
                                     52 	.globl _RS0
                                     53 	.globl _RS1
                                     54 	.globl _F0
                                     55 	.globl _AC
                                     56 	.globl _CY
                                     57 	.globl _DMAIF
                                     58 	.globl _T1IF
                                     59 	.globl _T2IF
                                     60 	.globl _T3IF
                                     61 	.globl _T4IF
                                     62 	.globl _P0IF
                                     63 	.globl _STIF
                                     64 	.globl _DMAIE
                                     65 	.globl _T1IE
                                     66 	.globl _T2IE
                                     67 	.globl _T3IE
                                     68 	.globl _T4IE
                                     69 	.globl _P0IE
                                     70 	.globl _RFERRIE
                                     71 	.globl _ADCIE
                                     72 	.globl _URX0IE
                                     73 	.globl _URX1IE
                                     74 	.globl _ENCIE
                                     75 	.globl _STIE
                                     76 	.globl _EA
                                     77 	.globl _P2_0
                                     78 	.globl _P2_1
                                     79 	.globl _P2_2
                                     80 	.globl _P2_3
                                     81 	.globl _P2_4
                                     82 	.globl _P2_5
                                     83 	.globl _P2_6
                                     84 	.globl _P2_7
                                     85 	.globl _ENCIF_0
                                     86 	.globl _ENCIF_1
                                     87 	.globl _P1_0
                                     88 	.globl _P1_1
                                     89 	.globl _P1_2
                                     90 	.globl _P1_3
                                     91 	.globl _P1_4
                                     92 	.globl _P1_5
                                     93 	.globl _P1_6
                                     94 	.globl _P1_7
                                     95 	.globl _IT0
                                     96 	.globl _RFERRIF
                                     97 	.globl _IT1
                                     98 	.globl _URX0IF
                                     99 	.globl _ADCIF
                                    100 	.globl _URX1IF
                                    101 	.globl _P0_0
                                    102 	.globl _P0_1
                                    103 	.globl _P0_2
                                    104 	.globl _P0_3
                                    105 	.globl _P0_4
                                    106 	.globl _P0_5
                                    107 	.globl _P0_6
                                    108 	.globl _P0_7
                                    109 	.globl _WDCTL
                                    110 	.globl _U1GCR
                                    111 	.globl _U1UCR
                                    112 	.globl _U1BAUD
                                    113 	.globl _U1DBUF
                                    114 	.globl _U1CSR
                                    115 	.globl _U0GCR
                                    116 	.globl _U0UCR
                                    117 	.globl _U0BAUD
                                    118 	.globl _U0DBUF
                                    119 	.globl _U0CSR
                                    120 	.globl _TIMIF
                                    121 	.globl _T4CC1
                                    122 	.globl _T4CCTL1
                                    123 	.globl _T4CC0
                                    124 	.globl _T4CCTL0
                                    125 	.globl _T4CTL
                                    126 	.globl _T4CNT
                                    127 	.globl _T3CC1
                                    128 	.globl _T3CCTL1
                                    129 	.globl _T3CC0
                                    130 	.globl _T3CCTL0
                                    131 	.globl _T3CTL
                                    132 	.globl _T3CNT
                                    133 	.globl _T2MSEL
                                    134 	.globl _T2IRQM
                                    135 	.globl _T2MOVF2
                                    136 	.globl _T2MOVF1
                                    137 	.globl _T2MOVF0
                                    138 	.globl _T2M1
                                    139 	.globl _T2M0
                                    140 	.globl _T2IRQF
                                    141 	.globl _T2EVTCFG
                                    142 	.globl _T2CTRL
                                    143 	.globl _T1STAT
                                    144 	.globl _T1CCTL2
                                    145 	.globl _T1CCTL1
                                    146 	.globl _T1CCTL0
                                    147 	.globl _T1CTL
                                    148 	.globl _T1CNTH
                                    149 	.globl _T1CNTL
                                    150 	.globl _T1CC2H
                                    151 	.globl _T1CC2L
                                    152 	.globl _T1CC1H
                                    153 	.globl _T1CC1L
                                    154 	.globl _T1CC0H
                                    155 	.globl _T1CC0L
                                    156 	.globl _CLKCONSTA
                                    157 	.globl _CLKCONCMD
                                    158 	.globl _SLEEPSTA
                                    159 	.globl _SLEEPCMD
                                    160 	.globl _STLOAD
                                    161 	.globl _ST2
                                    162 	.globl _ST1
                                    163 	.globl _ST0
                                    164 	.globl _RFERRF
                                    165 	.globl _RFIRQF0
                                    166 	.globl _RFST
                                    167 	.globl _RFD
                                    168 	.globl _RFIRQF1
                                    169 	.globl _PSBANK
                                    170 	.globl _FMAP
                                    171 	.globl _MEMCTR
                                    172 	.globl __XPAGE
                                    173 	.globl _MPAGE
                                    174 	.globl _PMUX
                                    175 	.globl _P2DIR
                                    176 	.globl _P1DIR
                                    177 	.globl _P0DIR
                                    178 	.globl _P2INP
                                    179 	.globl _P1INP
                                    180 	.globl _P2SEL
                                    181 	.globl _P1SEL
                                    182 	.globl _P0SEL
                                    183 	.globl _APCFG
                                    184 	.globl _PERCFG
                                    185 	.globl _P0INP
                                    186 	.globl _P2IEN
                                    187 	.globl _P1IEN
                                    188 	.globl _P0IEN
                                    189 	.globl _PICTL
                                    190 	.globl _P2IFG
                                    191 	.globl _P1IFG
                                    192 	.globl _P0IFG
                                    193 	.globl _DMAREQ
                                    194 	.globl _DMAARM
                                    195 	.globl _DMA0CFGH
                                    196 	.globl _DMA0CFGL
                                    197 	.globl _DMA1CFGH
                                    198 	.globl _DMA1CFGL
                                    199 	.globl _DMAIRQ
                                    200 	.globl _ENCCS
                                    201 	.globl _ENCDO
                                    202 	.globl _ENCDI
                                    203 	.globl _RNDH
                                    204 	.globl _RNDL
                                    205 	.globl _ADCH
                                    206 	.globl _ADCL
                                    207 	.globl _ADCCON3
                                    208 	.globl _ADCCON2
                                    209 	.globl _ADCCON1
                                    210 	.globl _B
                                    211 	.globl _IRCON2
                                    212 	.globl _ACC
                                    213 	.globl _PSW
                                    214 	.globl _IRCON
                                    215 	.globl _IP1
                                    216 	.globl _IEN1
                                    217 	.globl _IP0
                                    218 	.globl _IEN0
                                    219 	.globl _P2
                                    220 	.globl _S1CON
                                    221 	.globl _IEN2
                                    222 	.globl _S0CON
                                    223 	.globl _DPS
                                    224 	.globl _P1
                                    225 	.globl _TCON
                                    226 	.globl _PCON
                                    227 	.globl _DPH1
                                    228 	.globl _DPL1
                                    229 	.globl _DPH0
                                    230 	.globl _DPL0
                                    231 	.globl _SP
                                    232 	.globl _P0
                                    233 	.globl _rpl_mrhof
                                    234 	.globl _X_IEEE_ADDR
                                    235 	.globl _X_INFOPAGE
                                    236 	.globl _X_P2DIR
                                    237 	.globl _X_P1DIR
                                    238 	.globl _X_P0DIR
                                    239 	.globl _X_U1GCR
                                    240 	.globl _X_U1UCR
                                    241 	.globl _X_U1BAUD
                                    242 	.globl _X_U1DBUF
                                    243 	.globl _X_U1CSR
                                    244 	.globl _X_P2INP
                                    245 	.globl _X_P1INP
                                    246 	.globl _X_P2SEL
                                    247 	.globl _X_P1SEL
                                    248 	.globl _X_P0SEL
                                    249 	.globl _X_APCFG
                                    250 	.globl _X_PERCFG
                                    251 	.globl _X_T4CC1
                                    252 	.globl _X_T4CCTL1
                                    253 	.globl _X_T4CC0
                                    254 	.globl _X_T4CCTL0
                                    255 	.globl _X_T4CTL
                                    256 	.globl _X_T4CNT
                                    257 	.globl _X_RFIRQF0
                                    258 	.globl _X_T1CCTL2
                                    259 	.globl _X_T1CCTL1
                                    260 	.globl _X_T1CCTL0
                                    261 	.globl _X_T1CTL
                                    262 	.globl _X_T1CNTH
                                    263 	.globl _X_T1CNTL
                                    264 	.globl _X_RFST
                                    265 	.globl _X_T1CC2H
                                    266 	.globl _X_T1CC2L
                                    267 	.globl _X_T1CC1H
                                    268 	.globl _X_T1CC1L
                                    269 	.globl _X_T1CC0H
                                    270 	.globl _X_T1CC0L
                                    271 	.globl _X_RFD
                                    272 	.globl _X_TIMIF
                                    273 	.globl _X_DMAREQ
                                    274 	.globl _X_DMAARM
                                    275 	.globl _X_DMA0CFGH
                                    276 	.globl _X_DMA0CFGL
                                    277 	.globl _X_DMA1CFGH
                                    278 	.globl _X_DMA1CFGL
                                    279 	.globl _X_DMAIRQ
                                    280 	.globl _X_T3CC1
                                    281 	.globl _X_T3CCTL1
                                    282 	.globl _X_T3CC0
                                    283 	.globl _X_T3CCTL0
                                    284 	.globl _X_T3CTL
                                    285 	.globl _X_T3CNT
                                    286 	.globl _X_WDCTL
                                    287 	.globl _X_MEMCTR
                                    288 	.globl _X_CLKCONCMD
                                    289 	.globl _X_U0GCR
                                    290 	.globl _X_U0UCR
                                    291 	.globl _X_T2MSEL
                                    292 	.globl _X_U0BAUD
                                    293 	.globl _X_U0DBUF
                                    294 	.globl _X_RFERRF
                                    295 	.globl _X_SLEEPCMD
                                    296 	.globl _X_RNDH
                                    297 	.globl _X_RNDL
                                    298 	.globl _X_ADCH
                                    299 	.globl _X_ADCL
                                    300 	.globl _X_ADCCON3
                                    301 	.globl _X_ADCCON2
                                    302 	.globl _X_ADCCON1
                                    303 	.globl _X_ENCCS
                                    304 	.globl _X_ENCDO
                                    305 	.globl _X_ENCDI
                                    306 	.globl _X_T1STAT
                                    307 	.globl _X_PMUX
                                    308 	.globl _X_STLOAD
                                    309 	.globl _X_P2IEN
                                    310 	.globl _X_P0IEN
                                    311 	.globl _X_T2IRQM
                                    312 	.globl _X_T2MOVF2
                                    313 	.globl _X_T2MOVF1
                                    314 	.globl _X_T2MOVF0
                                    315 	.globl _X_T2M1
                                    316 	.globl _X_T2M0
                                    317 	.globl _X_T2IRQF
                                    318 	.globl _X_P2
                                    319 	.globl _X_PSBANK
                                    320 	.globl _X_FMAP
                                    321 	.globl _X_CLKCONSTA
                                    322 	.globl _X_SLEEPSTA
                                    323 	.globl _X_T2EVTCFG
                                    324 	.globl _X_ST2
                                    325 	.globl _X_ST1
                                    326 	.globl _X_ST0
                                    327 	.globl _X_T2CTRL
                                    328 	.globl _X__XPAGE
                                    329 	.globl _X_MPAGE
                                    330 	.globl _X_RFIRQF1
                                    331 	.globl _X_P1
                                    332 	.globl _X_P0INP
                                    333 	.globl _X_P1IEN
                                    334 	.globl _X_PICTL
                                    335 	.globl _X_P2IFG
                                    336 	.globl _X_P1IFG
                                    337 	.globl _X_P0IFG
                                    338 	.globl _X_U0CSR
                                    339 	.globl _X_P0
                                    340 	.globl _USBF5
                                    341 	.globl _USBF4
                                    342 	.globl _USBF3
                                    343 	.globl _USBF2
                                    344 	.globl _USBF1
                                    345 	.globl _USBF0
                                    346 	.globl _USBCNTH
                                    347 	.globl _USBCNTL
                                    348 	.globl _USBCNT0
                                    349 	.globl _USBCSOH
                                    350 	.globl _USBCSOL
                                    351 	.globl _USBMAXO
                                    352 	.globl _USBCSIH
                                    353 	.globl _USBCSIL
                                    354 	.globl _USBCS0
                                    355 	.globl _USBMAXI
                                    356 	.globl _USBCTRL
                                    357 	.globl _USBINDEX
                                    358 	.globl _USBFRMH
                                    359 	.globl _USBFRML
                                    360 	.globl _USBCIE
                                    361 	.globl _USBOIE
                                    362 	.globl _USBIIE
                                    363 	.globl _USBCIF
                                    364 	.globl _USBOIF
                                    365 	.globl _USBIIF
                                    366 	.globl _USBPOW
                                    367 	.globl _USBADDR
                                    368 	.globl _CSPT
                                    369 	.globl _CSPZ
                                    370 	.globl _CSPY
                                    371 	.globl _CSPX
                                    372 	.globl _CSPSTAT
                                    373 	.globl _CSPCTRL
                                    374 	.globl _CSPPROG23
                                    375 	.globl _CSPPROG22
                                    376 	.globl _CSPPROG21
                                    377 	.globl _CSPPROG20
                                    378 	.globl _CSPPROG19
                                    379 	.globl _CSPPROG18
                                    380 	.globl _CSPPROG17
                                    381 	.globl _CSPPROG16
                                    382 	.globl _CSPPROG15
                                    383 	.globl _CSPPROG14
                                    384 	.globl _CSPPROG13
                                    385 	.globl _CSPPROG12
                                    386 	.globl _CSPPROG11
                                    387 	.globl _CSPPROG10
                                    388 	.globl _CSPPROG9
                                    389 	.globl _CSPPROG8
                                    390 	.globl _CSPPROG7
                                    391 	.globl _CSPPROG6
                                    392 	.globl _CSPPROG5
                                    393 	.globl _CSPPROG4
                                    394 	.globl _CSPPROG3
                                    395 	.globl _CSPPROG2
                                    396 	.globl _CSPPROG1
                                    397 	.globl _CSPPROG0
                                    398 	.globl _RFC_OBS_CTRL2
                                    399 	.globl _RFC_OBS_CTRL1
                                    400 	.globl _RFC_OBS_CTRL0
                                    401 	.globl _TXFILTCFG
                                    402 	.globl _PTEST1
                                    403 	.globl _PTEST0
                                    404 	.globl _ATEST
                                    405 	.globl _DACTEST2
                                    406 	.globl _DACTEST1
                                    407 	.globl _DACTEST0
                                    408 	.globl _MDMTEST1
                                    409 	.globl _MDMTEST0
                                    410 	.globl _ADCTEST2
                                    411 	.globl _ADCTEST1
                                    412 	.globl _ADCTEST0
                                    413 	.globl _AGCCTRL3
                                    414 	.globl _AGCCTRL2
                                    415 	.globl _AGCCTRL1
                                    416 	.globl _AGCCTRL0
                                    417 	.globl _FSCAL3
                                    418 	.globl _FSCAL2
                                    419 	.globl _FSCAL1
                                    420 	.globl _FSCAL0
                                    421 	.globl _FSCTRL
                                    422 	.globl _RXCTRL
                                    423 	.globl _FREQEST
                                    424 	.globl _MDMCTRL1
                                    425 	.globl _MDMCTRL0
                                    426 	.globl _RFRND
                                    427 	.globl _RFERRM
                                    428 	.globl _RFIRQM1
                                    429 	.globl _RFIRQM0
                                    430 	.globl _TXLAST_PTR
                                    431 	.globl _TXFIRST_PTR
                                    432 	.globl _RXP1_PTR
                                    433 	.globl _RXLAST_PTR
                                    434 	.globl _RXFIRST_PTR
                                    435 	.globl _TXFIFOCNT
                                    436 	.globl _RXFIFOCNT
                                    437 	.globl _RXFIRST
                                    438 	.globl _RSSISTAT
                                    439 	.globl _RSSI
                                    440 	.globl _CCACTRL1
                                    441 	.globl _CCACTRL0
                                    442 	.globl _FSMCTRL
                                    443 	.globl _FIFOPCTRL
                                    444 	.globl _FSMSTAT1
                                    445 	.globl _FSMSTAT0
                                    446 	.globl _TXCTRL
                                    447 	.globl _TXPOWER
                                    448 	.globl _FREQCTRL
                                    449 	.globl _FREQTUNE
                                    450 	.globl _RXMASKCLR
                                    451 	.globl _RXMASKSET
                                    452 	.globl _RXENABLE
                                    453 	.globl _FRMCTRL1
                                    454 	.globl _FRMCTRL0
                                    455 	.globl _SRCEXTEN2
                                    456 	.globl _SRCEXTEN1
                                    457 	.globl _SRCEXTEN0
                                    458 	.globl _SRCSHORTEN2
                                    459 	.globl _SRCSHORTEN1
                                    460 	.globl _SRCSHORTEN0
                                    461 	.globl _SRCMATCH
                                    462 	.globl _FRMFILT1
                                    463 	.globl _FRMFILT0
                                    464 	.globl _SHORT_ADDR1
                                    465 	.globl _SHORT_ADDR0
                                    466 	.globl _PAN_ID1
                                    467 	.globl _PAN_ID0
                                    468 	.globl _EXT_ADDR7
                                    469 	.globl _EXT_ADDR6
                                    470 	.globl _EXT_ADDR5
                                    471 	.globl _EXT_ADDR4
                                    472 	.globl _EXT_ADDR3
                                    473 	.globl _EXT_ADDR2
                                    474 	.globl _EXT_ADDR1
                                    475 	.globl _EXT_ADDR0
                                    476 	.globl _SRCSHORTPENDEN2
                                    477 	.globl _SRCSHORTPENDEN1
                                    478 	.globl _SRCSHORTPENDEN0
                                    479 	.globl _SRCEXTPENDEN2
                                    480 	.globl _SRCEXTPENDEN1
                                    481 	.globl _SRCEXTPENDEN0
                                    482 	.globl _SRCRESINDEX
                                    483 	.globl _SRCRESMASK2
                                    484 	.globl _SRCRESMASK1
                                    485 	.globl _SRCRESMASK0
                                    486 	.globl _SRC_ADDR_TABLE
                                    487 	.globl _TXFIFO
                                    488 	.globl _RXFIFO
                                    489 	.globl _RFCORE_RAM
                                    490 	.globl _CMPCTL
                                    491 	.globl _OPAMPS
                                    492 	.globl _OPAMPC
                                    493 	.globl _STCV2
                                    494 	.globl _STCV1
                                    495 	.globl _STCV0
                                    496 	.globl _STCS
                                    497 	.globl _STCC
                                    498 	.globl _T1CC4H
                                    499 	.globl _T1CC4L
                                    500 	.globl _T1CC3H
                                    501 	.globl _T1CC3L
                                    502 	.globl _XX_T1CC2H
                                    503 	.globl _XX_T1CC2L
                                    504 	.globl _XX_T1CC1H
                                    505 	.globl _XX_T1CC1L
                                    506 	.globl _XX_T1CC0H
                                    507 	.globl _XX_T1CC0L
                                    508 	.globl _T1CCTL4
                                    509 	.globl _T1CCTL3
                                    510 	.globl _XX_T1CCTL2
                                    511 	.globl _XX_T1CCTL1
                                    512 	.globl _XX_T1CCTL0
                                    513 	.globl _CLD
                                    514 	.globl _IRCTL
                                    515 	.globl _CHIPINFO1
                                    516 	.globl _CHIPINFO0
                                    517 	.globl _FWDATA
                                    518 	.globl _FADDRH
                                    519 	.globl _FADDRL
                                    520 	.globl _FCTL
                                    521 	.globl _IVCTRL
                                    522 	.globl _BATTMON
                                    523 	.globl _SRCRC
                                    524 	.globl _DBGDATA
                                    525 	.globl _TESTREG0
                                    526 	.globl _CHIPID
                                    527 	.globl _CHVER
                                    528 	.globl _OBSSEL5
                                    529 	.globl _OBSSEL4
                                    530 	.globl _OBSSEL3
                                    531 	.globl _OBSSEL2
                                    532 	.globl _OBSSEL1
                                    533 	.globl _OBSSEL0
                                    534 	.globl _I2CIO
                                    535 	.globl _I2CWC
                                    536 	.globl _I2CADDR
                                    537 	.globl _I2CDATA
                                    538 	.globl _I2CSTAT
                                    539 	.globl _I2CCFG
                                    540 	.globl _OPAMPMC
                                    541 	.globl _MONMUX
                                    542 ;--------------------------------------------------------
                                    543 ; special function registers
                                    544 ;--------------------------------------------------------
                                    545 	.area RSEG    (ABS,DATA)
      000000                        546 	.org 0x0000
                           000080   547 _P0	=	0x0080
                           000081   548 _SP	=	0x0081
                           000082   549 _DPL0	=	0x0082
                           000083   550 _DPH0	=	0x0083
                           000084   551 _DPL1	=	0x0084
                           000085   552 _DPH1	=	0x0085
                           000087   553 _PCON	=	0x0087
                           000088   554 _TCON	=	0x0088
                           000090   555 _P1	=	0x0090
                           000092   556 _DPS	=	0x0092
                           000098   557 _S0CON	=	0x0098
                           00009A   558 _IEN2	=	0x009a
                           00009B   559 _S1CON	=	0x009b
                           0000A0   560 _P2	=	0x00a0
                           0000A8   561 _IEN0	=	0x00a8
                           0000A9   562 _IP0	=	0x00a9
                           0000B8   563 _IEN1	=	0x00b8
                           0000B9   564 _IP1	=	0x00b9
                           0000C0   565 _IRCON	=	0x00c0
                           0000D0   566 _PSW	=	0x00d0
                           0000E0   567 _ACC	=	0x00e0
                           0000E8   568 _IRCON2	=	0x00e8
                           0000F0   569 _B	=	0x00f0
                           0000B4   570 _ADCCON1	=	0x00b4
                           0000B5   571 _ADCCON2	=	0x00b5
                           0000B6   572 _ADCCON3	=	0x00b6
                           0000BA   573 _ADCL	=	0x00ba
                           0000BB   574 _ADCH	=	0x00bb
                           0000BC   575 _RNDL	=	0x00bc
                           0000BD   576 _RNDH	=	0x00bd
                           0000B1   577 _ENCDI	=	0x00b1
                           0000B2   578 _ENCDO	=	0x00b2
                           0000B3   579 _ENCCS	=	0x00b3
                           0000D1   580 _DMAIRQ	=	0x00d1
                           0000D2   581 _DMA1CFGL	=	0x00d2
                           0000D3   582 _DMA1CFGH	=	0x00d3
                           0000D4   583 _DMA0CFGL	=	0x00d4
                           0000D5   584 _DMA0CFGH	=	0x00d5
                           0000D6   585 _DMAARM	=	0x00d6
                           0000D7   586 _DMAREQ	=	0x00d7
                           000089   587 _P0IFG	=	0x0089
                           00008A   588 _P1IFG	=	0x008a
                           00008B   589 _P2IFG	=	0x008b
                           00008C   590 _PICTL	=	0x008c
                           0000AB   591 _P0IEN	=	0x00ab
                           00008D   592 _P1IEN	=	0x008d
                           0000AC   593 _P2IEN	=	0x00ac
                           00008F   594 _P0INP	=	0x008f
                           0000F1   595 _PERCFG	=	0x00f1
                           0000F2   596 _APCFG	=	0x00f2
                           0000F3   597 _P0SEL	=	0x00f3
                           0000F4   598 _P1SEL	=	0x00f4
                           0000F5   599 _P2SEL	=	0x00f5
                           0000F6   600 _P1INP	=	0x00f6
                           0000F7   601 _P2INP	=	0x00f7
                           0000FD   602 _P0DIR	=	0x00fd
                           0000FE   603 _P1DIR	=	0x00fe
                           0000FF   604 _P2DIR	=	0x00ff
                           0000AE   605 _PMUX	=	0x00ae
                           000093   606 _MPAGE	=	0x0093
                           000093   607 __XPAGE	=	0x0093
                           0000C7   608 _MEMCTR	=	0x00c7
                           00009F   609 _FMAP	=	0x009f
                           00009F   610 _PSBANK	=	0x009f
                           000091   611 _RFIRQF1	=	0x0091
                           0000D9   612 _RFD	=	0x00d9
                           0000E1   613 _RFST	=	0x00e1
                           0000E9   614 _RFIRQF0	=	0x00e9
                           0000BF   615 _RFERRF	=	0x00bf
                           000095   616 _ST0	=	0x0095
                           000096   617 _ST1	=	0x0096
                           000097   618 _ST2	=	0x0097
                           0000AD   619 _STLOAD	=	0x00ad
                           0000BE   620 _SLEEPCMD	=	0x00be
                           00009D   621 _SLEEPSTA	=	0x009d
                           0000C6   622 _CLKCONCMD	=	0x00c6
                           00009E   623 _CLKCONSTA	=	0x009e
                           0000DA   624 _T1CC0L	=	0x00da
                           0000DB   625 _T1CC0H	=	0x00db
                           0000DC   626 _T1CC1L	=	0x00dc
                           0000DD   627 _T1CC1H	=	0x00dd
                           0000DE   628 _T1CC2L	=	0x00de
                           0000DF   629 _T1CC2H	=	0x00df
                           0000E2   630 _T1CNTL	=	0x00e2
                           0000E3   631 _T1CNTH	=	0x00e3
                           0000E4   632 _T1CTL	=	0x00e4
                           0000E5   633 _T1CCTL0	=	0x00e5
                           0000E6   634 _T1CCTL1	=	0x00e6
                           0000E7   635 _T1CCTL2	=	0x00e7
                           0000AF   636 _T1STAT	=	0x00af
                           000094   637 _T2CTRL	=	0x0094
                           00009C   638 _T2EVTCFG	=	0x009c
                           0000A1   639 _T2IRQF	=	0x00a1
                           0000A2   640 _T2M0	=	0x00a2
                           0000A3   641 _T2M1	=	0x00a3
                           0000A4   642 _T2MOVF0	=	0x00a4
                           0000A5   643 _T2MOVF1	=	0x00a5
                           0000A6   644 _T2MOVF2	=	0x00a6
                           0000A7   645 _T2IRQM	=	0x00a7
                           0000C3   646 _T2MSEL	=	0x00c3
                           0000CA   647 _T3CNT	=	0x00ca
                           0000CB   648 _T3CTL	=	0x00cb
                           0000CC   649 _T3CCTL0	=	0x00cc
                           0000CD   650 _T3CC0	=	0x00cd
                           0000CE   651 _T3CCTL1	=	0x00ce
                           0000CF   652 _T3CC1	=	0x00cf
                           0000EA   653 _T4CNT	=	0x00ea
                           0000EB   654 _T4CTL	=	0x00eb
                           0000EC   655 _T4CCTL0	=	0x00ec
                           0000ED   656 _T4CC0	=	0x00ed
                           0000EE   657 _T4CCTL1	=	0x00ee
                           0000EF   658 _T4CC1	=	0x00ef
                           0000D8   659 _TIMIF	=	0x00d8
                           000086   660 _U0CSR	=	0x0086
                           0000C1   661 _U0DBUF	=	0x00c1
                           0000C2   662 _U0BAUD	=	0x00c2
                           0000C4   663 _U0UCR	=	0x00c4
                           0000C5   664 _U0GCR	=	0x00c5
                           0000F8   665 _U1CSR	=	0x00f8
                           0000F9   666 _U1DBUF	=	0x00f9
                           0000FA   667 _U1BAUD	=	0x00fa
                           0000FB   668 _U1UCR	=	0x00fb
                           0000FC   669 _U1GCR	=	0x00fc
                           0000C9   670 _WDCTL	=	0x00c9
                                    671 ;--------------------------------------------------------
                                    672 ; special function bits
                                    673 ;--------------------------------------------------------
                                    674 	.area RSEG    (ABS,DATA)
      000000                        675 	.org 0x0000
                           000087   676 _P0_7	=	0x0087
                           000086   677 _P0_6	=	0x0086
                           000085   678 _P0_5	=	0x0085
                           000084   679 _P0_4	=	0x0084
                           000083   680 _P0_3	=	0x0083
                           000082   681 _P0_2	=	0x0082
                           000081   682 _P0_1	=	0x0081
                           000080   683 _P0_0	=	0x0080
                           00008F   684 _URX1IF	=	0x008f
                           00008D   685 _ADCIF	=	0x008d
                           00008B   686 _URX0IF	=	0x008b
                           00008A   687 _IT1	=	0x008a
                           000089   688 _RFERRIF	=	0x0089
                           000088   689 _IT0	=	0x0088
                           000097   690 _P1_7	=	0x0097
                           000096   691 _P1_6	=	0x0096
                           000095   692 _P1_5	=	0x0095
                           000094   693 _P1_4	=	0x0094
                           000093   694 _P1_3	=	0x0093
                           000092   695 _P1_2	=	0x0092
                           000091   696 _P1_1	=	0x0091
                           000090   697 _P1_0	=	0x0090
                           000099   698 _ENCIF_1	=	0x0099
                           000098   699 _ENCIF_0	=	0x0098
                           0000A7   700 _P2_7	=	0x00a7
                           0000A6   701 _P2_6	=	0x00a6
                           0000A5   702 _P2_5	=	0x00a5
                           0000A4   703 _P2_4	=	0x00a4
                           0000A3   704 _P2_3	=	0x00a3
                           0000A2   705 _P2_2	=	0x00a2
                           0000A1   706 _P2_1	=	0x00a1
                           0000A0   707 _P2_0	=	0x00a0
                           0000AF   708 _EA	=	0x00af
                           0000AD   709 _STIE	=	0x00ad
                           0000AC   710 _ENCIE	=	0x00ac
                           0000AB   711 _URX1IE	=	0x00ab
                           0000AA   712 _URX0IE	=	0x00aa
                           0000A9   713 _ADCIE	=	0x00a9
                           0000A8   714 _RFERRIE	=	0x00a8
                           0000BD   715 _P0IE	=	0x00bd
                           0000BC   716 _T4IE	=	0x00bc
                           0000BB   717 _T3IE	=	0x00bb
                           0000BA   718 _T2IE	=	0x00ba
                           0000B9   719 _T1IE	=	0x00b9
                           0000B8   720 _DMAIE	=	0x00b8
                           0000C7   721 _STIF	=	0x00c7
                           0000C5   722 _P0IF	=	0x00c5
                           0000C4   723 _T4IF	=	0x00c4
                           0000C3   724 _T3IF	=	0x00c3
                           0000C2   725 _T2IF	=	0x00c2
                           0000C1   726 _T1IF	=	0x00c1
                           0000C0   727 _DMAIF	=	0x00c0
                           0000D7   728 _CY	=	0x00d7
                           0000D6   729 _AC	=	0x00d6
                           0000D5   730 _F0	=	0x00d5
                           0000D4   731 _RS1	=	0x00d4
                           0000D3   732 _RS0	=	0x00d3
                           0000D2   733 _OV	=	0x00d2
                           0000D1   734 _F1	=	0x00d1
                           0000D0   735 _P	=	0x00d0
                           0000E7   736 _ACC_7	=	0x00e7
                           0000E6   737 _ACC_6	=	0x00e6
                           0000E5   738 _ACC_5	=	0x00e5
                           0000E4   739 _ACC_4	=	0x00e4
                           0000E3   740 _ACC_3	=	0x00e3
                           0000E2   741 _ACC_2	=	0x00e2
                           0000E1   742 _ACC_1	=	0x00e1
                           0000E0   743 _ACC_0	=	0x00e0
                           0000EC   744 _WDTIF	=	0x00ec
                           0000EB   745 _P1IF	=	0x00eb
                           0000EA   746 _UTX1IF	=	0x00ea
                           0000E9   747 _UTX0IF	=	0x00e9
                           0000E8   748 _P2IF	=	0x00e8
                           0000F7   749 _B_7	=	0x00f7
                           0000F6   750 _B_6	=	0x00f6
                           0000F5   751 _B_5	=	0x00f5
                           0000F4   752 _B_4	=	0x00f4
                           0000F3   753 _B_3	=	0x00f3
                           0000F2   754 _B_2	=	0x00f2
                           0000F1   755 _B_1	=	0x00f1
                           0000F0   756 _B_0	=	0x00f0
                           0000DE   757 _OVFIM	=	0x00de
                           0000DD   758 _T4CH1IF	=	0x00dd
                           0000DC   759 _T4CH0IF	=	0x00dc
                           0000DB   760 _T4OVFIF	=	0x00db
                           0000DA   761 _T3CH1IF	=	0x00da
                           0000D9   762 _T3CH0IF	=	0x00d9
                           0000D8   763 _T3OVFIF	=	0x00d8
                           0000FF   764 _MODE	=	0x00ff
                           0000FE   765 _RE	=	0x00fe
                           0000FD   766 _SLAVE	=	0x00fd
                           0000FC   767 _FE	=	0x00fc
                           0000FB   768 _ERR	=	0x00fb
                           0000FA   769 _RX_BYTE	=	0x00fa
                           0000F9   770 _TX_BYTE	=	0x00f9
                           0000F8   771 _ACTIVE	=	0x00f8
                                    772 ;--------------------------------------------------------
                                    773 ; overlayable register banks
                                    774 ;--------------------------------------------------------
                                    775 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        776 	.ds 8
                                    777 ;--------------------------------------------------------
                                    778 ; internal ram data
                                    779 ;--------------------------------------------------------
                                    780 	.area DSEG    (DATA)
                                    781 ;--------------------------------------------------------
                                    782 ; overlayable items in internal ram 
                                    783 ;--------------------------------------------------------
                                    784 ;--------------------------------------------------------
                                    785 ; indirectly addressable internal ram data
                                    786 ;--------------------------------------------------------
                                    787 	.area ISEG    (DATA)
                                    788 ;--------------------------------------------------------
                                    789 ; absolute internal ram data
                                    790 ;--------------------------------------------------------
                                    791 	.area IABS    (ABS,DATA)
                                    792 	.area IABS    (ABS,DATA)
                                    793 ;--------------------------------------------------------
                                    794 ; bit data
                                    795 ;--------------------------------------------------------
                                    796 	.area BSEG    (BIT)
                                    797 ;--------------------------------------------------------
                                    798 ; paged external ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area PSEG    (PAG,XDATA)
                                    801 ;--------------------------------------------------------
                                    802 ; external ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area XSEG    (XDATA)
                           0061A6   805 _MONMUX	=	0x61a6
                           0061A6   806 _OPAMPMC	=	0x61a6
                           006230   807 _I2CCFG	=	0x6230
                           006231   808 _I2CSTAT	=	0x6231
                           006232   809 _I2CDATA	=	0x6232
                           006233   810 _I2CADDR	=	0x6233
                           006234   811 _I2CWC	=	0x6234
                           006235   812 _I2CIO	=	0x6235
                           006243   813 _OBSSEL0	=	0x6243
                           006244   814 _OBSSEL1	=	0x6244
                           006245   815 _OBSSEL2	=	0x6245
                           006246   816 _OBSSEL3	=	0x6246
                           006247   817 _OBSSEL4	=	0x6247
                           006248   818 _OBSSEL5	=	0x6248
                           006249   819 _CHVER	=	0x6249
                           00624A   820 _CHIPID	=	0x624a
                           00624B   821 _TESTREG0	=	0x624b
                           006260   822 _DBGDATA	=	0x6260
                           006262   823 _SRCRC	=	0x6262
                           006264   824 _BATTMON	=	0x6264
                           006265   825 _IVCTRL	=	0x6265
                           006270   826 _FCTL	=	0x6270
                           006271   827 _FADDRL	=	0x6271
                           006272   828 _FADDRH	=	0x6272
                           006273   829 _FWDATA	=	0x6273
                           006276   830 _CHIPINFO0	=	0x6276
                           006277   831 _CHIPINFO1	=	0x6277
                           006281   832 _IRCTL	=	0x6281
                           006290   833 _CLD	=	0x6290
                           0062A0   834 _XX_T1CCTL0	=	0x62a0
                           0062A1   835 _XX_T1CCTL1	=	0x62a1
                           0062A2   836 _XX_T1CCTL2	=	0x62a2
                           0062A3   837 _T1CCTL3	=	0x62a3
                           0062A4   838 _T1CCTL4	=	0x62a4
                           0062A6   839 _XX_T1CC0L	=	0x62a6
                           0062A7   840 _XX_T1CC0H	=	0x62a7
                           0062A8   841 _XX_T1CC1L	=	0x62a8
                           0062A9   842 _XX_T1CC1H	=	0x62a9
                           0062AA   843 _XX_T1CC2L	=	0x62aa
                           0062AB   844 _XX_T1CC2H	=	0x62ab
                           0062AC   845 _T1CC3L	=	0x62ac
                           0062AD   846 _T1CC3H	=	0x62ad
                           0062AE   847 _T1CC4L	=	0x62ae
                           0062AF   848 _T1CC4H	=	0x62af
                           0062B0   849 _STCC	=	0x62b0
                           0062B1   850 _STCS	=	0x62b1
                           0062B2   851 _STCV0	=	0x62b2
                           0062B3   852 _STCV1	=	0x62b3
                           0062B4   853 _STCV2	=	0x62b4
                           0062C0   854 _OPAMPC	=	0x62c0
                           0062C1   855 _OPAMPS	=	0x62c1
                           0062D0   856 _CMPCTL	=	0x62d0
                           006000   857 _RFCORE_RAM	=	0x6000
                           006000   858 _RXFIFO	=	0x6000
                           006080   859 _TXFIFO	=	0x6080
                           006100   860 _SRC_ADDR_TABLE	=	0x6100
                           006160   861 _SRCRESMASK0	=	0x6160
                           006161   862 _SRCRESMASK1	=	0x6161
                           006162   863 _SRCRESMASK2	=	0x6162
                           006163   864 _SRCRESINDEX	=	0x6163
                           006164   865 _SRCEXTPENDEN0	=	0x6164
                           006165   866 _SRCEXTPENDEN1	=	0x6165
                           006166   867 _SRCEXTPENDEN2	=	0x6166
                           006167   868 _SRCSHORTPENDEN0	=	0x6167
                           006168   869 _SRCSHORTPENDEN1	=	0x6168
                           006169   870 _SRCSHORTPENDEN2	=	0x6169
                           00616A   871 _EXT_ADDR0	=	0x616a
                           00616B   872 _EXT_ADDR1	=	0x616b
                           00616C   873 _EXT_ADDR2	=	0x616c
                           00616D   874 _EXT_ADDR3	=	0x616d
                           00616E   875 _EXT_ADDR4	=	0x616e
                           00616F   876 _EXT_ADDR5	=	0x616f
                           006170   877 _EXT_ADDR6	=	0x6170
                           006171   878 _EXT_ADDR7	=	0x6171
                           006172   879 _PAN_ID0	=	0x6172
                           006173   880 _PAN_ID1	=	0x6173
                           006174   881 _SHORT_ADDR0	=	0x6174
                           006175   882 _SHORT_ADDR1	=	0x6175
                           006180   883 _FRMFILT0	=	0x6180
                           006181   884 _FRMFILT1	=	0x6181
                           006182   885 _SRCMATCH	=	0x6182
                           006183   886 _SRCSHORTEN0	=	0x6183
                           006184   887 _SRCSHORTEN1	=	0x6184
                           006185   888 _SRCSHORTEN2	=	0x6185
                           006186   889 _SRCEXTEN0	=	0x6186
                           006187   890 _SRCEXTEN1	=	0x6187
                           006188   891 _SRCEXTEN2	=	0x6188
                           006189   892 _FRMCTRL0	=	0x6189
                           00618A   893 _FRMCTRL1	=	0x618a
                           00618B   894 _RXENABLE	=	0x618b
                           00618C   895 _RXMASKSET	=	0x618c
                           00618D   896 _RXMASKCLR	=	0x618d
                           00618E   897 _FREQTUNE	=	0x618e
                           00618F   898 _FREQCTRL	=	0x618f
                           006190   899 _TXPOWER	=	0x6190
                           006191   900 _TXCTRL	=	0x6191
                           006192   901 _FSMSTAT0	=	0x6192
                           006193   902 _FSMSTAT1	=	0x6193
                           006194   903 _FIFOPCTRL	=	0x6194
                           006195   904 _FSMCTRL	=	0x6195
                           006196   905 _CCACTRL0	=	0x6196
                           006197   906 _CCACTRL1	=	0x6197
                           006198   907 _RSSI	=	0x6198
                           006199   908 _RSSISTAT	=	0x6199
                           00619A   909 _RXFIRST	=	0x619a
                           00619B   910 _RXFIFOCNT	=	0x619b
                           00619C   911 _TXFIFOCNT	=	0x619c
                           00619D   912 _RXFIRST_PTR	=	0x619d
                           00619E   913 _RXLAST_PTR	=	0x619e
                           00619F   914 _RXP1_PTR	=	0x619f
                           0061A1   915 _TXFIRST_PTR	=	0x61a1
                           0061A2   916 _TXLAST_PTR	=	0x61a2
                           0061A3   917 _RFIRQM0	=	0x61a3
                           0061A4   918 _RFIRQM1	=	0x61a4
                           0061A5   919 _RFERRM	=	0x61a5
                           0061A7   920 _RFRND	=	0x61a7
                           0061A8   921 _MDMCTRL0	=	0x61a8
                           0061A9   922 _MDMCTRL1	=	0x61a9
                           0061AA   923 _FREQEST	=	0x61aa
                           0061AB   924 _RXCTRL	=	0x61ab
                           0061AC   925 _FSCTRL	=	0x61ac
                           0061AD   926 _FSCAL0	=	0x61ad
                           0061AE   927 _FSCAL1	=	0x61ae
                           0061AF   928 _FSCAL2	=	0x61af
                           0061B0   929 _FSCAL3	=	0x61b0
                           0061B1   930 _AGCCTRL0	=	0x61b1
                           0061B2   931 _AGCCTRL1	=	0x61b2
                           0061B3   932 _AGCCTRL2	=	0x61b3
                           0061B4   933 _AGCCTRL3	=	0x61b4
                           0061B5   934 _ADCTEST0	=	0x61b5
                           0061B6   935 _ADCTEST1	=	0x61b6
                           0061B7   936 _ADCTEST2	=	0x61b7
                           0061B8   937 _MDMTEST0	=	0x61b8
                           0061B9   938 _MDMTEST1	=	0x61b9
                           0061BA   939 _DACTEST0	=	0x61ba
                           0061BB   940 _DACTEST1	=	0x61bb
                           0061BC   941 _DACTEST2	=	0x61bc
                           0061BD   942 _ATEST	=	0x61bd
                           0061BE   943 _PTEST0	=	0x61be
                           0061BF   944 _PTEST1	=	0x61bf
                           0061FA   945 _TXFILTCFG	=	0x61fa
                           0061EB   946 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   947 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   948 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   949 _CSPPROG0	=	0x61c0
                           0061C1   950 _CSPPROG1	=	0x61c1
                           0061C2   951 _CSPPROG2	=	0x61c2
                           0061C3   952 _CSPPROG3	=	0x61c3
                           0061C4   953 _CSPPROG4	=	0x61c4
                           0061C5   954 _CSPPROG5	=	0x61c5
                           0061C6   955 _CSPPROG6	=	0x61c6
                           0061C7   956 _CSPPROG7	=	0x61c7
                           0061C8   957 _CSPPROG8	=	0x61c8
                           0061C9   958 _CSPPROG9	=	0x61c9
                           0061CA   959 _CSPPROG10	=	0x61ca
                           0061CB   960 _CSPPROG11	=	0x61cb
                           0061CC   961 _CSPPROG12	=	0x61cc
                           0061CD   962 _CSPPROG13	=	0x61cd
                           0061CE   963 _CSPPROG14	=	0x61ce
                           0061CF   964 _CSPPROG15	=	0x61cf
                           0061D0   965 _CSPPROG16	=	0x61d0
                           0061D1   966 _CSPPROG17	=	0x61d1
                           0061D2   967 _CSPPROG18	=	0x61d2
                           0061D3   968 _CSPPROG19	=	0x61d3
                           0061D4   969 _CSPPROG20	=	0x61d4
                           0061D5   970 _CSPPROG21	=	0x61d5
                           0061D6   971 _CSPPROG22	=	0x61d6
                           0061D7   972 _CSPPROG23	=	0x61d7
                           0061E0   973 _CSPCTRL	=	0x61e0
                           0061E1   974 _CSPSTAT	=	0x61e1
                           0061E2   975 _CSPX	=	0x61e2
                           0061E3   976 _CSPY	=	0x61e3
                           0061E4   977 _CSPZ	=	0x61e4
                           0061E5   978 _CSPT	=	0x61e5
                           006200   979 _USBADDR	=	0x6200
                           006201   980 _USBPOW	=	0x6201
                           006202   981 _USBIIF	=	0x6202
                           006204   982 _USBOIF	=	0x6204
                           006206   983 _USBCIF	=	0x6206
                           006207   984 _USBIIE	=	0x6207
                           006209   985 _USBOIE	=	0x6209
                           00620B   986 _USBCIE	=	0x620b
                           00620C   987 _USBFRML	=	0x620c
                           00620D   988 _USBFRMH	=	0x620d
                           00620E   989 _USBINDEX	=	0x620e
                           00620F   990 _USBCTRL	=	0x620f
                           006210   991 _USBMAXI	=	0x6210
                           006211   992 _USBCS0	=	0x6211
                           006211   993 _USBCSIL	=	0x6211
                           006212   994 _USBCSIH	=	0x6212
                           006213   995 _USBMAXO	=	0x6213
                           006214   996 _USBCSOL	=	0x6214
                           006215   997 _USBCSOH	=	0x6215
                           006216   998 _USBCNT0	=	0x6216
                           006216   999 _USBCNTL	=	0x6216
                           006217  1000 _USBCNTH	=	0x6217
                           006220  1001 _USBF0	=	0x6220
                           006222  1002 _USBF1	=	0x6222
                           006224  1003 _USBF2	=	0x6224
                           006226  1004 _USBF3	=	0x6226
                           006228  1005 _USBF4	=	0x6228
                           00622A  1006 _USBF5	=	0x622a
                           007080  1007 _X_P0	=	0x7080
                           007086  1008 _X_U0CSR	=	0x7086
                           007089  1009 _X_P0IFG	=	0x7089
                           00708A  1010 _X_P1IFG	=	0x708a
                           00708B  1011 _X_P2IFG	=	0x708b
                           00708C  1012 _X_PICTL	=	0x708c
                           00708D  1013 _X_P1IEN	=	0x708d
                           00708F  1014 _X_P0INP	=	0x708f
                           007090  1015 _X_P1	=	0x7090
                           007091  1016 _X_RFIRQF1	=	0x7091
                           007093  1017 _X_MPAGE	=	0x7093
                           007093  1018 _X__XPAGE	=	0x7093
                           007094  1019 _X_T2CTRL	=	0x7094
                           007095  1020 _X_ST0	=	0x7095
                           007096  1021 _X_ST1	=	0x7096
                           007097  1022 _X_ST2	=	0x7097
                           00709C  1023 _X_T2EVTCFG	=	0x709c
                           00709D  1024 _X_SLEEPSTA	=	0x709d
                           00709E  1025 _X_CLKCONSTA	=	0x709e
                           00709F  1026 _X_FMAP	=	0x709f
                           00709F  1027 _X_PSBANK	=	0x709f
                           0070A0  1028 _X_P2	=	0x70a0
                           0070A1  1029 _X_T2IRQF	=	0x70a1
                           0070A2  1030 _X_T2M0	=	0x70a2
                           0070A3  1031 _X_T2M1	=	0x70a3
                           0070A4  1032 _X_T2MOVF0	=	0x70a4
                           0070A5  1033 _X_T2MOVF1	=	0x70a5
                           0070A6  1034 _X_T2MOVF2	=	0x70a6
                           0070A7  1035 _X_T2IRQM	=	0x70a7
                           0070AB  1036 _X_P0IEN	=	0x70ab
                           0070AC  1037 _X_P2IEN	=	0x70ac
                           0070AD  1038 _X_STLOAD	=	0x70ad
                           0070AE  1039 _X_PMUX	=	0x70ae
                           0070AF  1040 _X_T1STAT	=	0x70af
                           0070B1  1041 _X_ENCDI	=	0x70b1
                           0070B2  1042 _X_ENCDO	=	0x70b2
                           0070B3  1043 _X_ENCCS	=	0x70b3
                           0070B4  1044 _X_ADCCON1	=	0x70b4
                           0070B5  1045 _X_ADCCON2	=	0x70b5
                           0070B6  1046 _X_ADCCON3	=	0x70b6
                           0070BA  1047 _X_ADCL	=	0x70ba
                           0070BB  1048 _X_ADCH	=	0x70bb
                           0070BC  1049 _X_RNDL	=	0x70bc
                           0070BD  1050 _X_RNDH	=	0x70bd
                           0070BE  1051 _X_SLEEPCMD	=	0x70be
                           0070BF  1052 _X_RFERRF	=	0x70bf
                           0070C1  1053 _X_U0DBUF	=	0x70c1
                           0070C2  1054 _X_U0BAUD	=	0x70c2
                           0070C3  1055 _X_T2MSEL	=	0x70c3
                           0070C4  1056 _X_U0UCR	=	0x70c4
                           0070C5  1057 _X_U0GCR	=	0x70c5
                           0070C6  1058 _X_CLKCONCMD	=	0x70c6
                           0070C7  1059 _X_MEMCTR	=	0x70c7
                           0070C9  1060 _X_WDCTL	=	0x70c9
                           0070CA  1061 _X_T3CNT	=	0x70ca
                           0070CB  1062 _X_T3CTL	=	0x70cb
                           0070CC  1063 _X_T3CCTL0	=	0x70cc
                           0070CD  1064 _X_T3CC0	=	0x70cd
                           0070CE  1065 _X_T3CCTL1	=	0x70ce
                           0070CF  1066 _X_T3CC1	=	0x70cf
                           0070D1  1067 _X_DMAIRQ	=	0x70d1
                           0070D2  1068 _X_DMA1CFGL	=	0x70d2
                           0070D3  1069 _X_DMA1CFGH	=	0x70d3
                           0070D4  1070 _X_DMA0CFGL	=	0x70d4
                           0070D5  1071 _X_DMA0CFGH	=	0x70d5
                           0070D6  1072 _X_DMAARM	=	0x70d6
                           0070D7  1073 _X_DMAREQ	=	0x70d7
                           0070D8  1074 _X_TIMIF	=	0x70d8
                           0070D9  1075 _X_RFD	=	0x70d9
                           0070DA  1076 _X_T1CC0L	=	0x70da
                           0070DB  1077 _X_T1CC0H	=	0x70db
                           0070DC  1078 _X_T1CC1L	=	0x70dc
                           0070DD  1079 _X_T1CC1H	=	0x70dd
                           0070DE  1080 _X_T1CC2L	=	0x70de
                           0070DF  1081 _X_T1CC2H	=	0x70df
                           0070E1  1082 _X_RFST	=	0x70e1
                           0070E2  1083 _X_T1CNTL	=	0x70e2
                           0070E3  1084 _X_T1CNTH	=	0x70e3
                           0070E4  1085 _X_T1CTL	=	0x70e4
                           0070E5  1086 _X_T1CCTL0	=	0x70e5
                           0070E6  1087 _X_T1CCTL1	=	0x70e6
                           0070E7  1088 _X_T1CCTL2	=	0x70e7
                           0070E9  1089 _X_RFIRQF0	=	0x70e9
                           0070EA  1090 _X_T4CNT	=	0x70ea
                           0070EB  1091 _X_T4CTL	=	0x70eb
                           0070EC  1092 _X_T4CCTL0	=	0x70ec
                           0070ED  1093 _X_T4CC0	=	0x70ed
                           0070EE  1094 _X_T4CCTL1	=	0x70ee
                           0070EF  1095 _X_T4CC1	=	0x70ef
                           0070F1  1096 _X_PERCFG	=	0x70f1
                           0070F2  1097 _X_APCFG	=	0x70f2
                           0070F3  1098 _X_P0SEL	=	0x70f3
                           0070F4  1099 _X_P1SEL	=	0x70f4
                           0070F5  1100 _X_P2SEL	=	0x70f5
                           0070F6  1101 _X_P1INP	=	0x70f6
                           0070F7  1102 _X_P2INP	=	0x70f7
                           0070F8  1103 _X_U1CSR	=	0x70f8
                           0070F9  1104 _X_U1DBUF	=	0x70f9
                           0070FA  1105 _X_U1BAUD	=	0x70fa
                           0070FB  1106 _X_U1UCR	=	0x70fb
                           0070FC  1107 _X_U1GCR	=	0x70fc
                           0070FD  1108 _X_P0DIR	=	0x70fd
                           0070FE  1109 _X_P1DIR	=	0x70fe
                           0070FF  1110 _X_P2DIR	=	0x70ff
                           007800  1111 _X_INFOPAGE	=	0x7800
                           00780C  1112 _X_IEEE_ADDR	=	0x780c
                                   1113 ;--------------------------------------------------------
                                   1114 ; absolute external ram data
                                   1115 ;--------------------------------------------------------
                                   1116 	.area XABS    (ABS,XDATA)
                                   1117 ;--------------------------------------------------------
                                   1118 ; external initialized ram data
                                   1119 ;--------------------------------------------------------
                                   1120 	.area XISEG   (XDATA)
      000000                       1121 _rpl_mrhof::
      000000                       1122 	.ds 20
                                   1123 	.area HOME    (CODE)
                                   1124 	.area GSINIT0 (CODE)
                                   1125 	.area GSINIT1 (CODE)
                                   1126 	.area GSINIT2 (CODE)
                                   1127 	.area GSINIT3 (CODE)
                                   1128 	.area GSINIT4 (CODE)
                                   1129 	.area GSINIT5 (CODE)
                                   1130 	.area GSINIT  (CODE)
                                   1131 	.area GSFINAL (CODE)
                                   1132 	.area CSEG    (CODE)
                                   1133 ;--------------------------------------------------------
                                   1134 ; global & static initialisations
                                   1135 ;--------------------------------------------------------
                                   1136 	.area HOME    (CODE)
                                   1137 	.area GSINIT  (CODE)
                                   1138 	.area GSFINAL (CODE)
                                   1139 	.area GSINIT  (CODE)
                                   1140 ;--------------------------------------------------------
                                   1141 ; Home
                                   1142 ;--------------------------------------------------------
                                   1143 	.area HOME    (CODE)
                                   1144 	.area HOME    (CODE)
                                   1145 ;--------------------------------------------------------
                                   1146 ; code
                                   1147 ;--------------------------------------------------------
                                   1148 	.area BANK1   (CODE)
                                   1149 ;------------------------------------------------------------
                                   1150 ;Allocation info for local variables in function 'calculate_path_metric'
                                   1151 ;------------------------------------------------------------
                                   1152 ;p                         Allocated to registers r5 r6 r7 
                                   1153 ;nbr                       Allocated to registers r2 r3 r4 
                                   1154 ;------------------------------------------------------------
                                   1155 ;	../../core/net/rpl/rpl-mrhof.c:91: calculate_path_metric(rpl_parent_t *p)
                                   1156 ;	-----------------------------------------
                                   1157 ;	 function calculate_path_metric
                                   1158 ;	-----------------------------------------
      000000                       1159 _calculate_path_metric:
                           000007  1160 	ar7 = 0x07
                           000006  1161 	ar6 = 0x06
                           000005  1162 	ar5 = 0x05
                           000004  1163 	ar4 = 0x04
                           000003  1164 	ar3 = 0x03
                           000002  1165 	ar2 = 0x02
                           000001  1166 	ar1 = 0x01
                           000000  1167 	ar0 = 0x00
      000000 AD 82            [24] 1168 	mov	r5,dpl
      000002 AE 83            [24] 1169 	mov	r6,dph
      000004 AF F0            [24] 1170 	mov	r7,b
                                   1171 ;	../../core/net/rpl/rpl-mrhof.c:94: if(p == NULL) {
      000006 ED               [12] 1172 	mov	a,r5
      000007 4E               [12] 1173 	orl	a,r6
      000008 70 05            [24] 1174 	jnz	00102$
                                   1175 ;	../../core/net/rpl/rpl-mrhof.c:95: return MAX_PATH_COST * RPL_DAG_MC_ETX_DIVISOR;
      00000A 90 64 00         [24] 1176 	mov	dptr,#0x6400
      00000D 80 60            [24] 1177 	sjmp	00105$
      00000F                       1178 00102$:
                                   1179 ;	../../core/net/rpl/rpl-mrhof.c:97: nbr = rpl_get_nbr(p);
      00000F 8D 82            [24] 1180 	mov	dpl,r5
      000011 8E 83            [24] 1181 	mov	dph,r6
      000013 8F F0            [24] 1182 	mov	b,r7
      000015 C0 07            [24] 1183 	push	ar7
      000017 C0 06            [24] 1184 	push	ar6
      000019 C0 05            [24] 1185 	push	ar5
      00001B 78r00            [12] 1186 	mov	r0,#_rpl_get_nbr
      00001D 79s00            [12] 1187 	mov	r1,#(_rpl_get_nbr >> 8)
      00001F 7As00            [12] 1188 	mov	r2,#(_rpl_get_nbr >> 16)
      000021 12r00r00         [24] 1189 	lcall	__sdcc_banked_call
      000024 AA 82            [24] 1190 	mov	r2,dpl
      000026 AB 83            [24] 1191 	mov	r3,dph
      000028 AC F0            [24] 1192 	mov	r4,b
      00002A D0 05            [24] 1193 	pop	ar5
      00002C D0 06            [24] 1194 	pop	ar6
      00002E D0 07            [24] 1195 	pop	ar7
                                   1196 ;	../../core/net/rpl/rpl-mrhof.c:98: if(nbr == NULL) {
      000030 EA               [12] 1197 	mov	a,r2
      000031 4B               [12] 1198 	orl	a,r3
      000032 70 05            [24] 1199 	jnz	00104$
                                   1200 ;	../../core/net/rpl/rpl-mrhof.c:99: return MAX_PATH_COST * RPL_DAG_MC_ETX_DIVISOR;
      000034 90 64 00         [24] 1201 	mov	dptr,#0x6400
      000037 80 36            [24] 1202 	sjmp	00105$
      000039                       1203 00104$:
                                   1204 ;	../../core/net/rpl/rpl-mrhof.c:103: return p->rank + (uint16_t)nbr->link_metric;
      000039 74 06            [12] 1205 	mov	a,#0x06
      00003B 2D               [12] 1206 	add	a,r5
      00003C FD               [12] 1207 	mov	r5,a
      00003D E4               [12] 1208 	clr	a
      00003E 3E               [12] 1209 	addc	a,r6
      00003F FE               [12] 1210 	mov	r6,a
      000040 8D 82            [24] 1211 	mov	dpl,r5
      000042 8E 83            [24] 1212 	mov	dph,r6
      000044 8F F0            [24] 1213 	mov	b,r7
      000046 12r00r00         [24] 1214 	lcall	__gptrget
      000049 FD               [12] 1215 	mov	r5,a
      00004A A3               [24] 1216 	inc	dptr
      00004B 12r00r00         [24] 1217 	lcall	__gptrget
      00004E FE               [12] 1218 	mov	r6,a
      00004F 74 23            [12] 1219 	mov	a,#0x23
      000051 2A               [12] 1220 	add	a,r2
      000052 FA               [12] 1221 	mov	r2,a
      000053 E4               [12] 1222 	clr	a
      000054 3B               [12] 1223 	addc	a,r3
      000055 FB               [12] 1224 	mov	r3,a
      000056 8A 82            [24] 1225 	mov	dpl,r2
      000058 8B 83            [24] 1226 	mov	dph,r3
      00005A 8C F0            [24] 1227 	mov	b,r4
      00005C 12r00r00         [24] 1228 	lcall	__gptrget
      00005F FA               [12] 1229 	mov	r2,a
      000060 A3               [24] 1230 	inc	dptr
      000061 12r00r00         [24] 1231 	lcall	__gptrget
      000064 FB               [12] 1232 	mov	r3,a
      000065 EA               [12] 1233 	mov	a,r2
      000066 2D               [12] 1234 	add	a,r5
      000067 FD               [12] 1235 	mov	r5,a
      000068 EB               [12] 1236 	mov	a,r3
      000069 3E               [12] 1237 	addc	a,r6
      00006A FE               [12] 1238 	mov	r6,a
      00006B 8D 82            [24] 1239 	mov	dpl,r5
      00006D 8E 83            [24] 1240 	mov	dph,r6
      00006F                       1241 00105$:
      00006F 02r00r00         [24] 1242 	ljmp	__sdcc_banked_ret
                                   1243 ;------------------------------------------------------------
                                   1244 ;Allocation info for local variables in function 'reset'
                                   1245 ;------------------------------------------------------------
                                   1246 ;dag                       Allocated to registers 
                                   1247 ;------------------------------------------------------------
                                   1248 ;	../../core/net/rpl/rpl-mrhof.c:115: reset(rpl_dag_t *dag)
                                   1249 ;	-----------------------------------------
                                   1250 ;	 function reset
                                   1251 ;	-----------------------------------------
      000072                       1252 _reset:
                                   1253 ;	../../core/net/rpl/rpl-mrhof.c:118: }
      000072 02r00r00         [24] 1254 	ljmp	__sdcc_banked_ret
                                   1255 ;------------------------------------------------------------
                                   1256 ;Allocation info for local variables in function 'neighbor_link_callback'
                                   1257 ;------------------------------------------------------------
                                   1258 ;status                    Allocated to stack - sp -16
                                   1259 ;numtx                     Allocated to stack - sp -18
                                   1260 ;p                         Allocated to registers r5 r6 r7 
                                   1261 ;recorded_etx              Allocated to stack - sp -3
                                   1262 ;packet_etx                Allocated to stack - sp -1
                                   1263 ;new_etx                   Allocated to registers r6 r5 
                                   1264 ;nbr                       Allocated to registers r2 r3 r4 
                                   1265 ;sloc0                     Allocated to stack - sp +1
                                   1266 ;sloc1                     Allocated to stack - sp -11
                                   1267 ;sloc2                     Allocated to stack - sp -7
                                   1268 ;------------------------------------------------------------
                                   1269 ;	../../core/net/rpl/rpl-mrhof.c:121: neighbor_link_callback(rpl_parent_t *p, int status, int numtx)
                                   1270 ;	-----------------------------------------
                                   1271 ;	 function neighbor_link_callback
                                   1272 ;	-----------------------------------------
      000075                       1273 _neighbor_link_callback:
      000075 E5 81            [12] 1274 	mov	a,sp
      000077 24 0C            [12] 1275 	add	a,#0x0C
      000079 F5 81            [12] 1276 	mov	sp,a
      00007B AD 82            [24] 1277 	mov	r5,dpl
      00007D AE 83            [24] 1278 	mov	r6,dph
      00007F AF F0            [24] 1279 	mov	r7,b
                                   1280 ;	../../core/net/rpl/rpl-mrhof.c:124: uint16_t packet_etx = numtx * RPL_DAG_MC_ETX_DIVISOR;
      000081 E5 81            [12] 1281 	mov	a,sp
      000083 24 EE            [12] 1282 	add	a,#0xee
      000085 F8               [12] 1283 	mov	r0,a
      000086 A9 81            [24] 1284 	mov	r1,sp
      000088 19               [12] 1285 	dec	r1
      000089 E6               [12] 1286 	mov	a,@r0
      00008A 09               [12] 1287 	inc	r1
      00008B F7               [12] 1288 	mov	@r1,a
      00008C 19               [12] 1289 	dec	r1
      00008D 77 00            [12] 1290 	mov	@r1,#0x00
                                   1291 ;	../../core/net/rpl/rpl-mrhof.c:128: nbr = rpl_get_nbr(p);
      00008F 8D 82            [24] 1292 	mov	dpl,r5
      000091 8E 83            [24] 1293 	mov	dph,r6
      000093 8F F0            [24] 1294 	mov	b,r7
      000095 C0 07            [24] 1295 	push	ar7
      000097 C0 06            [24] 1296 	push	ar6
      000099 C0 05            [24] 1297 	push	ar5
      00009B 78r00            [12] 1298 	mov	r0,#_rpl_get_nbr
      00009D 79s00            [12] 1299 	mov	r1,#(_rpl_get_nbr >> 8)
      00009F 7As00            [12] 1300 	mov	r2,#(_rpl_get_nbr >> 16)
      0000A1 12r00r00         [24] 1301 	lcall	__sdcc_banked_call
      0000A4 AA 82            [24] 1302 	mov	r2,dpl
      0000A6 AB 83            [24] 1303 	mov	r3,dph
      0000A8 AC F0            [24] 1304 	mov	r4,b
      0000AA D0 05            [24] 1305 	pop	ar5
      0000AC D0 06            [24] 1306 	pop	ar6
      0000AE D0 07            [24] 1307 	pop	ar7
                                   1308 ;	../../core/net/rpl/rpl-mrhof.c:129: if(nbr == NULL) {
      0000B0 EA               [12] 1309 	mov	a,r2
      0000B1 4B               [12] 1310 	orl	a,r3
      0000B2 70 03            [24] 1311 	jnz	00102$
                                   1312 ;	../../core/net/rpl/rpl-mrhof.c:131: return;
      0000B4 02r02r71         [24] 1313 	ljmp	00111$
      0000B7                       1314 00102$:
                                   1315 ;	../../core/net/rpl/rpl-mrhof.c:134: recorded_etx = nbr->link_metric;
      0000B7 74 23            [12] 1316 	mov	a,#0x23
      0000B9 2A               [12] 1317 	add	a,r2
      0000BA FA               [12] 1318 	mov	r2,a
      0000BB E4               [12] 1319 	clr	a
      0000BC 3B               [12] 1320 	addc	a,r3
      0000BD FB               [12] 1321 	mov	r3,a
      0000BE 8A 82            [24] 1322 	mov	dpl,r2
      0000C0 8B 83            [24] 1323 	mov	dph,r3
      0000C2 8C F0            [24] 1324 	mov	b,r4
      0000C4 E5 81            [12] 1325 	mov	a,sp
      0000C6 24 FD            [12] 1326 	add	a,#0xfd
      0000C8 F8               [12] 1327 	mov	r0,a
      0000C9 12r00r00         [24] 1328 	lcall	__gptrget
      0000CC F6               [12] 1329 	mov	@r0,a
      0000CD A3               [24] 1330 	inc	dptr
      0000CE 12r00r00         [24] 1331 	lcall	__gptrget
      0000D1 08               [12] 1332 	inc	r0
      0000D2 F6               [12] 1333 	mov	@r0,a
                                   1334 ;	../../core/net/rpl/rpl-mrhof.c:137: if(status == MAC_TX_OK || status == MAC_TX_NOACK) {
      0000D3 E5 81            [12] 1335 	mov	a,sp
      0000D5 24 F0            [12] 1336 	add	a,#0xf0
      0000D7 F8               [12] 1337 	mov	r0,a
      0000D8 E6               [12] 1338 	mov	a,@r0
      0000D9 08               [12] 1339 	inc	r0
      0000DA 46               [12] 1340 	orl	a,@r0
      0000DB 60 11            [24] 1341 	jz	00108$
      0000DD E5 81            [12] 1342 	mov	a,sp
      0000DF 24 F0            [12] 1343 	add	a,#0xf0
      0000E1 F8               [12] 1344 	mov	r0,a
      0000E2 B6 02 06         [24] 1345 	cjne	@r0,#0x02,00127$
      0000E5 08               [12] 1346 	inc	r0
      0000E6 B6 00 02         [24] 1347 	cjne	@r0,#0x00,00127$
      0000E9 80 03            [24] 1348 	sjmp	00128$
      0000EB                       1349 00127$:
      0000EB 02r02r71         [24] 1350 	ljmp	00111$
      0000EE                       1351 00128$:
      0000EE                       1352 00108$:
                                   1353 ;	../../core/net/rpl/rpl-mrhof.c:138: if(status == MAC_TX_NOACK) {
      0000EE E5 81            [12] 1354 	mov	a,sp
      0000F0 24 F0            [12] 1355 	add	a,#0xf0
      0000F2 F8               [12] 1356 	mov	r0,a
      0000F3 B6 02 0C         [24] 1357 	cjne	@r0,#0x02,00104$
      0000F6 08               [12] 1358 	inc	r0
      0000F7 B6 00 08         [24] 1359 	cjne	@r0,#0x00,00104$
                                   1360 ;	../../core/net/rpl/rpl-mrhof.c:139: packet_etx = MAX_LINK_METRIC * RPL_DAG_MC_ETX_DIVISOR;
      0000FA A8 81            [24] 1361 	mov	r0,sp
      0000FC 18               [12] 1362 	dec	r0
      0000FD 76 00            [12] 1363 	mov	@r0,#0x00
      0000FF 08               [12] 1364 	inc	r0
      000100 76 0A            [12] 1365 	mov	@r0,#0x0A
      000102                       1366 00104$:
                                   1367 ;	../../core/net/rpl/rpl-mrhof.c:142: if(p->flags & RPL_PARENT_FLAG_LINK_METRIC_VALID) {
      000102 E5 81            [12] 1368 	mov	a,sp
      000104 24 F9            [12] 1369 	add	a,#0xf9
      000106 F8               [12] 1370 	mov	r0,a
      000107 74 0B            [12] 1371 	mov	a,#0x0B
      000109 2D               [12] 1372 	add	a,r5
      00010A F6               [12] 1373 	mov	@r0,a
      00010B E4               [12] 1374 	clr	a
      00010C 3E               [12] 1375 	addc	a,r6
      00010D 08               [12] 1376 	inc	r0
      00010E F6               [12] 1377 	mov	@r0,a
      00010F 08               [12] 1378 	inc	r0
      000110 A6 07            [24] 1379 	mov	@r0,ar7
      000112 E5 81            [12] 1380 	mov	a,sp
      000114 24 F9            [12] 1381 	add	a,#0xf9
      000116 F8               [12] 1382 	mov	r0,a
      000117 86 82            [24] 1383 	mov	dpl,@r0
      000119 08               [12] 1384 	inc	r0
      00011A 86 83            [24] 1385 	mov	dph,@r0
      00011C 08               [12] 1386 	inc	r0
      00011D 86 F0            [24] 1387 	mov	b,@r0
      00011F 12r00r00         [24] 1388 	lcall	__gptrget
      000122 FF               [12] 1389 	mov	r7,a
      000123 20 E1 03         [24] 1390 	jb	acc.1,00131$
      000126 02r02r46         [24] 1391 	ljmp	00106$
      000129                       1392 00131$:
                                   1393 ;	../../core/net/rpl/rpl-mrhof.c:144: new_etx = ((uint32_t)recorded_etx * ETX_ALPHA +
      000129 C0 02            [24] 1394 	push	ar2
      00012B C0 03            [24] 1395 	push	ar3
      00012D C0 04            [24] 1396 	push	ar4
      00012F E5 81            [12] 1397 	mov	a,sp
      000131 24 FA            [12] 1398 	add	a,#0xfa
      000133 F8               [12] 1399 	mov	r0,a
      000134 E5 81            [12] 1400 	mov	a,sp
      000136 24 F2            [12] 1401 	add	a,#0xf2
      000138 F9               [12] 1402 	mov	r1,a
      000139 E6               [12] 1403 	mov	a,@r0
      00013A F7               [12] 1404 	mov	@r1,a
      00013B 08               [12] 1405 	inc	r0
      00013C 09               [12] 1406 	inc	r1
      00013D E6               [12] 1407 	mov	a,@r0
      00013E F7               [12] 1408 	mov	@r1,a
      00013F 09               [12] 1409 	inc	r1
      000140 77 00            [12] 1410 	mov	@r1,#0x00
      000142 09               [12] 1411 	inc	r1
      000143 77 00            [12] 1412 	mov	@r1,#0x00
      000145 C0 04            [24] 1413 	push	ar4
      000147 C0 03            [24] 1414 	push	ar3
      000149 C0 02            [24] 1415 	push	ar2
      00014B E5 81            [12] 1416 	mov	a,sp
      00014D 24 EF            [12] 1417 	add	a,#0xef
      00014F F8               [12] 1418 	mov	r0,a
      000150 E6               [12] 1419 	mov	a,@r0
      000151 C0 E0            [24] 1420 	push	acc
      000153 08               [12] 1421 	inc	r0
      000154 E6               [12] 1422 	mov	a,@r0
      000155 C0 E0            [24] 1423 	push	acc
      000157 08               [12] 1424 	inc	r0
      000158 E6               [12] 1425 	mov	a,@r0
      000159 C0 E0            [24] 1426 	push	acc
      00015B 08               [12] 1427 	inc	r0
      00015C E6               [12] 1428 	mov	a,@r0
      00015D C0 E0            [24] 1429 	push	acc
                                   1430 ;	../../core/net/rpl/rpl-mrhof.c:145: (uint32_t)packet_etx * (ETX_SCALE - ETX_ALPHA)) / ETX_SCALE;
      00015F 90 00 5A         [24] 1431 	mov	dptr,#(0x5A&0x00ff)
      000162 E4               [12] 1432 	clr	a
      000163 F5 F0            [12] 1433 	mov	b,a
      000165 12r00r00         [24] 1434 	lcall	__mullong
      000168 C8               [12] 1435 	xch	a,r0
      000169 E5 81            [12] 1436 	mov	a,sp
      00016B 24 EB            [12] 1437 	add	a,#0xeb
      00016D C8               [12] 1438 	xch	a,r0
      00016E A6 82            [24] 1439 	mov	@r0,dpl
      000170 08               [12] 1440 	inc	r0
      000171 A6 83            [24] 1441 	mov	@r0,dph
      000173 08               [12] 1442 	inc	r0
      000174 A6 F0            [24] 1443 	mov	@r0,b
      000176 08               [12] 1444 	inc	r0
      000177 F6               [12] 1445 	mov	@r0,a
      000178 E5 81            [12] 1446 	mov	a,sp
      00017A 24 FC            [12] 1447 	add	a,#0xfc
      00017C F5 81            [12] 1448 	mov	sp,a
      00017E D0 02            [24] 1449 	pop	ar2
      000180 D0 03            [24] 1450 	pop	ar3
      000182 D0 04            [24] 1451 	pop	ar4
      000184 E5 81            [12] 1452 	mov	a,sp
      000186 24 FC            [12] 1453 	add	a,#0xfc
      000188 F8               [12] 1454 	mov	r0,a
      000189 E5 81            [12] 1455 	mov	a,sp
      00018B 24 F6            [12] 1456 	add	a,#0xf6
      00018D F9               [12] 1457 	mov	r1,a
      00018E E6               [12] 1458 	mov	a,@r0
      00018F F7               [12] 1459 	mov	@r1,a
      000190 08               [12] 1460 	inc	r0
      000191 09               [12] 1461 	inc	r1
      000192 E6               [12] 1462 	mov	a,@r0
      000193 F7               [12] 1463 	mov	@r1,a
      000194 09               [12] 1464 	inc	r1
      000195 77 00            [12] 1465 	mov	@r1,#0x00
      000197 09               [12] 1466 	inc	r1
      000198 77 00            [12] 1467 	mov	@r1,#0x00
      00019A C0 04            [24] 1468 	push	ar4
      00019C C0 03            [24] 1469 	push	ar3
      00019E C0 02            [24] 1470 	push	ar2
      0001A0 E5 81            [12] 1471 	mov	a,sp
      0001A2 24 F3            [12] 1472 	add	a,#0xf3
      0001A4 F8               [12] 1473 	mov	r0,a
      0001A5 E6               [12] 1474 	mov	a,@r0
      0001A6 C0 E0            [24] 1475 	push	acc
      0001A8 08               [12] 1476 	inc	r0
      0001A9 E6               [12] 1477 	mov	a,@r0
      0001AA C0 E0            [24] 1478 	push	acc
      0001AC 08               [12] 1479 	inc	r0
      0001AD E6               [12] 1480 	mov	a,@r0
      0001AE C0 E0            [24] 1481 	push	acc
      0001B0 08               [12] 1482 	inc	r0
      0001B1 E6               [12] 1483 	mov	a,@r0
      0001B2 C0 E0            [24] 1484 	push	acc
      0001B4 90 00 0A         [24] 1485 	mov	dptr,#(0x0A&0x00ff)
      0001B7 E4               [12] 1486 	clr	a
      0001B8 F5 F0            [12] 1487 	mov	b,a
      0001BA 12r00r00         [24] 1488 	lcall	__mullong
      0001BD C8               [12] 1489 	xch	a,r0
      0001BE E5 81            [12] 1490 	mov	a,sp
      0001C0 24 EF            [12] 1491 	add	a,#0xef
      0001C2 C8               [12] 1492 	xch	a,r0
      0001C3 A6 82            [24] 1493 	mov	@r0,dpl
      0001C5 08               [12] 1494 	inc	r0
      0001C6 A6 83            [24] 1495 	mov	@r0,dph
      0001C8 08               [12] 1496 	inc	r0
      0001C9 A6 F0            [24] 1497 	mov	@r0,b
      0001CB 08               [12] 1498 	inc	r0
      0001CC F6               [12] 1499 	mov	@r0,a
      0001CD E5 81            [12] 1500 	mov	a,sp
      0001CF 24 FC            [12] 1501 	add	a,#0xfc
      0001D1 F5 81            [12] 1502 	mov	sp,a
      0001D3 D0 02            [24] 1503 	pop	ar2
      0001D5 D0 03            [24] 1504 	pop	ar3
      0001D7 D0 04            [24] 1505 	pop	ar4
      0001D9 E5 81            [12] 1506 	mov	a,sp
      0001DB 24 F2            [12] 1507 	add	a,#0xf2
      0001DD F8               [12] 1508 	mov	r0,a
      0001DE E5 81            [12] 1509 	mov	a,sp
      0001E0 24 F6            [12] 1510 	add	a,#0xf6
      0001E2 F9               [12] 1511 	mov	r1,a
      0001E3 E7               [12] 1512 	mov	a,@r1
      0001E4 26               [12] 1513 	add	a,@r0
      0001E5 F7               [12] 1514 	mov	@r1,a
      0001E6 09               [12] 1515 	inc	r1
      0001E7 E7               [12] 1516 	mov	a,@r1
      0001E8 08               [12] 1517 	inc	r0
      0001E9 36               [12] 1518 	addc	a,@r0
      0001EA F7               [12] 1519 	mov	@r1,a
      0001EB 09               [12] 1520 	inc	r1
      0001EC E7               [12] 1521 	mov	a,@r1
      0001ED 08               [12] 1522 	inc	r0
      0001EE 36               [12] 1523 	addc	a,@r0
      0001EF F7               [12] 1524 	mov	@r1,a
      0001F0 09               [12] 1525 	inc	r1
      0001F1 E7               [12] 1526 	mov	a,@r1
      0001F2 08               [12] 1527 	inc	r0
      0001F3 36               [12] 1528 	addc	a,@r0
      0001F4 F7               [12] 1529 	mov	@r1,a
      0001F5 C0 04            [24] 1530 	push	ar4
      0001F7 C0 03            [24] 1531 	push	ar3
      0001F9 C0 02            [24] 1532 	push	ar2
      0001FB 74 64            [12] 1533 	mov	a,#0x64
      0001FD C0 E0            [24] 1534 	push	acc
      0001FF E4               [12] 1535 	clr	a
      000200 C0 E0            [24] 1536 	push	acc
      000202 C0 E0            [24] 1537 	push	acc
      000204 C0 E0            [24] 1538 	push	acc
      000206 E5 81            [12] 1539 	mov	a,sp
      000208 24 EF            [12] 1540 	add	a,#0xef
      00020A F8               [12] 1541 	mov	r0,a
      00020B 86 82            [24] 1542 	mov	dpl,@r0
      00020D 08               [12] 1543 	inc	r0
      00020E 86 83            [24] 1544 	mov	dph,@r0
      000210 08               [12] 1545 	inc	r0
      000211 86 F0            [24] 1546 	mov	b,@r0
      000213 08               [12] 1547 	inc	r0
      000214 E6               [12] 1548 	mov	a,@r0
      000215 12r00r00         [24] 1549 	lcall	__divulong
      000218 C8               [12] 1550 	xch	a,r0
      000219 E5 81            [12] 1551 	mov	a,sp
      00021B 24 EF            [12] 1552 	add	a,#0xef
      00021D C8               [12] 1553 	xch	a,r0
      00021E A6 82            [24] 1554 	mov	@r0,dpl
      000220 08               [12] 1555 	inc	r0
      000221 A6 83            [24] 1556 	mov	@r0,dph
      000223 08               [12] 1557 	inc	r0
      000224 A6 F0            [24] 1558 	mov	@r0,b
      000226 08               [12] 1559 	inc	r0
      000227 F6               [12] 1560 	mov	@r0,a
      000228 E5 81            [12] 1561 	mov	a,sp
      00022A 24 FC            [12] 1562 	add	a,#0xfc
      00022C F5 81            [12] 1563 	mov	sp,a
      00022E D0 02            [24] 1564 	pop	ar2
      000230 D0 03            [24] 1565 	pop	ar3
      000232 D0 04            [24] 1566 	pop	ar4
      000234 E5 81            [12] 1567 	mov	a,sp
      000236 24 F6            [12] 1568 	add	a,#0xf6
      000238 F8               [12] 1569 	mov	r0,a
      000239 86 06            [24] 1570 	mov	ar6,@r0
      00023B 08               [12] 1571 	inc	r0
      00023C 86 05            [24] 1572 	mov	ar5,@r0
      00023E D0 04            [24] 1573 	pop	ar4
      000240 D0 03            [24] 1574 	pop	ar3
      000242 D0 02            [24] 1575 	pop	ar2
      000244 80 1C            [24] 1576 	sjmp	00107$
      000246                       1577 00106$:
                                   1578 ;	../../core/net/rpl/rpl-mrhof.c:148: new_etx = packet_etx;
      000246 A8 81            [24] 1579 	mov	r0,sp
      000248 18               [12] 1580 	dec	r0
      000249 86 06            [24] 1581 	mov	ar6,@r0
      00024B 08               [12] 1582 	inc	r0
      00024C 86 05            [24] 1583 	mov	ar5,@r0
                                   1584 ;	../../core/net/rpl/rpl-mrhof.c:150: p->flags |= RPL_PARENT_FLAG_LINK_METRIC_VALID;
      00024E 43 07 02         [24] 1585 	orl	ar7,#0x02
      000251 E5 81            [12] 1586 	mov	a,sp
      000253 24 F9            [12] 1587 	add	a,#0xf9
      000255 F8               [12] 1588 	mov	r0,a
      000256 86 82            [24] 1589 	mov	dpl,@r0
      000258 08               [12] 1590 	inc	r0
      000259 86 83            [24] 1591 	mov	dph,@r0
      00025B 08               [12] 1592 	inc	r0
      00025C 86 F0            [24] 1593 	mov	b,@r0
      00025E EF               [12] 1594 	mov	a,r7
      00025F 12r00r00         [24] 1595 	lcall	__gptrput
      000262                       1596 00107$:
                                   1597 ;	../../core/net/rpl/rpl-mrhof.c:158: nbr->link_metric = new_etx;
      000262 8A 82            [24] 1598 	mov	dpl,r2
      000264 8B 83            [24] 1599 	mov	dph,r3
      000266 8C F0            [24] 1600 	mov	b,r4
      000268 EE               [12] 1601 	mov	a,r6
      000269 12r00r00         [24] 1602 	lcall	__gptrput
      00026C A3               [24] 1603 	inc	dptr
      00026D ED               [12] 1604 	mov	a,r5
      00026E 12r00r00         [24] 1605 	lcall	__gptrput
      000271                       1606 00111$:
      000271 E5 81            [12] 1607 	mov	a,sp
      000273 24 F4            [12] 1608 	add	a,#0xF4
      000275 F5 81            [12] 1609 	mov	sp,a
      000277 02r00r00         [24] 1610 	ljmp	__sdcc_banked_ret
                                   1611 ;------------------------------------------------------------
                                   1612 ;Allocation info for local variables in function 'calculate_rank'
                                   1613 ;------------------------------------------------------------
                                   1614 ;base_rank                 Allocated to stack - sp -9
                                   1615 ;p                         Allocated to registers r5 r6 r7 
                                   1616 ;new_rank                  Allocated to registers r6 r7 
                                   1617 ;rank_increase             Allocated to stack - sp -4
                                   1618 ;nbr                       Allocated to stack - sp -2
                                   1619 ;------------------------------------------------------------
                                   1620 ;	../../core/net/rpl/rpl-mrhof.c:163: calculate_rank(rpl_parent_t *p, rpl_rank_t base_rank)
                                   1621 ;	-----------------------------------------
                                   1622 ;	 function calculate_rank
                                   1623 ;	-----------------------------------------
      00027A                       1624 _calculate_rank:
      00027A E5 81            [12] 1625 	mov	a,sp
      00027C 24 05            [12] 1626 	add	a,#0x05
      00027E F5 81            [12] 1627 	mov	sp,a
      000280 AD 82            [24] 1628 	mov	r5,dpl
      000282 AE 83            [24] 1629 	mov	r6,dph
      000284 AF F0            [24] 1630 	mov	r7,b
                                   1631 ;	../../core/net/rpl/rpl-mrhof.c:169: if(p == NULL || (nbr = rpl_get_nbr(p)) == NULL) {
      000286 ED               [12] 1632 	mov	a,r5
      000287 4E               [12] 1633 	orl	a,r6
      000288 60 3E            [24] 1634 	jz	00105$
      00028A 8D 82            [24] 1635 	mov	dpl,r5
      00028C 8E 83            [24] 1636 	mov	dph,r6
      00028E 8F F0            [24] 1637 	mov	b,r7
      000290 C0 07            [24] 1638 	push	ar7
      000292 C0 06            [24] 1639 	push	ar6
      000294 C0 05            [24] 1640 	push	ar5
      000296 78r00            [12] 1641 	mov	r0,#_rpl_get_nbr
      000298 79s00            [12] 1642 	mov	r1,#(_rpl_get_nbr >> 8)
      00029A 7As00            [12] 1643 	mov	r2,#(_rpl_get_nbr >> 16)
      00029C 12r00r00         [24] 1644 	lcall	__sdcc_banked_call
      00029F C8               [12] 1645 	xch	a,r0
      0002A0 E5 81            [12] 1646 	mov	a,sp
      0002A2 24 FB            [12] 1647 	add	a,#0xfb
      0002A4 C8               [12] 1648 	xch	a,r0
      0002A5 A6 82            [24] 1649 	mov	@r0,dpl
      0002A7 08               [12] 1650 	inc	r0
      0002A8 A6 83            [24] 1651 	mov	@r0,dph
      0002AA 08               [12] 1652 	inc	r0
      0002AB A6 F0            [24] 1653 	mov	@r0,b
      0002AD D0 05            [24] 1654 	pop	ar5
      0002AF D0 06            [24] 1655 	pop	ar6
      0002B1 D0 07            [24] 1656 	pop	ar7
      0002B3 A8 81            [24] 1657 	mov	r0,sp
      0002B5 18               [12] 1658 	dec	r0
      0002B6 18               [12] 1659 	dec	r0
      0002B7 86 02            [24] 1660 	mov	ar2,@r0
      0002B9 08               [12] 1661 	inc	r0
      0002BA 86 03            [24] 1662 	mov	ar3,@r0
      0002BC 08               [12] 1663 	inc	r0
      0002BD 86 04            [24] 1664 	mov	ar4,@r0
      0002BF A8 81            [24] 1665 	mov	r0,sp
      0002C1 18               [12] 1666 	dec	r0
      0002C2 18               [12] 1667 	dec	r0
      0002C3 E6               [12] 1668 	mov	a,@r0
      0002C4 08               [12] 1669 	inc	r0
      0002C5 46               [12] 1670 	orl	a,@r0
      0002C6 70 1C            [24] 1671 	jnz	00106$
      0002C8                       1672 00105$:
                                   1673 ;	../../core/net/rpl/rpl-mrhof.c:170: if(base_rank == 0) {
      0002C8 E5 81            [12] 1674 	mov	a,sp
      0002CA 24 F7            [12] 1675 	add	a,#0xf7
      0002CC F8               [12] 1676 	mov	r0,a
      0002CD E6               [12] 1677 	mov	a,@r0
      0002CE 08               [12] 1678 	inc	r0
      0002CF 46               [12] 1679 	orl	a,@r0
      0002D0 70 06            [24] 1680 	jnz	00102$
                                   1681 ;	../../core/net/rpl/rpl-mrhof.c:171: return INFINITE_RANK;
      0002D2 90 FF FF         [24] 1682 	mov	dptr,#0xFFFF
      0002D5 02r03r62         [24] 1683 	ljmp	00112$
      0002D8                       1684 00102$:
                                   1685 ;	../../core/net/rpl/rpl-mrhof.c:173: rank_increase = RPL_INIT_LINK_METRIC * RPL_DAG_MC_ETX_DIVISOR;
      0002D8 E5 81            [12] 1686 	mov	a,sp
      0002DA 24 FC            [12] 1687 	add	a,#0xfc
      0002DC F8               [12] 1688 	mov	r0,a
      0002DD 76 00            [12] 1689 	mov	@r0,#0x00
      0002DF 08               [12] 1690 	inc	r0
      0002E0 76 02            [12] 1691 	mov	@r0,#0x02
      0002E2 80 42            [24] 1692 	sjmp	00107$
      0002E4                       1693 00106$:
                                   1694 ;	../../core/net/rpl/rpl-mrhof.c:175: rank_increase = nbr->link_metric;
      0002E4 74 23            [12] 1695 	mov	a,#0x23
      0002E6 2A               [12] 1696 	add	a,r2
      0002E7 FA               [12] 1697 	mov	r2,a
      0002E8 E4               [12] 1698 	clr	a
      0002E9 3B               [12] 1699 	addc	a,r3
      0002EA FB               [12] 1700 	mov	r3,a
      0002EB 8A 82            [24] 1701 	mov	dpl,r2
      0002ED 8B 83            [24] 1702 	mov	dph,r3
      0002EF 8C F0            [24] 1703 	mov	b,r4
      0002F1 E5 81            [12] 1704 	mov	a,sp
      0002F3 24 FC            [12] 1705 	add	a,#0xfc
      0002F5 F8               [12] 1706 	mov	r0,a
      0002F6 12r00r00         [24] 1707 	lcall	__gptrget
      0002F9 F6               [12] 1708 	mov	@r0,a
      0002FA A3               [24] 1709 	inc	dptr
      0002FB 12r00r00         [24] 1710 	lcall	__gptrget
      0002FE 08               [12] 1711 	inc	r0
      0002FF F6               [12] 1712 	mov	@r0,a
                                   1713 ;	../../core/net/rpl/rpl-mrhof.c:176: if(base_rank == 0) {
      000300 E5 81            [12] 1714 	mov	a,sp
      000302 24 F7            [12] 1715 	add	a,#0xf7
      000304 F8               [12] 1716 	mov	r0,a
      000305 E6               [12] 1717 	mov	a,@r0
      000306 08               [12] 1718 	inc	r0
      000307 46               [12] 1719 	orl	a,@r0
      000308 70 1C            [24] 1720 	jnz	00107$
                                   1721 ;	../../core/net/rpl/rpl-mrhof.c:177: base_rank = p->rank;
      00030A 74 06            [12] 1722 	mov	a,#0x06
      00030C 2D               [12] 1723 	add	a,r5
      00030D FD               [12] 1724 	mov	r5,a
      00030E E4               [12] 1725 	clr	a
      00030F 3E               [12] 1726 	addc	a,r6
      000310 FE               [12] 1727 	mov	r6,a
      000311 8D 82            [24] 1728 	mov	dpl,r5
      000313 8E 83            [24] 1729 	mov	dph,r6
      000315 8F F0            [24] 1730 	mov	b,r7
      000317 E5 81            [12] 1731 	mov	a,sp
      000319 24 F7            [12] 1732 	add	a,#0xf7
      00031B F8               [12] 1733 	mov	r0,a
      00031C 12r00r00         [24] 1734 	lcall	__gptrget
      00031F F6               [12] 1735 	mov	@r0,a
      000320 A3               [24] 1736 	inc	dptr
      000321 12r00r00         [24] 1737 	lcall	__gptrget
      000324 08               [12] 1738 	inc	r0
      000325 F6               [12] 1739 	mov	@r0,a
      000326                       1740 00107$:
                                   1741 ;	../../core/net/rpl/rpl-mrhof.c:181: if(INFINITE_RANK - base_rank < rank_increase) {
      000326 E5 81            [12] 1742 	mov	a,sp
      000328 24 F7            [12] 1743 	add	a,#0xf7
      00032A F8               [12] 1744 	mov	r0,a
      00032B 74 FF            [12] 1745 	mov	a,#0xFF
      00032D C3               [12] 1746 	clr	c
      00032E 96               [12] 1747 	subb	a,@r0
      00032F FE               [12] 1748 	mov	r6,a
      000330 74 FF            [12] 1749 	mov	a,#0xFF
      000332 08               [12] 1750 	inc	r0
      000333 96               [12] 1751 	subb	a,@r0
      000334 FF               [12] 1752 	mov	r7,a
      000335 E5 81            [12] 1753 	mov	a,sp
      000337 24 FC            [12] 1754 	add	a,#0xfc
      000339 F8               [12] 1755 	mov	r0,a
      00033A C3               [12] 1756 	clr	c
      00033B EE               [12] 1757 	mov	a,r6
      00033C 96               [12] 1758 	subb	a,@r0
      00033D EF               [12] 1759 	mov	a,r7
      00033E 08               [12] 1760 	inc	r0
      00033F 96               [12] 1761 	subb	a,@r0
      000340 50 06            [24] 1762 	jnc	00110$
                                   1763 ;	../../core/net/rpl/rpl-mrhof.c:183: new_rank = INFINITE_RANK;
      000342 7E FF            [12] 1764 	mov	r6,#0xFF
      000344 7F FF            [12] 1765 	mov	r7,#0xFF
      000346 80 16            [24] 1766 	sjmp	00111$
      000348                       1767 00110$:
                                   1768 ;	../../core/net/rpl/rpl-mrhof.c:187: new_rank = base_rank + rank_increase;
      000348 E5 81            [12] 1769 	mov	a,sp
      00034A 24 F7            [12] 1770 	add	a,#0xf7
      00034C F8               [12] 1771 	mov	r0,a
      00034D E5 81            [12] 1772 	mov	a,sp
      00034F 24 FC            [12] 1773 	add	a,#0xfc
      000351 F9               [12] 1774 	mov	r1,a
      000352 E7               [12] 1775 	mov	a,@r1
      000353 26               [12] 1776 	add	a,@r0
      000354 FC               [12] 1777 	mov	r4,a
      000355 09               [12] 1778 	inc	r1
      000356 E7               [12] 1779 	mov	a,@r1
      000357 08               [12] 1780 	inc	r0
      000358 36               [12] 1781 	addc	a,@r0
      000359 FD               [12] 1782 	mov	r5,a
      00035A 8C 06            [24] 1783 	mov	ar6,r4
      00035C 8D 07            [24] 1784 	mov	ar7,r5
      00035E                       1785 00111$:
                                   1786 ;	../../core/net/rpl/rpl-mrhof.c:190: return new_rank;
      00035E 8E 82            [24] 1787 	mov	dpl,r6
      000360 8F 83            [24] 1788 	mov	dph,r7
      000362                       1789 00112$:
      000362 E5 81            [12] 1790 	mov	a,sp
      000364 24 FB            [12] 1791 	add	a,#0xFB
      000366 F5 81            [12] 1792 	mov	sp,a
      000368 02r00r00         [24] 1793 	ljmp	__sdcc_banked_ret
                                   1794 ;------------------------------------------------------------
                                   1795 ;Allocation info for local variables in function 'best_dag'
                                   1796 ;------------------------------------------------------------
                                   1797 ;d2                        Allocated to stack - sp -11
                                   1798 ;d1                        Allocated to stack - sp -5
                                   1799 ;sloc0                     Allocated to stack - sp -2
                                   1800 ;------------------------------------------------------------
                                   1801 ;	../../core/net/rpl/rpl-mrhof.c:194: best_dag(rpl_dag_t *d1, rpl_dag_t *d2)
                                   1802 ;	-----------------------------------------
                                   1803 ;	 function best_dag
                                   1804 ;	-----------------------------------------
      00036B                       1805 _best_dag:
      00036B C0 82            [24] 1806 	push	dpl
      00036D C0 83            [24] 1807 	push	dph
      00036F C0 F0            [24] 1808 	push	b
      000371 05 81            [12] 1809 	inc	sp
      000373 05 81            [12] 1810 	inc	sp
      000375 05 81            [12] 1811 	inc	sp
                                   1812 ;	../../core/net/rpl/rpl-mrhof.c:196: if(d1->grounded != d2->grounded) {
      000377 E5 81            [12] 1813 	mov	a,sp
      000379 24 FB            [12] 1814 	add	a,#0xfb
      00037B F8               [12] 1815 	mov	r0,a
      00037C 74 13            [12] 1816 	mov	a,#0x13
      00037E 26               [12] 1817 	add	a,@r0
      00037F FA               [12] 1818 	mov	r2,a
      000380 E4               [12] 1819 	clr	a
      000381 08               [12] 1820 	inc	r0
      000382 36               [12] 1821 	addc	a,@r0
      000383 FB               [12] 1822 	mov	r3,a
      000384 08               [12] 1823 	inc	r0
      000385 86 04            [24] 1824 	mov	ar4,@r0
      000387 8A 82            [24] 1825 	mov	dpl,r2
      000389 8B 83            [24] 1826 	mov	dph,r3
      00038B 8C F0            [24] 1827 	mov	b,r4
      00038D 12r00r00         [24] 1828 	lcall	__gptrget
      000390 FC               [12] 1829 	mov	r4,a
      000391 E5 81            [12] 1830 	mov	a,sp
      000393 24 F5            [12] 1831 	add	a,#0xf5
      000395 F8               [12] 1832 	mov	r0,a
      000396 A9 81            [24] 1833 	mov	r1,sp
      000398 19               [12] 1834 	dec	r1
      000399 19               [12] 1835 	dec	r1
      00039A E6               [12] 1836 	mov	a,@r0
      00039B F7               [12] 1837 	mov	@r1,a
      00039C 08               [12] 1838 	inc	r0
      00039D 09               [12] 1839 	inc	r1
      00039E E6               [12] 1840 	mov	a,@r0
      00039F F7               [12] 1841 	mov	@r1,a
      0003A0 08               [12] 1842 	inc	r0
      0003A1 09               [12] 1843 	inc	r1
      0003A2 E6               [12] 1844 	mov	a,@r0
      0003A3 F7               [12] 1845 	mov	@r1,a
      0003A4 A8 81            [24] 1846 	mov	r0,sp
      0003A6 18               [12] 1847 	dec	r0
      0003A7 18               [12] 1848 	dec	r0
      0003A8 74 13            [12] 1849 	mov	a,#0x13
      0003AA 26               [12] 1850 	add	a,@r0
      0003AB FA               [12] 1851 	mov	r2,a
      0003AC E4               [12] 1852 	clr	a
      0003AD 08               [12] 1853 	inc	r0
      0003AE 36               [12] 1854 	addc	a,@r0
      0003AF FB               [12] 1855 	mov	r3,a
      0003B0 08               [12] 1856 	inc	r0
      0003B1 86 07            [24] 1857 	mov	ar7,@r0
      0003B3 8A 82            [24] 1858 	mov	dpl,r2
      0003B5 8B 83            [24] 1859 	mov	dph,r3
      0003B7 8F F0            [24] 1860 	mov	b,r7
      0003B9 12r00r00         [24] 1861 	lcall	__gptrget
      0003BC FA               [12] 1862 	mov	r2,a
      0003BD EC               [12] 1863 	mov	a,r4
      0003BE B5 02 02         [24] 1864 	cjne	a,ar2,00128$
      0003C1 80 27            [24] 1865 	sjmp	00102$
      0003C3                       1866 00128$:
                                   1867 ;	../../core/net/rpl/rpl-mrhof.c:197: return d1->grounded ? d1 : d2;
      0003C3 EC               [12] 1868 	mov	a,r4
      0003C4 60 0F            [24] 1869 	jz	00107$
      0003C6 E5 81            [12] 1870 	mov	a,sp
      0003C8 24 FB            [12] 1871 	add	a,#0xfb
      0003CA F8               [12] 1872 	mov	r0,a
      0003CB 86 05            [24] 1873 	mov	ar5,@r0
      0003CD 08               [12] 1874 	inc	r0
      0003CE 86 06            [24] 1875 	mov	ar6,@r0
      0003D0 08               [12] 1876 	inc	r0
      0003D1 86 07            [24] 1877 	mov	ar7,@r0
      0003D3 80 0C            [24] 1878 	sjmp	00108$
      0003D5                       1879 00107$:
      0003D5 A8 81            [24] 1880 	mov	r0,sp
      0003D7 18               [12] 1881 	dec	r0
      0003D8 18               [12] 1882 	dec	r0
      0003D9 86 05            [24] 1883 	mov	ar5,@r0
      0003DB 08               [12] 1884 	inc	r0
      0003DC 86 06            [24] 1885 	mov	ar6,@r0
      0003DE 08               [12] 1886 	inc	r0
      0003DF 86 07            [24] 1887 	mov	ar7,@r0
      0003E1                       1888 00108$:
      0003E1 8D 82            [24] 1889 	mov	dpl,r5
      0003E3 8E 83            [24] 1890 	mov	dph,r6
      0003E5 8F F0            [24] 1891 	mov	b,r7
      0003E7 02r04rB0         [24] 1892 	ljmp	00105$
      0003EA                       1893 00102$:
                                   1894 ;	../../core/net/rpl/rpl-mrhof.c:200: if(d1->preference != d2->preference) {
      0003EA E5 81            [12] 1895 	mov	a,sp
      0003EC 24 FB            [12] 1896 	add	a,#0xfb
      0003EE F8               [12] 1897 	mov	r0,a
      0003EF 74 14            [12] 1898 	mov	a,#0x14
      0003F1 26               [12] 1899 	add	a,@r0
      0003F2 FD               [12] 1900 	mov	r5,a
      0003F3 E4               [12] 1901 	clr	a
      0003F4 08               [12] 1902 	inc	r0
      0003F5 36               [12] 1903 	addc	a,@r0
      0003F6 FE               [12] 1904 	mov	r6,a
      0003F7 08               [12] 1905 	inc	r0
      0003F8 86 07            [24] 1906 	mov	ar7,@r0
      0003FA 8D 82            [24] 1907 	mov	dpl,r5
      0003FC 8E 83            [24] 1908 	mov	dph,r6
      0003FE 8F F0            [24] 1909 	mov	b,r7
      000400 12r00r00         [24] 1910 	lcall	__gptrget
      000403 FF               [12] 1911 	mov	r7,a
      000404 A8 81            [24] 1912 	mov	r0,sp
      000406 18               [12] 1913 	dec	r0
      000407 18               [12] 1914 	dec	r0
      000408 74 14            [12] 1915 	mov	a,#0x14
      00040A 26               [12] 1916 	add	a,@r0
      00040B FC               [12] 1917 	mov	r4,a
      00040C E4               [12] 1918 	clr	a
      00040D 08               [12] 1919 	inc	r0
      00040E 36               [12] 1920 	addc	a,@r0
      00040F FD               [12] 1921 	mov	r5,a
      000410 08               [12] 1922 	inc	r0
      000411 86 06            [24] 1923 	mov	ar6,@r0
      000413 8C 82            [24] 1924 	mov	dpl,r4
      000415 8D 83            [24] 1925 	mov	dph,r5
      000417 8E F0            [24] 1926 	mov	b,r6
      000419 12r00r00         [24] 1927 	lcall	__gptrget
      00041C FE               [12] 1928 	mov	r6,a
      00041D EF               [12] 1929 	mov	a,r7
      00041E B5 06 02         [24] 1930 	cjne	a,ar6,00130$
      000421 80 28            [24] 1931 	sjmp	00104$
      000423                       1932 00130$:
                                   1933 ;	../../core/net/rpl/rpl-mrhof.c:201: return d1->preference > d2->preference ? d1 : d2;
      000423 C3               [12] 1934 	clr	c
      000424 EE               [12] 1935 	mov	a,r6
      000425 9F               [12] 1936 	subb	a,r7
      000426 50 0F            [24] 1937 	jnc	00109$
      000428 E5 81            [12] 1938 	mov	a,sp
      00042A 24 FB            [12] 1939 	add	a,#0xfb
      00042C F8               [12] 1940 	mov	r0,a
      00042D 86 05            [24] 1941 	mov	ar5,@r0
      00042F 08               [12] 1942 	inc	r0
      000430 86 06            [24] 1943 	mov	ar6,@r0
      000432 08               [12] 1944 	inc	r0
      000433 86 07            [24] 1945 	mov	ar7,@r0
      000435 80 0C            [24] 1946 	sjmp	00110$
      000437                       1947 00109$:
      000437 A8 81            [24] 1948 	mov	r0,sp
      000439 18               [12] 1949 	dec	r0
      00043A 18               [12] 1950 	dec	r0
      00043B 86 05            [24] 1951 	mov	ar5,@r0
      00043D 08               [12] 1952 	inc	r0
      00043E 86 06            [24] 1953 	mov	ar6,@r0
      000440 08               [12] 1954 	inc	r0
      000441 86 07            [24] 1955 	mov	ar7,@r0
      000443                       1956 00110$:
      000443 8D 82            [24] 1957 	mov	dpl,r5
      000445 8E 83            [24] 1958 	mov	dph,r6
      000447 8F F0            [24] 1959 	mov	b,r7
      000449 80 65            [24] 1960 	sjmp	00105$
      00044B                       1961 00104$:
                                   1962 ;	../../core/net/rpl/rpl-mrhof.c:204: return d1->rank < d2->rank ? d1 : d2;
      00044B E5 81            [12] 1963 	mov	a,sp
      00044D 24 FB            [12] 1964 	add	a,#0xfb
      00044F F8               [12] 1965 	mov	r0,a
      000450 74 1A            [12] 1966 	mov	a,#0x1A
      000452 26               [12] 1967 	add	a,@r0
      000453 FD               [12] 1968 	mov	r5,a
      000454 E4               [12] 1969 	clr	a
      000455 08               [12] 1970 	inc	r0
      000456 36               [12] 1971 	addc	a,@r0
      000457 FE               [12] 1972 	mov	r6,a
      000458 08               [12] 1973 	inc	r0
      000459 86 07            [24] 1974 	mov	ar7,@r0
      00045B 8D 82            [24] 1975 	mov	dpl,r5
      00045D 8E 83            [24] 1976 	mov	dph,r6
      00045F 8F F0            [24] 1977 	mov	b,r7
      000461 12r00r00         [24] 1978 	lcall	__gptrget
      000464 FD               [12] 1979 	mov	r5,a
      000465 A3               [24] 1980 	inc	dptr
      000466 12r00r00         [24] 1981 	lcall	__gptrget
      000469 FE               [12] 1982 	mov	r6,a
      00046A A8 81            [24] 1983 	mov	r0,sp
      00046C 18               [12] 1984 	dec	r0
      00046D 18               [12] 1985 	dec	r0
      00046E 74 1A            [12] 1986 	mov	a,#0x1A
      000470 26               [12] 1987 	add	a,@r0
      000471 FB               [12] 1988 	mov	r3,a
      000472 E4               [12] 1989 	clr	a
      000473 08               [12] 1990 	inc	r0
      000474 36               [12] 1991 	addc	a,@r0
      000475 FC               [12] 1992 	mov	r4,a
      000476 08               [12] 1993 	inc	r0
      000477 86 07            [24] 1994 	mov	ar7,@r0
      000479 8B 82            [24] 1995 	mov	dpl,r3
      00047B 8C 83            [24] 1996 	mov	dph,r4
      00047D 8F F0            [24] 1997 	mov	b,r7
      00047F 12r00r00         [24] 1998 	lcall	__gptrget
      000482 FB               [12] 1999 	mov	r3,a
      000483 A3               [24] 2000 	inc	dptr
      000484 12r00r00         [24] 2001 	lcall	__gptrget
      000487 FC               [12] 2002 	mov	r4,a
      000488 C3               [12] 2003 	clr	c
      000489 ED               [12] 2004 	mov	a,r5
      00048A 9B               [12] 2005 	subb	a,r3
      00048B EE               [12] 2006 	mov	a,r6
      00048C 9C               [12] 2007 	subb	a,r4
      00048D 50 0F            [24] 2008 	jnc	00111$
      00048F E5 81            [12] 2009 	mov	a,sp
      000491 24 FB            [12] 2010 	add	a,#0xfb
      000493 F8               [12] 2011 	mov	r0,a
      000494 86 05            [24] 2012 	mov	ar5,@r0
      000496 08               [12] 2013 	inc	r0
      000497 86 06            [24] 2014 	mov	ar6,@r0
      000499 08               [12] 2015 	inc	r0
      00049A 86 07            [24] 2016 	mov	ar7,@r0
      00049C 80 0C            [24] 2017 	sjmp	00112$
      00049E                       2018 00111$:
      00049E A8 81            [24] 2019 	mov	r0,sp
      0004A0 18               [12] 2020 	dec	r0
      0004A1 18               [12] 2021 	dec	r0
      0004A2 86 05            [24] 2022 	mov	ar5,@r0
      0004A4 08               [12] 2023 	inc	r0
      0004A5 86 06            [24] 2024 	mov	ar6,@r0
      0004A7 08               [12] 2025 	inc	r0
      0004A8 86 07            [24] 2026 	mov	ar7,@r0
      0004AA                       2027 00112$:
      0004AA 8D 82            [24] 2028 	mov	dpl,r5
      0004AC 8E 83            [24] 2029 	mov	dph,r6
      0004AE 8F F0            [24] 2030 	mov	b,r7
      0004B0                       2031 00105$:
      0004B0 C8               [12] 2032 	xch	a,r0
      0004B1 E5 81            [12] 2033 	mov	a,sp
      0004B3 24 FA            [12] 2034 	add	a,#0xFA
      0004B5 F5 81            [12] 2035 	mov	sp,a
      0004B7 C8               [12] 2036 	xch	a,r0
      0004B8 02r00r00         [24] 2037 	ljmp	__sdcc_banked_ret
                                   2038 ;------------------------------------------------------------
                                   2039 ;Allocation info for local variables in function 'best_parent'
                                   2040 ;------------------------------------------------------------
                                   2041 ;p2                        Allocated to stack - sp -12
                                   2042 ;p1                        Allocated to registers r5 r6 r7 
                                   2043 ;dag                       Allocated to stack - sp -6
                                   2044 ;min_diff                  Allocated to registers 
                                   2045 ;p1_metric                 Allocated to stack - sp -3
                                   2046 ;p2_metric                 Allocated to stack - sp -1
                                   2047 ;------------------------------------------------------------
                                   2048 ;	../../core/net/rpl/rpl-mrhof.c:208: best_parent(rpl_parent_t *p1, rpl_parent_t *p2)
                                   2049 ;	-----------------------------------------
                                   2050 ;	 function best_parent
                                   2051 ;	-----------------------------------------
      0004BB                       2052 _best_parent:
      0004BB E5 81            [12] 2053 	mov	a,sp
      0004BD 24 07            [12] 2054 	add	a,#0x07
      0004BF F5 81            [12] 2055 	mov	sp,a
      0004C1 AD 82            [24] 2056 	mov	r5,dpl
      0004C3 AE 83            [24] 2057 	mov	r6,dph
      0004C5 AF F0            [24] 2058 	mov	r7,b
                                   2059 ;	../../core/net/rpl/rpl-mrhof.c:215: dag = p1->dag; /* Both parents are in the same DAG. */
      0004C7 74 03            [12] 2060 	mov	a,#0x03
      0004C9 2D               [12] 2061 	add	a,r5
      0004CA FA               [12] 2062 	mov	r2,a
      0004CB E4               [12] 2063 	clr	a
      0004CC 3E               [12] 2064 	addc	a,r6
      0004CD FB               [12] 2065 	mov	r3,a
      0004CE 8F 04            [24] 2066 	mov	ar4,r7
      0004D0 8A 82            [24] 2067 	mov	dpl,r2
      0004D2 8B 83            [24] 2068 	mov	dph,r3
      0004D4 8C F0            [24] 2069 	mov	b,r4
      0004D6 E5 81            [12] 2070 	mov	a,sp
      0004D8 24 FA            [12] 2071 	add	a,#0xfa
      0004DA F8               [12] 2072 	mov	r0,a
      0004DB 12r00r00         [24] 2073 	lcall	__gptrget
      0004DE F6               [12] 2074 	mov	@r0,a
      0004DF A3               [24] 2075 	inc	dptr
      0004E0 12r00r00         [24] 2076 	lcall	__gptrget
      0004E3 08               [12] 2077 	inc	r0
      0004E4 F6               [12] 2078 	mov	@r0,a
      0004E5 A3               [24] 2079 	inc	dptr
      0004E6 12r00r00         [24] 2080 	lcall	__gptrget
      0004E9 08               [12] 2081 	inc	r0
      0004EA F6               [12] 2082 	mov	@r0,a
                                   2083 ;	../../core/net/rpl/rpl-mrhof.c:220: p1_metric = calculate_path_metric(p1);
      0004EB 8D 82            [24] 2084 	mov	dpl,r5
      0004ED 8E 83            [24] 2085 	mov	dph,r6
      0004EF 8F F0            [24] 2086 	mov	b,r7
      0004F1 C0 07            [24] 2087 	push	ar7
      0004F3 C0 06            [24] 2088 	push	ar6
      0004F5 C0 05            [24] 2089 	push	ar5
      0004F7 78r00            [12] 2090 	mov	r0,#_calculate_path_metric
      0004F9 79s00            [12] 2091 	mov	r1,#(_calculate_path_metric >> 8)
      0004FB 7As00            [12] 2092 	mov	r2,#(_calculate_path_metric >> 16)
      0004FD 12r00r00         [24] 2093 	lcall	__sdcc_banked_call
      000500 AB 82            [24] 2094 	mov	r3,dpl
      000502 AC 83            [24] 2095 	mov	r4,dph
      000504 D0 05            [24] 2096 	pop	ar5
      000506 D0 06            [24] 2097 	pop	ar6
      000508 D0 07            [24] 2098 	pop	ar7
      00050A E5 81            [12] 2099 	mov	a,sp
      00050C 24 FD            [12] 2100 	add	a,#0xfd
      00050E F8               [12] 2101 	mov	r0,a
      00050F A6 03            [24] 2102 	mov	@r0,ar3
      000511 08               [12] 2103 	inc	r0
      000512 A6 04            [24] 2104 	mov	@r0,ar4
                                   2105 ;	../../core/net/rpl/rpl-mrhof.c:221: p2_metric = calculate_path_metric(p2);
      000514 E5 81            [12] 2106 	mov	a,sp
      000516 24 F4            [12] 2107 	add	a,#0xf4
      000518 F8               [12] 2108 	mov	r0,a
      000519 86 82            [24] 2109 	mov	dpl,@r0
      00051B 08               [12] 2110 	inc	r0
      00051C 86 83            [24] 2111 	mov	dph,@r0
      00051E 08               [12] 2112 	inc	r0
      00051F 86 F0            [24] 2113 	mov	b,@r0
      000521 C0 07            [24] 2114 	push	ar7
      000523 C0 06            [24] 2115 	push	ar6
      000525 C0 05            [24] 2116 	push	ar5
      000527 78r00            [12] 2117 	mov	r0,#_calculate_path_metric
      000529 79s00            [12] 2118 	mov	r1,#(_calculate_path_metric >> 8)
      00052B 7As00            [12] 2119 	mov	r2,#(_calculate_path_metric >> 16)
      00052D 12r00r00         [24] 2120 	lcall	__sdcc_banked_call
      000530 AC 82            [24] 2121 	mov	r4,dpl
      000532 AB 83            [24] 2122 	mov	r3,dph
      000534 D0 05            [24] 2123 	pop	ar5
      000536 D0 06            [24] 2124 	pop	ar6
      000538 D0 07            [24] 2125 	pop	ar7
      00053A A8 81            [24] 2126 	mov	r0,sp
      00053C 18               [12] 2127 	dec	r0
      00053D A6 04            [24] 2128 	mov	@r0,ar4
      00053F 08               [12] 2129 	inc	r0
      000540 A6 03            [24] 2130 	mov	@r0,ar3
                                   2131 ;	../../core/net/rpl/rpl-mrhof.c:224: if(p1 == dag->preferred_parent || p2 == dag->preferred_parent) {
      000542 E5 81            [12] 2132 	mov	a,sp
      000544 24 FA            [12] 2133 	add	a,#0xfa
      000546 F8               [12] 2134 	mov	r0,a
      000547 74 17            [12] 2135 	mov	a,#0x17
      000549 26               [12] 2136 	add	a,@r0
      00054A FA               [12] 2137 	mov	r2,a
      00054B E4               [12] 2138 	clr	a
      00054C 08               [12] 2139 	inc	r0
      00054D 36               [12] 2140 	addc	a,@r0
      00054E FB               [12] 2141 	mov	r3,a
      00054F 08               [12] 2142 	inc	r0
      000550 86 04            [24] 2143 	mov	ar4,@r0
      000552 8A 82            [24] 2144 	mov	dpl,r2
      000554 8B 83            [24] 2145 	mov	dph,r3
      000556 8C F0            [24] 2146 	mov	b,r4
      000558 12r00r00         [24] 2147 	lcall	__gptrget
      00055B FA               [12] 2148 	mov	r2,a
      00055C A3               [24] 2149 	inc	dptr
      00055D 12r00r00         [24] 2150 	lcall	__gptrget
      000560 FB               [12] 2151 	mov	r3,a
      000561 A3               [24] 2152 	inc	dptr
      000562 12r00r00         [24] 2153 	lcall	__gptrget
      000565 FC               [12] 2154 	mov	r4,a
      000566 C0 02            [24] 2155 	push	ar2
      000568 C0 03            [24] 2156 	push	ar3
      00056A C0 04            [24] 2157 	push	ar4
      00056C 8D 82            [24] 2158 	mov	dpl,r5
      00056E 8E 83            [24] 2159 	mov	dph,r6
      000570 8F F0            [24] 2160 	mov	b,r7
      000572 12r00r00         [24] 2161 	lcall	___gptr_cmp
      000575 15 81            [12] 2162 	dec	sp
      000577 15 81            [12] 2163 	dec	sp
      000579 15 81            [12] 2164 	dec	sp
      00057B 60 20            [24] 2165 	jz	00104$
      00057D E5 81            [12] 2166 	mov	a,sp
      00057F 24 F4            [12] 2167 	add	a,#0xf4
      000581 F8               [12] 2168 	mov	r0,a
      000582 C0 02            [24] 2169 	push	ar2
      000584 C0 03            [24] 2170 	push	ar3
      000586 C0 04            [24] 2171 	push	ar4
      000588 86 82            [24] 2172 	mov	dpl,@r0
      00058A 08               [12] 2173 	inc	r0
      00058B 86 83            [24] 2174 	mov	dph,@r0
      00058D 08               [12] 2175 	inc	r0
      00058E 86 F0            [24] 2176 	mov	b,@r0
      000590 12r00r00         [24] 2177 	lcall	___gptr_cmp
      000593 15 81            [12] 2178 	dec	sp
      000595 15 81            [12] 2179 	dec	sp
      000597 15 81            [12] 2180 	dec	sp
      000599 60 02            [24] 2181 	jz	00125$
      00059B 80 55            [24] 2182 	sjmp	00105$
      00059D                       2183 00125$:
      00059D                       2184 00104$:
                                   2185 ;	../../core/net/rpl/rpl-mrhof.c:225: if(p1_metric < p2_metric + min_diff &&
      00059D C0 02            [24] 2186 	push	ar2
      00059F C0 03            [24] 2187 	push	ar3
      0005A1 C0 04            [24] 2188 	push	ar4
      0005A3 E5 81            [12] 2189 	mov	a,sp
      0005A5 24 FC            [12] 2190 	add	a,#0xfc
      0005A7 F8               [12] 2191 	mov	r0,a
      0005A8 74 80            [12] 2192 	mov	a,#0x80
      0005AA 26               [12] 2193 	add	a,@r0
      0005AB FB               [12] 2194 	mov	r3,a
      0005AC E4               [12] 2195 	clr	a
      0005AD 08               [12] 2196 	inc	r0
      0005AE 36               [12] 2197 	addc	a,@r0
      0005AF FC               [12] 2198 	mov	r4,a
      0005B0 E5 81            [12] 2199 	mov	a,sp
      0005B2 24 FA            [12] 2200 	add	a,#0xfa
      0005B4 F8               [12] 2201 	mov	r0,a
      0005B5 C3               [12] 2202 	clr	c
      0005B6 E6               [12] 2203 	mov	a,@r0
      0005B7 9B               [12] 2204 	subb	a,r3
      0005B8 08               [12] 2205 	inc	r0
      0005B9 E6               [12] 2206 	mov	a,@r0
      0005BA 9C               [12] 2207 	subb	a,r4
      0005BB D0 04            [24] 2208 	pop	ar4
      0005BD D0 03            [24] 2209 	pop	ar3
      0005BF D0 02            [24] 2210 	pop	ar2
      0005C1 50 2F            [24] 2211 	jnc	00105$
                                   2212 ;	../../core/net/rpl/rpl-mrhof.c:226: p1_metric > p2_metric - min_diff) {
      0005C3 C0 02            [24] 2213 	push	ar2
      0005C5 C0 03            [24] 2214 	push	ar3
      0005C7 C0 04            [24] 2215 	push	ar4
      0005C9 E5 81            [12] 2216 	mov	a,sp
      0005CB 24 FC            [12] 2217 	add	a,#0xfc
      0005CD F8               [12] 2218 	mov	r0,a
      0005CE E6               [12] 2219 	mov	a,@r0
      0005CF 24 80            [12] 2220 	add	a,#0x80
      0005D1 FB               [12] 2221 	mov	r3,a
      0005D2 08               [12] 2222 	inc	r0
      0005D3 E6               [12] 2223 	mov	a,@r0
      0005D4 34 FF            [12] 2224 	addc	a,#0xFF
      0005D6 FC               [12] 2225 	mov	r4,a
      0005D7 E5 81            [12] 2226 	mov	a,sp
      0005D9 24 FA            [12] 2227 	add	a,#0xfa
      0005DB F8               [12] 2228 	mov	r0,a
      0005DC C3               [12] 2229 	clr	c
      0005DD EB               [12] 2230 	mov	a,r3
      0005DE 96               [12] 2231 	subb	a,@r0
      0005DF EC               [12] 2232 	mov	a,r4
      0005E0 08               [12] 2233 	inc	r0
      0005E1 96               [12] 2234 	subb	a,@r0
      0005E2 D0 04            [24] 2235 	pop	ar4
      0005E4 D0 03            [24] 2236 	pop	ar3
      0005E6 D0 02            [24] 2237 	pop	ar2
      0005E8 50 08            [24] 2238 	jnc	00105$
                                   2239 ;	../../core/net/rpl/rpl-mrhof.c:231: return dag->preferred_parent;
      0005EA 8A 82            [24] 2240 	mov	dpl,r2
      0005EC 8B 83            [24] 2241 	mov	dph,r3
      0005EE 8C F0            [24] 2242 	mov	b,r4
      0005F0 80 26            [24] 2243 	sjmp	00107$
      0005F2                       2244 00105$:
                                   2245 ;	../../core/net/rpl/rpl-mrhof.c:235: return p1_metric < p2_metric ? p1 : p2;
      0005F2 E5 81            [12] 2246 	mov	a,sp
      0005F4 24 FD            [12] 2247 	add	a,#0xfd
      0005F6 F8               [12] 2248 	mov	r0,a
      0005F7 A9 81            [24] 2249 	mov	r1,sp
      0005F9 19               [12] 2250 	dec	r1
      0005FA C3               [12] 2251 	clr	c
      0005FB E6               [12] 2252 	mov	a,@r0
      0005FC 97               [12] 2253 	subb	a,@r1
      0005FD 08               [12] 2254 	inc	r0
      0005FE E6               [12] 2255 	mov	a,@r0
      0005FF 09               [12] 2256 	inc	r1
      000600 97               [12] 2257 	subb	a,@r1
      000601 50 02            [24] 2258 	jnc	00109$
      000603 80 0D            [24] 2259 	sjmp	00110$
      000605                       2260 00109$:
      000605 E5 81            [12] 2261 	mov	a,sp
      000607 24 F4            [12] 2262 	add	a,#0xf4
      000609 F8               [12] 2263 	mov	r0,a
      00060A 86 05            [24] 2264 	mov	ar5,@r0
      00060C 08               [12] 2265 	inc	r0
      00060D 86 06            [24] 2266 	mov	ar6,@r0
      00060F 08               [12] 2267 	inc	r0
      000610 86 07            [24] 2268 	mov	ar7,@r0
      000612                       2269 00110$:
      000612 8D 82            [24] 2270 	mov	dpl,r5
      000614 8E 83            [24] 2271 	mov	dph,r6
      000616 8F F0            [24] 2272 	mov	b,r7
      000618                       2273 00107$:
      000618 C8               [12] 2274 	xch	a,r0
      000619 E5 81            [12] 2275 	mov	a,sp
      00061B 24 F9            [12] 2276 	add	a,#0xF9
      00061D F5 81            [12] 2277 	mov	sp,a
      00061F C8               [12] 2278 	xch	a,r0
      000620 02r00r00         [24] 2279 	ljmp	__sdcc_banked_ret
                                   2280 ;------------------------------------------------------------
                                   2281 ;Allocation info for local variables in function 'update_metric_container'
                                   2282 ;------------------------------------------------------------
                                   2283 ;instance                  Allocated to registers r5 r6 r7 
                                   2284 ;------------------------------------------------------------
                                   2285 ;	../../core/net/rpl/rpl-mrhof.c:240: update_metric_container(rpl_instance_t *instance)
                                   2286 ;	-----------------------------------------
                                   2287 ;	 function update_metric_container
                                   2288 ;	-----------------------------------------
      000623                       2289 _update_metric_container:
                                   2290 ;	../../core/net/rpl/rpl-mrhof.c:242: instance->mc.type = RPL_DAG_MC;
      000623 AD 82            [24] 2291 	mov	r5,dpl
      000625 AE 83            [24] 2292 	mov	r6,dph
      000627 AF F0            [24] 2293 	mov	r7,b
      000629 E4               [12] 2294 	clr	a
      00062A 12r00r00         [24] 2295 	lcall	__gptrput
      00062D 02r00r00         [24] 2296 	ljmp	__sdcc_banked_ret
                                   2297 	.area CSEG    (CODE)
                                   2298 	.area CONST   (CODE)
                                   2299 	.area XINIT   (CODE)
      000000                       2300 __xinit__rpl_mrhof:
      000000r72s00s00              2301 	.byte _reset,(_reset >> 8),(_reset >> 16)
      000003r75s00s00              2302 	.byte _neighbor_link_callback,(_neighbor_link_callback >> 8),(_neighbor_link_callback >> 16)
      000006rBBs04s00              2303 	.byte _best_parent,(_best_parent >> 8),(_best_parent >> 16)
      000009r6Bs03s00              2304 	.byte _best_dag,(_best_dag >> 8),(_best_dag >> 16)
      00000Cr7As02s00              2305 	.byte _calculate_rank,(_calculate_rank >> 8),(_calculate_rank >> 16)
      00000Fr23s06s00              2306 	.byte _update_metric_container,(_update_metric_container >> 8),(_update_metric_container >> 16)
      000012 01 00                 2307 	.byte #0x01,#0x00	; 1
                                   2308 	.area CABS    (ABS,CODE)
