                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:26 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module packetbuf
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _linkaddr_cmp
                                     13 	.globl _linkaddr_copy
                                     14 	.globl _memcpy
                                     15 	.globl _ACTIVE
                                     16 	.globl _TX_BYTE
                                     17 	.globl _RX_BYTE
                                     18 	.globl _ERR
                                     19 	.globl _FE
                                     20 	.globl _SLAVE
                                     21 	.globl _RE
                                     22 	.globl _MODE
                                     23 	.globl _T3OVFIF
                                     24 	.globl _T3CH0IF
                                     25 	.globl _T3CH1IF
                                     26 	.globl _T4OVFIF
                                     27 	.globl _T4CH0IF
                                     28 	.globl _T4CH1IF
                                     29 	.globl _OVFIM
                                     30 	.globl _B_0
                                     31 	.globl _B_1
                                     32 	.globl _B_2
                                     33 	.globl _B_3
                                     34 	.globl _B_4
                                     35 	.globl _B_5
                                     36 	.globl _B_6
                                     37 	.globl _B_7
                                     38 	.globl _P2IF
                                     39 	.globl _UTX0IF
                                     40 	.globl _UTX1IF
                                     41 	.globl _P1IF
                                     42 	.globl _WDTIF
                                     43 	.globl _ACC_0
                                     44 	.globl _ACC_1
                                     45 	.globl _ACC_2
                                     46 	.globl _ACC_3
                                     47 	.globl _ACC_4
                                     48 	.globl _ACC_5
                                     49 	.globl _ACC_6
                                     50 	.globl _ACC_7
                                     51 	.globl _P
                                     52 	.globl _F1
                                     53 	.globl _OV
                                     54 	.globl _RS0
                                     55 	.globl _RS1
                                     56 	.globl _F0
                                     57 	.globl _AC
                                     58 	.globl _CY
                                     59 	.globl _DMAIF
                                     60 	.globl _T1IF
                                     61 	.globl _T2IF
                                     62 	.globl _T3IF
                                     63 	.globl _T4IF
                                     64 	.globl _P0IF
                                     65 	.globl _STIF
                                     66 	.globl _DMAIE
                                     67 	.globl _T1IE
                                     68 	.globl _T2IE
                                     69 	.globl _T3IE
                                     70 	.globl _T4IE
                                     71 	.globl _P0IE
                                     72 	.globl _RFERRIE
                                     73 	.globl _ADCIE
                                     74 	.globl _URX0IE
                                     75 	.globl _URX1IE
                                     76 	.globl _ENCIE
                                     77 	.globl _STIE
                                     78 	.globl _EA
                                     79 	.globl _P2_0
                                     80 	.globl _P2_1
                                     81 	.globl _P2_2
                                     82 	.globl _P2_3
                                     83 	.globl _P2_4
                                     84 	.globl _P2_5
                                     85 	.globl _P2_6
                                     86 	.globl _P2_7
                                     87 	.globl _ENCIF_0
                                     88 	.globl _ENCIF_1
                                     89 	.globl _P1_0
                                     90 	.globl _P1_1
                                     91 	.globl _P1_2
                                     92 	.globl _P1_3
                                     93 	.globl _P1_4
                                     94 	.globl _P1_5
                                     95 	.globl _P1_6
                                     96 	.globl _P1_7
                                     97 	.globl _IT0
                                     98 	.globl _RFERRIF
                                     99 	.globl _IT1
                                    100 	.globl _URX0IF
                                    101 	.globl _ADCIF
                                    102 	.globl _URX1IF
                                    103 	.globl _P0_0
                                    104 	.globl _P0_1
                                    105 	.globl _P0_2
                                    106 	.globl _P0_3
                                    107 	.globl _P0_4
                                    108 	.globl _P0_5
                                    109 	.globl _P0_6
                                    110 	.globl _P0_7
                                    111 	.globl _WDCTL
                                    112 	.globl _U1GCR
                                    113 	.globl _U1UCR
                                    114 	.globl _U1BAUD
                                    115 	.globl _U1DBUF
                                    116 	.globl _U1CSR
                                    117 	.globl _U0GCR
                                    118 	.globl _U0UCR
                                    119 	.globl _U0BAUD
                                    120 	.globl _U0DBUF
                                    121 	.globl _U0CSR
                                    122 	.globl _TIMIF
                                    123 	.globl _T4CC1
                                    124 	.globl _T4CCTL1
                                    125 	.globl _T4CC0
                                    126 	.globl _T4CCTL0
                                    127 	.globl _T4CTL
                                    128 	.globl _T4CNT
                                    129 	.globl _T3CC1
                                    130 	.globl _T3CCTL1
                                    131 	.globl _T3CC0
                                    132 	.globl _T3CCTL0
                                    133 	.globl _T3CTL
                                    134 	.globl _T3CNT
                                    135 	.globl _T2MSEL
                                    136 	.globl _T2IRQM
                                    137 	.globl _T2MOVF2
                                    138 	.globl _T2MOVF1
                                    139 	.globl _T2MOVF0
                                    140 	.globl _T2M1
                                    141 	.globl _T2M0
                                    142 	.globl _T2IRQF
                                    143 	.globl _T2EVTCFG
                                    144 	.globl _T2CTRL
                                    145 	.globl _T1STAT
                                    146 	.globl _T1CCTL2
                                    147 	.globl _T1CCTL1
                                    148 	.globl _T1CCTL0
                                    149 	.globl _T1CTL
                                    150 	.globl _T1CNTH
                                    151 	.globl _T1CNTL
                                    152 	.globl _T1CC2H
                                    153 	.globl _T1CC2L
                                    154 	.globl _T1CC1H
                                    155 	.globl _T1CC1L
                                    156 	.globl _T1CC0H
                                    157 	.globl _T1CC0L
                                    158 	.globl _CLKCONSTA
                                    159 	.globl _CLKCONCMD
                                    160 	.globl _SLEEPSTA
                                    161 	.globl _SLEEPCMD
                                    162 	.globl _STLOAD
                                    163 	.globl _ST2
                                    164 	.globl _ST1
                                    165 	.globl _ST0
                                    166 	.globl _RFERRF
                                    167 	.globl _RFIRQF0
                                    168 	.globl _RFST
                                    169 	.globl _RFD
                                    170 	.globl _RFIRQF1
                                    171 	.globl _PSBANK
                                    172 	.globl _FMAP
                                    173 	.globl _MEMCTR
                                    174 	.globl __XPAGE
                                    175 	.globl _MPAGE
                                    176 	.globl _PMUX
                                    177 	.globl _P2DIR
                                    178 	.globl _P1DIR
                                    179 	.globl _P0DIR
                                    180 	.globl _P2INP
                                    181 	.globl _P1INP
                                    182 	.globl _P2SEL
                                    183 	.globl _P1SEL
                                    184 	.globl _P0SEL
                                    185 	.globl _APCFG
                                    186 	.globl _PERCFG
                                    187 	.globl _P0INP
                                    188 	.globl _P2IEN
                                    189 	.globl _P1IEN
                                    190 	.globl _P0IEN
                                    191 	.globl _PICTL
                                    192 	.globl _P2IFG
                                    193 	.globl _P1IFG
                                    194 	.globl _P0IFG
                                    195 	.globl _DMAREQ
                                    196 	.globl _DMAARM
                                    197 	.globl _DMA0CFGH
                                    198 	.globl _DMA0CFGL
                                    199 	.globl _DMA1CFGH
                                    200 	.globl _DMA1CFGL
                                    201 	.globl _DMAIRQ
                                    202 	.globl _ENCCS
                                    203 	.globl _ENCDO
                                    204 	.globl _ENCDI
                                    205 	.globl _RNDH
                                    206 	.globl _RNDL
                                    207 	.globl _ADCH
                                    208 	.globl _ADCL
                                    209 	.globl _ADCCON3
                                    210 	.globl _ADCCON2
                                    211 	.globl _ADCCON1
                                    212 	.globl _B
                                    213 	.globl _IRCON2
                                    214 	.globl _ACC
                                    215 	.globl _PSW
                                    216 	.globl _IRCON
                                    217 	.globl _IP1
                                    218 	.globl _IEN1
                                    219 	.globl _IP0
                                    220 	.globl _IEN0
                                    221 	.globl _P2
                                    222 	.globl _S1CON
                                    223 	.globl _IEN2
                                    224 	.globl _S0CON
                                    225 	.globl _DPS
                                    226 	.globl _P1
                                    227 	.globl _TCON
                                    228 	.globl _PCON
                                    229 	.globl _DPH1
                                    230 	.globl _DPL1
                                    231 	.globl _DPH0
                                    232 	.globl _DPL0
                                    233 	.globl _SP
                                    234 	.globl _P0
                                    235 	.globl _packetbuf_addrs
                                    236 	.globl _packetbuf_attrs
                                    237 	.globl _X_IEEE_ADDR
                                    238 	.globl _X_INFOPAGE
                                    239 	.globl _X_P2DIR
                                    240 	.globl _X_P1DIR
                                    241 	.globl _X_P0DIR
                                    242 	.globl _X_U1GCR
                                    243 	.globl _X_U1UCR
                                    244 	.globl _X_U1BAUD
                                    245 	.globl _X_U1DBUF
                                    246 	.globl _X_U1CSR
                                    247 	.globl _X_P2INP
                                    248 	.globl _X_P1INP
                                    249 	.globl _X_P2SEL
                                    250 	.globl _X_P1SEL
                                    251 	.globl _X_P0SEL
                                    252 	.globl _X_APCFG
                                    253 	.globl _X_PERCFG
                                    254 	.globl _X_T4CC1
                                    255 	.globl _X_T4CCTL1
                                    256 	.globl _X_T4CC0
                                    257 	.globl _X_T4CCTL0
                                    258 	.globl _X_T4CTL
                                    259 	.globl _X_T4CNT
                                    260 	.globl _X_RFIRQF0
                                    261 	.globl _X_T1CCTL2
                                    262 	.globl _X_T1CCTL1
                                    263 	.globl _X_T1CCTL0
                                    264 	.globl _X_T1CTL
                                    265 	.globl _X_T1CNTH
                                    266 	.globl _X_T1CNTL
                                    267 	.globl _X_RFST
                                    268 	.globl _X_T1CC2H
                                    269 	.globl _X_T1CC2L
                                    270 	.globl _X_T1CC1H
                                    271 	.globl _X_T1CC1L
                                    272 	.globl _X_T1CC0H
                                    273 	.globl _X_T1CC0L
                                    274 	.globl _X_RFD
                                    275 	.globl _X_TIMIF
                                    276 	.globl _X_DMAREQ
                                    277 	.globl _X_DMAARM
                                    278 	.globl _X_DMA0CFGH
                                    279 	.globl _X_DMA0CFGL
                                    280 	.globl _X_DMA1CFGH
                                    281 	.globl _X_DMA1CFGL
                                    282 	.globl _X_DMAIRQ
                                    283 	.globl _X_T3CC1
                                    284 	.globl _X_T3CCTL1
                                    285 	.globl _X_T3CC0
                                    286 	.globl _X_T3CCTL0
                                    287 	.globl _X_T3CTL
                                    288 	.globl _X_T3CNT
                                    289 	.globl _X_WDCTL
                                    290 	.globl _X_MEMCTR
                                    291 	.globl _X_CLKCONCMD
                                    292 	.globl _X_U0GCR
                                    293 	.globl _X_U0UCR
                                    294 	.globl _X_T2MSEL
                                    295 	.globl _X_U0BAUD
                                    296 	.globl _X_U0DBUF
                                    297 	.globl _X_RFERRF
                                    298 	.globl _X_SLEEPCMD
                                    299 	.globl _X_RNDH
                                    300 	.globl _X_RNDL
                                    301 	.globl _X_ADCH
                                    302 	.globl _X_ADCL
                                    303 	.globl _X_ADCCON3
                                    304 	.globl _X_ADCCON2
                                    305 	.globl _X_ADCCON1
                                    306 	.globl _X_ENCCS
                                    307 	.globl _X_ENCDO
                                    308 	.globl _X_ENCDI
                                    309 	.globl _X_T1STAT
                                    310 	.globl _X_PMUX
                                    311 	.globl _X_STLOAD
                                    312 	.globl _X_P2IEN
                                    313 	.globl _X_P0IEN
                                    314 	.globl _X_T2IRQM
                                    315 	.globl _X_T2MOVF2
                                    316 	.globl _X_T2MOVF1
                                    317 	.globl _X_T2MOVF0
                                    318 	.globl _X_T2M1
                                    319 	.globl _X_T2M0
                                    320 	.globl _X_T2IRQF
                                    321 	.globl _X_P2
                                    322 	.globl _X_PSBANK
                                    323 	.globl _X_FMAP
                                    324 	.globl _X_CLKCONSTA
                                    325 	.globl _X_SLEEPSTA
                                    326 	.globl _X_T2EVTCFG
                                    327 	.globl _X_ST2
                                    328 	.globl _X_ST1
                                    329 	.globl _X_ST0
                                    330 	.globl _X_T2CTRL
                                    331 	.globl _X__XPAGE
                                    332 	.globl _X_MPAGE
                                    333 	.globl _X_RFIRQF1
                                    334 	.globl _X_P1
                                    335 	.globl _X_P0INP
                                    336 	.globl _X_P1IEN
                                    337 	.globl _X_PICTL
                                    338 	.globl _X_P2IFG
                                    339 	.globl _X_P1IFG
                                    340 	.globl _X_P0IFG
                                    341 	.globl _X_U0CSR
                                    342 	.globl _X_P0
                                    343 	.globl _USBF5
                                    344 	.globl _USBF4
                                    345 	.globl _USBF3
                                    346 	.globl _USBF2
                                    347 	.globl _USBF1
                                    348 	.globl _USBF0
                                    349 	.globl _USBCNTH
                                    350 	.globl _USBCNTL
                                    351 	.globl _USBCNT0
                                    352 	.globl _USBCSOH
                                    353 	.globl _USBCSOL
                                    354 	.globl _USBMAXO
                                    355 	.globl _USBCSIH
                                    356 	.globl _USBCSIL
                                    357 	.globl _USBCS0
                                    358 	.globl _USBMAXI
                                    359 	.globl _USBCTRL
                                    360 	.globl _USBINDEX
                                    361 	.globl _USBFRMH
                                    362 	.globl _USBFRML
                                    363 	.globl _USBCIE
                                    364 	.globl _USBOIE
                                    365 	.globl _USBIIE
                                    366 	.globl _USBCIF
                                    367 	.globl _USBOIF
                                    368 	.globl _USBIIF
                                    369 	.globl _USBPOW
                                    370 	.globl _USBADDR
                                    371 	.globl _CSPT
                                    372 	.globl _CSPZ
                                    373 	.globl _CSPY
                                    374 	.globl _CSPX
                                    375 	.globl _CSPSTAT
                                    376 	.globl _CSPCTRL
                                    377 	.globl _CSPPROG23
                                    378 	.globl _CSPPROG22
                                    379 	.globl _CSPPROG21
                                    380 	.globl _CSPPROG20
                                    381 	.globl _CSPPROG19
                                    382 	.globl _CSPPROG18
                                    383 	.globl _CSPPROG17
                                    384 	.globl _CSPPROG16
                                    385 	.globl _CSPPROG15
                                    386 	.globl _CSPPROG14
                                    387 	.globl _CSPPROG13
                                    388 	.globl _CSPPROG12
                                    389 	.globl _CSPPROG11
                                    390 	.globl _CSPPROG10
                                    391 	.globl _CSPPROG9
                                    392 	.globl _CSPPROG8
                                    393 	.globl _CSPPROG7
                                    394 	.globl _CSPPROG6
                                    395 	.globl _CSPPROG5
                                    396 	.globl _CSPPROG4
                                    397 	.globl _CSPPROG3
                                    398 	.globl _CSPPROG2
                                    399 	.globl _CSPPROG1
                                    400 	.globl _CSPPROG0
                                    401 	.globl _RFC_OBS_CTRL2
                                    402 	.globl _RFC_OBS_CTRL1
                                    403 	.globl _RFC_OBS_CTRL0
                                    404 	.globl _TXFILTCFG
                                    405 	.globl _PTEST1
                                    406 	.globl _PTEST0
                                    407 	.globl _ATEST
                                    408 	.globl _DACTEST2
                                    409 	.globl _DACTEST1
                                    410 	.globl _DACTEST0
                                    411 	.globl _MDMTEST1
                                    412 	.globl _MDMTEST0
                                    413 	.globl _ADCTEST2
                                    414 	.globl _ADCTEST1
                                    415 	.globl _ADCTEST0
                                    416 	.globl _AGCCTRL3
                                    417 	.globl _AGCCTRL2
                                    418 	.globl _AGCCTRL1
                                    419 	.globl _AGCCTRL0
                                    420 	.globl _FSCAL3
                                    421 	.globl _FSCAL2
                                    422 	.globl _FSCAL1
                                    423 	.globl _FSCAL0
                                    424 	.globl _FSCTRL
                                    425 	.globl _RXCTRL
                                    426 	.globl _FREQEST
                                    427 	.globl _MDMCTRL1
                                    428 	.globl _MDMCTRL0
                                    429 	.globl _RFRND
                                    430 	.globl _RFERRM
                                    431 	.globl _RFIRQM1
                                    432 	.globl _RFIRQM0
                                    433 	.globl _TXLAST_PTR
                                    434 	.globl _TXFIRST_PTR
                                    435 	.globl _RXP1_PTR
                                    436 	.globl _RXLAST_PTR
                                    437 	.globl _RXFIRST_PTR
                                    438 	.globl _TXFIFOCNT
                                    439 	.globl _RXFIFOCNT
                                    440 	.globl _RXFIRST
                                    441 	.globl _RSSISTAT
                                    442 	.globl _RSSI
                                    443 	.globl _CCACTRL1
                                    444 	.globl _CCACTRL0
                                    445 	.globl _FSMCTRL
                                    446 	.globl _FIFOPCTRL
                                    447 	.globl _FSMSTAT1
                                    448 	.globl _FSMSTAT0
                                    449 	.globl _TXCTRL
                                    450 	.globl _TXPOWER
                                    451 	.globl _FREQCTRL
                                    452 	.globl _FREQTUNE
                                    453 	.globl _RXMASKCLR
                                    454 	.globl _RXMASKSET
                                    455 	.globl _RXENABLE
                                    456 	.globl _FRMCTRL1
                                    457 	.globl _FRMCTRL0
                                    458 	.globl _SRCEXTEN2
                                    459 	.globl _SRCEXTEN1
                                    460 	.globl _SRCEXTEN0
                                    461 	.globl _SRCSHORTEN2
                                    462 	.globl _SRCSHORTEN1
                                    463 	.globl _SRCSHORTEN0
                                    464 	.globl _SRCMATCH
                                    465 	.globl _FRMFILT1
                                    466 	.globl _FRMFILT0
                                    467 	.globl _SHORT_ADDR1
                                    468 	.globl _SHORT_ADDR0
                                    469 	.globl _PAN_ID1
                                    470 	.globl _PAN_ID0
                                    471 	.globl _EXT_ADDR7
                                    472 	.globl _EXT_ADDR6
                                    473 	.globl _EXT_ADDR5
                                    474 	.globl _EXT_ADDR4
                                    475 	.globl _EXT_ADDR3
                                    476 	.globl _EXT_ADDR2
                                    477 	.globl _EXT_ADDR1
                                    478 	.globl _EXT_ADDR0
                                    479 	.globl _SRCSHORTPENDEN2
                                    480 	.globl _SRCSHORTPENDEN1
                                    481 	.globl _SRCSHORTPENDEN0
                                    482 	.globl _SRCEXTPENDEN2
                                    483 	.globl _SRCEXTPENDEN1
                                    484 	.globl _SRCEXTPENDEN0
                                    485 	.globl _SRCRESINDEX
                                    486 	.globl _SRCRESMASK2
                                    487 	.globl _SRCRESMASK1
                                    488 	.globl _SRCRESMASK0
                                    489 	.globl _SRC_ADDR_TABLE
                                    490 	.globl _TXFIFO
                                    491 	.globl _RXFIFO
                                    492 	.globl _RFCORE_RAM
                                    493 	.globl _CMPCTL
                                    494 	.globl _OPAMPS
                                    495 	.globl _OPAMPC
                                    496 	.globl _STCV2
                                    497 	.globl _STCV1
                                    498 	.globl _STCV0
                                    499 	.globl _STCS
                                    500 	.globl _STCC
                                    501 	.globl _T1CC4H
                                    502 	.globl _T1CC4L
                                    503 	.globl _T1CC3H
                                    504 	.globl _T1CC3L
                                    505 	.globl _XX_T1CC2H
                                    506 	.globl _XX_T1CC2L
                                    507 	.globl _XX_T1CC1H
                                    508 	.globl _XX_T1CC1L
                                    509 	.globl _XX_T1CC0H
                                    510 	.globl _XX_T1CC0L
                                    511 	.globl _T1CCTL4
                                    512 	.globl _T1CCTL3
                                    513 	.globl _XX_T1CCTL2
                                    514 	.globl _XX_T1CCTL1
                                    515 	.globl _XX_T1CCTL0
                                    516 	.globl _CLD
                                    517 	.globl _IRCTL
                                    518 	.globl _CHIPINFO1
                                    519 	.globl _CHIPINFO0
                                    520 	.globl _FWDATA
                                    521 	.globl _FADDRH
                                    522 	.globl _FADDRL
                                    523 	.globl _FCTL
                                    524 	.globl _IVCTRL
                                    525 	.globl _BATTMON
                                    526 	.globl _SRCRC
                                    527 	.globl _DBGDATA
                                    528 	.globl _TESTREG0
                                    529 	.globl _CHIPID
                                    530 	.globl _CHVER
                                    531 	.globl _OBSSEL5
                                    532 	.globl _OBSSEL4
                                    533 	.globl _OBSSEL3
                                    534 	.globl _OBSSEL2
                                    535 	.globl _OBSSEL1
                                    536 	.globl _OBSSEL0
                                    537 	.globl _I2CIO
                                    538 	.globl _I2CWC
                                    539 	.globl _I2CADDR
                                    540 	.globl _I2CDATA
                                    541 	.globl _I2CSTAT
                                    542 	.globl _I2CCFG
                                    543 	.globl _OPAMPMC
                                    544 	.globl _MONMUX
                                    545 	.globl _packetbuf_clear
                                    546 	.globl _packetbuf_clear_hdr
                                    547 	.globl _packetbuf_copyfrom
                                    548 	.globl _packetbuf_compact
                                    549 	.globl _packetbuf_copyto_hdr
                                    550 	.globl _packetbuf_copyto
                                    551 	.globl _packetbuf_hdralloc
                                    552 	.globl _packetbuf_hdr_remove
                                    553 	.globl _packetbuf_hdrreduce
                                    554 	.globl _packetbuf_set_datalen
                                    555 	.globl _packetbuf_dataptr
                                    556 	.globl _packetbuf_hdrptr
                                    557 	.globl _packetbuf_datalen
                                    558 	.globl _packetbuf_hdrlen
                                    559 	.globl _packetbuf_totlen
                                    560 	.globl _packetbuf_attr_clear
                                    561 	.globl _packetbuf_attr_copyto
                                    562 	.globl _packetbuf_attr_copyfrom
                                    563 	.globl _packetbuf_set_attr
                                    564 	.globl _packetbuf_attr
                                    565 	.globl _packetbuf_set_addr
                                    566 	.globl _packetbuf_addr
                                    567 	.globl _packetbuf_holds_broadcast
                                    568 ;--------------------------------------------------------
                                    569 ; special function registers
                                    570 ;--------------------------------------------------------
                                    571 	.area RSEG    (ABS,DATA)
      000000                        572 	.org 0x0000
                           000080   573 _P0	=	0x0080
                           000081   574 _SP	=	0x0081
                           000082   575 _DPL0	=	0x0082
                           000083   576 _DPH0	=	0x0083
                           000084   577 _DPL1	=	0x0084
                           000085   578 _DPH1	=	0x0085
                           000087   579 _PCON	=	0x0087
                           000088   580 _TCON	=	0x0088
                           000090   581 _P1	=	0x0090
                           000092   582 _DPS	=	0x0092
                           000098   583 _S0CON	=	0x0098
                           00009A   584 _IEN2	=	0x009a
                           00009B   585 _S1CON	=	0x009b
                           0000A0   586 _P2	=	0x00a0
                           0000A8   587 _IEN0	=	0x00a8
                           0000A9   588 _IP0	=	0x00a9
                           0000B8   589 _IEN1	=	0x00b8
                           0000B9   590 _IP1	=	0x00b9
                           0000C0   591 _IRCON	=	0x00c0
                           0000D0   592 _PSW	=	0x00d0
                           0000E0   593 _ACC	=	0x00e0
                           0000E8   594 _IRCON2	=	0x00e8
                           0000F0   595 _B	=	0x00f0
                           0000B4   596 _ADCCON1	=	0x00b4
                           0000B5   597 _ADCCON2	=	0x00b5
                           0000B6   598 _ADCCON3	=	0x00b6
                           0000BA   599 _ADCL	=	0x00ba
                           0000BB   600 _ADCH	=	0x00bb
                           0000BC   601 _RNDL	=	0x00bc
                           0000BD   602 _RNDH	=	0x00bd
                           0000B1   603 _ENCDI	=	0x00b1
                           0000B2   604 _ENCDO	=	0x00b2
                           0000B3   605 _ENCCS	=	0x00b3
                           0000D1   606 _DMAIRQ	=	0x00d1
                           0000D2   607 _DMA1CFGL	=	0x00d2
                           0000D3   608 _DMA1CFGH	=	0x00d3
                           0000D4   609 _DMA0CFGL	=	0x00d4
                           0000D5   610 _DMA0CFGH	=	0x00d5
                           0000D6   611 _DMAARM	=	0x00d6
                           0000D7   612 _DMAREQ	=	0x00d7
                           000089   613 _P0IFG	=	0x0089
                           00008A   614 _P1IFG	=	0x008a
                           00008B   615 _P2IFG	=	0x008b
                           00008C   616 _PICTL	=	0x008c
                           0000AB   617 _P0IEN	=	0x00ab
                           00008D   618 _P1IEN	=	0x008d
                           0000AC   619 _P2IEN	=	0x00ac
                           00008F   620 _P0INP	=	0x008f
                           0000F1   621 _PERCFG	=	0x00f1
                           0000F2   622 _APCFG	=	0x00f2
                           0000F3   623 _P0SEL	=	0x00f3
                           0000F4   624 _P1SEL	=	0x00f4
                           0000F5   625 _P2SEL	=	0x00f5
                           0000F6   626 _P1INP	=	0x00f6
                           0000F7   627 _P2INP	=	0x00f7
                           0000FD   628 _P0DIR	=	0x00fd
                           0000FE   629 _P1DIR	=	0x00fe
                           0000FF   630 _P2DIR	=	0x00ff
                           0000AE   631 _PMUX	=	0x00ae
                           000093   632 _MPAGE	=	0x0093
                           000093   633 __XPAGE	=	0x0093
                           0000C7   634 _MEMCTR	=	0x00c7
                           00009F   635 _FMAP	=	0x009f
                           00009F   636 _PSBANK	=	0x009f
                           000091   637 _RFIRQF1	=	0x0091
                           0000D9   638 _RFD	=	0x00d9
                           0000E1   639 _RFST	=	0x00e1
                           0000E9   640 _RFIRQF0	=	0x00e9
                           0000BF   641 _RFERRF	=	0x00bf
                           000095   642 _ST0	=	0x0095
                           000096   643 _ST1	=	0x0096
                           000097   644 _ST2	=	0x0097
                           0000AD   645 _STLOAD	=	0x00ad
                           0000BE   646 _SLEEPCMD	=	0x00be
                           00009D   647 _SLEEPSTA	=	0x009d
                           0000C6   648 _CLKCONCMD	=	0x00c6
                           00009E   649 _CLKCONSTA	=	0x009e
                           0000DA   650 _T1CC0L	=	0x00da
                           0000DB   651 _T1CC0H	=	0x00db
                           0000DC   652 _T1CC1L	=	0x00dc
                           0000DD   653 _T1CC1H	=	0x00dd
                           0000DE   654 _T1CC2L	=	0x00de
                           0000DF   655 _T1CC2H	=	0x00df
                           0000E2   656 _T1CNTL	=	0x00e2
                           0000E3   657 _T1CNTH	=	0x00e3
                           0000E4   658 _T1CTL	=	0x00e4
                           0000E5   659 _T1CCTL0	=	0x00e5
                           0000E6   660 _T1CCTL1	=	0x00e6
                           0000E7   661 _T1CCTL2	=	0x00e7
                           0000AF   662 _T1STAT	=	0x00af
                           000094   663 _T2CTRL	=	0x0094
                           00009C   664 _T2EVTCFG	=	0x009c
                           0000A1   665 _T2IRQF	=	0x00a1
                           0000A2   666 _T2M0	=	0x00a2
                           0000A3   667 _T2M1	=	0x00a3
                           0000A4   668 _T2MOVF0	=	0x00a4
                           0000A5   669 _T2MOVF1	=	0x00a5
                           0000A6   670 _T2MOVF2	=	0x00a6
                           0000A7   671 _T2IRQM	=	0x00a7
                           0000C3   672 _T2MSEL	=	0x00c3
                           0000CA   673 _T3CNT	=	0x00ca
                           0000CB   674 _T3CTL	=	0x00cb
                           0000CC   675 _T3CCTL0	=	0x00cc
                           0000CD   676 _T3CC0	=	0x00cd
                           0000CE   677 _T3CCTL1	=	0x00ce
                           0000CF   678 _T3CC1	=	0x00cf
                           0000EA   679 _T4CNT	=	0x00ea
                           0000EB   680 _T4CTL	=	0x00eb
                           0000EC   681 _T4CCTL0	=	0x00ec
                           0000ED   682 _T4CC0	=	0x00ed
                           0000EE   683 _T4CCTL1	=	0x00ee
                           0000EF   684 _T4CC1	=	0x00ef
                           0000D8   685 _TIMIF	=	0x00d8
                           000086   686 _U0CSR	=	0x0086
                           0000C1   687 _U0DBUF	=	0x00c1
                           0000C2   688 _U0BAUD	=	0x00c2
                           0000C4   689 _U0UCR	=	0x00c4
                           0000C5   690 _U0GCR	=	0x00c5
                           0000F8   691 _U1CSR	=	0x00f8
                           0000F9   692 _U1DBUF	=	0x00f9
                           0000FA   693 _U1BAUD	=	0x00fa
                           0000FB   694 _U1UCR	=	0x00fb
                           0000FC   695 _U1GCR	=	0x00fc
                           0000C9   696 _WDCTL	=	0x00c9
                                    697 ;--------------------------------------------------------
                                    698 ; special function bits
                                    699 ;--------------------------------------------------------
                                    700 	.area RSEG    (ABS,DATA)
      000000                        701 	.org 0x0000
                           000087   702 _P0_7	=	0x0087
                           000086   703 _P0_6	=	0x0086
                           000085   704 _P0_5	=	0x0085
                           000084   705 _P0_4	=	0x0084
                           000083   706 _P0_3	=	0x0083
                           000082   707 _P0_2	=	0x0082
                           000081   708 _P0_1	=	0x0081
                           000080   709 _P0_0	=	0x0080
                           00008F   710 _URX1IF	=	0x008f
                           00008D   711 _ADCIF	=	0x008d
                           00008B   712 _URX0IF	=	0x008b
                           00008A   713 _IT1	=	0x008a
                           000089   714 _RFERRIF	=	0x0089
                           000088   715 _IT0	=	0x0088
                           000097   716 _P1_7	=	0x0097
                           000096   717 _P1_6	=	0x0096
                           000095   718 _P1_5	=	0x0095
                           000094   719 _P1_4	=	0x0094
                           000093   720 _P1_3	=	0x0093
                           000092   721 _P1_2	=	0x0092
                           000091   722 _P1_1	=	0x0091
                           000090   723 _P1_0	=	0x0090
                           000099   724 _ENCIF_1	=	0x0099
                           000098   725 _ENCIF_0	=	0x0098
                           0000A7   726 _P2_7	=	0x00a7
                           0000A6   727 _P2_6	=	0x00a6
                           0000A5   728 _P2_5	=	0x00a5
                           0000A4   729 _P2_4	=	0x00a4
                           0000A3   730 _P2_3	=	0x00a3
                           0000A2   731 _P2_2	=	0x00a2
                           0000A1   732 _P2_1	=	0x00a1
                           0000A0   733 _P2_0	=	0x00a0
                           0000AF   734 _EA	=	0x00af
                           0000AD   735 _STIE	=	0x00ad
                           0000AC   736 _ENCIE	=	0x00ac
                           0000AB   737 _URX1IE	=	0x00ab
                           0000AA   738 _URX0IE	=	0x00aa
                           0000A9   739 _ADCIE	=	0x00a9
                           0000A8   740 _RFERRIE	=	0x00a8
                           0000BD   741 _P0IE	=	0x00bd
                           0000BC   742 _T4IE	=	0x00bc
                           0000BB   743 _T3IE	=	0x00bb
                           0000BA   744 _T2IE	=	0x00ba
                           0000B9   745 _T1IE	=	0x00b9
                           0000B8   746 _DMAIE	=	0x00b8
                           0000C7   747 _STIF	=	0x00c7
                           0000C5   748 _P0IF	=	0x00c5
                           0000C4   749 _T4IF	=	0x00c4
                           0000C3   750 _T3IF	=	0x00c3
                           0000C2   751 _T2IF	=	0x00c2
                           0000C1   752 _T1IF	=	0x00c1
                           0000C0   753 _DMAIF	=	0x00c0
                           0000D7   754 _CY	=	0x00d7
                           0000D6   755 _AC	=	0x00d6
                           0000D5   756 _F0	=	0x00d5
                           0000D4   757 _RS1	=	0x00d4
                           0000D3   758 _RS0	=	0x00d3
                           0000D2   759 _OV	=	0x00d2
                           0000D1   760 _F1	=	0x00d1
                           0000D0   761 _P	=	0x00d0
                           0000E7   762 _ACC_7	=	0x00e7
                           0000E6   763 _ACC_6	=	0x00e6
                           0000E5   764 _ACC_5	=	0x00e5
                           0000E4   765 _ACC_4	=	0x00e4
                           0000E3   766 _ACC_3	=	0x00e3
                           0000E2   767 _ACC_2	=	0x00e2
                           0000E1   768 _ACC_1	=	0x00e1
                           0000E0   769 _ACC_0	=	0x00e0
                           0000EC   770 _WDTIF	=	0x00ec
                           0000EB   771 _P1IF	=	0x00eb
                           0000EA   772 _UTX1IF	=	0x00ea
                           0000E9   773 _UTX0IF	=	0x00e9
                           0000E8   774 _P2IF	=	0x00e8
                           0000F7   775 _B_7	=	0x00f7
                           0000F6   776 _B_6	=	0x00f6
                           0000F5   777 _B_5	=	0x00f5
                           0000F4   778 _B_4	=	0x00f4
                           0000F3   779 _B_3	=	0x00f3
                           0000F2   780 _B_2	=	0x00f2
                           0000F1   781 _B_1	=	0x00f1
                           0000F0   782 _B_0	=	0x00f0
                           0000DE   783 _OVFIM	=	0x00de
                           0000DD   784 _T4CH1IF	=	0x00dd
                           0000DC   785 _T4CH0IF	=	0x00dc
                           0000DB   786 _T4OVFIF	=	0x00db
                           0000DA   787 _T3CH1IF	=	0x00da
                           0000D9   788 _T3CH0IF	=	0x00d9
                           0000D8   789 _T3OVFIF	=	0x00d8
                           0000FF   790 _MODE	=	0x00ff
                           0000FE   791 _RE	=	0x00fe
                           0000FD   792 _SLAVE	=	0x00fd
                           0000FC   793 _FE	=	0x00fc
                           0000FB   794 _ERR	=	0x00fb
                           0000FA   795 _RX_BYTE	=	0x00fa
                           0000F9   796 _TX_BYTE	=	0x00f9
                           0000F8   797 _ACTIVE	=	0x00f8
                                    798 ;--------------------------------------------------------
                                    799 ; overlayable register banks
                                    800 ;--------------------------------------------------------
                                    801 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        802 	.ds 8
                                    803 ;--------------------------------------------------------
                                    804 ; internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area DSEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable items in internal ram 
                                    809 ;--------------------------------------------------------
                                    810 ;--------------------------------------------------------
                                    811 ; indirectly addressable internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area ISEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; absolute internal ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area IABS    (ABS,DATA)
                                    818 	.area IABS    (ABS,DATA)
                                    819 ;--------------------------------------------------------
                                    820 ; bit data
                                    821 ;--------------------------------------------------------
                                    822 	.area BSEG    (BIT)
                                    823 ;--------------------------------------------------------
                                    824 ; paged external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area PSEG    (PAG,XDATA)
                                    827 ;--------------------------------------------------------
                                    828 ; external ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area XSEG    (XDATA)
                           0061A6   831 _MONMUX	=	0x61a6
                           0061A6   832 _OPAMPMC	=	0x61a6
                           006230   833 _I2CCFG	=	0x6230
                           006231   834 _I2CSTAT	=	0x6231
                           006232   835 _I2CDATA	=	0x6232
                           006233   836 _I2CADDR	=	0x6233
                           006234   837 _I2CWC	=	0x6234
                           006235   838 _I2CIO	=	0x6235
                           006243   839 _OBSSEL0	=	0x6243
                           006244   840 _OBSSEL1	=	0x6244
                           006245   841 _OBSSEL2	=	0x6245
                           006246   842 _OBSSEL3	=	0x6246
                           006247   843 _OBSSEL4	=	0x6247
                           006248   844 _OBSSEL5	=	0x6248
                           006249   845 _CHVER	=	0x6249
                           00624A   846 _CHIPID	=	0x624a
                           00624B   847 _TESTREG0	=	0x624b
                           006260   848 _DBGDATA	=	0x6260
                           006262   849 _SRCRC	=	0x6262
                           006264   850 _BATTMON	=	0x6264
                           006265   851 _IVCTRL	=	0x6265
                           006270   852 _FCTL	=	0x6270
                           006271   853 _FADDRL	=	0x6271
                           006272   854 _FADDRH	=	0x6272
                           006273   855 _FWDATA	=	0x6273
                           006276   856 _CHIPINFO0	=	0x6276
                           006277   857 _CHIPINFO1	=	0x6277
                           006281   858 _IRCTL	=	0x6281
                           006290   859 _CLD	=	0x6290
                           0062A0   860 _XX_T1CCTL0	=	0x62a0
                           0062A1   861 _XX_T1CCTL1	=	0x62a1
                           0062A2   862 _XX_T1CCTL2	=	0x62a2
                           0062A3   863 _T1CCTL3	=	0x62a3
                           0062A4   864 _T1CCTL4	=	0x62a4
                           0062A6   865 _XX_T1CC0L	=	0x62a6
                           0062A7   866 _XX_T1CC0H	=	0x62a7
                           0062A8   867 _XX_T1CC1L	=	0x62a8
                           0062A9   868 _XX_T1CC1H	=	0x62a9
                           0062AA   869 _XX_T1CC2L	=	0x62aa
                           0062AB   870 _XX_T1CC2H	=	0x62ab
                           0062AC   871 _T1CC3L	=	0x62ac
                           0062AD   872 _T1CC3H	=	0x62ad
                           0062AE   873 _T1CC4L	=	0x62ae
                           0062AF   874 _T1CC4H	=	0x62af
                           0062B0   875 _STCC	=	0x62b0
                           0062B1   876 _STCS	=	0x62b1
                           0062B2   877 _STCV0	=	0x62b2
                           0062B3   878 _STCV1	=	0x62b3
                           0062B4   879 _STCV2	=	0x62b4
                           0062C0   880 _OPAMPC	=	0x62c0
                           0062C1   881 _OPAMPS	=	0x62c1
                           0062D0   882 _CMPCTL	=	0x62d0
                           006000   883 _RFCORE_RAM	=	0x6000
                           006000   884 _RXFIFO	=	0x6000
                           006080   885 _TXFIFO	=	0x6080
                           006100   886 _SRC_ADDR_TABLE	=	0x6100
                           006160   887 _SRCRESMASK0	=	0x6160
                           006161   888 _SRCRESMASK1	=	0x6161
                           006162   889 _SRCRESMASK2	=	0x6162
                           006163   890 _SRCRESINDEX	=	0x6163
                           006164   891 _SRCEXTPENDEN0	=	0x6164
                           006165   892 _SRCEXTPENDEN1	=	0x6165
                           006166   893 _SRCEXTPENDEN2	=	0x6166
                           006167   894 _SRCSHORTPENDEN0	=	0x6167
                           006168   895 _SRCSHORTPENDEN1	=	0x6168
                           006169   896 _SRCSHORTPENDEN2	=	0x6169
                           00616A   897 _EXT_ADDR0	=	0x616a
                           00616B   898 _EXT_ADDR1	=	0x616b
                           00616C   899 _EXT_ADDR2	=	0x616c
                           00616D   900 _EXT_ADDR3	=	0x616d
                           00616E   901 _EXT_ADDR4	=	0x616e
                           00616F   902 _EXT_ADDR5	=	0x616f
                           006170   903 _EXT_ADDR6	=	0x6170
                           006171   904 _EXT_ADDR7	=	0x6171
                           006172   905 _PAN_ID0	=	0x6172
                           006173   906 _PAN_ID1	=	0x6173
                           006174   907 _SHORT_ADDR0	=	0x6174
                           006175   908 _SHORT_ADDR1	=	0x6175
                           006180   909 _FRMFILT0	=	0x6180
                           006181   910 _FRMFILT1	=	0x6181
                           006182   911 _SRCMATCH	=	0x6182
                           006183   912 _SRCSHORTEN0	=	0x6183
                           006184   913 _SRCSHORTEN1	=	0x6184
                           006185   914 _SRCSHORTEN2	=	0x6185
                           006186   915 _SRCEXTEN0	=	0x6186
                           006187   916 _SRCEXTEN1	=	0x6187
                           006188   917 _SRCEXTEN2	=	0x6188
                           006189   918 _FRMCTRL0	=	0x6189
                           00618A   919 _FRMCTRL1	=	0x618a
                           00618B   920 _RXENABLE	=	0x618b
                           00618C   921 _RXMASKSET	=	0x618c
                           00618D   922 _RXMASKCLR	=	0x618d
                           00618E   923 _FREQTUNE	=	0x618e
                           00618F   924 _FREQCTRL	=	0x618f
                           006190   925 _TXPOWER	=	0x6190
                           006191   926 _TXCTRL	=	0x6191
                           006192   927 _FSMSTAT0	=	0x6192
                           006193   928 _FSMSTAT1	=	0x6193
                           006194   929 _FIFOPCTRL	=	0x6194
                           006195   930 _FSMCTRL	=	0x6195
                           006196   931 _CCACTRL0	=	0x6196
                           006197   932 _CCACTRL1	=	0x6197
                           006198   933 _RSSI	=	0x6198
                           006199   934 _RSSISTAT	=	0x6199
                           00619A   935 _RXFIRST	=	0x619a
                           00619B   936 _RXFIFOCNT	=	0x619b
                           00619C   937 _TXFIFOCNT	=	0x619c
                           00619D   938 _RXFIRST_PTR	=	0x619d
                           00619E   939 _RXLAST_PTR	=	0x619e
                           00619F   940 _RXP1_PTR	=	0x619f
                           0061A1   941 _TXFIRST_PTR	=	0x61a1
                           0061A2   942 _TXLAST_PTR	=	0x61a2
                           0061A3   943 _RFIRQM0	=	0x61a3
                           0061A4   944 _RFIRQM1	=	0x61a4
                           0061A5   945 _RFERRM	=	0x61a5
                           0061A7   946 _RFRND	=	0x61a7
                           0061A8   947 _MDMCTRL0	=	0x61a8
                           0061A9   948 _MDMCTRL1	=	0x61a9
                           0061AA   949 _FREQEST	=	0x61aa
                           0061AB   950 _RXCTRL	=	0x61ab
                           0061AC   951 _FSCTRL	=	0x61ac
                           0061AD   952 _FSCAL0	=	0x61ad
                           0061AE   953 _FSCAL1	=	0x61ae
                           0061AF   954 _FSCAL2	=	0x61af
                           0061B0   955 _FSCAL3	=	0x61b0
                           0061B1   956 _AGCCTRL0	=	0x61b1
                           0061B2   957 _AGCCTRL1	=	0x61b2
                           0061B3   958 _AGCCTRL2	=	0x61b3
                           0061B4   959 _AGCCTRL3	=	0x61b4
                           0061B5   960 _ADCTEST0	=	0x61b5
                           0061B6   961 _ADCTEST1	=	0x61b6
                           0061B7   962 _ADCTEST2	=	0x61b7
                           0061B8   963 _MDMTEST0	=	0x61b8
                           0061B9   964 _MDMTEST1	=	0x61b9
                           0061BA   965 _DACTEST0	=	0x61ba
                           0061BB   966 _DACTEST1	=	0x61bb
                           0061BC   967 _DACTEST2	=	0x61bc
                           0061BD   968 _ATEST	=	0x61bd
                           0061BE   969 _PTEST0	=	0x61be
                           0061BF   970 _PTEST1	=	0x61bf
                           0061FA   971 _TXFILTCFG	=	0x61fa
                           0061EB   972 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   973 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   974 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   975 _CSPPROG0	=	0x61c0
                           0061C1   976 _CSPPROG1	=	0x61c1
                           0061C2   977 _CSPPROG2	=	0x61c2
                           0061C3   978 _CSPPROG3	=	0x61c3
                           0061C4   979 _CSPPROG4	=	0x61c4
                           0061C5   980 _CSPPROG5	=	0x61c5
                           0061C6   981 _CSPPROG6	=	0x61c6
                           0061C7   982 _CSPPROG7	=	0x61c7
                           0061C8   983 _CSPPROG8	=	0x61c8
                           0061C9   984 _CSPPROG9	=	0x61c9
                           0061CA   985 _CSPPROG10	=	0x61ca
                           0061CB   986 _CSPPROG11	=	0x61cb
                           0061CC   987 _CSPPROG12	=	0x61cc
                           0061CD   988 _CSPPROG13	=	0x61cd
                           0061CE   989 _CSPPROG14	=	0x61ce
                           0061CF   990 _CSPPROG15	=	0x61cf
                           0061D0   991 _CSPPROG16	=	0x61d0
                           0061D1   992 _CSPPROG17	=	0x61d1
                           0061D2   993 _CSPPROG18	=	0x61d2
                           0061D3   994 _CSPPROG19	=	0x61d3
                           0061D4   995 _CSPPROG20	=	0x61d4
                           0061D5   996 _CSPPROG21	=	0x61d5
                           0061D6   997 _CSPPROG22	=	0x61d6
                           0061D7   998 _CSPPROG23	=	0x61d7
                           0061E0   999 _CSPCTRL	=	0x61e0
                           0061E1  1000 _CSPSTAT	=	0x61e1
                           0061E2  1001 _CSPX	=	0x61e2
                           0061E3  1002 _CSPY	=	0x61e3
                           0061E4  1003 _CSPZ	=	0x61e4
                           0061E5  1004 _CSPT	=	0x61e5
                           006200  1005 _USBADDR	=	0x6200
                           006201  1006 _USBPOW	=	0x6201
                           006202  1007 _USBIIF	=	0x6202
                           006204  1008 _USBOIF	=	0x6204
                           006206  1009 _USBCIF	=	0x6206
                           006207  1010 _USBIIE	=	0x6207
                           006209  1011 _USBOIE	=	0x6209
                           00620B  1012 _USBCIE	=	0x620b
                           00620C  1013 _USBFRML	=	0x620c
                           00620D  1014 _USBFRMH	=	0x620d
                           00620E  1015 _USBINDEX	=	0x620e
                           00620F  1016 _USBCTRL	=	0x620f
                           006210  1017 _USBMAXI	=	0x6210
                           006211  1018 _USBCS0	=	0x6211
                           006211  1019 _USBCSIL	=	0x6211
                           006212  1020 _USBCSIH	=	0x6212
                           006213  1021 _USBMAXO	=	0x6213
                           006214  1022 _USBCSOL	=	0x6214
                           006215  1023 _USBCSOH	=	0x6215
                           006216  1024 _USBCNT0	=	0x6216
                           006216  1025 _USBCNTL	=	0x6216
                           006217  1026 _USBCNTH	=	0x6217
                           006220  1027 _USBF0	=	0x6220
                           006222  1028 _USBF1	=	0x6222
                           006224  1029 _USBF2	=	0x6224
                           006226  1030 _USBF3	=	0x6226
                           006228  1031 _USBF4	=	0x6228
                           00622A  1032 _USBF5	=	0x622a
                           007080  1033 _X_P0	=	0x7080
                           007086  1034 _X_U0CSR	=	0x7086
                           007089  1035 _X_P0IFG	=	0x7089
                           00708A  1036 _X_P1IFG	=	0x708a
                           00708B  1037 _X_P2IFG	=	0x708b
                           00708C  1038 _X_PICTL	=	0x708c
                           00708D  1039 _X_P1IEN	=	0x708d
                           00708F  1040 _X_P0INP	=	0x708f
                           007090  1041 _X_P1	=	0x7090
                           007091  1042 _X_RFIRQF1	=	0x7091
                           007093  1043 _X_MPAGE	=	0x7093
                           007093  1044 _X__XPAGE	=	0x7093
                           007094  1045 _X_T2CTRL	=	0x7094
                           007095  1046 _X_ST0	=	0x7095
                           007096  1047 _X_ST1	=	0x7096
                           007097  1048 _X_ST2	=	0x7097
                           00709C  1049 _X_T2EVTCFG	=	0x709c
                           00709D  1050 _X_SLEEPSTA	=	0x709d
                           00709E  1051 _X_CLKCONSTA	=	0x709e
                           00709F  1052 _X_FMAP	=	0x709f
                           00709F  1053 _X_PSBANK	=	0x709f
                           0070A0  1054 _X_P2	=	0x70a0
                           0070A1  1055 _X_T2IRQF	=	0x70a1
                           0070A2  1056 _X_T2M0	=	0x70a2
                           0070A3  1057 _X_T2M1	=	0x70a3
                           0070A4  1058 _X_T2MOVF0	=	0x70a4
                           0070A5  1059 _X_T2MOVF1	=	0x70a5
                           0070A6  1060 _X_T2MOVF2	=	0x70a6
                           0070A7  1061 _X_T2IRQM	=	0x70a7
                           0070AB  1062 _X_P0IEN	=	0x70ab
                           0070AC  1063 _X_P2IEN	=	0x70ac
                           0070AD  1064 _X_STLOAD	=	0x70ad
                           0070AE  1065 _X_PMUX	=	0x70ae
                           0070AF  1066 _X_T1STAT	=	0x70af
                           0070B1  1067 _X_ENCDI	=	0x70b1
                           0070B2  1068 _X_ENCDO	=	0x70b2
                           0070B3  1069 _X_ENCCS	=	0x70b3
                           0070B4  1070 _X_ADCCON1	=	0x70b4
                           0070B5  1071 _X_ADCCON2	=	0x70b5
                           0070B6  1072 _X_ADCCON3	=	0x70b6
                           0070BA  1073 _X_ADCL	=	0x70ba
                           0070BB  1074 _X_ADCH	=	0x70bb
                           0070BC  1075 _X_RNDL	=	0x70bc
                           0070BD  1076 _X_RNDH	=	0x70bd
                           0070BE  1077 _X_SLEEPCMD	=	0x70be
                           0070BF  1078 _X_RFERRF	=	0x70bf
                           0070C1  1079 _X_U0DBUF	=	0x70c1
                           0070C2  1080 _X_U0BAUD	=	0x70c2
                           0070C3  1081 _X_T2MSEL	=	0x70c3
                           0070C4  1082 _X_U0UCR	=	0x70c4
                           0070C5  1083 _X_U0GCR	=	0x70c5
                           0070C6  1084 _X_CLKCONCMD	=	0x70c6
                           0070C7  1085 _X_MEMCTR	=	0x70c7
                           0070C9  1086 _X_WDCTL	=	0x70c9
                           0070CA  1087 _X_T3CNT	=	0x70ca
                           0070CB  1088 _X_T3CTL	=	0x70cb
                           0070CC  1089 _X_T3CCTL0	=	0x70cc
                           0070CD  1090 _X_T3CC0	=	0x70cd
                           0070CE  1091 _X_T3CCTL1	=	0x70ce
                           0070CF  1092 _X_T3CC1	=	0x70cf
                           0070D1  1093 _X_DMAIRQ	=	0x70d1
                           0070D2  1094 _X_DMA1CFGL	=	0x70d2
                           0070D3  1095 _X_DMA1CFGH	=	0x70d3
                           0070D4  1096 _X_DMA0CFGL	=	0x70d4
                           0070D5  1097 _X_DMA0CFGH	=	0x70d5
                           0070D6  1098 _X_DMAARM	=	0x70d6
                           0070D7  1099 _X_DMAREQ	=	0x70d7
                           0070D8  1100 _X_TIMIF	=	0x70d8
                           0070D9  1101 _X_RFD	=	0x70d9
                           0070DA  1102 _X_T1CC0L	=	0x70da
                           0070DB  1103 _X_T1CC0H	=	0x70db
                           0070DC  1104 _X_T1CC1L	=	0x70dc
                           0070DD  1105 _X_T1CC1H	=	0x70dd
                           0070DE  1106 _X_T1CC2L	=	0x70de
                           0070DF  1107 _X_T1CC2H	=	0x70df
                           0070E1  1108 _X_RFST	=	0x70e1
                           0070E2  1109 _X_T1CNTL	=	0x70e2
                           0070E3  1110 _X_T1CNTH	=	0x70e3
                           0070E4  1111 _X_T1CTL	=	0x70e4
                           0070E5  1112 _X_T1CCTL0	=	0x70e5
                           0070E6  1113 _X_T1CCTL1	=	0x70e6
                           0070E7  1114 _X_T1CCTL2	=	0x70e7
                           0070E9  1115 _X_RFIRQF0	=	0x70e9
                           0070EA  1116 _X_T4CNT	=	0x70ea
                           0070EB  1117 _X_T4CTL	=	0x70eb
                           0070EC  1118 _X_T4CCTL0	=	0x70ec
                           0070ED  1119 _X_T4CC0	=	0x70ed
                           0070EE  1120 _X_T4CCTL1	=	0x70ee
                           0070EF  1121 _X_T4CC1	=	0x70ef
                           0070F1  1122 _X_PERCFG	=	0x70f1
                           0070F2  1123 _X_APCFG	=	0x70f2
                           0070F3  1124 _X_P0SEL	=	0x70f3
                           0070F4  1125 _X_P1SEL	=	0x70f4
                           0070F5  1126 _X_P2SEL	=	0x70f5
                           0070F6  1127 _X_P1INP	=	0x70f6
                           0070F7  1128 _X_P2INP	=	0x70f7
                           0070F8  1129 _X_U1CSR	=	0x70f8
                           0070F9  1130 _X_U1DBUF	=	0x70f9
                           0070FA  1131 _X_U1BAUD	=	0x70fa
                           0070FB  1132 _X_U1UCR	=	0x70fb
                           0070FC  1133 _X_U1GCR	=	0x70fc
                           0070FD  1134 _X_P0DIR	=	0x70fd
                           0070FE  1135 _X_P1DIR	=	0x70fe
                           0070FF  1136 _X_P2DIR	=	0x70ff
                           007800  1137 _X_INFOPAGE	=	0x7800
                           00780C  1138 _X_IEEE_ADDR	=	0x780c
      000000                       1139 _packetbuf_attrs::
      000000                       1140 	.ds 30
      00001E                       1141 _packetbuf_addrs::
      00001E                       1142 	.ds 16
      00002E                       1143 _buflen:
      00002E                       1144 	.ds 2
      000030                       1145 _bufptr:
      000030                       1146 	.ds 2
      000032                       1147 _hdrptr:
      000032                       1148 	.ds 1
      000033                       1149 _packetbuf_aligned:
      000033                       1150 	.ds 176
      0000E3                       1151 _packetbufptr:
      0000E3                       1152 	.ds 3
                                   1153 ;--------------------------------------------------------
                                   1154 ; absolute external ram data
                                   1155 ;--------------------------------------------------------
                                   1156 	.area XABS    (ABS,XDATA)
                                   1157 ;--------------------------------------------------------
                                   1158 ; external initialized ram data
                                   1159 ;--------------------------------------------------------
                                   1160 	.area XISEG   (XDATA)
      000000                       1161 _packetbuf:
      000000                       1162 	.ds 3
                                   1163 	.area HOME    (CODE)
                                   1164 	.area GSINIT0 (CODE)
                                   1165 	.area GSINIT1 (CODE)
                                   1166 	.area GSINIT2 (CODE)
                                   1167 	.area GSINIT3 (CODE)
                                   1168 	.area GSINIT4 (CODE)
                                   1169 	.area GSINIT5 (CODE)
                                   1170 	.area GSINIT  (CODE)
                                   1171 	.area GSFINAL (CODE)
                                   1172 	.area CSEG    (CODE)
                                   1173 ;--------------------------------------------------------
                                   1174 ; global & static initialisations
                                   1175 ;--------------------------------------------------------
                                   1176 	.area HOME    (CODE)
                                   1177 	.area GSINIT  (CODE)
                                   1178 	.area GSFINAL (CODE)
                                   1179 	.area GSINIT  (CODE)
                                   1180 ;--------------------------------------------------------
                                   1181 ; Home
                                   1182 ;--------------------------------------------------------
                                   1183 	.area HOME    (CODE)
                                   1184 	.area HOME    (CODE)
                                   1185 ;--------------------------------------------------------
                                   1186 ; code
                                   1187 ;--------------------------------------------------------
                                   1188 	.area BANK1   (CODE)
                                   1189 ;------------------------------------------------------------
                                   1190 ;Allocation info for local variables in function 'packetbuf_clear'
                                   1191 ;------------------------------------------------------------
                                   1192 ;	../../core/net/packetbuf.c:77: packetbuf_clear(void)
                                   1193 ;	-----------------------------------------
                                   1194 ;	 function packetbuf_clear
                                   1195 ;	-----------------------------------------
      000000                       1196 _packetbuf_clear:
                           000007  1197 	ar7 = 0x07
                           000006  1198 	ar6 = 0x06
                           000005  1199 	ar5 = 0x05
                           000004  1200 	ar4 = 0x04
                           000003  1201 	ar3 = 0x03
                           000002  1202 	ar2 = 0x02
                           000001  1203 	ar1 = 0x01
                           000000  1204 	ar0 = 0x00
                                   1205 ;	../../core/net/packetbuf.c:79: buflen = bufptr = 0;
      000000 90r00r30         [24] 1206 	mov	dptr,#_bufptr
      000003 E4               [12] 1207 	clr	a
      000004 F0               [24] 1208 	movx	@dptr,a
      000005 E4               [12] 1209 	clr	a
      000006 A3               [24] 1210 	inc	dptr
      000007 F0               [24] 1211 	movx	@dptr,a
      000008 90r00r2E         [24] 1212 	mov	dptr,#_buflen
      00000B E4               [12] 1213 	clr	a
      00000C F0               [24] 1214 	movx	@dptr,a
      00000D E4               [12] 1215 	clr	a
      00000E A3               [24] 1216 	inc	dptr
      00000F F0               [24] 1217 	movx	@dptr,a
                                   1218 ;	../../core/net/packetbuf.c:80: hdrptr = PACKETBUF_HDR_SIZE;
      000010 90r00r32         [24] 1219 	mov	dptr,#_hdrptr
      000013 74 30            [12] 1220 	mov	a,#0x30
      000015 F0               [24] 1221 	movx	@dptr,a
                                   1222 ;	../../core/net/packetbuf.c:82: packetbufptr = &packetbuf[PACKETBUF_HDR_SIZE];
      000016 90r00r00         [24] 1223 	mov	dptr,#_packetbuf
      000019 E0               [24] 1224 	movx	a,@dptr
      00001A FD               [12] 1225 	mov	r5,a
      00001B A3               [24] 1226 	inc	dptr
      00001C E0               [24] 1227 	movx	a,@dptr
      00001D FE               [12] 1228 	mov	r6,a
      00001E A3               [24] 1229 	inc	dptr
      00001F E0               [24] 1230 	movx	a,@dptr
      000020 FF               [12] 1231 	mov	r7,a
      000021 90r00rE3         [24] 1232 	mov	dptr,#_packetbufptr
      000024 74 30            [12] 1233 	mov	a,#0x30
      000026 2D               [12] 1234 	add	a,r5
      000027 F0               [24] 1235 	movx	@dptr,a
      000028 E4               [12] 1236 	clr	a
      000029 3E               [12] 1237 	addc	a,r6
      00002A A3               [24] 1238 	inc	dptr
      00002B F0               [24] 1239 	movx	@dptr,a
      00002C EF               [12] 1240 	mov	a,r7
      00002D A3               [24] 1241 	inc	dptr
      00002E F0               [24] 1242 	movx	@dptr,a
                                   1243 ;	../../core/net/packetbuf.c:83: packetbuf_attr_clear();
      00002F 78r86            [12] 1244 	mov	r0,#_packetbuf_attr_clear
      000031 79s04            [12] 1245 	mov	r1,#(_packetbuf_attr_clear >> 8)
      000033 7As00            [12] 1246 	mov	r2,#(_packetbuf_attr_clear >> 16)
      000035 12r00r00         [24] 1247 	lcall	__sdcc_banked_call
      000038 02r00r00         [24] 1248 	ljmp	__sdcc_banked_ret
                                   1249 ;------------------------------------------------------------
                                   1250 ;Allocation info for local variables in function 'packetbuf_clear_hdr'
                                   1251 ;------------------------------------------------------------
                                   1252 ;	../../core/net/packetbuf.c:87: packetbuf_clear_hdr(void)
                                   1253 ;	-----------------------------------------
                                   1254 ;	 function packetbuf_clear_hdr
                                   1255 ;	-----------------------------------------
      00003B                       1256 _packetbuf_clear_hdr:
                                   1257 ;	../../core/net/packetbuf.c:89: hdrptr = PACKETBUF_HDR_SIZE;
      00003B 90r00r32         [24] 1258 	mov	dptr,#_hdrptr
      00003E 74 30            [12] 1259 	mov	a,#0x30
      000040 F0               [24] 1260 	movx	@dptr,a
      000041 02r00r00         [24] 1261 	ljmp	__sdcc_banked_ret
                                   1262 ;------------------------------------------------------------
                                   1263 ;Allocation info for local variables in function 'packetbuf_copyfrom'
                                   1264 ;------------------------------------------------------------
                                   1265 ;len                       Allocated to stack - sp -7
                                   1266 ;from                      Allocated to stack - sp -2
                                   1267 ;l                         Allocated to registers r3 r4 
                                   1268 ;------------------------------------------------------------
                                   1269 ;	../../core/net/packetbuf.c:93: packetbuf_copyfrom(const void *from, uint16_t len)
                                   1270 ;	-----------------------------------------
                                   1271 ;	 function packetbuf_copyfrom
                                   1272 ;	-----------------------------------------
      000044                       1273 _packetbuf_copyfrom:
      000044 C0 82            [24] 1274 	push	dpl
      000046 C0 83            [24] 1275 	push	dph
      000048 C0 F0            [24] 1276 	push	b
                                   1277 ;	../../core/net/packetbuf.c:97: packetbuf_clear();
      00004A 78r00            [12] 1278 	mov	r0,#_packetbuf_clear
      00004C 79s00            [12] 1279 	mov	r1,#(_packetbuf_clear >> 8)
      00004E 7As00            [12] 1280 	mov	r2,#(_packetbuf_clear >> 16)
      000050 12r00r00         [24] 1281 	lcall	__sdcc_banked_call
                                   1282 ;	../../core/net/packetbuf.c:98: l = len > PACKETBUF_SIZE? PACKETBUF_SIZE: len;
      000053 E5 81            [12] 1283 	mov	a,sp
      000055 24 F9            [12] 1284 	add	a,#0xf9
      000057 F8               [12] 1285 	mov	r0,a
      000058 C3               [12] 1286 	clr	c
      000059 74 80            [12] 1287 	mov	a,#0x80
      00005B 96               [12] 1288 	subb	a,@r0
      00005C E4               [12] 1289 	clr	a
      00005D 08               [12] 1290 	inc	r0
      00005E 96               [12] 1291 	subb	a,@r0
      00005F 50 06            [24] 1292 	jnc	00103$
      000061 7B 80            [12] 1293 	mov	r3,#0x80
      000063 7C 00            [12] 1294 	mov	r4,#0x00
      000065 80 0A            [24] 1295 	sjmp	00104$
      000067                       1296 00103$:
      000067 E5 81            [12] 1297 	mov	a,sp
      000069 24 F9            [12] 1298 	add	a,#0xf9
      00006B F8               [12] 1299 	mov	r0,a
      00006C 86 03            [24] 1300 	mov	ar3,@r0
      00006E 08               [12] 1301 	inc	r0
      00006F 86 04            [24] 1302 	mov	ar4,@r0
      000071                       1303 00104$:
                                   1304 ;	../../core/net/packetbuf.c:99: memcpy(packetbufptr, from, l);
      000071 90r00rE3         [24] 1305 	mov	dptr,#_packetbufptr
      000074 E0               [24] 1306 	movx	a,@dptr
      000075 FA               [12] 1307 	mov	r2,a
      000076 A3               [24] 1308 	inc	dptr
      000077 E0               [24] 1309 	movx	a,@dptr
      000078 FE               [12] 1310 	mov	r6,a
      000079 A3               [24] 1311 	inc	dptr
      00007A E0               [24] 1312 	movx	a,@dptr
      00007B FF               [12] 1313 	mov	r7,a
      00007C C0 04            [24] 1314 	push	ar4
      00007E C0 03            [24] 1315 	push	ar3
      000080 C0 03            [24] 1316 	push	ar3
      000082 C0 04            [24] 1317 	push	ar4
      000084 E5 81            [12] 1318 	mov	a,sp
      000086 24 FA            [12] 1319 	add	a,#0xfa
      000088 F8               [12] 1320 	mov	r0,a
      000089 E6               [12] 1321 	mov	a,@r0
      00008A C0 E0            [24] 1322 	push	acc
      00008C 08               [12] 1323 	inc	r0
      00008D E6               [12] 1324 	mov	a,@r0
      00008E C0 E0            [24] 1325 	push	acc
      000090 08               [12] 1326 	inc	r0
      000091 E6               [12] 1327 	mov	a,@r0
      000092 C0 E0            [24] 1328 	push	acc
      000094 8A 82            [24] 1329 	mov	dpl,r2
      000096 8E 83            [24] 1330 	mov	dph,r6
      000098 8F F0            [24] 1331 	mov	b,r7
      00009A 78r00            [12] 1332 	mov	r0,#_memcpy
      00009C 79s00            [12] 1333 	mov	r1,#(_memcpy >> 8)
      00009E 7As00            [12] 1334 	mov	r2,#(_memcpy >> 16)
      0000A0 12r00r00         [24] 1335 	lcall	__sdcc_banked_call
      0000A3 E5 81            [12] 1336 	mov	a,sp
      0000A5 24 FB            [12] 1337 	add	a,#0xfb
      0000A7 F5 81            [12] 1338 	mov	sp,a
      0000A9 D0 03            [24] 1339 	pop	ar3
      0000AB D0 04            [24] 1340 	pop	ar4
                                   1341 ;	../../core/net/packetbuf.c:100: buflen = l;
      0000AD 90r00r2E         [24] 1342 	mov	dptr,#_buflen
      0000B0 EB               [12] 1343 	mov	a,r3
      0000B1 F0               [24] 1344 	movx	@dptr,a
      0000B2 EC               [12] 1345 	mov	a,r4
      0000B3 A3               [24] 1346 	inc	dptr
      0000B4 F0               [24] 1347 	movx	@dptr,a
                                   1348 ;	../../core/net/packetbuf.c:101: return l;
      0000B5 8B 82            [24] 1349 	mov	dpl,r3
      0000B7 8C 83            [24] 1350 	mov	dph,r4
      0000B9 15 81            [12] 1351 	dec	sp
      0000BB 15 81            [12] 1352 	dec	sp
      0000BD 15 81            [12] 1353 	dec	sp
      0000BF 02r00r00         [24] 1354 	ljmp	__sdcc_banked_ret
                                   1355 ;------------------------------------------------------------
                                   1356 ;Allocation info for local variables in function 'packetbuf_compact'
                                   1357 ;------------------------------------------------------------
                                   1358 ;i                         Allocated to stack - sp -1
                                   1359 ;len                       Allocated to registers r6 r7 
                                   1360 ;sloc0                     Allocated to stack - sp -6
                                   1361 ;sloc1                     Allocated to stack - sp -3
                                   1362 ;------------------------------------------------------------
                                   1363 ;	../../core/net/packetbuf.c:105: packetbuf_compact(void)
                                   1364 ;	-----------------------------------------
                                   1365 ;	 function packetbuf_compact
                                   1366 ;	-----------------------------------------
      0000C2                       1367 _packetbuf_compact:
      0000C2 E5 81            [12] 1368 	mov	a,sp
      0000C4 24 07            [12] 1369 	add	a,#0x07
      0000C6 F5 81            [12] 1370 	mov	sp,a
                                   1371 ;	../../core/net/packetbuf.c:109: if(bufptr > 0) {
      0000C8 90r00r30         [24] 1372 	mov	dptr,#_bufptr
      0000CB E0               [24] 1373 	movx	a,@dptr
      0000CC FE               [12] 1374 	mov	r6,a
      0000CD A3               [24] 1375 	inc	dptr
      0000CE E0               [24] 1376 	movx	a,@dptr
      0000CF FF               [12] 1377 	mov	r7,a
      0000D0 4E               [12] 1378 	orl	a,r6
      0000D1 70 03            [24] 1379 	jnz	00119$
      0000D3 02r01r88         [24] 1380 	ljmp	00107$
      0000D6                       1381 00119$:
                                   1382 ;	../../core/net/packetbuf.c:110: len = packetbuf_datalen() + PACKETBUF_HDR_SIZE;
      0000D6 78r2B            [12] 1383 	mov	r0,#_packetbuf_datalen
      0000D8 79s04            [12] 1384 	mov	r1,#(_packetbuf_datalen >> 8)
      0000DA 7As00            [12] 1385 	mov	r2,#(_packetbuf_datalen >> 16)
      0000DC 12r00r00         [24] 1386 	lcall	__sdcc_banked_call
      0000DF AE 82            [24] 1387 	mov	r6,dpl
      0000E1 AF 83            [24] 1388 	mov	r7,dph
      0000E3 74 30            [12] 1389 	mov	a,#0x30
      0000E5 2E               [12] 1390 	add	a,r6
      0000E6 FE               [12] 1391 	mov	r6,a
      0000E7 E4               [12] 1392 	clr	a
      0000E8 3F               [12] 1393 	addc	a,r7
      0000E9 FF               [12] 1394 	mov	r7,a
                                   1395 ;	../../core/net/packetbuf.c:111: for(i = PACKETBUF_HDR_SIZE; i < len; i++) {
      0000EA A8 81            [24] 1396 	mov	r0,sp
      0000EC 18               [12] 1397 	dec	r0
      0000ED 76 30            [12] 1398 	mov	@r0,#0x30
      0000EF 08               [12] 1399 	inc	r0
      0000F0 76 00            [12] 1400 	mov	@r0,#0x00
      0000F2                       1401 00105$:
      0000F2 A8 81            [24] 1402 	mov	r0,sp
      0000F4 18               [12] 1403 	dec	r0
      0000F5 C3               [12] 1404 	clr	c
      0000F6 E6               [12] 1405 	mov	a,@r0
      0000F7 9E               [12] 1406 	subb	a,r6
      0000F8 08               [12] 1407 	inc	r0
      0000F9 E6               [12] 1408 	mov	a,@r0
      0000FA 64 80            [12] 1409 	xrl	a,#0x80
      0000FC 8F F0            [24] 1410 	mov	b,r7
      0000FE 63 F0 80         [24] 1411 	xrl	b,#0x80
      000101 95 F0            [12] 1412 	subb	a,b
      000103 50 7B            [24] 1413 	jnc	00101$
                                   1414 ;	../../core/net/packetbuf.c:112: packetbuf[i] = packetbuf[bufptr + i];
      000105 C0 06            [24] 1415 	push	ar6
      000107 C0 07            [24] 1416 	push	ar7
      000109 90r00r00         [24] 1417 	mov	dptr,#_packetbuf
      00010C E0               [24] 1418 	movx	a,@dptr
      00010D FA               [12] 1419 	mov	r2,a
      00010E A3               [24] 1420 	inc	dptr
      00010F E0               [24] 1421 	movx	a,@dptr
      000110 FB               [12] 1422 	mov	r3,a
      000111 A3               [24] 1423 	inc	dptr
      000112 E0               [24] 1424 	movx	a,@dptr
      000113 FF               [12] 1425 	mov	r7,a
      000114 E5 81            [12] 1426 	mov	a,sp
      000116 24 FD            [12] 1427 	add	a,#0xfd
      000118 F8               [12] 1428 	mov	r0,a
      000119 E5 81            [12] 1429 	mov	a,sp
      00011B 24 F8            [12] 1430 	add	a,#0xf8
      00011D F9               [12] 1431 	mov	r1,a
      00011E E6               [12] 1432 	mov	a,@r0
      00011F 2A               [12] 1433 	add	a,r2
      000120 F7               [12] 1434 	mov	@r1,a
      000121 08               [12] 1435 	inc	r0
      000122 E6               [12] 1436 	mov	a,@r0
      000123 3B               [12] 1437 	addc	a,r3
      000124 09               [12] 1438 	inc	r1
      000125 F7               [12] 1439 	mov	@r1,a
      000126 09               [12] 1440 	inc	r1
      000127 A7 07            [24] 1441 	mov	@r1,ar7
      000129 90r00r30         [24] 1442 	mov	dptr,#_bufptr
      00012C E5 81            [12] 1443 	mov	a,sp
      00012E 24 FB            [12] 1444 	add	a,#0xfb
      000130 F8               [12] 1445 	mov	r0,a
      000131 E0               [24] 1446 	movx	a,@dptr
      000132 F6               [12] 1447 	mov	@r0,a
      000133 A3               [24] 1448 	inc	dptr
      000134 E0               [24] 1449 	movx	a,@dptr
      000135 08               [12] 1450 	inc	r0
      000136 F6               [12] 1451 	mov	@r0,a
      000137 E5 81            [12] 1452 	mov	a,sp
      000139 24 FD            [12] 1453 	add	a,#0xfd
      00013B F8               [12] 1454 	mov	r0,a
      00013C 86 04            [24] 1455 	mov	ar4,@r0
      00013E 08               [12] 1456 	inc	r0
      00013F 86 06            [24] 1457 	mov	ar6,@r0
      000141 E5 81            [12] 1458 	mov	a,sp
      000143 24 FB            [12] 1459 	add	a,#0xfb
      000145 F8               [12] 1460 	mov	r0,a
      000146 EC               [12] 1461 	mov	a,r4
      000147 26               [12] 1462 	add	a,@r0
      000148 FC               [12] 1463 	mov	r4,a
      000149 EE               [12] 1464 	mov	a,r6
      00014A 08               [12] 1465 	inc	r0
      00014B 36               [12] 1466 	addc	a,@r0
      00014C FE               [12] 1467 	mov	r6,a
      00014D EC               [12] 1468 	mov	a,r4
      00014E 2A               [12] 1469 	add	a,r2
      00014F FA               [12] 1470 	mov	r2,a
      000150 EE               [12] 1471 	mov	a,r6
      000151 3B               [12] 1472 	addc	a,r3
      000152 FB               [12] 1473 	mov	r3,a
      000153 8A 82            [24] 1474 	mov	dpl,r2
      000155 8B 83            [24] 1475 	mov	dph,r3
      000157 8F F0            [24] 1476 	mov	b,r7
      000159 12r00r00         [24] 1477 	lcall	__gptrget
      00015C FA               [12] 1478 	mov	r2,a
      00015D E5 81            [12] 1479 	mov	a,sp
      00015F 24 F8            [12] 1480 	add	a,#0xf8
      000161 F8               [12] 1481 	mov	r0,a
      000162 86 82            [24] 1482 	mov	dpl,@r0
      000164 08               [12] 1483 	inc	r0
      000165 86 83            [24] 1484 	mov	dph,@r0
      000167 08               [12] 1485 	inc	r0
      000168 86 F0            [24] 1486 	mov	b,@r0
      00016A EA               [12] 1487 	mov	a,r2
      00016B 12r00r00         [24] 1488 	lcall	__gptrput
                                   1489 ;	../../core/net/packetbuf.c:111: for(i = PACKETBUF_HDR_SIZE; i < len; i++) {
      00016E E5 81            [12] 1490 	mov	a,sp
      000170 24 FD            [12] 1491 	add	a,#0xfd
      000172 F8               [12] 1492 	mov	r0,a
      000173 06               [12] 1493 	inc	@r0
      000174 B6 00 02         [24] 1494 	cjne	@r0,#0x00,00121$
      000177 08               [12] 1495 	inc	r0
      000178 06               [12] 1496 	inc	@r0
      000179                       1497 00121$:
      000179 D0 07            [24] 1498 	pop	ar7
      00017B D0 06            [24] 1499 	pop	ar6
      00017D 02r00rF2         [24] 1500 	ljmp	00105$
      000180                       1501 00101$:
                                   1502 ;	../../core/net/packetbuf.c:115: bufptr = 0;
      000180 90r00r30         [24] 1503 	mov	dptr,#_bufptr
      000183 E4               [12] 1504 	clr	a
      000184 F0               [24] 1505 	movx	@dptr,a
      000185 E4               [12] 1506 	clr	a
      000186 A3               [24] 1507 	inc	dptr
      000187 F0               [24] 1508 	movx	@dptr,a
      000188                       1509 00107$:
      000188 E5 81            [12] 1510 	mov	a,sp
      00018A 24 F9            [12] 1511 	add	a,#0xF9
      00018C F5 81            [12] 1512 	mov	sp,a
      00018E 02r00r00         [24] 1513 	ljmp	__sdcc_banked_ret
                                   1514 ;------------------------------------------------------------
                                   1515 ;Allocation info for local variables in function 'packetbuf_copyto_hdr'
                                   1516 ;------------------------------------------------------------
                                   1517 ;to                        Allocated to stack - sp -4
                                   1518 ;sloc0                     Allocated to stack - sp -1
                                   1519 ;sloc1                     Allocated to stack - sp -1
                                   1520 ;------------------------------------------------------------
                                   1521 ;	../../core/net/packetbuf.c:120: packetbuf_copyto_hdr(uint8_t *to)
                                   1522 ;	-----------------------------------------
                                   1523 ;	 function packetbuf_copyto_hdr
                                   1524 ;	-----------------------------------------
      000191                       1525 _packetbuf_copyto_hdr:
      000191 C0 82            [24] 1526 	push	dpl
      000193 C0 83            [24] 1527 	push	dph
      000195 C0 F0            [24] 1528 	push	b
      000197 05 81            [12] 1529 	inc	sp
      000199 05 81            [12] 1530 	inc	sp
                                   1531 ;	../../core/net/packetbuf.c:132: memcpy(to, packetbuf + hdrptr, PACKETBUF_HDR_SIZE - hdrptr);
      00019B 90r00r32         [24] 1532 	mov	dptr,#_hdrptr
      00019E E0               [24] 1533 	movx	a,@dptr
      00019F FC               [12] 1534 	mov	r4,a
      0001A0 FA               [12] 1535 	mov	r2,a
      0001A1 7B 00            [12] 1536 	mov	r3,#0x00
      0001A3 A8 81            [24] 1537 	mov	r0,sp
      0001A5 18               [12] 1538 	dec	r0
      0001A6 74 30            [12] 1539 	mov	a,#0x30
      0001A8 C3               [12] 1540 	clr	c
      0001A9 9A               [12] 1541 	subb	a,r2
      0001AA F6               [12] 1542 	mov	@r0,a
      0001AB E4               [12] 1543 	clr	a
      0001AC 9B               [12] 1544 	subb	a,r3
      0001AD 08               [12] 1545 	inc	r0
      0001AE F6               [12] 1546 	mov	@r0,a
      0001AF 90r00r00         [24] 1547 	mov	dptr,#_packetbuf
      0001B2 E0               [24] 1548 	movx	a,@dptr
      0001B3 FF               [12] 1549 	mov	r7,a
      0001B4 A3               [24] 1550 	inc	dptr
      0001B5 E0               [24] 1551 	movx	a,@dptr
      0001B6 FE               [12] 1552 	mov	r6,a
      0001B7 A3               [24] 1553 	inc	dptr
      0001B8 E0               [24] 1554 	movx	a,@dptr
      0001B9 FD               [12] 1555 	mov	r5,a
      0001BA EC               [12] 1556 	mov	a,r4
      0001BB 2F               [12] 1557 	add	a,r7
      0001BC FC               [12] 1558 	mov	r4,a
      0001BD E4               [12] 1559 	clr	a
      0001BE 3E               [12] 1560 	addc	a,r6
      0001BF FF               [12] 1561 	mov	r7,a
      0001C0 E5 81            [12] 1562 	mov	a,sp
      0001C2 24 FC            [12] 1563 	add	a,#0xfc
      0001C4 F8               [12] 1564 	mov	r0,a
      0001C5 86 02            [24] 1565 	mov	ar2,@r0
      0001C7 08               [12] 1566 	inc	r0
      0001C8 86 03            [24] 1567 	mov	ar3,@r0
      0001CA 08               [12] 1568 	inc	r0
      0001CB 86 06            [24] 1569 	mov	ar6,@r0
      0001CD A8 81            [24] 1570 	mov	r0,sp
      0001CF 18               [12] 1571 	dec	r0
      0001D0 E6               [12] 1572 	mov	a,@r0
      0001D1 C0 E0            [24] 1573 	push	acc
      0001D3 08               [12] 1574 	inc	r0
      0001D4 E6               [12] 1575 	mov	a,@r0
      0001D5 C0 E0            [24] 1576 	push	acc
      0001D7 C0 04            [24] 1577 	push	ar4
      0001D9 C0 07            [24] 1578 	push	ar7
      0001DB C0 05            [24] 1579 	push	ar5
      0001DD 8A 82            [24] 1580 	mov	dpl,r2
      0001DF 8B 83            [24] 1581 	mov	dph,r3
      0001E1 8E F0            [24] 1582 	mov	b,r6
      0001E3 78r00            [12] 1583 	mov	r0,#_memcpy
      0001E5 79s00            [12] 1584 	mov	r1,#(_memcpy >> 8)
      0001E7 7As00            [12] 1585 	mov	r2,#(_memcpy >> 16)
      0001E9 12r00r00         [24] 1586 	lcall	__sdcc_banked_call
      0001EC E5 81            [12] 1587 	mov	a,sp
      0001EE 24 FB            [12] 1588 	add	a,#0xfb
      0001F0 F5 81            [12] 1589 	mov	sp,a
                                   1590 ;	../../core/net/packetbuf.c:133: return PACKETBUF_HDR_SIZE - hdrptr;
      0001F2 90r00r32         [24] 1591 	mov	dptr,#_hdrptr
      0001F5 E0               [24] 1592 	movx	a,@dptr
      0001F6 FE               [12] 1593 	mov	r6,a
      0001F7 7D 00            [12] 1594 	mov	r5,#0x00
      0001F9 74 30            [12] 1595 	mov	a,#0x30
      0001FB C3               [12] 1596 	clr	c
      0001FC 9E               [12] 1597 	subb	a,r6
      0001FD FE               [12] 1598 	mov	r6,a
      0001FE E4               [12] 1599 	clr	a
      0001FF 9D               [12] 1600 	subb	a,r5
      000200 FD               [12] 1601 	mov	r5,a
      000201 8E 82            [24] 1602 	mov	dpl,r6
      000203 8D 83            [24] 1603 	mov	dph,r5
      000205 E5 81            [12] 1604 	mov	a,sp
      000207 24 FB            [12] 1605 	add	a,#0xFB
      000209 F5 81            [12] 1606 	mov	sp,a
      00020B 02r00r00         [24] 1607 	ljmp	__sdcc_banked_ret
                                   1608 ;------------------------------------------------------------
                                   1609 ;Allocation info for local variables in function 'packetbuf_copyto'
                                   1610 ;------------------------------------------------------------
                                   1611 ;to                        Allocated to stack - sp -7
                                   1612 ;sloc0                     Allocated to stack - sp -4
                                   1613 ;sloc1                     Allocated to stack - sp -4
                                   1614 ;sloc2                     Allocated to stack - sp -2
                                   1615 ;------------------------------------------------------------
                                   1616 ;	../../core/net/packetbuf.c:137: packetbuf_copyto(void *to)
                                   1617 ;	-----------------------------------------
                                   1618 ;	 function packetbuf_copyto
                                   1619 ;	-----------------------------------------
      00020E                       1620 _packetbuf_copyto:
      00020E C0 82            [24] 1621 	push	dpl
      000210 C0 83            [24] 1622 	push	dph
      000212 C0 F0            [24] 1623 	push	b
      000214 E5 81            [12] 1624 	mov	a,sp
      000216 24 05            [12] 1625 	add	a,#0x05
      000218 F5 81            [12] 1626 	mov	sp,a
                                   1627 ;	../../core/net/packetbuf.c:158: if(PACKETBUF_HDR_SIZE - hdrptr + buflen > PACKETBUF_SIZE) {
      00021A 90r00r32         [24] 1628 	mov	dptr,#_hdrptr
      00021D E0               [24] 1629 	movx	a,@dptr
      00021E FC               [12] 1630 	mov	r4,a
      00021F FA               [12] 1631 	mov	r2,a
      000220 7B 00            [12] 1632 	mov	r3,#0x00
      000222 74 30            [12] 1633 	mov	a,#0x30
      000224 C3               [12] 1634 	clr	c
      000225 9A               [12] 1635 	subb	a,r2
      000226 FE               [12] 1636 	mov	r6,a
      000227 E4               [12] 1637 	clr	a
      000228 9B               [12] 1638 	subb	a,r3
      000229 FF               [12] 1639 	mov	r7,a
      00022A 90r00r2E         [24] 1640 	mov	dptr,#_buflen
      00022D E5 81            [12] 1641 	mov	a,sp
      00022F 24 FC            [12] 1642 	add	a,#0xfc
      000231 F8               [12] 1643 	mov	r0,a
      000232 E0               [24] 1644 	movx	a,@dptr
      000233 F6               [12] 1645 	mov	@r0,a
      000234 A3               [24] 1646 	inc	dptr
      000235 E0               [24] 1647 	movx	a,@dptr
      000236 08               [12] 1648 	inc	r0
      000237 F6               [12] 1649 	mov	@r0,a
      000238 8E 05            [24] 1650 	mov	ar5,r6
      00023A E5 81            [12] 1651 	mov	a,sp
      00023C 24 FC            [12] 1652 	add	a,#0xfc
      00023E F8               [12] 1653 	mov	r0,a
      00023F E6               [12] 1654 	mov	a,@r0
      000240 2D               [12] 1655 	add	a,r5
      000241 FD               [12] 1656 	mov	r5,a
      000242 08               [12] 1657 	inc	r0
      000243 E6               [12] 1658 	mov	a,@r0
      000244 3F               [12] 1659 	addc	a,r7
      000245 FF               [12] 1660 	mov	r7,a
      000246 C3               [12] 1661 	clr	c
      000247 74 80            [12] 1662 	mov	a,#0x80
      000249 9D               [12] 1663 	subb	a,r5
      00024A E4               [12] 1664 	clr	a
      00024B 9F               [12] 1665 	subb	a,r7
      00024C 50 06            [24] 1666 	jnc	00102$
                                   1667 ;	../../core/net/packetbuf.c:160: return 0;
      00024E 90 00 00         [24] 1668 	mov	dptr,#0x0000
      000251 02r03r26         [24] 1669 	ljmp	00103$
      000254                       1670 00102$:
                                   1671 ;	../../core/net/packetbuf.c:162: memcpy(to, packetbuf + hdrptr, PACKETBUF_HDR_SIZE - hdrptr);
      000254 74 30            [12] 1672 	mov	a,#0x30
      000256 C3               [12] 1673 	clr	c
      000257 9A               [12] 1674 	subb	a,r2
      000258 FA               [12] 1675 	mov	r2,a
      000259 E4               [12] 1676 	clr	a
      00025A 9B               [12] 1677 	subb	a,r3
      00025B FB               [12] 1678 	mov	r3,a
      00025C 90r00r00         [24] 1679 	mov	dptr,#_packetbuf
      00025F E0               [24] 1680 	movx	a,@dptr
      000260 FD               [12] 1681 	mov	r5,a
      000261 A3               [24] 1682 	inc	dptr
      000262 E0               [24] 1683 	movx	a,@dptr
      000263 FE               [12] 1684 	mov	r6,a
      000264 A3               [24] 1685 	inc	dptr
      000265 E0               [24] 1686 	movx	a,@dptr
      000266 FF               [12] 1687 	mov	r7,a
      000267 EC               [12] 1688 	mov	a,r4
      000268 2D               [12] 1689 	add	a,r5
      000269 FD               [12] 1690 	mov	r5,a
      00026A E4               [12] 1691 	clr	a
      00026B 3E               [12] 1692 	addc	a,r6
      00026C FE               [12] 1693 	mov	r6,a
      00026D C0 02            [24] 1694 	push	ar2
      00026F C0 03            [24] 1695 	push	ar3
      000271 C0 05            [24] 1696 	push	ar5
      000273 C0 06            [24] 1697 	push	ar6
      000275 C0 07            [24] 1698 	push	ar7
      000277 E5 81            [12] 1699 	mov	a,sp
      000279 24 F4            [12] 1700 	add	a,#0xf4
      00027B F8               [12] 1701 	mov	r0,a
      00027C 86 82            [24] 1702 	mov	dpl,@r0
      00027E 08               [12] 1703 	inc	r0
      00027F 86 83            [24] 1704 	mov	dph,@r0
      000281 08               [12] 1705 	inc	r0
      000282 86 F0            [24] 1706 	mov	b,@r0
      000284 78r00            [12] 1707 	mov	r0,#_memcpy
      000286 79s00            [12] 1708 	mov	r1,#(_memcpy >> 8)
      000288 7As00            [12] 1709 	mov	r2,#(_memcpy >> 16)
      00028A 12r00r00         [24] 1710 	lcall	__sdcc_banked_call
      00028D E5 81            [12] 1711 	mov	a,sp
      00028F 24 FB            [12] 1712 	add	a,#0xfb
      000291 F5 81            [12] 1713 	mov	sp,a
                                   1714 ;	../../core/net/packetbuf.c:163: memcpy((uint8_t *)to + PACKETBUF_HDR_SIZE - hdrptr, packetbufptr + bufptr,
      000293 90r00r30         [24] 1715 	mov	dptr,#_bufptr
      000296 E0               [24] 1716 	movx	a,@dptr
      000297 FE               [12] 1717 	mov	r6,a
      000298 A3               [24] 1718 	inc	dptr
      000299 E0               [24] 1719 	movx	a,@dptr
      00029A FF               [12] 1720 	mov	r7,a
      00029B 90r00rE3         [24] 1721 	mov	dptr,#_packetbufptr
      00029E E0               [24] 1722 	movx	a,@dptr
      00029F FB               [12] 1723 	mov	r3,a
      0002A0 A3               [24] 1724 	inc	dptr
      0002A1 E0               [24] 1725 	movx	a,@dptr
      0002A2 FC               [12] 1726 	mov	r4,a
      0002A3 A3               [24] 1727 	inc	dptr
      0002A4 E0               [24] 1728 	movx	a,@dptr
      0002A5 FD               [12] 1729 	mov	r5,a
      0002A6 EE               [12] 1730 	mov	a,r6
      0002A7 2B               [12] 1731 	add	a,r3
      0002A8 FE               [12] 1732 	mov	r6,a
      0002A9 EF               [12] 1733 	mov	a,r7
      0002AA 3C               [12] 1734 	addc	a,r4
      0002AB FF               [12] 1735 	mov	r7,a
      0002AC 8D 02            [24] 1736 	mov	ar2,r5
      0002AE E5 81            [12] 1737 	mov	a,sp
      0002B0 24 F9            [12] 1738 	add	a,#0xf9
      0002B2 F8               [12] 1739 	mov	r0,a
      0002B3 86 03            [24] 1740 	mov	ar3,@r0
      0002B5 08               [12] 1741 	inc	r0
      0002B6 86 04            [24] 1742 	mov	ar4,@r0
      0002B8 08               [12] 1743 	inc	r0
      0002B9 86 05            [24] 1744 	mov	ar5,@r0
      0002BB A8 81            [24] 1745 	mov	r0,sp
      0002BD 18               [12] 1746 	dec	r0
      0002BE 18               [12] 1747 	dec	r0
      0002BF 74 30            [12] 1748 	mov	a,#0x30
      0002C1 2B               [12] 1749 	add	a,r3
      0002C2 F6               [12] 1750 	mov	@r0,a
      0002C3 E4               [12] 1751 	clr	a
      0002C4 3C               [12] 1752 	addc	a,r4
      0002C5 08               [12] 1753 	inc	r0
      0002C6 F6               [12] 1754 	mov	@r0,a
      0002C7 08               [12] 1755 	inc	r0
      0002C8 A6 05            [24] 1756 	mov	@r0,ar5
      0002CA 90r00r32         [24] 1757 	mov	dptr,#_hdrptr
      0002CD E0               [24] 1758 	movx	a,@dptr
      0002CE FD               [12] 1759 	mov	r5,a
      0002CF 7C 00            [12] 1760 	mov	r4,#0x00
      0002D1 A8 81            [24] 1761 	mov	r0,sp
      0002D3 18               [12] 1762 	dec	r0
      0002D4 18               [12] 1763 	dec	r0
      0002D5 E6               [12] 1764 	mov	a,@r0
      0002D6 C3               [12] 1765 	clr	c
      0002D7 9D               [12] 1766 	subb	a,r5
      0002D8 FD               [12] 1767 	mov	r5,a
      0002D9 08               [12] 1768 	inc	r0
      0002DA E6               [12] 1769 	mov	a,@r0
      0002DB 9C               [12] 1770 	subb	a,r4
      0002DC FC               [12] 1771 	mov	r4,a
      0002DD 08               [12] 1772 	inc	r0
      0002DE 86 03            [24] 1773 	mov	ar3,@r0
      0002E0 90r00r2E         [24] 1774 	mov	dptr,#_buflen
      0002E3 E0               [24] 1775 	movx	a,@dptr
      0002E4 C0 E0            [24] 1776 	push	acc
      0002E6 A3               [24] 1777 	inc	dptr
      0002E7 E0               [24] 1778 	movx	a,@dptr
      0002E8 C0 E0            [24] 1779 	push	acc
      0002EA C0 06            [24] 1780 	push	ar6
      0002EC C0 07            [24] 1781 	push	ar7
      0002EE C0 02            [24] 1782 	push	ar2
      0002F0 8D 82            [24] 1783 	mov	dpl,r5
      0002F2 8C 83            [24] 1784 	mov	dph,r4
      0002F4 8B F0            [24] 1785 	mov	b,r3
      0002F6 78r00            [12] 1786 	mov	r0,#_memcpy
      0002F8 79s00            [12] 1787 	mov	r1,#(_memcpy >> 8)
      0002FA 7As00            [12] 1788 	mov	r2,#(_memcpy >> 16)
      0002FC 12r00r00         [24] 1789 	lcall	__sdcc_banked_call
      0002FF E5 81            [12] 1790 	mov	a,sp
      000301 24 FB            [12] 1791 	add	a,#0xfb
      000303 F5 81            [12] 1792 	mov	sp,a
                                   1793 ;	../../core/net/packetbuf.c:165: return PACKETBUF_HDR_SIZE - hdrptr + buflen;
      000305 90r00r32         [24] 1794 	mov	dptr,#_hdrptr
      000308 E0               [24] 1795 	movx	a,@dptr
      000309 FF               [12] 1796 	mov	r7,a
      00030A 7E 00            [12] 1797 	mov	r6,#0x00
      00030C 74 30            [12] 1798 	mov	a,#0x30
      00030E C3               [12] 1799 	clr	c
      00030F 9F               [12] 1800 	subb	a,r7
      000310 FF               [12] 1801 	mov	r7,a
      000311 E4               [12] 1802 	clr	a
      000312 9E               [12] 1803 	subb	a,r6
      000313 FE               [12] 1804 	mov	r6,a
      000314 90r00r2E         [24] 1805 	mov	dptr,#_buflen
      000317 E0               [24] 1806 	movx	a,@dptr
      000318 FC               [12] 1807 	mov	r4,a
      000319 A3               [24] 1808 	inc	dptr
      00031A E0               [24] 1809 	movx	a,@dptr
      00031B FD               [12] 1810 	mov	r5,a
      00031C EC               [12] 1811 	mov	a,r4
      00031D 2F               [12] 1812 	add	a,r7
      00031E FC               [12] 1813 	mov	r4,a
      00031F ED               [12] 1814 	mov	a,r5
      000320 3E               [12] 1815 	addc	a,r6
      000321 FD               [12] 1816 	mov	r5,a
      000322 8C 82            [24] 1817 	mov	dpl,r4
      000324 8D 83            [24] 1818 	mov	dph,r5
      000326                       1819 00103$:
      000326 E5 81            [12] 1820 	mov	a,sp
      000328 24 F8            [12] 1821 	add	a,#0xF8
      00032A F5 81            [12] 1822 	mov	sp,a
      00032C 02r00r00         [24] 1823 	ljmp	__sdcc_banked_ret
                                   1824 ;------------------------------------------------------------
                                   1825 ;Allocation info for local variables in function 'packetbuf_hdralloc'
                                   1826 ;------------------------------------------------------------
                                   1827 ;size                      Allocated to registers r6 r7 
                                   1828 ;------------------------------------------------------------
                                   1829 ;	../../core/net/packetbuf.c:169: packetbuf_hdralloc(int size)
                                   1830 ;	-----------------------------------------
                                   1831 ;	 function packetbuf_hdralloc
                                   1832 ;	-----------------------------------------
      00032F                       1833 _packetbuf_hdralloc:
      00032F AE 82            [24] 1834 	mov	r6,dpl
      000331 AF 83            [24] 1835 	mov	r7,dph
                                   1836 ;	../../core/net/packetbuf.c:171: if(hdrptr >= size && packetbuf_totlen() + size <= PACKETBUF_SIZE) {
      000333 90r00r32         [24] 1837 	mov	dptr,#_hdrptr
      000336 E0               [24] 1838 	movx	a,@dptr
      000337 FD               [12] 1839 	mov	r5,a
      000338 7C 00            [12] 1840 	mov	r4,#0x00
      00033A C3               [12] 1841 	clr	c
      00033B ED               [12] 1842 	mov	a,r5
      00033C 9E               [12] 1843 	subb	a,r6
      00033D EC               [12] 1844 	mov	a,r4
      00033E 64 80            [12] 1845 	xrl	a,#0x80
      000340 8F F0            [24] 1846 	mov	b,r7
      000342 63 F0 80         [24] 1847 	xrl	b,#0x80
      000345 95 F0            [12] 1848 	subb	a,b
      000347 40 37            [24] 1849 	jc	00102$
      000349 C0 07            [24] 1850 	push	ar7
      00034B C0 06            [24] 1851 	push	ar6
      00034D 78r57            [12] 1852 	mov	r0,#_packetbuf_totlen
      00034F 79s04            [12] 1853 	mov	r1,#(_packetbuf_totlen >> 8)
      000351 7As00            [12] 1854 	mov	r2,#(_packetbuf_totlen >> 16)
      000353 12r00r00         [24] 1855 	lcall	__sdcc_banked_call
      000356 AC 82            [24] 1856 	mov	r4,dpl
      000358 AD 83            [24] 1857 	mov	r5,dph
      00035A D0 06            [24] 1858 	pop	ar6
      00035C D0 07            [24] 1859 	pop	ar7
      00035E 8E 02            [24] 1860 	mov	ar2,r6
      000360 8F 03            [24] 1861 	mov	ar3,r7
      000362 EA               [12] 1862 	mov	a,r2
      000363 2C               [12] 1863 	add	a,r4
      000364 FC               [12] 1864 	mov	r4,a
      000365 EB               [12] 1865 	mov	a,r3
      000366 3D               [12] 1866 	addc	a,r5
      000367 FD               [12] 1867 	mov	r5,a
      000368 C3               [12] 1868 	clr	c
      000369 74 80            [12] 1869 	mov	a,#0x80
      00036B 9C               [12] 1870 	subb	a,r4
      00036C E4               [12] 1871 	clr	a
      00036D 9D               [12] 1872 	subb	a,r5
      00036E 40 10            [24] 1873 	jc	00102$
                                   1874 ;	../../core/net/packetbuf.c:172: hdrptr -= size;
      000370 90r00r32         [24] 1875 	mov	dptr,#_hdrptr
      000373 E0               [24] 1876 	movx	a,@dptr
      000374 FF               [12] 1877 	mov	r7,a
      000375 90r00r32         [24] 1878 	mov	dptr,#_hdrptr
      000378 C3               [12] 1879 	clr	c
      000379 9E               [12] 1880 	subb	a,r6
      00037A F0               [24] 1881 	movx	@dptr,a
                                   1882 ;	../../core/net/packetbuf.c:173: return 1;
      00037B 90 00 01         [24] 1883 	mov	dptr,#0x0001
      00037E 80 03            [24] 1884 	sjmp	00104$
      000380                       1885 00102$:
                                   1886 ;	../../core/net/packetbuf.c:175: return 0;
      000380 90 00 00         [24] 1887 	mov	dptr,#0x0000
      000383                       1888 00104$:
      000383 02r00r00         [24] 1889 	ljmp	__sdcc_banked_ret
                                   1890 ;------------------------------------------------------------
                                   1891 ;Allocation info for local variables in function 'packetbuf_hdr_remove'
                                   1892 ;------------------------------------------------------------
                                   1893 ;size                      Allocated to registers r6 r7 
                                   1894 ;------------------------------------------------------------
                                   1895 ;	../../core/net/packetbuf.c:179: packetbuf_hdr_remove(int size)
                                   1896 ;	-----------------------------------------
                                   1897 ;	 function packetbuf_hdr_remove
                                   1898 ;	-----------------------------------------
      000386                       1899 _packetbuf_hdr_remove:
      000386 AE 82            [24] 1900 	mov	r6,dpl
                                   1901 ;	../../core/net/packetbuf.c:181: hdrptr += size;
      000388 90r00r32         [24] 1902 	mov	dptr,#_hdrptr
      00038B E0               [24] 1903 	movx	a,@dptr
      00038C FF               [12] 1904 	mov	r7,a
      00038D 90r00r32         [24] 1905 	mov	dptr,#_hdrptr
      000390 EE               [12] 1906 	mov	a,r6
      000391 2F               [12] 1907 	add	a,r7
      000392 F0               [24] 1908 	movx	@dptr,a
      000393 02r00r00         [24] 1909 	ljmp	__sdcc_banked_ret
                                   1910 ;------------------------------------------------------------
                                   1911 ;Allocation info for local variables in function 'packetbuf_hdrreduce'
                                   1912 ;------------------------------------------------------------
                                   1913 ;size                      Allocated to registers r6 r7 
                                   1914 ;------------------------------------------------------------
                                   1915 ;	../../core/net/packetbuf.c:185: packetbuf_hdrreduce(int size)
                                   1916 ;	-----------------------------------------
                                   1917 ;	 function packetbuf_hdrreduce
                                   1918 ;	-----------------------------------------
      000396                       1919 _packetbuf_hdrreduce:
      000396 AE 82            [24] 1920 	mov	r6,dpl
      000398 AF 83            [24] 1921 	mov	r7,dph
                                   1922 ;	../../core/net/packetbuf.c:187: if(buflen < size) {
      00039A 90r00r2E         [24] 1923 	mov	dptr,#_buflen
      00039D E0               [24] 1924 	movx	a,@dptr
      00039E FC               [12] 1925 	mov	r4,a
      00039F A3               [24] 1926 	inc	dptr
      0003A0 E0               [24] 1927 	movx	a,@dptr
      0003A1 FD               [12] 1928 	mov	r5,a
      0003A2 C3               [12] 1929 	clr	c
      0003A3 EC               [12] 1930 	mov	a,r4
      0003A4 9E               [12] 1931 	subb	a,r6
      0003A5 ED               [12] 1932 	mov	a,r5
      0003A6 9F               [12] 1933 	subb	a,r7
      0003A7 50 05            [24] 1934 	jnc	00102$
                                   1935 ;	../../core/net/packetbuf.c:188: return 0;
      0003A9 90 00 00         [24] 1936 	mov	dptr,#0x0000
      0003AC 80 20            [24] 1937 	sjmp	00103$
      0003AE                       1938 00102$:
                                   1939 ;	../../core/net/packetbuf.c:191: bufptr += size;
      0003AE 90r00r30         [24] 1940 	mov	dptr,#_bufptr
      0003B1 E0               [24] 1941 	movx	a,@dptr
      0003B2 FA               [12] 1942 	mov	r2,a
      0003B3 A3               [24] 1943 	inc	dptr
      0003B4 E0               [24] 1944 	movx	a,@dptr
      0003B5 FB               [12] 1945 	mov	r3,a
      0003B6 90r00r30         [24] 1946 	mov	dptr,#_bufptr
      0003B9 EE               [12] 1947 	mov	a,r6
      0003BA 2A               [12] 1948 	add	a,r2
      0003BB F0               [24] 1949 	movx	@dptr,a
      0003BC EF               [12] 1950 	mov	a,r7
      0003BD 3B               [12] 1951 	addc	a,r3
      0003BE A3               [24] 1952 	inc	dptr
      0003BF F0               [24] 1953 	movx	@dptr,a
                                   1954 ;	../../core/net/packetbuf.c:192: buflen -= size;
      0003C0 90r00r2E         [24] 1955 	mov	dptr,#_buflen
      0003C3 EC               [12] 1956 	mov	a,r4
      0003C4 C3               [12] 1957 	clr	c
      0003C5 9E               [12] 1958 	subb	a,r6
      0003C6 F0               [24] 1959 	movx	@dptr,a
      0003C7 ED               [12] 1960 	mov	a,r5
      0003C8 9F               [12] 1961 	subb	a,r7
      0003C9 A3               [24] 1962 	inc	dptr
      0003CA F0               [24] 1963 	movx	@dptr,a
                                   1964 ;	../../core/net/packetbuf.c:193: return 1;
      0003CB 90 00 01         [24] 1965 	mov	dptr,#0x0001
      0003CE                       1966 00103$:
      0003CE 02r00r00         [24] 1967 	ljmp	__sdcc_banked_ret
                                   1968 ;------------------------------------------------------------
                                   1969 ;Allocation info for local variables in function 'packetbuf_set_datalen'
                                   1970 ;------------------------------------------------------------
                                   1971 ;len                       Allocated to registers 
                                   1972 ;------------------------------------------------------------
                                   1973 ;	../../core/net/packetbuf.c:197: packetbuf_set_datalen(uint16_t len)
                                   1974 ;	-----------------------------------------
                                   1975 ;	 function packetbuf_set_datalen
                                   1976 ;	-----------------------------------------
      0003D1                       1977 _packetbuf_set_datalen:
      0003D1 AF 83            [24] 1978 	mov	r7,dph
      0003D3 E5 82            [12] 1979 	mov	a,dpl
      0003D5 90r00r2E         [24] 1980 	mov	dptr,#_buflen
      0003D8 F0               [24] 1981 	movx	@dptr,a
      0003D9 EF               [12] 1982 	mov	a,r7
      0003DA A3               [24] 1983 	inc	dptr
      0003DB F0               [24] 1984 	movx	@dptr,a
                                   1985 ;	../../core/net/packetbuf.c:200: buflen = len;
      0003DC 02r00r00         [24] 1986 	ljmp	__sdcc_banked_ret
                                   1987 ;------------------------------------------------------------
                                   1988 ;Allocation info for local variables in function 'packetbuf_dataptr'
                                   1989 ;------------------------------------------------------------
                                   1990 ;	../../core/net/packetbuf.c:204: packetbuf_dataptr(void)
                                   1991 ;	-----------------------------------------
                                   1992 ;	 function packetbuf_dataptr
                                   1993 ;	-----------------------------------------
      0003DF                       1994 _packetbuf_dataptr:
                                   1995 ;	../../core/net/packetbuf.c:206: return (void *)(&packetbuf[bufptr + PACKETBUF_HDR_SIZE]);
      0003DF 90r00r30         [24] 1996 	mov	dptr,#_bufptr
      0003E2 E0               [24] 1997 	movx	a,@dptr
      0003E3 FE               [12] 1998 	mov	r6,a
      0003E4 A3               [24] 1999 	inc	dptr
      0003E5 E0               [24] 2000 	movx	a,@dptr
      0003E6 FF               [12] 2001 	mov	r7,a
      0003E7 74 30            [12] 2002 	mov	a,#0x30
      0003E9 2E               [12] 2003 	add	a,r6
      0003EA FE               [12] 2004 	mov	r6,a
      0003EB E4               [12] 2005 	clr	a
      0003EC 3F               [12] 2006 	addc	a,r7
      0003ED FF               [12] 2007 	mov	r7,a
      0003EE 90r00r00         [24] 2008 	mov	dptr,#_packetbuf
      0003F1 E0               [24] 2009 	movx	a,@dptr
      0003F2 FB               [12] 2010 	mov	r3,a
      0003F3 A3               [24] 2011 	inc	dptr
      0003F4 E0               [24] 2012 	movx	a,@dptr
      0003F5 FC               [12] 2013 	mov	r4,a
      0003F6 A3               [24] 2014 	inc	dptr
      0003F7 E0               [24] 2015 	movx	a,@dptr
      0003F8 FD               [12] 2016 	mov	r5,a
      0003F9 EE               [12] 2017 	mov	a,r6
      0003FA 2B               [12] 2018 	add	a,r3
      0003FB FE               [12] 2019 	mov	r6,a
      0003FC EF               [12] 2020 	mov	a,r7
      0003FD 3C               [12] 2021 	addc	a,r4
      0003FE FF               [12] 2022 	mov	r7,a
      0003FF 8D 02            [24] 2023 	mov	ar2,r5
      000401 7D 00            [12] 2024 	mov	r5,#0x00
      000403 8E 82            [24] 2025 	mov	dpl,r6
      000405 8F 83            [24] 2026 	mov	dph,r7
      000407 8D F0            [24] 2027 	mov	b,r5
      000409 02r00r00         [24] 2028 	ljmp	__sdcc_banked_ret
                                   2029 ;------------------------------------------------------------
                                   2030 ;Allocation info for local variables in function 'packetbuf_hdrptr'
                                   2031 ;------------------------------------------------------------
                                   2032 ;	../../core/net/packetbuf.c:210: packetbuf_hdrptr(void)
                                   2033 ;	-----------------------------------------
                                   2034 ;	 function packetbuf_hdrptr
                                   2035 ;	-----------------------------------------
      00040C                       2036 _packetbuf_hdrptr:
                                   2037 ;	../../core/net/packetbuf.c:212: return (void *)(&packetbuf[hdrptr]);
      00040C 90r00r00         [24] 2038 	mov	dptr,#_packetbuf
      00040F E0               [24] 2039 	movx	a,@dptr
      000410 FD               [12] 2040 	mov	r5,a
      000411 A3               [24] 2041 	inc	dptr
      000412 E0               [24] 2042 	movx	a,@dptr
      000413 FE               [12] 2043 	mov	r6,a
      000414 A3               [24] 2044 	inc	dptr
      000415 E0               [24] 2045 	movx	a,@dptr
      000416 90r00r32         [24] 2046 	mov	dptr,#_hdrptr
      000419 E0               [24] 2047 	movx	a,@dptr
      00041A FC               [12] 2048 	mov	r4,a
      00041B 2D               [12] 2049 	add	a,r5
      00041C FD               [12] 2050 	mov	r5,a
      00041D E4               [12] 2051 	clr	a
      00041E 3E               [12] 2052 	addc	a,r6
      00041F FE               [12] 2053 	mov	r6,a
      000420 7F 00            [12] 2054 	mov	r7,#0x00
      000422 8D 82            [24] 2055 	mov	dpl,r5
      000424 8E 83            [24] 2056 	mov	dph,r6
      000426 8F F0            [24] 2057 	mov	b,r7
      000428 02r00r00         [24] 2058 	ljmp	__sdcc_banked_ret
                                   2059 ;------------------------------------------------------------
                                   2060 ;Allocation info for local variables in function 'packetbuf_datalen'
                                   2061 ;------------------------------------------------------------
                                   2062 ;	../../core/net/packetbuf.c:216: packetbuf_datalen(void)
                                   2063 ;	-----------------------------------------
                                   2064 ;	 function packetbuf_datalen
                                   2065 ;	-----------------------------------------
      00042B                       2066 _packetbuf_datalen:
                                   2067 ;	../../core/net/packetbuf.c:218: return buflen;
      00042B 90r00r2E         [24] 2068 	mov	dptr,#_buflen
      00042E E0               [24] 2069 	movx	a,@dptr
      00042F FE               [12] 2070 	mov	r6,a
      000430 A3               [24] 2071 	inc	dptr
      000431 E0               [24] 2072 	movx	a,@dptr
      000432 FF               [12] 2073 	mov	r7,a
      000433 8E 82            [24] 2074 	mov	dpl,r6
      000435 8F 83            [24] 2075 	mov	dph,r7
      000437 02r00r00         [24] 2076 	ljmp	__sdcc_banked_ret
                                   2077 ;------------------------------------------------------------
                                   2078 ;Allocation info for local variables in function 'packetbuf_hdrlen'
                                   2079 ;------------------------------------------------------------
                                   2080 ;hdrlen                    Allocated to registers r7 
                                   2081 ;------------------------------------------------------------
                                   2082 ;	../../core/net/packetbuf.c:222: packetbuf_hdrlen(void)
                                   2083 ;	-----------------------------------------
                                   2084 ;	 function packetbuf_hdrlen
                                   2085 ;	-----------------------------------------
      00043A                       2086 _packetbuf_hdrlen:
                                   2087 ;	../../core/net/packetbuf.c:226: hdrlen = PACKETBUF_HDR_SIZE - hdrptr;
      00043A 90r00r32         [24] 2088 	mov	dptr,#_hdrptr
      00043D E0               [24] 2089 	movx	a,@dptr
      00043E FF               [12] 2090 	mov	r7,a
      00043F 74 30            [12] 2091 	mov	a,#0x30
      000441 C3               [12] 2092 	clr	c
      000442 9F               [12] 2093 	subb	a,r7
                                   2094 ;	../../core/net/packetbuf.c:227: if(hdrlen) {
      000443 FF               [12] 2095 	mov	r7,a
      000444 60 04            [24] 2096 	jz	00102$
                                   2097 ;	../../core/net/packetbuf.c:229: return hdrlen;
      000446 8F 82            [24] 2098 	mov	dpl,r7
      000448 80 0A            [24] 2099 	sjmp	00104$
      00044A                       2100 00102$:
                                   2101 ;	../../core/net/packetbuf.c:232: return bufptr;
      00044A 90r00r30         [24] 2102 	mov	dptr,#_bufptr
      00044D E0               [24] 2103 	movx	a,@dptr
      00044E FE               [12] 2104 	mov	r6,a
      00044F A3               [24] 2105 	inc	dptr
      000450 E0               [24] 2106 	movx	a,@dptr
      000451 FF               [12] 2107 	mov	r7,a
      000452 8E 82            [24] 2108 	mov	dpl,r6
      000454                       2109 00104$:
      000454 02r00r00         [24] 2110 	ljmp	__sdcc_banked_ret
                                   2111 ;------------------------------------------------------------
                                   2112 ;Allocation info for local variables in function 'packetbuf_totlen'
                                   2113 ;------------------------------------------------------------
                                   2114 ;	../../core/net/packetbuf.c:237: packetbuf_totlen(void)
                                   2115 ;	-----------------------------------------
                                   2116 ;	 function packetbuf_totlen
                                   2117 ;	-----------------------------------------
      000457                       2118 _packetbuf_totlen:
                                   2119 ;	../../core/net/packetbuf.c:239: return packetbuf_hdrlen() + packetbuf_datalen();
      000457 78r3A            [12] 2120 	mov	r0,#_packetbuf_hdrlen
      000459 79s04            [12] 2121 	mov	r1,#(_packetbuf_hdrlen >> 8)
      00045B 7As00            [12] 2122 	mov	r2,#(_packetbuf_hdrlen >> 16)
      00045D 12r00r00         [24] 2123 	lcall	__sdcc_banked_call
      000460 AF 82            [24] 2124 	mov	r7,dpl
      000462 7E 00            [12] 2125 	mov	r6,#0x00
      000464 C0 07            [24] 2126 	push	ar7
      000466 C0 06            [24] 2127 	push	ar6
      000468 78r2B            [12] 2128 	mov	r0,#_packetbuf_datalen
      00046A 79s04            [12] 2129 	mov	r1,#(_packetbuf_datalen >> 8)
      00046C 7As00            [12] 2130 	mov	r2,#(_packetbuf_datalen >> 16)
      00046E 12r00r00         [24] 2131 	lcall	__sdcc_banked_call
      000471 AC 82            [24] 2132 	mov	r4,dpl
      000473 AD 83            [24] 2133 	mov	r5,dph
      000475 D0 06            [24] 2134 	pop	ar6
      000477 D0 07            [24] 2135 	pop	ar7
      000479 EC               [12] 2136 	mov	a,r4
      00047A 2F               [12] 2137 	add	a,r7
      00047B FC               [12] 2138 	mov	r4,a
      00047C ED               [12] 2139 	mov	a,r5
      00047D 3E               [12] 2140 	addc	a,r6
      00047E FD               [12] 2141 	mov	r5,a
      00047F 8C 82            [24] 2142 	mov	dpl,r4
      000481 8D 83            [24] 2143 	mov	dph,r5
      000483 02r00r00         [24] 2144 	ljmp	__sdcc_banked_ret
                                   2145 ;------------------------------------------------------------
                                   2146 ;Allocation info for local variables in function 'packetbuf_attr_clear'
                                   2147 ;------------------------------------------------------------
                                   2148 ;i                         Allocated to registers r6 r7 
                                   2149 ;------------------------------------------------------------
                                   2150 ;	../../core/net/packetbuf.c:243: packetbuf_attr_clear(void)
                                   2151 ;	-----------------------------------------
                                   2152 ;	 function packetbuf_attr_clear
                                   2153 ;	-----------------------------------------
      000486                       2154 _packetbuf_attr_clear:
                                   2155 ;	../../core/net/packetbuf.c:246: for(i = 0; i < PACKETBUF_NUM_ATTRS; ++i) {
      000486 7E 00            [12] 2156 	mov	r6,#0x00
      000488 7F 00            [12] 2157 	mov	r7,#0x00
      00048A                       2158 00103$:
                                   2159 ;	../../core/net/packetbuf.c:247: packetbuf_attrs[i].val = 0;
      00048A 8E 04            [24] 2160 	mov	ar4,r6
      00048C EF               [12] 2161 	mov	a,r7
      00048D CC               [12] 2162 	xch	a,r4
      00048E 25 E0            [12] 2163 	add	a,acc
      000490 CC               [12] 2164 	xch	a,r4
      000491 33               [12] 2165 	rlc	a
      000492 FD               [12] 2166 	mov	r5,a
      000493 EC               [12] 2167 	mov	a,r4
      000494 24r00            [12] 2168 	add	a,#_packetbuf_attrs
      000496 F5 82            [12] 2169 	mov	dpl,a
      000498 ED               [12] 2170 	mov	a,r5
      000499 34s00            [12] 2171 	addc	a,#(_packetbuf_attrs >> 8)
      00049B F5 83            [12] 2172 	mov	dph,a
      00049D E4               [12] 2173 	clr	a
      00049E F0               [24] 2174 	movx	@dptr,a
      00049F E4               [12] 2175 	clr	a
      0004A0 A3               [24] 2176 	inc	dptr
      0004A1 F0               [24] 2177 	movx	@dptr,a
                                   2178 ;	../../core/net/packetbuf.c:246: for(i = 0; i < PACKETBUF_NUM_ATTRS; ++i) {
      0004A2 0E               [12] 2179 	inc	r6
      0004A3 BE 00 01         [24] 2180 	cjne	r6,#0x00,00120$
      0004A6 0F               [12] 2181 	inc	r7
      0004A7                       2182 00120$:
      0004A7 C3               [12] 2183 	clr	c
      0004A8 EE               [12] 2184 	mov	a,r6
      0004A9 94 0F            [12] 2185 	subb	a,#0x0F
      0004AB EF               [12] 2186 	mov	a,r7
      0004AC 64 80            [12] 2187 	xrl	a,#0x80
      0004AE 94 80            [12] 2188 	subb	a,#0x80
      0004B0 40 D8            [24] 2189 	jc	00103$
                                   2190 ;	../../core/net/packetbuf.c:249: for(i = 0; i < PACKETBUF_NUM_ADDRS; ++i) {
      0004B2 7E 00            [12] 2191 	mov	r6,#0x00
      0004B4 7F 00            [12] 2192 	mov	r7,#0x00
      0004B6                       2193 00105$:
                                   2194 ;	../../core/net/packetbuf.c:250: linkaddr_copy(&packetbuf_addrs[i].addr, &linkaddr_null);
      0004B6 8E 04            [24] 2195 	mov	ar4,r6
      0004B8 EF               [12] 2196 	mov	a,r7
      0004B9 C4               [12] 2197 	swap	a
      0004BA 03               [12] 2198 	rr	a
      0004BB 54 F8            [12] 2199 	anl	a,#0xF8
      0004BD CC               [12] 2200 	xch	a,r4
      0004BE C4               [12] 2201 	swap	a
      0004BF 03               [12] 2202 	rr	a
      0004C0 CC               [12] 2203 	xch	a,r4
      0004C1 6C               [12] 2204 	xrl	a,r4
      0004C2 CC               [12] 2205 	xch	a,r4
      0004C3 54 F8            [12] 2206 	anl	a,#0xF8
      0004C5 CC               [12] 2207 	xch	a,r4
      0004C6 6C               [12] 2208 	xrl	a,r4
      0004C7 FD               [12] 2209 	mov	r5,a
      0004C8 EC               [12] 2210 	mov	a,r4
      0004C9 24r1E            [12] 2211 	add	a,#_packetbuf_addrs
      0004CB FC               [12] 2212 	mov	r4,a
      0004CC ED               [12] 2213 	mov	a,r5
      0004CD 34s00            [12] 2214 	addc	a,#(_packetbuf_addrs >> 8)
      0004CF FD               [12] 2215 	mov	r5,a
      0004D0 7B 00            [12] 2216 	mov	r3,#0x00
      0004D2 C0 07            [24] 2217 	push	ar7
      0004D4 C0 06            [24] 2218 	push	ar6
      0004D6 74r00            [12] 2219 	mov	a,#_linkaddr_null
      0004D8 C0 E0            [24] 2220 	push	acc
      0004DA 74s00            [12] 2221 	mov	a,#(_linkaddr_null >> 8)
      0004DC C0 E0            [24] 2222 	push	acc
      0004DE 74 80            [12] 2223 	mov	a,#0x80
      0004E0 C0 E0            [24] 2224 	push	acc
      0004E2 8C 82            [24] 2225 	mov	dpl,r4
      0004E4 8D 83            [24] 2226 	mov	dph,r5
      0004E6 8B F0            [24] 2227 	mov	b,r3
      0004E8 78r00            [12] 2228 	mov	r0,#_linkaddr_copy
      0004EA 79s00            [12] 2229 	mov	r1,#(_linkaddr_copy >> 8)
      0004EC 7As00            [12] 2230 	mov	r2,#(_linkaddr_copy >> 16)
      0004EE 12r00r00         [24] 2231 	lcall	__sdcc_banked_call
      0004F1 15 81            [12] 2232 	dec	sp
      0004F3 15 81            [12] 2233 	dec	sp
      0004F5 15 81            [12] 2234 	dec	sp
      0004F7 D0 06            [24] 2235 	pop	ar6
      0004F9 D0 07            [24] 2236 	pop	ar7
                                   2237 ;	../../core/net/packetbuf.c:249: for(i = 0; i < PACKETBUF_NUM_ADDRS; ++i) {
      0004FB 0E               [12] 2238 	inc	r6
      0004FC BE 00 01         [24] 2239 	cjne	r6,#0x00,00122$
      0004FF 0F               [12] 2240 	inc	r7
      000500                       2241 00122$:
      000500 C3               [12] 2242 	clr	c
      000501 EE               [12] 2243 	mov	a,r6
      000502 94 02            [12] 2244 	subb	a,#0x02
      000504 EF               [12] 2245 	mov	a,r7
      000505 64 80            [12] 2246 	xrl	a,#0x80
      000507 94 80            [12] 2247 	subb	a,#0x80
      000509 40 AB            [24] 2248 	jc	00105$
      00050B 02r00r00         [24] 2249 	ljmp	__sdcc_banked_ret
                                   2250 ;------------------------------------------------------------
                                   2251 ;Allocation info for local variables in function 'packetbuf_attr_copyto'
                                   2252 ;------------------------------------------------------------
                                   2253 ;addrs                     Allocated to stack - sp -5
                                   2254 ;attrs                     Allocated to registers r5 r6 r7 
                                   2255 ;------------------------------------------------------------
                                   2256 ;	../../core/net/packetbuf.c:255: packetbuf_attr_copyto(struct packetbuf_attr *attrs,
                                   2257 ;	-----------------------------------------
                                   2258 ;	 function packetbuf_attr_copyto
                                   2259 ;	-----------------------------------------
      00050E                       2260 _packetbuf_attr_copyto:
      00050E AD 82            [24] 2261 	mov	r5,dpl
      000510 AE 83            [24] 2262 	mov	r6,dph
      000512 AF F0            [24] 2263 	mov	r7,b
                                   2264 ;	../../core/net/packetbuf.c:258: memcpy(attrs, packetbuf_attrs, sizeof(packetbuf_attrs));
      000514 74 1E            [12] 2265 	mov	a,#0x1E
      000516 C0 E0            [24] 2266 	push	acc
      000518 E4               [12] 2267 	clr	a
      000519 C0 E0            [24] 2268 	push	acc
      00051B 74r00            [12] 2269 	mov	a,#_packetbuf_attrs
      00051D C0 E0            [24] 2270 	push	acc
      00051F 74s00            [12] 2271 	mov	a,#(_packetbuf_attrs >> 8)
      000521 C0 E0            [24] 2272 	push	acc
      000523 E4               [12] 2273 	clr	a
      000524 C0 E0            [24] 2274 	push	acc
      000526 8D 82            [24] 2275 	mov	dpl,r5
      000528 8E 83            [24] 2276 	mov	dph,r6
      00052A 8F F0            [24] 2277 	mov	b,r7
      00052C 78r00            [12] 2278 	mov	r0,#_memcpy
      00052E 79s00            [12] 2279 	mov	r1,#(_memcpy >> 8)
      000530 7As00            [12] 2280 	mov	r2,#(_memcpy >> 16)
      000532 12r00r00         [24] 2281 	lcall	__sdcc_banked_call
      000535 E5 81            [12] 2282 	mov	a,sp
      000537 24 FB            [12] 2283 	add	a,#0xfb
                                   2284 ;	../../core/net/packetbuf.c:259: memcpy(addrs, packetbuf_addrs, sizeof(packetbuf_addrs));
      000539 F5 81            [12] 2285 	mov	sp,a
      00053B 24 FB            [12] 2286 	add	a,#0xfb
      00053D F8               [12] 2287 	mov	r0,a
      00053E 86 05            [24] 2288 	mov	ar5,@r0
      000540 08               [12] 2289 	inc	r0
      000541 86 06            [24] 2290 	mov	ar6,@r0
      000543 08               [12] 2291 	inc	r0
      000544 86 07            [24] 2292 	mov	ar7,@r0
      000546 74 10            [12] 2293 	mov	a,#0x10
      000548 C0 E0            [24] 2294 	push	acc
      00054A E4               [12] 2295 	clr	a
      00054B C0 E0            [24] 2296 	push	acc
      00054D 74r1E            [12] 2297 	mov	a,#_packetbuf_addrs
      00054F C0 E0            [24] 2298 	push	acc
      000551 74s00            [12] 2299 	mov	a,#(_packetbuf_addrs >> 8)
      000553 C0 E0            [24] 2300 	push	acc
      000555 E4               [12] 2301 	clr	a
      000556 C0 E0            [24] 2302 	push	acc
      000558 8D 82            [24] 2303 	mov	dpl,r5
      00055A 8E 83            [24] 2304 	mov	dph,r6
      00055C 8F F0            [24] 2305 	mov	b,r7
      00055E 78r00            [12] 2306 	mov	r0,#_memcpy
      000560 79s00            [12] 2307 	mov	r1,#(_memcpy >> 8)
      000562 7As00            [12] 2308 	mov	r2,#(_memcpy >> 16)
      000564 12r00r00         [24] 2309 	lcall	__sdcc_banked_call
      000567 E5 81            [12] 2310 	mov	a,sp
      000569 24 FB            [12] 2311 	add	a,#0xfb
      00056B F5 81            [12] 2312 	mov	sp,a
      00056D 02r00r00         [24] 2313 	ljmp	__sdcc_banked_ret
                                   2314 ;------------------------------------------------------------
                                   2315 ;Allocation info for local variables in function 'packetbuf_attr_copyfrom'
                                   2316 ;------------------------------------------------------------
                                   2317 ;addrs                     Allocated to stack - sp -5
                                   2318 ;attrs                     Allocated to registers r5 r6 r7 
                                   2319 ;------------------------------------------------------------
                                   2320 ;	../../core/net/packetbuf.c:263: packetbuf_attr_copyfrom(struct packetbuf_attr *attrs,
                                   2321 ;	-----------------------------------------
                                   2322 ;	 function packetbuf_attr_copyfrom
                                   2323 ;	-----------------------------------------
      000570                       2324 _packetbuf_attr_copyfrom:
      000570 AD 82            [24] 2325 	mov	r5,dpl
      000572 AE 83            [24] 2326 	mov	r6,dph
      000574 AF F0            [24] 2327 	mov	r7,b
                                   2328 ;	../../core/net/packetbuf.c:266: memcpy(packetbuf_attrs, attrs, sizeof(packetbuf_attrs));
      000576 74 1E            [12] 2329 	mov	a,#0x1E
      000578 C0 E0            [24] 2330 	push	acc
      00057A E4               [12] 2331 	clr	a
      00057B C0 E0            [24] 2332 	push	acc
      00057D C0 05            [24] 2333 	push	ar5
      00057F C0 06            [24] 2334 	push	ar6
      000581 C0 07            [24] 2335 	push	ar7
      000583 90r00r00         [24] 2336 	mov	dptr,#_packetbuf_attrs
      000586 75 F0 00         [24] 2337 	mov	b,#0x00
      000589 78r00            [12] 2338 	mov	r0,#_memcpy
      00058B 79s00            [12] 2339 	mov	r1,#(_memcpy >> 8)
      00058D 7As00            [12] 2340 	mov	r2,#(_memcpy >> 16)
      00058F 12r00r00         [24] 2341 	lcall	__sdcc_banked_call
      000592 E5 81            [12] 2342 	mov	a,sp
      000594 24 FB            [12] 2343 	add	a,#0xfb
                                   2344 ;	../../core/net/packetbuf.c:267: memcpy(packetbuf_addrs, addrs, sizeof(packetbuf_addrs));
      000596 F5 81            [12] 2345 	mov	sp,a
      000598 24 FB            [12] 2346 	add	a,#0xfb
      00059A F8               [12] 2347 	mov	r0,a
      00059B 86 05            [24] 2348 	mov	ar5,@r0
      00059D 08               [12] 2349 	inc	r0
      00059E 86 06            [24] 2350 	mov	ar6,@r0
      0005A0 08               [12] 2351 	inc	r0
      0005A1 86 07            [24] 2352 	mov	ar7,@r0
      0005A3 74 10            [12] 2353 	mov	a,#0x10
      0005A5 C0 E0            [24] 2354 	push	acc
      0005A7 E4               [12] 2355 	clr	a
      0005A8 C0 E0            [24] 2356 	push	acc
      0005AA C0 05            [24] 2357 	push	ar5
      0005AC C0 06            [24] 2358 	push	ar6
      0005AE C0 07            [24] 2359 	push	ar7
      0005B0 90r00r1E         [24] 2360 	mov	dptr,#_packetbuf_addrs
      0005B3 75 F0 00         [24] 2361 	mov	b,#0x00
      0005B6 78r00            [12] 2362 	mov	r0,#_memcpy
      0005B8 79s00            [12] 2363 	mov	r1,#(_memcpy >> 8)
      0005BA 7As00            [12] 2364 	mov	r2,#(_memcpy >> 16)
      0005BC 12r00r00         [24] 2365 	lcall	__sdcc_banked_call
      0005BF E5 81            [12] 2366 	mov	a,sp
      0005C1 24 FB            [12] 2367 	add	a,#0xfb
      0005C3 F5 81            [12] 2368 	mov	sp,a
      0005C5 02r00r00         [24] 2369 	ljmp	__sdcc_banked_ret
                                   2370 ;------------------------------------------------------------
                                   2371 ;Allocation info for local variables in function 'packetbuf_set_attr'
                                   2372 ;------------------------------------------------------------
                                   2373 ;val                       Allocated to stack - sp -4
                                   2374 ;type                      Allocated to registers r7 
                                   2375 ;------------------------------------------------------------
                                   2376 ;	../../core/net/packetbuf.c:272: packetbuf_set_attr(uint8_t type, const packetbuf_attr_t val)
                                   2377 ;	-----------------------------------------
                                   2378 ;	 function packetbuf_set_attr
                                   2379 ;	-----------------------------------------
      0005C8                       2380 _packetbuf_set_attr:
                                   2381 ;	../../core/net/packetbuf.c:275: packetbuf_attrs[type].val = val;
      0005C8 E5 82            [12] 2382 	mov	a,dpl
      0005CA FF               [12] 2383 	mov	r7,a
      0005CB 75 F0 02         [24] 2384 	mov	b,#0x02
      0005CE A4               [48] 2385 	mul	ab
      0005CF 24r00            [12] 2386 	add	a,#_packetbuf_attrs
      0005D1 F5 82            [12] 2387 	mov	dpl,a
      0005D3 74s00            [12] 2388 	mov	a,#(_packetbuf_attrs >> 8)
      0005D5 35 F0            [12] 2389 	addc	a,b
      0005D7 F5 83            [12] 2390 	mov	dph,a
      0005D9 E5 81            [12] 2391 	mov	a,sp
      0005DB 24 FC            [12] 2392 	add	a,#0xfc
      0005DD F8               [12] 2393 	mov	r0,a
      0005DE E6               [12] 2394 	mov	a,@r0
      0005DF F0               [24] 2395 	movx	@dptr,a
      0005E0 08               [12] 2396 	inc	r0
      0005E1 E6               [12] 2397 	mov	a,@r0
      0005E2 A3               [24] 2398 	inc	dptr
      0005E3 F0               [24] 2399 	movx	@dptr,a
                                   2400 ;	../../core/net/packetbuf.c:276: return 1;
      0005E4 90 00 01         [24] 2401 	mov	dptr,#0x0001
      0005E7 02r00r00         [24] 2402 	ljmp	__sdcc_banked_ret
                                   2403 ;------------------------------------------------------------
                                   2404 ;Allocation info for local variables in function 'packetbuf_attr'
                                   2405 ;------------------------------------------------------------
                                   2406 ;type                      Allocated to registers r7 
                                   2407 ;------------------------------------------------------------
                                   2408 ;	../../core/net/packetbuf.c:280: packetbuf_attr(uint8_t type)
                                   2409 ;	-----------------------------------------
                                   2410 ;	 function packetbuf_attr
                                   2411 ;	-----------------------------------------
      0005EA                       2412 _packetbuf_attr:
                                   2413 ;	../../core/net/packetbuf.c:282: return packetbuf_attrs[type].val;
      0005EA E5 82            [12] 2414 	mov	a,dpl
      0005EC 75 F0 02         [24] 2415 	mov	b,#0x02
      0005EF A4               [48] 2416 	mul	ab
      0005F0 24r00            [12] 2417 	add	a,#_packetbuf_attrs
      0005F2 F5 82            [12] 2418 	mov	dpl,a
      0005F4 74s00            [12] 2419 	mov	a,#(_packetbuf_attrs >> 8)
      0005F6 35 F0            [12] 2420 	addc	a,b
      0005F8 F5 83            [12] 2421 	mov	dph,a
      0005FA E0               [24] 2422 	movx	a,@dptr
      0005FB FE               [12] 2423 	mov	r6,a
      0005FC A3               [24] 2424 	inc	dptr
      0005FD E0               [24] 2425 	movx	a,@dptr
      0005FE FF               [12] 2426 	mov	r7,a
      0005FF 8E 82            [24] 2427 	mov	dpl,r6
      000601 8F 83            [24] 2428 	mov	dph,r7
      000603 02r00r00         [24] 2429 	ljmp	__sdcc_banked_ret
                                   2430 ;------------------------------------------------------------
                                   2431 ;Allocation info for local variables in function 'packetbuf_set_addr'
                                   2432 ;------------------------------------------------------------
                                   2433 ;addr                      Allocated to stack - sp -5
                                   2434 ;type                      Allocated to registers r7 
                                   2435 ;------------------------------------------------------------
                                   2436 ;	../../core/net/packetbuf.c:286: packetbuf_set_addr(uint8_t type, const linkaddr_t *addr)
                                   2437 ;	-----------------------------------------
                                   2438 ;	 function packetbuf_set_addr
                                   2439 ;	-----------------------------------------
      000606                       2440 _packetbuf_set_addr:
                                   2441 ;	../../core/net/packetbuf.c:289: linkaddr_copy(&packetbuf_addrs[type - PACKETBUF_ADDR_FIRST].addr, addr);
      000606 E5 82            [12] 2442 	mov	a,dpl
      000608 24 F1            [12] 2443 	add	a,#0xF1
      00060A 75 F0 08         [24] 2444 	mov	b,#0x08
      00060D A4               [48] 2445 	mul	ab
      00060E 24r1E            [12] 2446 	add	a,#_packetbuf_addrs
      000610 FE               [12] 2447 	mov	r6,a
      000611 74s00            [12] 2448 	mov	a,#(_packetbuf_addrs >> 8)
      000613 35 F0            [12] 2449 	addc	a,b
      000615 FF               [12] 2450 	mov	r7,a
      000616 7D 00            [12] 2451 	mov	r5,#0x00
      000618 E5 81            [12] 2452 	mov	a,sp
      00061A 24 FB            [12] 2453 	add	a,#0xfb
      00061C F8               [12] 2454 	mov	r0,a
      00061D E6               [12] 2455 	mov	a,@r0
      00061E C0 E0            [24] 2456 	push	acc
      000620 08               [12] 2457 	inc	r0
      000621 E6               [12] 2458 	mov	a,@r0
      000622 C0 E0            [24] 2459 	push	acc
      000624 08               [12] 2460 	inc	r0
      000625 E6               [12] 2461 	mov	a,@r0
      000626 C0 E0            [24] 2462 	push	acc
      000628 8E 82            [24] 2463 	mov	dpl,r6
      00062A 8F 83            [24] 2464 	mov	dph,r7
      00062C 8D F0            [24] 2465 	mov	b,r5
      00062E 78r00            [12] 2466 	mov	r0,#_linkaddr_copy
      000630 79s00            [12] 2467 	mov	r1,#(_linkaddr_copy >> 8)
      000632 7As00            [12] 2468 	mov	r2,#(_linkaddr_copy >> 16)
      000634 12r00r00         [24] 2469 	lcall	__sdcc_banked_call
      000637 15 81            [12] 2470 	dec	sp
      000639 15 81            [12] 2471 	dec	sp
      00063B 15 81            [12] 2472 	dec	sp
                                   2473 ;	../../core/net/packetbuf.c:290: return 1;
      00063D 90 00 01         [24] 2474 	mov	dptr,#0x0001
      000640 02r00r00         [24] 2475 	ljmp	__sdcc_banked_ret
                                   2476 ;------------------------------------------------------------
                                   2477 ;Allocation info for local variables in function 'packetbuf_addr'
                                   2478 ;------------------------------------------------------------
                                   2479 ;type                      Allocated to registers r7 
                                   2480 ;------------------------------------------------------------
                                   2481 ;	../../core/net/packetbuf.c:294: packetbuf_addr(uint8_t type)
                                   2482 ;	-----------------------------------------
                                   2483 ;	 function packetbuf_addr
                                   2484 ;	-----------------------------------------
      000643                       2485 _packetbuf_addr:
                                   2486 ;	../../core/net/packetbuf.c:296: return &packetbuf_addrs[type - PACKETBUF_ADDR_FIRST].addr;
      000643 E5 82            [12] 2487 	mov	a,dpl
      000645 24 F1            [12] 2488 	add	a,#0xF1
      000647 75 F0 08         [24] 2489 	mov	b,#0x08
      00064A A4               [48] 2490 	mul	ab
      00064B 24r1E            [12] 2491 	add	a,#_packetbuf_addrs
      00064D FE               [12] 2492 	mov	r6,a
      00064E 74s00            [12] 2493 	mov	a,#(_packetbuf_addrs >> 8)
      000650 35 F0            [12] 2494 	addc	a,b
      000652 FF               [12] 2495 	mov	r7,a
      000653 7D 00            [12] 2496 	mov	r5,#0x00
      000655 8E 82            [24] 2497 	mov	dpl,r6
      000657 8F 83            [24] 2498 	mov	dph,r7
      000659 8D F0            [24] 2499 	mov	b,r5
      00065B 02r00r00         [24] 2500 	ljmp	__sdcc_banked_ret
                                   2501 ;------------------------------------------------------------
                                   2502 ;Allocation info for local variables in function 'packetbuf_holds_broadcast'
                                   2503 ;------------------------------------------------------------
                                   2504 ;	../../core/net/packetbuf.c:301: packetbuf_holds_broadcast(void)
                                   2505 ;	-----------------------------------------
                                   2506 ;	 function packetbuf_holds_broadcast
                                   2507 ;	-----------------------------------------
      00065E                       2508 _packetbuf_holds_broadcast:
                                   2509 ;	../../core/net/packetbuf.c:303: return linkaddr_cmp(&packetbuf_addrs[PACKETBUF_ADDR_RECEIVER - PACKETBUF_ADDR_FIRST].addr, &linkaddr_null);
      00065E 74r00            [12] 2510 	mov	a,#_linkaddr_null
      000660 C0 E0            [24] 2511 	push	acc
      000662 74s00            [12] 2512 	mov	a,#(_linkaddr_null >> 8)
      000664 C0 E0            [24] 2513 	push	acc
      000666 74 80            [12] 2514 	mov	a,#0x80
      000668 C0 E0            [24] 2515 	push	acc
      00066A 90r00r26         [24] 2516 	mov	dptr,#(_packetbuf_addrs + 0x0008)
      00066D 75 F0 00         [24] 2517 	mov	b,#0x00
      000670 78r00            [12] 2518 	mov	r0,#_linkaddr_cmp
      000672 79s00            [12] 2519 	mov	r1,#(_linkaddr_cmp >> 8)
      000674 7As00            [12] 2520 	mov	r2,#(_linkaddr_cmp >> 16)
      000676 12r00r00         [24] 2521 	lcall	__sdcc_banked_call
      000679 AE 82            [24] 2522 	mov	r6,dpl
      00067B AF 83            [24] 2523 	mov	r7,dph
      00067D 15 81            [12] 2524 	dec	sp
      00067F 15 81            [12] 2525 	dec	sp
      000681 15 81            [12] 2526 	dec	sp
      000683 8E 82            [24] 2527 	mov	dpl,r6
      000685 8F 83            [24] 2528 	mov	dph,r7
      000687 02r00r00         [24] 2529 	ljmp	__sdcc_banked_ret
                                   2530 	.area CSEG    (CODE)
                                   2531 	.area CONST   (CODE)
                                   2532 	.area XINIT   (CODE)
      000000                       2533 __xinit__packetbuf:
      000000r33s00 00              2534 	.byte _packetbuf_aligned,(_packetbuf_aligned >> 8),#0x00
                                   2535 	.area CABS    (ABS,CODE)
