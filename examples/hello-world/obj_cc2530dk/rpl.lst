                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:14 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _rpl_ipv6_neighbor_callback
                                     13 	.globl _rpl_link_neighbor_callback
                                     14 	.globl _rpl_reset_periodic_timer
                                     15 	.globl _rpl_cancel_dao
                                     16 	.globl _rpl_schedule_dao_immediately
                                     17 	.globl _rpl_find_parent_any_dag
                                     18 	.globl _rpl_icmp6_register_handlers
                                     19 	.globl _dao_output_target
                                     20 	.globl _rpl_dag_init
                                     21 	.globl _uip_ds6_set_addr_iid
                                     22 	.globl _uip_ds6_maddr_add
                                     23 	.globl _uip_ds6_route_next
                                     24 	.globl _uip_ds6_route_head
                                     25 	.globl _uip_ds6_route_nexthop
                                     26 	.globl _uip_ds6_route_rm
                                     27 	.globl _uip_ds6_route_add
                                     28 	.globl _clock_time
                                     29 	.globl _memcmp
                                     30 	.globl _memcpy
                                     31 	.globl _ACTIVE
                                     32 	.globl _TX_BYTE
                                     33 	.globl _RX_BYTE
                                     34 	.globl _ERR
                                     35 	.globl _FE
                                     36 	.globl _SLAVE
                                     37 	.globl _RE
                                     38 	.globl _MODE
                                     39 	.globl _T3OVFIF
                                     40 	.globl _T3CH0IF
                                     41 	.globl _T3CH1IF
                                     42 	.globl _T4OVFIF
                                     43 	.globl _T4CH0IF
                                     44 	.globl _T4CH1IF
                                     45 	.globl _OVFIM
                                     46 	.globl _B_0
                                     47 	.globl _B_1
                                     48 	.globl _B_2
                                     49 	.globl _B_3
                                     50 	.globl _B_4
                                     51 	.globl _B_5
                                     52 	.globl _B_6
                                     53 	.globl _B_7
                                     54 	.globl _P2IF
                                     55 	.globl _UTX0IF
                                     56 	.globl _UTX1IF
                                     57 	.globl _P1IF
                                     58 	.globl _WDTIF
                                     59 	.globl _ACC_0
                                     60 	.globl _ACC_1
                                     61 	.globl _ACC_2
                                     62 	.globl _ACC_3
                                     63 	.globl _ACC_4
                                     64 	.globl _ACC_5
                                     65 	.globl _ACC_6
                                     66 	.globl _ACC_7
                                     67 	.globl _P
                                     68 	.globl _F1
                                     69 	.globl _OV
                                     70 	.globl _RS0
                                     71 	.globl _RS1
                                     72 	.globl _F0
                                     73 	.globl _AC
                                     74 	.globl _CY
                                     75 	.globl _DMAIF
                                     76 	.globl _T1IF
                                     77 	.globl _T2IF
                                     78 	.globl _T3IF
                                     79 	.globl _T4IF
                                     80 	.globl _P0IF
                                     81 	.globl _STIF
                                     82 	.globl _DMAIE
                                     83 	.globl _T1IE
                                     84 	.globl _T2IE
                                     85 	.globl _T3IE
                                     86 	.globl _T4IE
                                     87 	.globl _P0IE
                                     88 	.globl _RFERRIE
                                     89 	.globl _ADCIE
                                     90 	.globl _URX0IE
                                     91 	.globl _URX1IE
                                     92 	.globl _ENCIE
                                     93 	.globl _STIE
                                     94 	.globl _EA
                                     95 	.globl _P2_0
                                     96 	.globl _P2_1
                                     97 	.globl _P2_2
                                     98 	.globl _P2_3
                                     99 	.globl _P2_4
                                    100 	.globl _P2_5
                                    101 	.globl _P2_6
                                    102 	.globl _P2_7
                                    103 	.globl _ENCIF_0
                                    104 	.globl _ENCIF_1
                                    105 	.globl _P1_0
                                    106 	.globl _P1_1
                                    107 	.globl _P1_2
                                    108 	.globl _P1_3
                                    109 	.globl _P1_4
                                    110 	.globl _P1_5
                                    111 	.globl _P1_6
                                    112 	.globl _P1_7
                                    113 	.globl _IT0
                                    114 	.globl _RFERRIF
                                    115 	.globl _IT1
                                    116 	.globl _URX0IF
                                    117 	.globl _ADCIF
                                    118 	.globl _URX1IF
                                    119 	.globl _P0_0
                                    120 	.globl _P0_1
                                    121 	.globl _P0_2
                                    122 	.globl _P0_3
                                    123 	.globl _P0_4
                                    124 	.globl _P0_5
                                    125 	.globl _P0_6
                                    126 	.globl _P0_7
                                    127 	.globl _WDCTL
                                    128 	.globl _U1GCR
                                    129 	.globl _U1UCR
                                    130 	.globl _U1BAUD
                                    131 	.globl _U1DBUF
                                    132 	.globl _U1CSR
                                    133 	.globl _U0GCR
                                    134 	.globl _U0UCR
                                    135 	.globl _U0BAUD
                                    136 	.globl _U0DBUF
                                    137 	.globl _U0CSR
                                    138 	.globl _TIMIF
                                    139 	.globl _T4CC1
                                    140 	.globl _T4CCTL1
                                    141 	.globl _T4CC0
                                    142 	.globl _T4CCTL0
                                    143 	.globl _T4CTL
                                    144 	.globl _T4CNT
                                    145 	.globl _T3CC1
                                    146 	.globl _T3CCTL1
                                    147 	.globl _T3CC0
                                    148 	.globl _T3CCTL0
                                    149 	.globl _T3CTL
                                    150 	.globl _T3CNT
                                    151 	.globl _T2MSEL
                                    152 	.globl _T2IRQM
                                    153 	.globl _T2MOVF2
                                    154 	.globl _T2MOVF1
                                    155 	.globl _T2MOVF0
                                    156 	.globl _T2M1
                                    157 	.globl _T2M0
                                    158 	.globl _T2IRQF
                                    159 	.globl _T2EVTCFG
                                    160 	.globl _T2CTRL
                                    161 	.globl _T1STAT
                                    162 	.globl _T1CCTL2
                                    163 	.globl _T1CCTL1
                                    164 	.globl _T1CCTL0
                                    165 	.globl _T1CTL
                                    166 	.globl _T1CNTH
                                    167 	.globl _T1CNTL
                                    168 	.globl _T1CC2H
                                    169 	.globl _T1CC2L
                                    170 	.globl _T1CC1H
                                    171 	.globl _T1CC1L
                                    172 	.globl _T1CC0H
                                    173 	.globl _T1CC0L
                                    174 	.globl _CLKCONSTA
                                    175 	.globl _CLKCONCMD
                                    176 	.globl _SLEEPSTA
                                    177 	.globl _SLEEPCMD
                                    178 	.globl _STLOAD
                                    179 	.globl _ST2
                                    180 	.globl _ST1
                                    181 	.globl _ST0
                                    182 	.globl _RFERRF
                                    183 	.globl _RFIRQF0
                                    184 	.globl _RFST
                                    185 	.globl _RFD
                                    186 	.globl _RFIRQF1
                                    187 	.globl _PSBANK
                                    188 	.globl _FMAP
                                    189 	.globl _MEMCTR
                                    190 	.globl __XPAGE
                                    191 	.globl _MPAGE
                                    192 	.globl _PMUX
                                    193 	.globl _P2DIR
                                    194 	.globl _P1DIR
                                    195 	.globl _P0DIR
                                    196 	.globl _P2INP
                                    197 	.globl _P1INP
                                    198 	.globl _P2SEL
                                    199 	.globl _P1SEL
                                    200 	.globl _P0SEL
                                    201 	.globl _APCFG
                                    202 	.globl _PERCFG
                                    203 	.globl _P0INP
                                    204 	.globl _P2IEN
                                    205 	.globl _P1IEN
                                    206 	.globl _P0IEN
                                    207 	.globl _PICTL
                                    208 	.globl _P2IFG
                                    209 	.globl _P1IFG
                                    210 	.globl _P0IFG
                                    211 	.globl _DMAREQ
                                    212 	.globl _DMAARM
                                    213 	.globl _DMA0CFGH
                                    214 	.globl _DMA0CFGL
                                    215 	.globl _DMA1CFGH
                                    216 	.globl _DMA1CFGL
                                    217 	.globl _DMAIRQ
                                    218 	.globl _ENCCS
                                    219 	.globl _ENCDO
                                    220 	.globl _ENCDI
                                    221 	.globl _RNDH
                                    222 	.globl _RNDL
                                    223 	.globl _ADCH
                                    224 	.globl _ADCL
                                    225 	.globl _ADCCON3
                                    226 	.globl _ADCCON2
                                    227 	.globl _ADCCON1
                                    228 	.globl _B
                                    229 	.globl _IRCON2
                                    230 	.globl _ACC
                                    231 	.globl _PSW
                                    232 	.globl _IRCON
                                    233 	.globl _IP1
                                    234 	.globl _IEN1
                                    235 	.globl _IP0
                                    236 	.globl _IEN0
                                    237 	.globl _P2
                                    238 	.globl _S1CON
                                    239 	.globl _IEN2
                                    240 	.globl _S0CON
                                    241 	.globl _DPS
                                    242 	.globl _P1
                                    243 	.globl _TCON
                                    244 	.globl _PCON
                                    245 	.globl _DPH1
                                    246 	.globl _DPL1
                                    247 	.globl _DPH0
                                    248 	.globl _DPL0
                                    249 	.globl _SP
                                    250 	.globl _P0
                                    251 	.globl _X_IEEE_ADDR
                                    252 	.globl _X_INFOPAGE
                                    253 	.globl _X_P2DIR
                                    254 	.globl _X_P1DIR
                                    255 	.globl _X_P0DIR
                                    256 	.globl _X_U1GCR
                                    257 	.globl _X_U1UCR
                                    258 	.globl _X_U1BAUD
                                    259 	.globl _X_U1DBUF
                                    260 	.globl _X_U1CSR
                                    261 	.globl _X_P2INP
                                    262 	.globl _X_P1INP
                                    263 	.globl _X_P2SEL
                                    264 	.globl _X_P1SEL
                                    265 	.globl _X_P0SEL
                                    266 	.globl _X_APCFG
                                    267 	.globl _X_PERCFG
                                    268 	.globl _X_T4CC1
                                    269 	.globl _X_T4CCTL1
                                    270 	.globl _X_T4CC0
                                    271 	.globl _X_T4CCTL0
                                    272 	.globl _X_T4CTL
                                    273 	.globl _X_T4CNT
                                    274 	.globl _X_RFIRQF0
                                    275 	.globl _X_T1CCTL2
                                    276 	.globl _X_T1CCTL1
                                    277 	.globl _X_T1CCTL0
                                    278 	.globl _X_T1CTL
                                    279 	.globl _X_T1CNTH
                                    280 	.globl _X_T1CNTL
                                    281 	.globl _X_RFST
                                    282 	.globl _X_T1CC2H
                                    283 	.globl _X_T1CC2L
                                    284 	.globl _X_T1CC1H
                                    285 	.globl _X_T1CC1L
                                    286 	.globl _X_T1CC0H
                                    287 	.globl _X_T1CC0L
                                    288 	.globl _X_RFD
                                    289 	.globl _X_TIMIF
                                    290 	.globl _X_DMAREQ
                                    291 	.globl _X_DMAARM
                                    292 	.globl _X_DMA0CFGH
                                    293 	.globl _X_DMA0CFGL
                                    294 	.globl _X_DMA1CFGH
                                    295 	.globl _X_DMA1CFGL
                                    296 	.globl _X_DMAIRQ
                                    297 	.globl _X_T3CC1
                                    298 	.globl _X_T3CCTL1
                                    299 	.globl _X_T3CC0
                                    300 	.globl _X_T3CCTL0
                                    301 	.globl _X_T3CTL
                                    302 	.globl _X_T3CNT
                                    303 	.globl _X_WDCTL
                                    304 	.globl _X_MEMCTR
                                    305 	.globl _X_CLKCONCMD
                                    306 	.globl _X_U0GCR
                                    307 	.globl _X_U0UCR
                                    308 	.globl _X_T2MSEL
                                    309 	.globl _X_U0BAUD
                                    310 	.globl _X_U0DBUF
                                    311 	.globl _X_RFERRF
                                    312 	.globl _X_SLEEPCMD
                                    313 	.globl _X_RNDH
                                    314 	.globl _X_RNDL
                                    315 	.globl _X_ADCH
                                    316 	.globl _X_ADCL
                                    317 	.globl _X_ADCCON3
                                    318 	.globl _X_ADCCON2
                                    319 	.globl _X_ADCCON1
                                    320 	.globl _X_ENCCS
                                    321 	.globl _X_ENCDO
                                    322 	.globl _X_ENCDI
                                    323 	.globl _X_T1STAT
                                    324 	.globl _X_PMUX
                                    325 	.globl _X_STLOAD
                                    326 	.globl _X_P2IEN
                                    327 	.globl _X_P0IEN
                                    328 	.globl _X_T2IRQM
                                    329 	.globl _X_T2MOVF2
                                    330 	.globl _X_T2MOVF1
                                    331 	.globl _X_T2MOVF0
                                    332 	.globl _X_T2M1
                                    333 	.globl _X_T2M0
                                    334 	.globl _X_T2IRQF
                                    335 	.globl _X_P2
                                    336 	.globl _X_PSBANK
                                    337 	.globl _X_FMAP
                                    338 	.globl _X_CLKCONSTA
                                    339 	.globl _X_SLEEPSTA
                                    340 	.globl _X_T2EVTCFG
                                    341 	.globl _X_ST2
                                    342 	.globl _X_ST1
                                    343 	.globl _X_ST0
                                    344 	.globl _X_T2CTRL
                                    345 	.globl _X__XPAGE
                                    346 	.globl _X_MPAGE
                                    347 	.globl _X_RFIRQF1
                                    348 	.globl _X_P1
                                    349 	.globl _X_P0INP
                                    350 	.globl _X_P1IEN
                                    351 	.globl _X_PICTL
                                    352 	.globl _X_P2IFG
                                    353 	.globl _X_P1IFG
                                    354 	.globl _X_P0IFG
                                    355 	.globl _X_U0CSR
                                    356 	.globl _X_P0
                                    357 	.globl _USBF5
                                    358 	.globl _USBF4
                                    359 	.globl _USBF3
                                    360 	.globl _USBF2
                                    361 	.globl _USBF1
                                    362 	.globl _USBF0
                                    363 	.globl _USBCNTH
                                    364 	.globl _USBCNTL
                                    365 	.globl _USBCNT0
                                    366 	.globl _USBCSOH
                                    367 	.globl _USBCSOL
                                    368 	.globl _USBMAXO
                                    369 	.globl _USBCSIH
                                    370 	.globl _USBCSIL
                                    371 	.globl _USBCS0
                                    372 	.globl _USBMAXI
                                    373 	.globl _USBCTRL
                                    374 	.globl _USBINDEX
                                    375 	.globl _USBFRMH
                                    376 	.globl _USBFRML
                                    377 	.globl _USBCIE
                                    378 	.globl _USBOIE
                                    379 	.globl _USBIIE
                                    380 	.globl _USBCIF
                                    381 	.globl _USBOIF
                                    382 	.globl _USBIIF
                                    383 	.globl _USBPOW
                                    384 	.globl _USBADDR
                                    385 	.globl _CSPT
                                    386 	.globl _CSPZ
                                    387 	.globl _CSPY
                                    388 	.globl _CSPX
                                    389 	.globl _CSPSTAT
                                    390 	.globl _CSPCTRL
                                    391 	.globl _CSPPROG23
                                    392 	.globl _CSPPROG22
                                    393 	.globl _CSPPROG21
                                    394 	.globl _CSPPROG20
                                    395 	.globl _CSPPROG19
                                    396 	.globl _CSPPROG18
                                    397 	.globl _CSPPROG17
                                    398 	.globl _CSPPROG16
                                    399 	.globl _CSPPROG15
                                    400 	.globl _CSPPROG14
                                    401 	.globl _CSPPROG13
                                    402 	.globl _CSPPROG12
                                    403 	.globl _CSPPROG11
                                    404 	.globl _CSPPROG10
                                    405 	.globl _CSPPROG9
                                    406 	.globl _CSPPROG8
                                    407 	.globl _CSPPROG7
                                    408 	.globl _CSPPROG6
                                    409 	.globl _CSPPROG5
                                    410 	.globl _CSPPROG4
                                    411 	.globl _CSPPROG3
                                    412 	.globl _CSPPROG2
                                    413 	.globl _CSPPROG1
                                    414 	.globl _CSPPROG0
                                    415 	.globl _RFC_OBS_CTRL2
                                    416 	.globl _RFC_OBS_CTRL1
                                    417 	.globl _RFC_OBS_CTRL0
                                    418 	.globl _TXFILTCFG
                                    419 	.globl _PTEST1
                                    420 	.globl _PTEST0
                                    421 	.globl _ATEST
                                    422 	.globl _DACTEST2
                                    423 	.globl _DACTEST1
                                    424 	.globl _DACTEST0
                                    425 	.globl _MDMTEST1
                                    426 	.globl _MDMTEST0
                                    427 	.globl _ADCTEST2
                                    428 	.globl _ADCTEST1
                                    429 	.globl _ADCTEST0
                                    430 	.globl _AGCCTRL3
                                    431 	.globl _AGCCTRL2
                                    432 	.globl _AGCCTRL1
                                    433 	.globl _AGCCTRL0
                                    434 	.globl _FSCAL3
                                    435 	.globl _FSCAL2
                                    436 	.globl _FSCAL1
                                    437 	.globl _FSCAL0
                                    438 	.globl _FSCTRL
                                    439 	.globl _RXCTRL
                                    440 	.globl _FREQEST
                                    441 	.globl _MDMCTRL1
                                    442 	.globl _MDMCTRL0
                                    443 	.globl _RFRND
                                    444 	.globl _RFERRM
                                    445 	.globl _RFIRQM1
                                    446 	.globl _RFIRQM0
                                    447 	.globl _TXLAST_PTR
                                    448 	.globl _TXFIRST_PTR
                                    449 	.globl _RXP1_PTR
                                    450 	.globl _RXLAST_PTR
                                    451 	.globl _RXFIRST_PTR
                                    452 	.globl _TXFIFOCNT
                                    453 	.globl _RXFIFOCNT
                                    454 	.globl _RXFIRST
                                    455 	.globl _RSSISTAT
                                    456 	.globl _RSSI
                                    457 	.globl _CCACTRL1
                                    458 	.globl _CCACTRL0
                                    459 	.globl _FSMCTRL
                                    460 	.globl _FIFOPCTRL
                                    461 	.globl _FSMSTAT1
                                    462 	.globl _FSMSTAT0
                                    463 	.globl _TXCTRL
                                    464 	.globl _TXPOWER
                                    465 	.globl _FREQCTRL
                                    466 	.globl _FREQTUNE
                                    467 	.globl _RXMASKCLR
                                    468 	.globl _RXMASKSET
                                    469 	.globl _RXENABLE
                                    470 	.globl _FRMCTRL1
                                    471 	.globl _FRMCTRL0
                                    472 	.globl _SRCEXTEN2
                                    473 	.globl _SRCEXTEN1
                                    474 	.globl _SRCEXTEN0
                                    475 	.globl _SRCSHORTEN2
                                    476 	.globl _SRCSHORTEN1
                                    477 	.globl _SRCSHORTEN0
                                    478 	.globl _SRCMATCH
                                    479 	.globl _FRMFILT1
                                    480 	.globl _FRMFILT0
                                    481 	.globl _SHORT_ADDR1
                                    482 	.globl _SHORT_ADDR0
                                    483 	.globl _PAN_ID1
                                    484 	.globl _PAN_ID0
                                    485 	.globl _EXT_ADDR7
                                    486 	.globl _EXT_ADDR6
                                    487 	.globl _EXT_ADDR5
                                    488 	.globl _EXT_ADDR4
                                    489 	.globl _EXT_ADDR3
                                    490 	.globl _EXT_ADDR2
                                    491 	.globl _EXT_ADDR1
                                    492 	.globl _EXT_ADDR0
                                    493 	.globl _SRCSHORTPENDEN2
                                    494 	.globl _SRCSHORTPENDEN1
                                    495 	.globl _SRCSHORTPENDEN0
                                    496 	.globl _SRCEXTPENDEN2
                                    497 	.globl _SRCEXTPENDEN1
                                    498 	.globl _SRCEXTPENDEN0
                                    499 	.globl _SRCRESINDEX
                                    500 	.globl _SRCRESMASK2
                                    501 	.globl _SRCRESMASK1
                                    502 	.globl _SRCRESMASK0
                                    503 	.globl _SRC_ADDR_TABLE
                                    504 	.globl _TXFIFO
                                    505 	.globl _RXFIFO
                                    506 	.globl _RFCORE_RAM
                                    507 	.globl _CMPCTL
                                    508 	.globl _OPAMPS
                                    509 	.globl _OPAMPC
                                    510 	.globl _STCV2
                                    511 	.globl _STCV1
                                    512 	.globl _STCV0
                                    513 	.globl _STCS
                                    514 	.globl _STCC
                                    515 	.globl _T1CC4H
                                    516 	.globl _T1CC4L
                                    517 	.globl _T1CC3H
                                    518 	.globl _T1CC3L
                                    519 	.globl _XX_T1CC2H
                                    520 	.globl _XX_T1CC2L
                                    521 	.globl _XX_T1CC1H
                                    522 	.globl _XX_T1CC1L
                                    523 	.globl _XX_T1CC0H
                                    524 	.globl _XX_T1CC0L
                                    525 	.globl _T1CCTL4
                                    526 	.globl _T1CCTL3
                                    527 	.globl _XX_T1CCTL2
                                    528 	.globl _XX_T1CCTL1
                                    529 	.globl _XX_T1CCTL0
                                    530 	.globl _CLD
                                    531 	.globl _IRCTL
                                    532 	.globl _CHIPINFO1
                                    533 	.globl _CHIPINFO0
                                    534 	.globl _FWDATA
                                    535 	.globl _FADDRH
                                    536 	.globl _FADDRL
                                    537 	.globl _FCTL
                                    538 	.globl _IVCTRL
                                    539 	.globl _BATTMON
                                    540 	.globl _SRCRC
                                    541 	.globl _DBGDATA
                                    542 	.globl _TESTREG0
                                    543 	.globl _CHIPID
                                    544 	.globl _CHVER
                                    545 	.globl _OBSSEL5
                                    546 	.globl _OBSSEL4
                                    547 	.globl _OBSSEL3
                                    548 	.globl _OBSSEL2
                                    549 	.globl _OBSSEL1
                                    550 	.globl _OBSSEL0
                                    551 	.globl _I2CIO
                                    552 	.globl _I2CWC
                                    553 	.globl _I2CADDR
                                    554 	.globl _I2CDATA
                                    555 	.globl _I2CSTAT
                                    556 	.globl _I2CCFG
                                    557 	.globl _OPAMPMC
                                    558 	.globl _MONMUX
                                    559 	.globl _rpl_get_mode
                                    560 	.globl _rpl_set_mode
                                    561 	.globl _rpl_purge_routes
                                    562 	.globl _rpl_remove_routes
                                    563 	.globl _rpl_remove_routes_by_nexthop
                                    564 	.globl _rpl_add_route
                                    565 	.globl _rpl_init
                                    566 ;--------------------------------------------------------
                                    567 ; special function registers
                                    568 ;--------------------------------------------------------
                                    569 	.area RSEG    (ABS,DATA)
      000000                        570 	.org 0x0000
                           000080   571 _P0	=	0x0080
                           000081   572 _SP	=	0x0081
                           000082   573 _DPL0	=	0x0082
                           000083   574 _DPH0	=	0x0083
                           000084   575 _DPL1	=	0x0084
                           000085   576 _DPH1	=	0x0085
                           000087   577 _PCON	=	0x0087
                           000088   578 _TCON	=	0x0088
                           000090   579 _P1	=	0x0090
                           000092   580 _DPS	=	0x0092
                           000098   581 _S0CON	=	0x0098
                           00009A   582 _IEN2	=	0x009a
                           00009B   583 _S1CON	=	0x009b
                           0000A0   584 _P2	=	0x00a0
                           0000A8   585 _IEN0	=	0x00a8
                           0000A9   586 _IP0	=	0x00a9
                           0000B8   587 _IEN1	=	0x00b8
                           0000B9   588 _IP1	=	0x00b9
                           0000C0   589 _IRCON	=	0x00c0
                           0000D0   590 _PSW	=	0x00d0
                           0000E0   591 _ACC	=	0x00e0
                           0000E8   592 _IRCON2	=	0x00e8
                           0000F0   593 _B	=	0x00f0
                           0000B4   594 _ADCCON1	=	0x00b4
                           0000B5   595 _ADCCON2	=	0x00b5
                           0000B6   596 _ADCCON3	=	0x00b6
                           0000BA   597 _ADCL	=	0x00ba
                           0000BB   598 _ADCH	=	0x00bb
                           0000BC   599 _RNDL	=	0x00bc
                           0000BD   600 _RNDH	=	0x00bd
                           0000B1   601 _ENCDI	=	0x00b1
                           0000B2   602 _ENCDO	=	0x00b2
                           0000B3   603 _ENCCS	=	0x00b3
                           0000D1   604 _DMAIRQ	=	0x00d1
                           0000D2   605 _DMA1CFGL	=	0x00d2
                           0000D3   606 _DMA1CFGH	=	0x00d3
                           0000D4   607 _DMA0CFGL	=	0x00d4
                           0000D5   608 _DMA0CFGH	=	0x00d5
                           0000D6   609 _DMAARM	=	0x00d6
                           0000D7   610 _DMAREQ	=	0x00d7
                           000089   611 _P0IFG	=	0x0089
                           00008A   612 _P1IFG	=	0x008a
                           00008B   613 _P2IFG	=	0x008b
                           00008C   614 _PICTL	=	0x008c
                           0000AB   615 _P0IEN	=	0x00ab
                           00008D   616 _P1IEN	=	0x008d
                           0000AC   617 _P2IEN	=	0x00ac
                           00008F   618 _P0INP	=	0x008f
                           0000F1   619 _PERCFG	=	0x00f1
                           0000F2   620 _APCFG	=	0x00f2
                           0000F3   621 _P0SEL	=	0x00f3
                           0000F4   622 _P1SEL	=	0x00f4
                           0000F5   623 _P2SEL	=	0x00f5
                           0000F6   624 _P1INP	=	0x00f6
                           0000F7   625 _P2INP	=	0x00f7
                           0000FD   626 _P0DIR	=	0x00fd
                           0000FE   627 _P1DIR	=	0x00fe
                           0000FF   628 _P2DIR	=	0x00ff
                           0000AE   629 _PMUX	=	0x00ae
                           000093   630 _MPAGE	=	0x0093
                           000093   631 __XPAGE	=	0x0093
                           0000C7   632 _MEMCTR	=	0x00c7
                           00009F   633 _FMAP	=	0x009f
                           00009F   634 _PSBANK	=	0x009f
                           000091   635 _RFIRQF1	=	0x0091
                           0000D9   636 _RFD	=	0x00d9
                           0000E1   637 _RFST	=	0x00e1
                           0000E9   638 _RFIRQF0	=	0x00e9
                           0000BF   639 _RFERRF	=	0x00bf
                           000095   640 _ST0	=	0x0095
                           000096   641 _ST1	=	0x0096
                           000097   642 _ST2	=	0x0097
                           0000AD   643 _STLOAD	=	0x00ad
                           0000BE   644 _SLEEPCMD	=	0x00be
                           00009D   645 _SLEEPSTA	=	0x009d
                           0000C6   646 _CLKCONCMD	=	0x00c6
                           00009E   647 _CLKCONSTA	=	0x009e
                           0000DA   648 _T1CC0L	=	0x00da
                           0000DB   649 _T1CC0H	=	0x00db
                           0000DC   650 _T1CC1L	=	0x00dc
                           0000DD   651 _T1CC1H	=	0x00dd
                           0000DE   652 _T1CC2L	=	0x00de
                           0000DF   653 _T1CC2H	=	0x00df
                           0000E2   654 _T1CNTL	=	0x00e2
                           0000E3   655 _T1CNTH	=	0x00e3
                           0000E4   656 _T1CTL	=	0x00e4
                           0000E5   657 _T1CCTL0	=	0x00e5
                           0000E6   658 _T1CCTL1	=	0x00e6
                           0000E7   659 _T1CCTL2	=	0x00e7
                           0000AF   660 _T1STAT	=	0x00af
                           000094   661 _T2CTRL	=	0x0094
                           00009C   662 _T2EVTCFG	=	0x009c
                           0000A1   663 _T2IRQF	=	0x00a1
                           0000A2   664 _T2M0	=	0x00a2
                           0000A3   665 _T2M1	=	0x00a3
                           0000A4   666 _T2MOVF0	=	0x00a4
                           0000A5   667 _T2MOVF1	=	0x00a5
                           0000A6   668 _T2MOVF2	=	0x00a6
                           0000A7   669 _T2IRQM	=	0x00a7
                           0000C3   670 _T2MSEL	=	0x00c3
                           0000CA   671 _T3CNT	=	0x00ca
                           0000CB   672 _T3CTL	=	0x00cb
                           0000CC   673 _T3CCTL0	=	0x00cc
                           0000CD   674 _T3CC0	=	0x00cd
                           0000CE   675 _T3CCTL1	=	0x00ce
                           0000CF   676 _T3CC1	=	0x00cf
                           0000EA   677 _T4CNT	=	0x00ea
                           0000EB   678 _T4CTL	=	0x00eb
                           0000EC   679 _T4CCTL0	=	0x00ec
                           0000ED   680 _T4CC0	=	0x00ed
                           0000EE   681 _T4CCTL1	=	0x00ee
                           0000EF   682 _T4CC1	=	0x00ef
                           0000D8   683 _TIMIF	=	0x00d8
                           000086   684 _U0CSR	=	0x0086
                           0000C1   685 _U0DBUF	=	0x00c1
                           0000C2   686 _U0BAUD	=	0x00c2
                           0000C4   687 _U0UCR	=	0x00c4
                           0000C5   688 _U0GCR	=	0x00c5
                           0000F8   689 _U1CSR	=	0x00f8
                           0000F9   690 _U1DBUF	=	0x00f9
                           0000FA   691 _U1BAUD	=	0x00fa
                           0000FB   692 _U1UCR	=	0x00fb
                           0000FC   693 _U1GCR	=	0x00fc
                           0000C9   694 _WDCTL	=	0x00c9
                                    695 ;--------------------------------------------------------
                                    696 ; special function bits
                                    697 ;--------------------------------------------------------
                                    698 	.area RSEG    (ABS,DATA)
      000000                        699 	.org 0x0000
                           000087   700 _P0_7	=	0x0087
                           000086   701 _P0_6	=	0x0086
                           000085   702 _P0_5	=	0x0085
                           000084   703 _P0_4	=	0x0084
                           000083   704 _P0_3	=	0x0083
                           000082   705 _P0_2	=	0x0082
                           000081   706 _P0_1	=	0x0081
                           000080   707 _P0_0	=	0x0080
                           00008F   708 _URX1IF	=	0x008f
                           00008D   709 _ADCIF	=	0x008d
                           00008B   710 _URX0IF	=	0x008b
                           00008A   711 _IT1	=	0x008a
                           000089   712 _RFERRIF	=	0x0089
                           000088   713 _IT0	=	0x0088
                           000097   714 _P1_7	=	0x0097
                           000096   715 _P1_6	=	0x0096
                           000095   716 _P1_5	=	0x0095
                           000094   717 _P1_4	=	0x0094
                           000093   718 _P1_3	=	0x0093
                           000092   719 _P1_2	=	0x0092
                           000091   720 _P1_1	=	0x0091
                           000090   721 _P1_0	=	0x0090
                           000099   722 _ENCIF_1	=	0x0099
                           000098   723 _ENCIF_0	=	0x0098
                           0000A7   724 _P2_7	=	0x00a7
                           0000A6   725 _P2_6	=	0x00a6
                           0000A5   726 _P2_5	=	0x00a5
                           0000A4   727 _P2_4	=	0x00a4
                           0000A3   728 _P2_3	=	0x00a3
                           0000A2   729 _P2_2	=	0x00a2
                           0000A1   730 _P2_1	=	0x00a1
                           0000A0   731 _P2_0	=	0x00a0
                           0000AF   732 _EA	=	0x00af
                           0000AD   733 _STIE	=	0x00ad
                           0000AC   734 _ENCIE	=	0x00ac
                           0000AB   735 _URX1IE	=	0x00ab
                           0000AA   736 _URX0IE	=	0x00aa
                           0000A9   737 _ADCIE	=	0x00a9
                           0000A8   738 _RFERRIE	=	0x00a8
                           0000BD   739 _P0IE	=	0x00bd
                           0000BC   740 _T4IE	=	0x00bc
                           0000BB   741 _T3IE	=	0x00bb
                           0000BA   742 _T2IE	=	0x00ba
                           0000B9   743 _T1IE	=	0x00b9
                           0000B8   744 _DMAIE	=	0x00b8
                           0000C7   745 _STIF	=	0x00c7
                           0000C5   746 _P0IF	=	0x00c5
                           0000C4   747 _T4IF	=	0x00c4
                           0000C3   748 _T3IF	=	0x00c3
                           0000C2   749 _T2IF	=	0x00c2
                           0000C1   750 _T1IF	=	0x00c1
                           0000C0   751 _DMAIF	=	0x00c0
                           0000D7   752 _CY	=	0x00d7
                           0000D6   753 _AC	=	0x00d6
                           0000D5   754 _F0	=	0x00d5
                           0000D4   755 _RS1	=	0x00d4
                           0000D3   756 _RS0	=	0x00d3
                           0000D2   757 _OV	=	0x00d2
                           0000D1   758 _F1	=	0x00d1
                           0000D0   759 _P	=	0x00d0
                           0000E7   760 _ACC_7	=	0x00e7
                           0000E6   761 _ACC_6	=	0x00e6
                           0000E5   762 _ACC_5	=	0x00e5
                           0000E4   763 _ACC_4	=	0x00e4
                           0000E3   764 _ACC_3	=	0x00e3
                           0000E2   765 _ACC_2	=	0x00e2
                           0000E1   766 _ACC_1	=	0x00e1
                           0000E0   767 _ACC_0	=	0x00e0
                           0000EC   768 _WDTIF	=	0x00ec
                           0000EB   769 _P1IF	=	0x00eb
                           0000EA   770 _UTX1IF	=	0x00ea
                           0000E9   771 _UTX0IF	=	0x00e9
                           0000E8   772 _P2IF	=	0x00e8
                           0000F7   773 _B_7	=	0x00f7
                           0000F6   774 _B_6	=	0x00f6
                           0000F5   775 _B_5	=	0x00f5
                           0000F4   776 _B_4	=	0x00f4
                           0000F3   777 _B_3	=	0x00f3
                           0000F2   778 _B_2	=	0x00f2
                           0000F1   779 _B_1	=	0x00f1
                           0000F0   780 _B_0	=	0x00f0
                           0000DE   781 _OVFIM	=	0x00de
                           0000DD   782 _T4CH1IF	=	0x00dd
                           0000DC   783 _T4CH0IF	=	0x00dc
                           0000DB   784 _T4OVFIF	=	0x00db
                           0000DA   785 _T3CH1IF	=	0x00da
                           0000D9   786 _T3CH0IF	=	0x00d9
                           0000D8   787 _T3OVFIF	=	0x00d8
                           0000FF   788 _MODE	=	0x00ff
                           0000FE   789 _RE	=	0x00fe
                           0000FD   790 _SLAVE	=	0x00fd
                           0000FC   791 _FE	=	0x00fc
                           0000FB   792 _ERR	=	0x00fb
                           0000FA   793 _RX_BYTE	=	0x00fa
                           0000F9   794 _TX_BYTE	=	0x00f9
                           0000F8   795 _ACTIVE	=	0x00f8
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable register banks
                                    798 ;--------------------------------------------------------
                                    799 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        800 	.ds 8
                                    801 ;--------------------------------------------------------
                                    802 ; internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area DSEG    (DATA)
                                    805 ;--------------------------------------------------------
                                    806 ; overlayable items in internal ram 
                                    807 ;--------------------------------------------------------
                                    808 ;--------------------------------------------------------
                                    809 ; indirectly addressable internal ram data
                                    810 ;--------------------------------------------------------
                                    811 	.area ISEG    (DATA)
                                    812 ;--------------------------------------------------------
                                    813 ; absolute internal ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area IABS    (ABS,DATA)
                                    816 	.area IABS    (ABS,DATA)
                                    817 ;--------------------------------------------------------
                                    818 ; bit data
                                    819 ;--------------------------------------------------------
                                    820 	.area BSEG    (BIT)
                                    821 ;--------------------------------------------------------
                                    822 ; paged external ram data
                                    823 ;--------------------------------------------------------
                                    824 	.area PSEG    (PAG,XDATA)
                                    825 ;--------------------------------------------------------
                                    826 ; external ram data
                                    827 ;--------------------------------------------------------
                                    828 	.area XSEG    (XDATA)
                           0061A6   829 _MONMUX	=	0x61a6
                           0061A6   830 _OPAMPMC	=	0x61a6
                           006230   831 _I2CCFG	=	0x6230
                           006231   832 _I2CSTAT	=	0x6231
                           006232   833 _I2CDATA	=	0x6232
                           006233   834 _I2CADDR	=	0x6233
                           006234   835 _I2CWC	=	0x6234
                           006235   836 _I2CIO	=	0x6235
                           006243   837 _OBSSEL0	=	0x6243
                           006244   838 _OBSSEL1	=	0x6244
                           006245   839 _OBSSEL2	=	0x6245
                           006246   840 _OBSSEL3	=	0x6246
                           006247   841 _OBSSEL4	=	0x6247
                           006248   842 _OBSSEL5	=	0x6248
                           006249   843 _CHVER	=	0x6249
                           00624A   844 _CHIPID	=	0x624a
                           00624B   845 _TESTREG0	=	0x624b
                           006260   846 _DBGDATA	=	0x6260
                           006262   847 _SRCRC	=	0x6262
                           006264   848 _BATTMON	=	0x6264
                           006265   849 _IVCTRL	=	0x6265
                           006270   850 _FCTL	=	0x6270
                           006271   851 _FADDRL	=	0x6271
                           006272   852 _FADDRH	=	0x6272
                           006273   853 _FWDATA	=	0x6273
                           006276   854 _CHIPINFO0	=	0x6276
                           006277   855 _CHIPINFO1	=	0x6277
                           006281   856 _IRCTL	=	0x6281
                           006290   857 _CLD	=	0x6290
                           0062A0   858 _XX_T1CCTL0	=	0x62a0
                           0062A1   859 _XX_T1CCTL1	=	0x62a1
                           0062A2   860 _XX_T1CCTL2	=	0x62a2
                           0062A3   861 _T1CCTL3	=	0x62a3
                           0062A4   862 _T1CCTL4	=	0x62a4
                           0062A6   863 _XX_T1CC0L	=	0x62a6
                           0062A7   864 _XX_T1CC0H	=	0x62a7
                           0062A8   865 _XX_T1CC1L	=	0x62a8
                           0062A9   866 _XX_T1CC1H	=	0x62a9
                           0062AA   867 _XX_T1CC2L	=	0x62aa
                           0062AB   868 _XX_T1CC2H	=	0x62ab
                           0062AC   869 _T1CC3L	=	0x62ac
                           0062AD   870 _T1CC3H	=	0x62ad
                           0062AE   871 _T1CC4L	=	0x62ae
                           0062AF   872 _T1CC4H	=	0x62af
                           0062B0   873 _STCC	=	0x62b0
                           0062B1   874 _STCS	=	0x62b1
                           0062B2   875 _STCV0	=	0x62b2
                           0062B3   876 _STCV1	=	0x62b3
                           0062B4   877 _STCV2	=	0x62b4
                           0062C0   878 _OPAMPC	=	0x62c0
                           0062C1   879 _OPAMPS	=	0x62c1
                           0062D0   880 _CMPCTL	=	0x62d0
                           006000   881 _RFCORE_RAM	=	0x6000
                           006000   882 _RXFIFO	=	0x6000
                           006080   883 _TXFIFO	=	0x6080
                           006100   884 _SRC_ADDR_TABLE	=	0x6100
                           006160   885 _SRCRESMASK0	=	0x6160
                           006161   886 _SRCRESMASK1	=	0x6161
                           006162   887 _SRCRESMASK2	=	0x6162
                           006163   888 _SRCRESINDEX	=	0x6163
                           006164   889 _SRCEXTPENDEN0	=	0x6164
                           006165   890 _SRCEXTPENDEN1	=	0x6165
                           006166   891 _SRCEXTPENDEN2	=	0x6166
                           006167   892 _SRCSHORTPENDEN0	=	0x6167
                           006168   893 _SRCSHORTPENDEN1	=	0x6168
                           006169   894 _SRCSHORTPENDEN2	=	0x6169
                           00616A   895 _EXT_ADDR0	=	0x616a
                           00616B   896 _EXT_ADDR1	=	0x616b
                           00616C   897 _EXT_ADDR2	=	0x616c
                           00616D   898 _EXT_ADDR3	=	0x616d
                           00616E   899 _EXT_ADDR4	=	0x616e
                           00616F   900 _EXT_ADDR5	=	0x616f
                           006170   901 _EXT_ADDR6	=	0x6170
                           006171   902 _EXT_ADDR7	=	0x6171
                           006172   903 _PAN_ID0	=	0x6172
                           006173   904 _PAN_ID1	=	0x6173
                           006174   905 _SHORT_ADDR0	=	0x6174
                           006175   906 _SHORT_ADDR1	=	0x6175
                           006180   907 _FRMFILT0	=	0x6180
                           006181   908 _FRMFILT1	=	0x6181
                           006182   909 _SRCMATCH	=	0x6182
                           006183   910 _SRCSHORTEN0	=	0x6183
                           006184   911 _SRCSHORTEN1	=	0x6184
                           006185   912 _SRCSHORTEN2	=	0x6185
                           006186   913 _SRCEXTEN0	=	0x6186
                           006187   914 _SRCEXTEN1	=	0x6187
                           006188   915 _SRCEXTEN2	=	0x6188
                           006189   916 _FRMCTRL0	=	0x6189
                           00618A   917 _FRMCTRL1	=	0x618a
                           00618B   918 _RXENABLE	=	0x618b
                           00618C   919 _RXMASKSET	=	0x618c
                           00618D   920 _RXMASKCLR	=	0x618d
                           00618E   921 _FREQTUNE	=	0x618e
                           00618F   922 _FREQCTRL	=	0x618f
                           006190   923 _TXPOWER	=	0x6190
                           006191   924 _TXCTRL	=	0x6191
                           006192   925 _FSMSTAT0	=	0x6192
                           006193   926 _FSMSTAT1	=	0x6193
                           006194   927 _FIFOPCTRL	=	0x6194
                           006195   928 _FSMCTRL	=	0x6195
                           006196   929 _CCACTRL0	=	0x6196
                           006197   930 _CCACTRL1	=	0x6197
                           006198   931 _RSSI	=	0x6198
                           006199   932 _RSSISTAT	=	0x6199
                           00619A   933 _RXFIRST	=	0x619a
                           00619B   934 _RXFIFOCNT	=	0x619b
                           00619C   935 _TXFIFOCNT	=	0x619c
                           00619D   936 _RXFIRST_PTR	=	0x619d
                           00619E   937 _RXLAST_PTR	=	0x619e
                           00619F   938 _RXP1_PTR	=	0x619f
                           0061A1   939 _TXFIRST_PTR	=	0x61a1
                           0061A2   940 _TXLAST_PTR	=	0x61a2
                           0061A3   941 _RFIRQM0	=	0x61a3
                           0061A4   942 _RFIRQM1	=	0x61a4
                           0061A5   943 _RFERRM	=	0x61a5
                           0061A7   944 _RFRND	=	0x61a7
                           0061A8   945 _MDMCTRL0	=	0x61a8
                           0061A9   946 _MDMCTRL1	=	0x61a9
                           0061AA   947 _FREQEST	=	0x61aa
                           0061AB   948 _RXCTRL	=	0x61ab
                           0061AC   949 _FSCTRL	=	0x61ac
                           0061AD   950 _FSCAL0	=	0x61ad
                           0061AE   951 _FSCAL1	=	0x61ae
                           0061AF   952 _FSCAL2	=	0x61af
                           0061B0   953 _FSCAL3	=	0x61b0
                           0061B1   954 _AGCCTRL0	=	0x61b1
                           0061B2   955 _AGCCTRL1	=	0x61b2
                           0061B3   956 _AGCCTRL2	=	0x61b3
                           0061B4   957 _AGCCTRL3	=	0x61b4
                           0061B5   958 _ADCTEST0	=	0x61b5
                           0061B6   959 _ADCTEST1	=	0x61b6
                           0061B7   960 _ADCTEST2	=	0x61b7
                           0061B8   961 _MDMTEST0	=	0x61b8
                           0061B9   962 _MDMTEST1	=	0x61b9
                           0061BA   963 _DACTEST0	=	0x61ba
                           0061BB   964 _DACTEST1	=	0x61bb
                           0061BC   965 _DACTEST2	=	0x61bc
                           0061BD   966 _ATEST	=	0x61bd
                           0061BE   967 _PTEST0	=	0x61be
                           0061BF   968 _PTEST1	=	0x61bf
                           0061FA   969 _TXFILTCFG	=	0x61fa
                           0061EB   970 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   971 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   972 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   973 _CSPPROG0	=	0x61c0
                           0061C1   974 _CSPPROG1	=	0x61c1
                           0061C2   975 _CSPPROG2	=	0x61c2
                           0061C3   976 _CSPPROG3	=	0x61c3
                           0061C4   977 _CSPPROG4	=	0x61c4
                           0061C5   978 _CSPPROG5	=	0x61c5
                           0061C6   979 _CSPPROG6	=	0x61c6
                           0061C7   980 _CSPPROG7	=	0x61c7
                           0061C8   981 _CSPPROG8	=	0x61c8
                           0061C9   982 _CSPPROG9	=	0x61c9
                           0061CA   983 _CSPPROG10	=	0x61ca
                           0061CB   984 _CSPPROG11	=	0x61cb
                           0061CC   985 _CSPPROG12	=	0x61cc
                           0061CD   986 _CSPPROG13	=	0x61cd
                           0061CE   987 _CSPPROG14	=	0x61ce
                           0061CF   988 _CSPPROG15	=	0x61cf
                           0061D0   989 _CSPPROG16	=	0x61d0
                           0061D1   990 _CSPPROG17	=	0x61d1
                           0061D2   991 _CSPPROG18	=	0x61d2
                           0061D3   992 _CSPPROG19	=	0x61d3
                           0061D4   993 _CSPPROG20	=	0x61d4
                           0061D5   994 _CSPPROG21	=	0x61d5
                           0061D6   995 _CSPPROG22	=	0x61d6
                           0061D7   996 _CSPPROG23	=	0x61d7
                           0061E0   997 _CSPCTRL	=	0x61e0
                           0061E1   998 _CSPSTAT	=	0x61e1
                           0061E2   999 _CSPX	=	0x61e2
                           0061E3  1000 _CSPY	=	0x61e3
                           0061E4  1001 _CSPZ	=	0x61e4
                           0061E5  1002 _CSPT	=	0x61e5
                           006200  1003 _USBADDR	=	0x6200
                           006201  1004 _USBPOW	=	0x6201
                           006202  1005 _USBIIF	=	0x6202
                           006204  1006 _USBOIF	=	0x6204
                           006206  1007 _USBCIF	=	0x6206
                           006207  1008 _USBIIE	=	0x6207
                           006209  1009 _USBOIE	=	0x6209
                           00620B  1010 _USBCIE	=	0x620b
                           00620C  1011 _USBFRML	=	0x620c
                           00620D  1012 _USBFRMH	=	0x620d
                           00620E  1013 _USBINDEX	=	0x620e
                           00620F  1014 _USBCTRL	=	0x620f
                           006210  1015 _USBMAXI	=	0x6210
                           006211  1016 _USBCS0	=	0x6211
                           006211  1017 _USBCSIL	=	0x6211
                           006212  1018 _USBCSIH	=	0x6212
                           006213  1019 _USBMAXO	=	0x6213
                           006214  1020 _USBCSOL	=	0x6214
                           006215  1021 _USBCSOH	=	0x6215
                           006216  1022 _USBCNT0	=	0x6216
                           006216  1023 _USBCNTL	=	0x6216
                           006217  1024 _USBCNTH	=	0x6217
                           006220  1025 _USBF0	=	0x6220
                           006222  1026 _USBF1	=	0x6222
                           006224  1027 _USBF2	=	0x6224
                           006226  1028 _USBF3	=	0x6226
                           006228  1029 _USBF4	=	0x6228
                           00622A  1030 _USBF5	=	0x622a
                           007080  1031 _X_P0	=	0x7080
                           007086  1032 _X_U0CSR	=	0x7086
                           007089  1033 _X_P0IFG	=	0x7089
                           00708A  1034 _X_P1IFG	=	0x708a
                           00708B  1035 _X_P2IFG	=	0x708b
                           00708C  1036 _X_PICTL	=	0x708c
                           00708D  1037 _X_P1IEN	=	0x708d
                           00708F  1038 _X_P0INP	=	0x708f
                           007090  1039 _X_P1	=	0x7090
                           007091  1040 _X_RFIRQF1	=	0x7091
                           007093  1041 _X_MPAGE	=	0x7093
                           007093  1042 _X__XPAGE	=	0x7093
                           007094  1043 _X_T2CTRL	=	0x7094
                           007095  1044 _X_ST0	=	0x7095
                           007096  1045 _X_ST1	=	0x7096
                           007097  1046 _X_ST2	=	0x7097
                           00709C  1047 _X_T2EVTCFG	=	0x709c
                           00709D  1048 _X_SLEEPSTA	=	0x709d
                           00709E  1049 _X_CLKCONSTA	=	0x709e
                           00709F  1050 _X_FMAP	=	0x709f
                           00709F  1051 _X_PSBANK	=	0x709f
                           0070A0  1052 _X_P2	=	0x70a0
                           0070A1  1053 _X_T2IRQF	=	0x70a1
                           0070A2  1054 _X_T2M0	=	0x70a2
                           0070A3  1055 _X_T2M1	=	0x70a3
                           0070A4  1056 _X_T2MOVF0	=	0x70a4
                           0070A5  1057 _X_T2MOVF1	=	0x70a5
                           0070A6  1058 _X_T2MOVF2	=	0x70a6
                           0070A7  1059 _X_T2IRQM	=	0x70a7
                           0070AB  1060 _X_P0IEN	=	0x70ab
                           0070AC  1061 _X_P2IEN	=	0x70ac
                           0070AD  1062 _X_STLOAD	=	0x70ad
                           0070AE  1063 _X_PMUX	=	0x70ae
                           0070AF  1064 _X_T1STAT	=	0x70af
                           0070B1  1065 _X_ENCDI	=	0x70b1
                           0070B2  1066 _X_ENCDO	=	0x70b2
                           0070B3  1067 _X_ENCCS	=	0x70b3
                           0070B4  1068 _X_ADCCON1	=	0x70b4
                           0070B5  1069 _X_ADCCON2	=	0x70b5
                           0070B6  1070 _X_ADCCON3	=	0x70b6
                           0070BA  1071 _X_ADCL	=	0x70ba
                           0070BB  1072 _X_ADCH	=	0x70bb
                           0070BC  1073 _X_RNDL	=	0x70bc
                           0070BD  1074 _X_RNDH	=	0x70bd
                           0070BE  1075 _X_SLEEPCMD	=	0x70be
                           0070BF  1076 _X_RFERRF	=	0x70bf
                           0070C1  1077 _X_U0DBUF	=	0x70c1
                           0070C2  1078 _X_U0BAUD	=	0x70c2
                           0070C3  1079 _X_T2MSEL	=	0x70c3
                           0070C4  1080 _X_U0UCR	=	0x70c4
                           0070C5  1081 _X_U0GCR	=	0x70c5
                           0070C6  1082 _X_CLKCONCMD	=	0x70c6
                           0070C7  1083 _X_MEMCTR	=	0x70c7
                           0070C9  1084 _X_WDCTL	=	0x70c9
                           0070CA  1085 _X_T3CNT	=	0x70ca
                           0070CB  1086 _X_T3CTL	=	0x70cb
                           0070CC  1087 _X_T3CCTL0	=	0x70cc
                           0070CD  1088 _X_T3CC0	=	0x70cd
                           0070CE  1089 _X_T3CCTL1	=	0x70ce
                           0070CF  1090 _X_T3CC1	=	0x70cf
                           0070D1  1091 _X_DMAIRQ	=	0x70d1
                           0070D2  1092 _X_DMA1CFGL	=	0x70d2
                           0070D3  1093 _X_DMA1CFGH	=	0x70d3
                           0070D4  1094 _X_DMA0CFGL	=	0x70d4
                           0070D5  1095 _X_DMA0CFGH	=	0x70d5
                           0070D6  1096 _X_DMAARM	=	0x70d6
                           0070D7  1097 _X_DMAREQ	=	0x70d7
                           0070D8  1098 _X_TIMIF	=	0x70d8
                           0070D9  1099 _X_RFD	=	0x70d9
                           0070DA  1100 _X_T1CC0L	=	0x70da
                           0070DB  1101 _X_T1CC0H	=	0x70db
                           0070DC  1102 _X_T1CC1L	=	0x70dc
                           0070DD  1103 _X_T1CC1H	=	0x70dd
                           0070DE  1104 _X_T1CC2L	=	0x70de
                           0070DF  1105 _X_T1CC2H	=	0x70df
                           0070E1  1106 _X_RFST	=	0x70e1
                           0070E2  1107 _X_T1CNTL	=	0x70e2
                           0070E3  1108 _X_T1CNTH	=	0x70e3
                           0070E4  1109 _X_T1CTL	=	0x70e4
                           0070E5  1110 _X_T1CCTL0	=	0x70e5
                           0070E6  1111 _X_T1CCTL1	=	0x70e6
                           0070E7  1112 _X_T1CCTL2	=	0x70e7
                           0070E9  1113 _X_RFIRQF0	=	0x70e9
                           0070EA  1114 _X_T4CNT	=	0x70ea
                           0070EB  1115 _X_T4CTL	=	0x70eb
                           0070EC  1116 _X_T4CCTL0	=	0x70ec
                           0070ED  1117 _X_T4CC0	=	0x70ed
                           0070EE  1118 _X_T4CCTL1	=	0x70ee
                           0070EF  1119 _X_T4CC1	=	0x70ef
                           0070F1  1120 _X_PERCFG	=	0x70f1
                           0070F2  1121 _X_APCFG	=	0x70f2
                           0070F3  1122 _X_P0SEL	=	0x70f3
                           0070F4  1123 _X_P1SEL	=	0x70f4
                           0070F5  1124 _X_P2SEL	=	0x70f5
                           0070F6  1125 _X_P1INP	=	0x70f6
                           0070F7  1126 _X_P2INP	=	0x70f7
                           0070F8  1127 _X_U1CSR	=	0x70f8
                           0070F9  1128 _X_U1DBUF	=	0x70f9
                           0070FA  1129 _X_U1BAUD	=	0x70fa
                           0070FB  1130 _X_U1UCR	=	0x70fb
                           0070FC  1131 _X_U1GCR	=	0x70fc
                           0070FD  1132 _X_P0DIR	=	0x70fd
                           0070FE  1133 _X_P1DIR	=	0x70fe
                           0070FF  1134 _X_P2DIR	=	0x70ff
                           007800  1135 _X_INFOPAGE	=	0x7800
                           00780C  1136 _X_IEEE_ADDR	=	0x780c
                                   1137 ;--------------------------------------------------------
                                   1138 ; absolute external ram data
                                   1139 ;--------------------------------------------------------
                                   1140 	.area XABS    (ABS,XDATA)
                                   1141 ;--------------------------------------------------------
                                   1142 ; external initialized ram data
                                   1143 ;--------------------------------------------------------
                                   1144 	.area XISEG   (XDATA)
      000000                       1145 _mode:
      000000                       1146 	.ds 1
                                   1147 	.area HOME    (CODE)
                                   1148 	.area GSINIT0 (CODE)
                                   1149 	.area GSINIT1 (CODE)
                                   1150 	.area GSINIT2 (CODE)
                                   1151 	.area GSINIT3 (CODE)
                                   1152 	.area GSINIT4 (CODE)
                                   1153 	.area GSINIT5 (CODE)
                                   1154 	.area GSINIT  (CODE)
                                   1155 	.area GSFINAL (CODE)
                                   1156 	.area CSEG    (CODE)
                                   1157 ;--------------------------------------------------------
                                   1158 ; global & static initialisations
                                   1159 ;--------------------------------------------------------
                                   1160 	.area HOME    (CODE)
                                   1161 	.area GSINIT  (CODE)
                                   1162 	.area GSFINAL (CODE)
                                   1163 	.area GSINIT  (CODE)
                                   1164 ;--------------------------------------------------------
                                   1165 ; Home
                                   1166 ;--------------------------------------------------------
                                   1167 	.area HOME    (CODE)
                                   1168 	.area HOME    (CODE)
                                   1169 ;--------------------------------------------------------
                                   1170 ; code
                                   1171 ;--------------------------------------------------------
                                   1172 	.area BANK1   (CODE)
                                   1173 ;------------------------------------------------------------
                                   1174 ;Allocation info for local variables in function 'rpl_get_mode'
                                   1175 ;------------------------------------------------------------
                                   1176 ;	../../core/net/rpl/rpl.c:65: rpl_get_mode(void)
                                   1177 ;	-----------------------------------------
                                   1178 ;	 function rpl_get_mode
                                   1179 ;	-----------------------------------------
      000000                       1180 _rpl_get_mode:
                           000007  1181 	ar7 = 0x07
                           000006  1182 	ar6 = 0x06
                           000005  1183 	ar5 = 0x05
                           000004  1184 	ar4 = 0x04
                           000003  1185 	ar3 = 0x03
                           000002  1186 	ar2 = 0x02
                           000001  1187 	ar1 = 0x01
                           000000  1188 	ar0 = 0x00
                                   1189 ;	../../core/net/rpl/rpl.c:67: return mode;
      000000 90r00r00         [24] 1190 	mov	dptr,#_mode
      000003 E0               [24] 1191 	movx	a,@dptr
      000004 FF               [12] 1192 	mov	r7,a
      000005 F5 82            [12] 1193 	mov	dpl,a
      000007 02r00r00         [24] 1194 	ljmp	__sdcc_banked_ret
                                   1195 ;------------------------------------------------------------
                                   1196 ;Allocation info for local variables in function 'rpl_set_mode'
                                   1197 ;------------------------------------------------------------
                                   1198 ;m                         Allocated to registers r7 
                                   1199 ;oldmode                   Allocated to registers r6 
                                   1200 ;------------------------------------------------------------
                                   1201 ;	../../core/net/rpl/rpl.c:71: rpl_set_mode(enum rpl_mode m)
                                   1202 ;	-----------------------------------------
                                   1203 ;	 function rpl_set_mode
                                   1204 ;	-----------------------------------------
      00000A                       1205 _rpl_set_mode:
      00000A AF 82            [24] 1206 	mov	r7,dpl
                                   1207 ;	../../core/net/rpl/rpl.c:73: enum rpl_mode oldmode = mode;
      00000C 90r00r00         [24] 1208 	mov	dptr,#_mode
      00000F E0               [24] 1209 	movx	a,@dptr
      000010 FE               [12] 1210 	mov	r6,a
                                   1211 ;	../../core/net/rpl/rpl.c:77: if(m == RPL_MODE_MESH) {
      000011 EF               [12] 1212 	mov	a,r7
      000012 70 29            [24] 1213 	jnz	00109$
                                   1214 ;	../../core/net/rpl/rpl.c:84: mode = m;
      000014 90r00r00         [24] 1215 	mov	dptr,#_mode
      000017 EF               [12] 1216 	mov	a,r7
      000018 F0               [24] 1217 	movx	@dptr,a
                                   1218 ;	../../core/net/rpl/rpl.c:86: if(default_instance != NULL) {
      000019 90r00r00         [24] 1219 	mov	dptr,#_default_instance
      00001C E0               [24] 1220 	movx	a,@dptr
      00001D FB               [12] 1221 	mov	r3,a
      00001E A3               [24] 1222 	inc	dptr
      00001F E0               [24] 1223 	movx	a,@dptr
      000020 FC               [12] 1224 	mov	r4,a
      000021 A3               [24] 1225 	inc	dptr
      000022 E0               [24] 1226 	movx	a,@dptr
      000023 FD               [12] 1227 	mov	r5,a
      000024 EB               [12] 1228 	mov	a,r3
      000025 4C               [12] 1229 	orl	a,r4
      000026 60 46            [24] 1230 	jz	00110$
                                   1231 ;	../../core/net/rpl/rpl.c:87: rpl_schedule_dao_immediately(default_instance);
      000028 8B 82            [24] 1232 	mov	dpl,r3
      00002A 8C 83            [24] 1233 	mov	dph,r4
      00002C 8D F0            [24] 1234 	mov	b,r5
      00002E C0 06            [24] 1235 	push	ar6
      000030 78r00            [12] 1236 	mov	r0,#_rpl_schedule_dao_immediately
      000032 79s00            [12] 1237 	mov	r1,#(_rpl_schedule_dao_immediately >> 8)
      000034 7As00            [12] 1238 	mov	r2,#(_rpl_schedule_dao_immediately >> 16)
      000036 12r00r00         [24] 1239 	lcall	__sdcc_banked_call
      000039 D0 06            [24] 1240 	pop	ar6
      00003B 80 31            [24] 1241 	sjmp	00110$
      00003D                       1242 00109$:
                                   1243 ;	../../core/net/rpl/rpl.c:89: } else if(m == RPL_MODE_FEATHER) {
      00003D BF 01 29         [24] 1244 	cjne	r7,#0x01,00106$
                                   1245 ;	../../core/net/rpl/rpl.c:92: mode = m;
      000040 90r00r00         [24] 1246 	mov	dptr,#_mode
      000043 EF               [12] 1247 	mov	a,r7
      000044 F0               [24] 1248 	movx	@dptr,a
                                   1249 ;	../../core/net/rpl/rpl.c:93: if(default_instance != NULL) {
      000045 90r00r00         [24] 1250 	mov	dptr,#_default_instance
      000048 E0               [24] 1251 	movx	a,@dptr
      000049 FB               [12] 1252 	mov	r3,a
      00004A A3               [24] 1253 	inc	dptr
      00004B E0               [24] 1254 	movx	a,@dptr
      00004C FC               [12] 1255 	mov	r4,a
      00004D A3               [24] 1256 	inc	dptr
      00004E E0               [24] 1257 	movx	a,@dptr
      00004F FD               [12] 1258 	mov	r5,a
      000050 EB               [12] 1259 	mov	a,r3
      000051 4C               [12] 1260 	orl	a,r4
      000052 60 1A            [24] 1261 	jz	00110$
                                   1262 ;	../../core/net/rpl/rpl.c:94: rpl_cancel_dao(default_instance);
      000054 8B 82            [24] 1263 	mov	dpl,r3
      000056 8C 83            [24] 1264 	mov	dph,r4
      000058 8D F0            [24] 1265 	mov	b,r5
      00005A C0 06            [24] 1266 	push	ar6
      00005C 78r00            [12] 1267 	mov	r0,#_rpl_cancel_dao
      00005E 79s00            [12] 1268 	mov	r1,#(_rpl_cancel_dao >> 8)
      000060 7As00            [12] 1269 	mov	r2,#(_rpl_cancel_dao >> 16)
      000062 12r00r00         [24] 1270 	lcall	__sdcc_banked_call
      000065 D0 06            [24] 1271 	pop	ar6
      000067 80 05            [24] 1272 	sjmp	00110$
      000069                       1273 00106$:
                                   1274 ;	../../core/net/rpl/rpl.c:98: mode = m;
      000069 90r00r00         [24] 1275 	mov	dptr,#_mode
      00006C EF               [12] 1276 	mov	a,r7
      00006D F0               [24] 1277 	movx	@dptr,a
      00006E                       1278 00110$:
                                   1279 ;	../../core/net/rpl/rpl.c:101: return oldmode;
      00006E 8E 82            [24] 1280 	mov	dpl,r6
      000070 02r00r00         [24] 1281 	ljmp	__sdcc_banked_ret
                                   1282 ;------------------------------------------------------------
                                   1283 ;Allocation info for local variables in function 'rpl_purge_routes'
                                   1284 ;------------------------------------------------------------
                                   1285 ;r                         Allocated to stack - sp -21
                                   1286 ;prefix                    Allocated to stack - sp -18
                                   1287 ;dag                       Allocated to stack - sp -2
                                   1288 ;sloc0                     Allocated to stack - sp -28
                                   1289 ;sloc1                     Allocated to stack - sp -24
                                   1290 ;------------------------------------------------------------
                                   1291 ;	../../core/net/rpl/rpl.c:105: rpl_purge_routes(void)
                                   1292 ;	-----------------------------------------
                                   1293 ;	 function rpl_purge_routes
                                   1294 ;	-----------------------------------------
      000073                       1295 _rpl_purge_routes:
      000073 E5 81            [12] 1296 	mov	a,sp
      000075 24 1D            [12] 1297 	add	a,#0x1D
      000077 F5 81            [12] 1298 	mov	sp,a
                                   1299 ;	../../core/net/rpl/rpl.c:115: r = uip_ds6_route_head();
      000079 78r00            [12] 1300 	mov	r0,#_uip_ds6_route_head
      00007B 79s00            [12] 1301 	mov	r1,#(_uip_ds6_route_head >> 8)
      00007D 7As00            [12] 1302 	mov	r2,#(_uip_ds6_route_head >> 16)
      00007F 12r00r00         [24] 1303 	lcall	__sdcc_banked_call
      000082 AD 82            [24] 1304 	mov	r5,dpl
      000084 AE 83            [24] 1305 	mov	r6,dph
      000086 AF F0            [24] 1306 	mov	r7,b
      000088 E5 81            [12] 1307 	mov	a,sp
      00008A 24 EB            [12] 1308 	add	a,#0xeb
      00008C F8               [12] 1309 	mov	r0,a
      00008D A6 05            [24] 1310 	mov	@r0,ar5
      00008F 08               [12] 1311 	inc	r0
      000090 A6 06            [24] 1312 	mov	@r0,ar6
      000092 08               [12] 1313 	inc	r0
      000093 A6 07            [24] 1314 	mov	@r0,ar7
                                   1315 ;	../../core/net/rpl/rpl.c:117: while(r != NULL) {
      000095                       1316 00103$:
      000095 E5 81            [12] 1317 	mov	a,sp
      000097 24 EB            [12] 1318 	add	a,#0xeb
      000099 F8               [12] 1319 	mov	r0,a
      00009A E6               [12] 1320 	mov	a,@r0
      00009B 08               [12] 1321 	inc	r0
      00009C 46               [12] 1322 	orl	a,@r0
      00009D 70 03            [24] 1323 	jnz	00137$
      00009F 02r01r41         [24] 1324 	ljmp	00105$
      0000A2                       1325 00137$:
                                   1326 ;	../../core/net/rpl/rpl.c:118: if(r->state.lifetime >= 1) {
      0000A2 E5 81            [12] 1327 	mov	a,sp
      0000A4 24 EB            [12] 1328 	add	a,#0xeb
      0000A6 F8               [12] 1329 	mov	r0,a
      0000A7 E5 81            [12] 1330 	mov	a,sp
      0000A9 24 E8            [12] 1331 	add	a,#0xe8
      0000AB F9               [12] 1332 	mov	r1,a
      0000AC 74 16            [12] 1333 	mov	a,#0x16
      0000AE 26               [12] 1334 	add	a,@r0
      0000AF F7               [12] 1335 	mov	@r1,a
      0000B0 E4               [12] 1336 	clr	a
      0000B1 08               [12] 1337 	inc	r0
      0000B2 36               [12] 1338 	addc	a,@r0
      0000B3 09               [12] 1339 	inc	r1
      0000B4 F7               [12] 1340 	mov	@r1,a
      0000B5 08               [12] 1341 	inc	r0
      0000B6 09               [12] 1342 	inc	r1
      0000B7 E6               [12] 1343 	mov	a,@r0
      0000B8 F7               [12] 1344 	mov	@r1,a
      0000B9 E5 81            [12] 1345 	mov	a,sp
      0000BB 24 E8            [12] 1346 	add	a,#0xe8
      0000BD F8               [12] 1347 	mov	r0,a
      0000BE 86 82            [24] 1348 	mov	dpl,@r0
      0000C0 08               [12] 1349 	inc	r0
      0000C1 86 83            [24] 1350 	mov	dph,@r0
      0000C3 08               [12] 1351 	inc	r0
      0000C4 86 F0            [24] 1352 	mov	b,@r0
      0000C6 12r00r00         [24] 1353 	lcall	__gptrget
      0000C9 FC               [12] 1354 	mov	r4,a
      0000CA A3               [24] 1355 	inc	dptr
      0000CB 12r00r00         [24] 1356 	lcall	__gptrget
      0000CE FD               [12] 1357 	mov	r5,a
      0000CF A3               [24] 1358 	inc	dptr
      0000D0 12r00r00         [24] 1359 	lcall	__gptrget
      0000D3 FE               [12] 1360 	mov	r6,a
      0000D4 A3               [24] 1361 	inc	dptr
      0000D5 12r00r00         [24] 1362 	lcall	__gptrget
      0000D8 FF               [12] 1363 	mov	r7,a
      0000D9 C3               [12] 1364 	clr	c
      0000DA EC               [12] 1365 	mov	a,r4
      0000DB 94 01            [12] 1366 	subb	a,#0x01
      0000DD ED               [12] 1367 	mov	a,r5
      0000DE 94 00            [12] 1368 	subb	a,#0x00
      0000E0 EE               [12] 1369 	mov	a,r6
      0000E1 94 00            [12] 1370 	subb	a,#0x00
      0000E3 EF               [12] 1371 	mov	a,r7
      0000E4 94 00            [12] 1372 	subb	a,#0x00
      0000E6 40 2D            [24] 1373 	jc	00102$
                                   1374 ;	../../core/net/rpl/rpl.c:124: r->state.lifetime--;
      0000E8 1C               [12] 1375 	dec	r4
      0000E9 BC FF 09         [24] 1376 	cjne	r4,#0xFF,00139$
      0000EC 1D               [12] 1377 	dec	r5
      0000ED BD FF 05         [24] 1378 	cjne	r5,#0xFF,00139$
      0000F0 1E               [12] 1379 	dec	r6
      0000F1 BE FF 01         [24] 1380 	cjne	r6,#0xFF,00139$
      0000F4 1F               [12] 1381 	dec	r7
      0000F5                       1382 00139$:
      0000F5 E5 81            [12] 1383 	mov	a,sp
      0000F7 24 E8            [12] 1384 	add	a,#0xe8
      0000F9 F8               [12] 1385 	mov	r0,a
      0000FA 86 82            [24] 1386 	mov	dpl,@r0
      0000FC 08               [12] 1387 	inc	r0
      0000FD 86 83            [24] 1388 	mov	dph,@r0
      0000FF 08               [12] 1389 	inc	r0
      000100 86 F0            [24] 1390 	mov	b,@r0
      000102 EC               [12] 1391 	mov	a,r4
      000103 12r00r00         [24] 1392 	lcall	__gptrput
      000106 A3               [24] 1393 	inc	dptr
      000107 ED               [12] 1394 	mov	a,r5
      000108 12r00r00         [24] 1395 	lcall	__gptrput
      00010B A3               [24] 1396 	inc	dptr
      00010C EE               [12] 1397 	mov	a,r6
      00010D 12r00r00         [24] 1398 	lcall	__gptrput
      000110 A3               [24] 1399 	inc	dptr
      000111 EF               [12] 1400 	mov	a,r7
      000112 12r00r00         [24] 1401 	lcall	__gptrput
      000115                       1402 00102$:
                                   1403 ;	../../core/net/rpl/rpl.c:126: r = uip_ds6_route_next(r);
      000115 E5 81            [12] 1404 	mov	a,sp
      000117 24 EB            [12] 1405 	add	a,#0xeb
      000119 F8               [12] 1406 	mov	r0,a
      00011A 86 82            [24] 1407 	mov	dpl,@r0
      00011C 08               [12] 1408 	inc	r0
      00011D 86 83            [24] 1409 	mov	dph,@r0
      00011F 08               [12] 1410 	inc	r0
      000120 86 F0            [24] 1411 	mov	b,@r0
      000122 78r00            [12] 1412 	mov	r0,#_uip_ds6_route_next
      000124 79s00            [12] 1413 	mov	r1,#(_uip_ds6_route_next >> 8)
      000126 7As00            [12] 1414 	mov	r2,#(_uip_ds6_route_next >> 16)
      000128 12r00r00         [24] 1415 	lcall	__sdcc_banked_call
      00012B AD 82            [24] 1416 	mov	r5,dpl
      00012D AE 83            [24] 1417 	mov	r6,dph
      00012F AF F0            [24] 1418 	mov	r7,b
      000131 E5 81            [12] 1419 	mov	a,sp
      000133 24 EB            [12] 1420 	add	a,#0xeb
      000135 F8               [12] 1421 	mov	r0,a
      000136 A6 05            [24] 1422 	mov	@r0,ar5
      000138 08               [12] 1423 	inc	r0
      000139 A6 06            [24] 1424 	mov	@r0,ar6
      00013B 08               [12] 1425 	inc	r0
      00013C A6 07            [24] 1426 	mov	@r0,ar7
      00013E 02r00r95         [24] 1427 	ljmp	00103$
      000141                       1428 00105$:
                                   1429 ;	../../core/net/rpl/rpl.c:130: r = uip_ds6_route_head();
      000141 78r00            [12] 1430 	mov	r0,#_uip_ds6_route_head
      000143 79s00            [12] 1431 	mov	r1,#(_uip_ds6_route_head >> 8)
      000145 7As00            [12] 1432 	mov	r2,#(_uip_ds6_route_head >> 16)
      000147 12r00r00         [24] 1433 	lcall	__sdcc_banked_call
      00014A AD 82            [24] 1434 	mov	r5,dpl
      00014C AE 83            [24] 1435 	mov	r6,dph
      00014E AF F0            [24] 1436 	mov	r7,b
      000150 E5 81            [12] 1437 	mov	a,sp
      000152 24 EB            [12] 1438 	add	a,#0xeb
      000154 F8               [12] 1439 	mov	r0,a
      000155 A6 05            [24] 1440 	mov	@r0,ar5
      000157 08               [12] 1441 	inc	r0
      000158 A6 06            [24] 1442 	mov	@r0,ar6
      00015A 08               [12] 1443 	inc	r0
      00015B A6 07            [24] 1444 	mov	@r0,ar7
                                   1445 ;	../../core/net/rpl/rpl.c:132: while(r != NULL) {
      00015D                       1446 00111$:
      00015D E5 81            [12] 1447 	mov	a,sp
      00015F 24 EB            [12] 1448 	add	a,#0xeb
      000161 F8               [12] 1449 	mov	r0,a
      000162 E6               [12] 1450 	mov	a,@r0
      000163 08               [12] 1451 	inc	r0
      000164 46               [12] 1452 	orl	a,@r0
      000165 70 03            [24] 1453 	jnz	00140$
      000167 02r03r05         [24] 1454 	ljmp	00114$
      00016A                       1455 00140$:
                                   1456 ;	../../core/net/rpl/rpl.c:133: if(r->state.lifetime < 1) {
      00016A E5 81            [12] 1457 	mov	a,sp
      00016C 24 EB            [12] 1458 	add	a,#0xeb
      00016E F8               [12] 1459 	mov	r0,a
      00016F 74 16            [12] 1460 	mov	a,#0x16
      000171 26               [12] 1461 	add	a,@r0
      000172 FD               [12] 1462 	mov	r5,a
      000173 E4               [12] 1463 	clr	a
      000174 08               [12] 1464 	inc	r0
      000175 36               [12] 1465 	addc	a,@r0
      000176 FE               [12] 1466 	mov	r6,a
      000177 08               [12] 1467 	inc	r0
      000178 86 07            [24] 1468 	mov	ar7,@r0
      00017A 8D 82            [24] 1469 	mov	dpl,r5
      00017C 8E 83            [24] 1470 	mov	dph,r6
      00017E 8F F0            [24] 1471 	mov	b,r7
      000180 12r00r00         [24] 1472 	lcall	__gptrget
      000183 FD               [12] 1473 	mov	r5,a
      000184 A3               [24] 1474 	inc	dptr
      000185 12r00r00         [24] 1475 	lcall	__gptrget
      000188 FE               [12] 1476 	mov	r6,a
      000189 A3               [24] 1477 	inc	dptr
      00018A 12r00r00         [24] 1478 	lcall	__gptrget
      00018D FF               [12] 1479 	mov	r7,a
      00018E A3               [24] 1480 	inc	dptr
      00018F 12r00r00         [24] 1481 	lcall	__gptrget
      000192 FC               [12] 1482 	mov	r4,a
      000193 C3               [12] 1483 	clr	c
      000194 ED               [12] 1484 	mov	a,r5
      000195 94 01            [12] 1485 	subb	a,#0x01
      000197 EE               [12] 1486 	mov	a,r6
      000198 94 00            [12] 1487 	subb	a,#0x00
      00019A EF               [12] 1488 	mov	a,r7
      00019B 94 00            [12] 1489 	subb	a,#0x00
      00019D EC               [12] 1490 	mov	a,r4
      00019E 94 00            [12] 1491 	subb	a,#0x00
      0001A0 40 03            [24] 1492 	jc	00141$
      0001A2 02r02rD9         [24] 1493 	ljmp	00109$
      0001A5                       1494 00141$:
                                   1495 ;	../../core/net/rpl/rpl.c:136: uip_ipaddr_copy(&prefix, &r->ipaddr);
      0001A5 E5 81            [12] 1496 	mov	a,sp
      0001A7 24 EB            [12] 1497 	add	a,#0xeb
      0001A9 F8               [12] 1498 	mov	r0,a
      0001AA 74 06            [12] 1499 	mov	a,#0x06
      0001AC 26               [12] 1500 	add	a,@r0
      0001AD FD               [12] 1501 	mov	r5,a
      0001AE E4               [12] 1502 	clr	a
      0001AF 08               [12] 1503 	inc	r0
      0001B0 36               [12] 1504 	addc	a,@r0
      0001B1 FE               [12] 1505 	mov	r6,a
      0001B2 08               [12] 1506 	inc	r0
      0001B3 86 07            [24] 1507 	mov	ar7,@r0
      0001B5 8F 04            [24] 1508 	mov	ar4,r7
      0001B7 E5 81            [12] 1509 	mov	a,sp
      0001B9 24 E4            [12] 1510 	add	a,#0xe4
      0001BB F8               [12] 1511 	mov	r0,a
      0001BC E5 81            [12] 1512 	mov	a,sp
      0001BE 24 EE            [12] 1513 	add	a,#0xEE
      0001C0 F6               [12] 1514 	mov	@r0,a
      0001C1 E5 81            [12] 1515 	mov	a,sp
      0001C3 24 E4            [12] 1516 	add	a,#0xe4
      0001C5 F8               [12] 1517 	mov	r0,a
      0001C6 86 02            [24] 1518 	mov	ar2,@r0
      0001C8 7B 00            [12] 1519 	mov	r3,#0x00
      0001CA 7F 40            [12] 1520 	mov	r7,#0x40
      0001CC 74 10            [12] 1521 	mov	a,#0x10
      0001CE C0 E0            [24] 1522 	push	acc
      0001D0 E4               [12] 1523 	clr	a
      0001D1 C0 E0            [24] 1524 	push	acc
      0001D3 C0 05            [24] 1525 	push	ar5
      0001D5 C0 06            [24] 1526 	push	ar6
      0001D7 C0 04            [24] 1527 	push	ar4
      0001D9 8A 82            [24] 1528 	mov	dpl,r2
      0001DB 8B 83            [24] 1529 	mov	dph,r3
      0001DD 8F F0            [24] 1530 	mov	b,r7
      0001DF 78r00            [12] 1531 	mov	r0,#_memcpy
      0001E1 79s00            [12] 1532 	mov	r1,#(_memcpy >> 8)
      0001E3 7As00            [12] 1533 	mov	r2,#(_memcpy >> 16)
      0001E5 12r00r00         [24] 1534 	lcall	__sdcc_banked_call
      0001E8 E5 81            [12] 1535 	mov	a,sp
      0001EA 24 FB            [12] 1536 	add	a,#0xfb
                                   1537 ;	../../core/net/rpl/rpl.c:137: uip_ds6_route_rm(r);
      0001EC F5 81            [12] 1538 	mov	sp,a
      0001EE 24 EB            [12] 1539 	add	a,#0xeb
      0001F0 F8               [12] 1540 	mov	r0,a
      0001F1 86 82            [24] 1541 	mov	dpl,@r0
      0001F3 08               [12] 1542 	inc	r0
      0001F4 86 83            [24] 1543 	mov	dph,@r0
      0001F6 08               [12] 1544 	inc	r0
      0001F7 86 F0            [24] 1545 	mov	b,@r0
      0001F9 78r00            [12] 1546 	mov	r0,#_uip_ds6_route_rm
      0001FB 79s00            [12] 1547 	mov	r1,#(_uip_ds6_route_rm >> 8)
      0001FD 7As00            [12] 1548 	mov	r2,#(_uip_ds6_route_rm >> 16)
      0001FF 12r00r00         [24] 1549 	lcall	__sdcc_banked_call
                                   1550 ;	../../core/net/rpl/rpl.c:138: r = uip_ds6_route_head();
      000202 78r00            [12] 1551 	mov	r0,#_uip_ds6_route_head
      000204 79s00            [12] 1552 	mov	r1,#(_uip_ds6_route_head >> 8)
      000206 7As00            [12] 1553 	mov	r2,#(_uip_ds6_route_head >> 16)
      000208 12r00r00         [24] 1554 	lcall	__sdcc_banked_call
      00020B AD 82            [24] 1555 	mov	r5,dpl
      00020D AE 83            [24] 1556 	mov	r6,dph
      00020F AF F0            [24] 1557 	mov	r7,b
      000211 E5 81            [12] 1558 	mov	a,sp
      000213 24 EB            [12] 1559 	add	a,#0xeb
      000215 F8               [12] 1560 	mov	r0,a
      000216 A6 05            [24] 1561 	mov	@r0,ar5
      000218 08               [12] 1562 	inc	r0
      000219 A6 06            [24] 1563 	mov	@r0,ar6
      00021B 08               [12] 1564 	inc	r0
      00021C A6 07            [24] 1565 	mov	@r0,ar7
                                   1566 ;	../../core/net/rpl/rpl.c:141: dag = default_instance->current_dag;
      00021E 90r00r00         [24] 1567 	mov	dptr,#_default_instance
      000221 E0               [24] 1568 	movx	a,@dptr
      000222 FD               [12] 1569 	mov	r5,a
      000223 A3               [24] 1570 	inc	dptr
      000224 E0               [24] 1571 	movx	a,@dptr
      000225 FE               [12] 1572 	mov	r6,a
      000226 A3               [24] 1573 	inc	dptr
      000227 E0               [24] 1574 	movx	a,@dptr
      000228 FF               [12] 1575 	mov	r7,a
      000229 74 0A            [12] 1576 	mov	a,#0x0A
      00022B 2D               [12] 1577 	add	a,r5
      00022C FA               [12] 1578 	mov	r2,a
      00022D E4               [12] 1579 	clr	a
      00022E 3E               [12] 1580 	addc	a,r6
      00022F FB               [12] 1581 	mov	r3,a
      000230 8F 04            [24] 1582 	mov	ar4,r7
      000232 8A 82            [24] 1583 	mov	dpl,r2
      000234 8B 83            [24] 1584 	mov	dph,r3
      000236 8C F0            [24] 1585 	mov	b,r4
      000238 A8 81            [24] 1586 	mov	r0,sp
      00023A 18               [12] 1587 	dec	r0
      00023B 18               [12] 1588 	dec	r0
      00023C 12r00r00         [24] 1589 	lcall	__gptrget
      00023F F6               [12] 1590 	mov	@r0,a
      000240 A3               [24] 1591 	inc	dptr
      000241 12r00r00         [24] 1592 	lcall	__gptrget
      000244 08               [12] 1593 	inc	r0
      000245 F6               [12] 1594 	mov	@r0,a
      000246 A3               [24] 1595 	inc	dptr
      000247 12r00r00         [24] 1596 	lcall	__gptrget
      00024A 08               [12] 1597 	inc	r0
      00024B F6               [12] 1598 	mov	@r0,a
                                   1599 ;	../../core/net/rpl/rpl.c:143: if(dag->rank != ROOT_RANK(default_instance)) {
      00024C A8 81            [24] 1600 	mov	r0,sp
      00024E 18               [12] 1601 	dec	r0
      00024F 18               [12] 1602 	dec	r0
      000250 74 1A            [12] 1603 	mov	a,#0x1A
      000252 26               [12] 1604 	add	a,@r0
      000253 FA               [12] 1605 	mov	r2,a
      000254 E4               [12] 1606 	clr	a
      000255 08               [12] 1607 	inc	r0
      000256 36               [12] 1608 	addc	a,@r0
      000257 FB               [12] 1609 	mov	r3,a
      000258 08               [12] 1610 	inc	r0
      000259 86 04            [24] 1611 	mov	ar4,@r0
      00025B 8A 82            [24] 1612 	mov	dpl,r2
      00025D 8B 83            [24] 1613 	mov	dph,r3
      00025F 8C F0            [24] 1614 	mov	b,r4
      000261 12r00r00         [24] 1615 	lcall	__gptrget
      000264 FA               [12] 1616 	mov	r2,a
      000265 A3               [24] 1617 	inc	dptr
      000266 12r00r00         [24] 1618 	lcall	__gptrget
      000269 FB               [12] 1619 	mov	r3,a
      00026A 74 87            [12] 1620 	mov	a,#0x87
      00026C 2D               [12] 1621 	add	a,r5
      00026D FD               [12] 1622 	mov	r5,a
      00026E E4               [12] 1623 	clr	a
      00026F 3E               [12] 1624 	addc	a,r6
      000270 FE               [12] 1625 	mov	r6,a
      000271 8D 82            [24] 1626 	mov	dpl,r5
      000273 8E 83            [24] 1627 	mov	dph,r6
      000275 8F F0            [24] 1628 	mov	b,r7
      000277 12r00r00         [24] 1629 	lcall	__gptrget
      00027A FD               [12] 1630 	mov	r5,a
      00027B A3               [24] 1631 	inc	dptr
      00027C 12r00r00         [24] 1632 	lcall	__gptrget
      00027F FE               [12] 1633 	mov	r6,a
      000280 EA               [12] 1634 	mov	a,r2
      000281 B5 05 07         [24] 1635 	cjne	a,ar5,00142$
      000284 EB               [12] 1636 	mov	a,r3
      000285 B5 06 03         [24] 1637 	cjne	a,ar6,00142$
      000288 02r01r5D         [24] 1638 	ljmp	00111$
      00028B                       1639 00142$:
                                   1640 ;	../../core/net/rpl/rpl.c:145: dao_output_target(dag->preferred_parent, &prefix, RPL_ZERO_LIFETIME);
      00028B E5 81            [12] 1641 	mov	a,sp
      00028D 24 E4            [12] 1642 	add	a,#0xe4
      00028F F8               [12] 1643 	mov	r0,a
      000290 86 07            [24] 1644 	mov	ar7,@r0
      000292 7E 00            [12] 1645 	mov	r6,#0x00
      000294 7D 40            [12] 1646 	mov	r5,#0x40
      000296 A8 81            [24] 1647 	mov	r0,sp
      000298 18               [12] 1648 	dec	r0
      000299 18               [12] 1649 	dec	r0
      00029A 74 17            [12] 1650 	mov	a,#0x17
      00029C 26               [12] 1651 	add	a,@r0
      00029D FA               [12] 1652 	mov	r2,a
      00029E E4               [12] 1653 	clr	a
      00029F 08               [12] 1654 	inc	r0
      0002A0 36               [12] 1655 	addc	a,@r0
      0002A1 FB               [12] 1656 	mov	r3,a
      0002A2 08               [12] 1657 	inc	r0
      0002A3 86 04            [24] 1658 	mov	ar4,@r0
      0002A5 8A 82            [24] 1659 	mov	dpl,r2
      0002A7 8B 83            [24] 1660 	mov	dph,r3
      0002A9 8C F0            [24] 1661 	mov	b,r4
      0002AB 12r00r00         [24] 1662 	lcall	__gptrget
      0002AE FA               [12] 1663 	mov	r2,a
      0002AF A3               [24] 1664 	inc	dptr
      0002B0 12r00r00         [24] 1665 	lcall	__gptrget
      0002B3 FB               [12] 1666 	mov	r3,a
      0002B4 A3               [24] 1667 	inc	dptr
      0002B5 12r00r00         [24] 1668 	lcall	__gptrget
      0002B8 FC               [12] 1669 	mov	r4,a
      0002B9 E4               [12] 1670 	clr	a
      0002BA C0 E0            [24] 1671 	push	acc
      0002BC C0 07            [24] 1672 	push	ar7
      0002BE C0 06            [24] 1673 	push	ar6
      0002C0 C0 05            [24] 1674 	push	ar5
      0002C2 8A 82            [24] 1675 	mov	dpl,r2
      0002C4 8B 83            [24] 1676 	mov	dph,r3
      0002C6 8C F0            [24] 1677 	mov	b,r4
      0002C8 78r00            [12] 1678 	mov	r0,#_dao_output_target
      0002CA 79s00            [12] 1679 	mov	r1,#(_dao_output_target >> 8)
      0002CC 7As00            [12] 1680 	mov	r2,#(_dao_output_target >> 16)
      0002CE 12r00r00         [24] 1681 	lcall	__sdcc_banked_call
      0002D1 E5 81            [12] 1682 	mov	a,sp
      0002D3 24 FC            [12] 1683 	add	a,#0xfc
      0002D5 F5 81            [12] 1684 	mov	sp,a
                                   1685 ;	../../core/net/rpl/rpl.c:147: return;
      0002D7 80 2C            [24] 1686 	sjmp	00114$
      0002D9                       1687 00109$:
                                   1688 ;	../../core/net/rpl/rpl.c:151: r = uip_ds6_route_next(r);
      0002D9 E5 81            [12] 1689 	mov	a,sp
      0002DB 24 EB            [12] 1690 	add	a,#0xeb
      0002DD F8               [12] 1691 	mov	r0,a
      0002DE 86 82            [24] 1692 	mov	dpl,@r0
      0002E0 08               [12] 1693 	inc	r0
      0002E1 86 83            [24] 1694 	mov	dph,@r0
      0002E3 08               [12] 1695 	inc	r0
      0002E4 86 F0            [24] 1696 	mov	b,@r0
      0002E6 78r00            [12] 1697 	mov	r0,#_uip_ds6_route_next
      0002E8 79s00            [12] 1698 	mov	r1,#(_uip_ds6_route_next >> 8)
      0002EA 7As00            [12] 1699 	mov	r2,#(_uip_ds6_route_next >> 16)
      0002EC 12r00r00         [24] 1700 	lcall	__sdcc_banked_call
      0002EF AD 82            [24] 1701 	mov	r5,dpl
      0002F1 AE 83            [24] 1702 	mov	r6,dph
      0002F3 AF F0            [24] 1703 	mov	r7,b
      0002F5 E5 81            [12] 1704 	mov	a,sp
      0002F7 24 EB            [12] 1705 	add	a,#0xeb
      0002F9 F8               [12] 1706 	mov	r0,a
      0002FA A6 05            [24] 1707 	mov	@r0,ar5
      0002FC 08               [12] 1708 	inc	r0
      0002FD A6 06            [24] 1709 	mov	@r0,ar6
      0002FF 08               [12] 1710 	inc	r0
      000300 A6 07            [24] 1711 	mov	@r0,ar7
      000302 02r01r5D         [24] 1712 	ljmp	00111$
      000305                       1713 00114$:
      000305 E5 81            [12] 1714 	mov	a,sp
      000307 24 E3            [12] 1715 	add	a,#0xE3
      000309 F5 81            [12] 1716 	mov	sp,a
      00030B 02r00r00         [24] 1717 	ljmp	__sdcc_banked_ret
                                   1718 ;------------------------------------------------------------
                                   1719 ;Allocation info for local variables in function 'rpl_remove_routes'
                                   1720 ;------------------------------------------------------------
                                   1721 ;dag                       Allocated to stack - sp -2
                                   1722 ;r                         Allocated to registers r2 r3 r4 
                                   1723 ;------------------------------------------------------------
                                   1724 ;	../../core/net/rpl/rpl.c:171: rpl_remove_routes(rpl_dag_t *dag)
                                   1725 ;	-----------------------------------------
                                   1726 ;	 function rpl_remove_routes
                                   1727 ;	-----------------------------------------
      00030E                       1728 _rpl_remove_routes:
      00030E C0 82            [24] 1729 	push	dpl
      000310 C0 83            [24] 1730 	push	dph
      000312 C0 F0            [24] 1731 	push	b
                                   1732 ;	../../core/net/rpl/rpl.c:178: r = uip_ds6_route_head();
      000314 78r00            [12] 1733 	mov	r0,#_uip_ds6_route_head
      000316 79s00            [12] 1734 	mov	r1,#(_uip_ds6_route_head >> 8)
      000318 7As00            [12] 1735 	mov	r2,#(_uip_ds6_route_head >> 16)
      00031A 12r00r00         [24] 1736 	lcall	__sdcc_banked_call
      00031D AA 82            [24] 1737 	mov	r2,dpl
      00031F AB 83            [24] 1738 	mov	r3,dph
      000321 AC F0            [24] 1739 	mov	r4,b
                                   1740 ;	../../core/net/rpl/rpl.c:180: while(r != NULL) {
      000323                       1741 00104$:
      000323 EA               [12] 1742 	mov	a,r2
      000324 4B               [12] 1743 	orl	a,r3
      000325 70 03            [24] 1744 	jnz	00118$
      000327 02r03rCB         [24] 1745 	ljmp	00107$
      00032A                       1746 00118$:
                                   1747 ;	../../core/net/rpl/rpl.c:181: if(r->state.dag == dag) {
      00032A 74 16            [12] 1748 	mov	a,#0x16
      00032C 2A               [12] 1749 	add	a,r2
      00032D FD               [12] 1750 	mov	r5,a
      00032E E4               [12] 1751 	clr	a
      00032F 3B               [12] 1752 	addc	a,r3
      000330 FE               [12] 1753 	mov	r6,a
      000331 8C 07            [24] 1754 	mov	ar7,r4
      000333 74 04            [12] 1755 	mov	a,#0x04
      000335 2D               [12] 1756 	add	a,r5
      000336 FD               [12] 1757 	mov	r5,a
      000337 E4               [12] 1758 	clr	a
      000338 3E               [12] 1759 	addc	a,r6
      000339 FE               [12] 1760 	mov	r6,a
      00033A 8D 82            [24] 1761 	mov	dpl,r5
      00033C 8E 83            [24] 1762 	mov	dph,r6
      00033E 8F F0            [24] 1763 	mov	b,r7
      000340 12r00r00         [24] 1764 	lcall	__gptrget
      000343 FD               [12] 1765 	mov	r5,a
      000344 A3               [24] 1766 	inc	dptr
      000345 12r00r00         [24] 1767 	lcall	__gptrget
      000348 FE               [12] 1768 	mov	r6,a
      000349 A3               [24] 1769 	inc	dptr
      00034A 12r00r00         [24] 1770 	lcall	__gptrget
      00034D FF               [12] 1771 	mov	r7,a
      00034E C0 02            [24] 1772 	push	ar2
      000350 C0 03            [24] 1773 	push	ar3
      000352 C0 04            [24] 1774 	push	ar4
      000354 E5 81            [12] 1775 	mov	a,sp
      000356 24 FB            [12] 1776 	add	a,#0xfb
      000358 F8               [12] 1777 	mov	r0,a
      000359 86 02            [24] 1778 	mov	ar2,@r0
      00035B 08               [12] 1779 	inc	r0
      00035C 86 03            [24] 1780 	mov	ar3,@r0
      00035E 08               [12] 1781 	inc	r0
      00035F 86 04            [24] 1782 	mov	ar4,@r0
      000361 C0 02            [24] 1783 	push	ar2
      000363 C0 03            [24] 1784 	push	ar3
      000365 C0 04            [24] 1785 	push	ar4
      000367 8D 82            [24] 1786 	mov	dpl,r5
      000369 8E 83            [24] 1787 	mov	dph,r6
      00036B 8F F0            [24] 1788 	mov	b,r7
      00036D 12r00r00         [24] 1789 	lcall	___gptr_cmp
      000370 15 81            [12] 1790 	dec	sp
      000372 15 81            [12] 1791 	dec	sp
      000374 15 81            [12] 1792 	dec	sp
      000376 60 08            [24] 1793 	jz	00120$
      000378 D0 04            [24] 1794 	pop	ar4
      00037A D0 03            [24] 1795 	pop	ar3
      00037C D0 02            [24] 1796 	pop	ar2
      00037E 80 2D            [24] 1797 	sjmp	00102$
      000380                       1798 00120$:
      000380 D0 04            [24] 1799 	pop	ar4
      000382 D0 03            [24] 1800 	pop	ar3
      000384 D0 02            [24] 1801 	pop	ar2
                                   1802 ;	../../core/net/rpl/rpl.c:182: uip_ds6_route_rm(r);
      000386 8A 82            [24] 1803 	mov	dpl,r2
      000388 8B 83            [24] 1804 	mov	dph,r3
      00038A 8C F0            [24] 1805 	mov	b,r4
      00038C 78r00            [12] 1806 	mov	r0,#_uip_ds6_route_rm
      00038E 79s00            [12] 1807 	mov	r1,#(_uip_ds6_route_rm >> 8)
      000390 7As00            [12] 1808 	mov	r2,#(_uip_ds6_route_rm >> 16)
      000392 12r00r00         [24] 1809 	lcall	__sdcc_banked_call
                                   1810 ;	../../core/net/rpl/rpl.c:183: r = uip_ds6_route_head();
      000395 78r00            [12] 1811 	mov	r0,#_uip_ds6_route_head
      000397 79s00            [12] 1812 	mov	r1,#(_uip_ds6_route_head >> 8)
      000399 7As00            [12] 1813 	mov	r2,#(_uip_ds6_route_head >> 16)
      00039B 12r00r00         [24] 1814 	lcall	__sdcc_banked_call
      00039E AD 82            [24] 1815 	mov	r5,dpl
      0003A0 AE 83            [24] 1816 	mov	r6,dph
      0003A2 AF F0            [24] 1817 	mov	r7,b
      0003A4 8D 02            [24] 1818 	mov	ar2,r5
      0003A6 8E 03            [24] 1819 	mov	ar3,r6
      0003A8 8F 04            [24] 1820 	mov	ar4,r7
      0003AA 02r03r23         [24] 1821 	ljmp	00104$
      0003AD                       1822 00102$:
                                   1823 ;	../../core/net/rpl/rpl.c:185: r = uip_ds6_route_next(r);
      0003AD 8A 82            [24] 1824 	mov	dpl,r2
      0003AF 8B 83            [24] 1825 	mov	dph,r3
      0003B1 8C F0            [24] 1826 	mov	b,r4
      0003B3 78r00            [12] 1827 	mov	r0,#_uip_ds6_route_next
      0003B5 79s00            [12] 1828 	mov	r1,#(_uip_ds6_route_next >> 8)
      0003B7 7As00            [12] 1829 	mov	r2,#(_uip_ds6_route_next >> 16)
      0003B9 12r00r00         [24] 1830 	lcall	__sdcc_banked_call
      0003BC AD 82            [24] 1831 	mov	r5,dpl
      0003BE AE 83            [24] 1832 	mov	r6,dph
      0003C0 AF F0            [24] 1833 	mov	r7,b
      0003C2 8D 02            [24] 1834 	mov	ar2,r5
      0003C4 8E 03            [24] 1835 	mov	ar3,r6
      0003C6 8F 04            [24] 1836 	mov	ar4,r7
      0003C8 02r03r23         [24] 1837 	ljmp	00104$
      0003CB                       1838 00107$:
      0003CB 15 81            [12] 1839 	dec	sp
      0003CD 15 81            [12] 1840 	dec	sp
      0003CF 15 81            [12] 1841 	dec	sp
      0003D1 02r00r00         [24] 1842 	ljmp	__sdcc_banked_ret
                                   1843 ;------------------------------------------------------------
                                   1844 ;Allocation info for local variables in function 'rpl_remove_routes_by_nexthop'
                                   1845 ;------------------------------------------------------------
                                   1846 ;dag                       Allocated to stack - sp -11
                                   1847 ;nexthop                   Allocated to stack - sp -5
                                   1848 ;r                         Allocated to stack - sp -2
                                   1849 ;------------------------------------------------------------
                                   1850 ;	../../core/net/rpl/rpl.c:204: rpl_remove_routes_by_nexthop(uip_ipaddr_t *nexthop, rpl_dag_t *dag)
                                   1851 ;	-----------------------------------------
                                   1852 ;	 function rpl_remove_routes_by_nexthop
                                   1853 ;	-----------------------------------------
      0003D4                       1854 _rpl_remove_routes_by_nexthop:
      0003D4 C0 82            [24] 1855 	push	dpl
      0003D6 C0 83            [24] 1856 	push	dph
      0003D8 C0 F0            [24] 1857 	push	b
      0003DA 05 81            [12] 1858 	inc	sp
      0003DC 05 81            [12] 1859 	inc	sp
      0003DE 05 81            [12] 1860 	inc	sp
                                   1861 ;	../../core/net/rpl/rpl.c:208: r = uip_ds6_route_head();
      0003E0 78r00            [12] 1862 	mov	r0,#_uip_ds6_route_head
      0003E2 79s00            [12] 1863 	mov	r1,#(_uip_ds6_route_head >> 8)
      0003E4 7As00            [12] 1864 	mov	r2,#(_uip_ds6_route_head >> 16)
      0003E6 12r00r00         [24] 1865 	lcall	__sdcc_banked_call
      0003E9 AA 82            [24] 1866 	mov	r2,dpl
      0003EB AB 83            [24] 1867 	mov	r3,dph
      0003ED AC F0            [24] 1868 	mov	r4,b
      0003EF A8 81            [24] 1869 	mov	r0,sp
      0003F1 18               [12] 1870 	dec	r0
      0003F2 18               [12] 1871 	dec	r0
      0003F3 A6 02            [24] 1872 	mov	@r0,ar2
      0003F5 08               [12] 1873 	inc	r0
      0003F6 A6 03            [24] 1874 	mov	@r0,ar3
      0003F8 08               [12] 1875 	inc	r0
      0003F9 A6 04            [24] 1876 	mov	@r0,ar4
                                   1877 ;	../../core/net/rpl/rpl.c:210: while(r != NULL) {
      0003FB                       1878 00105$:
      0003FB A8 81            [24] 1879 	mov	r0,sp
      0003FD 18               [12] 1880 	dec	r0
      0003FE 18               [12] 1881 	dec	r0
      0003FF E6               [12] 1882 	mov	a,@r0
      000400 08               [12] 1883 	inc	r0
      000401 46               [12] 1884 	orl	a,@r0
      000402 70 03            [24] 1885 	jnz	00122$
      000404 02r05r15         [24] 1886 	ljmp	00108$
      000407                       1887 00122$:
                                   1888 ;	../../core/net/rpl/rpl.c:211: if(uip_ipaddr_cmp(uip_ds6_route_nexthop(r), nexthop) &&
      000407 E5 81            [12] 1889 	mov	a,sp
      000409 24 FB            [12] 1890 	add	a,#0xfb
      00040B F8               [12] 1891 	mov	r0,a
      00040C 86 05            [24] 1892 	mov	ar5,@r0
      00040E 08               [12] 1893 	inc	r0
      00040F 86 06            [24] 1894 	mov	ar6,@r0
      000411 08               [12] 1895 	inc	r0
      000412 86 07            [24] 1896 	mov	ar7,@r0
      000414 A8 81            [24] 1897 	mov	r0,sp
      000416 18               [12] 1898 	dec	r0
      000417 18               [12] 1899 	dec	r0
      000418 86 82            [24] 1900 	mov	dpl,@r0
      00041A 08               [12] 1901 	inc	r0
      00041B 86 83            [24] 1902 	mov	dph,@r0
      00041D 08               [12] 1903 	inc	r0
      00041E 86 F0            [24] 1904 	mov	b,@r0
      000420 C0 07            [24] 1905 	push	ar7
      000422 C0 06            [24] 1906 	push	ar6
      000424 C0 05            [24] 1907 	push	ar5
      000426 78r00            [12] 1908 	mov	r0,#_uip_ds6_route_nexthop
      000428 79s00            [12] 1909 	mov	r1,#(_uip_ds6_route_nexthop >> 8)
      00042A 7As00            [12] 1910 	mov	r2,#(_uip_ds6_route_nexthop >> 16)
      00042C 12r00r00         [24] 1911 	lcall	__sdcc_banked_call
      00042F AA 82            [24] 1912 	mov	r2,dpl
      000431 AB 83            [24] 1913 	mov	r3,dph
      000433 AC F0            [24] 1914 	mov	r4,b
      000435 D0 05            [24] 1915 	pop	ar5
      000437 D0 06            [24] 1916 	pop	ar6
      000439 D0 07            [24] 1917 	pop	ar7
      00043B 74 10            [12] 1918 	mov	a,#0x10
      00043D C0 E0            [24] 1919 	push	acc
      00043F E4               [12] 1920 	clr	a
      000440 C0 E0            [24] 1921 	push	acc
      000442 C0 05            [24] 1922 	push	ar5
      000444 C0 06            [24] 1923 	push	ar6
      000446 C0 07            [24] 1924 	push	ar7
      000448 8A 82            [24] 1925 	mov	dpl,r2
      00044A 8B 83            [24] 1926 	mov	dph,r3
      00044C 8C F0            [24] 1927 	mov	b,r4
      00044E 78r00            [12] 1928 	mov	r0,#_memcmp
      000450 79s00            [12] 1929 	mov	r1,#(_memcmp >> 8)
      000452 7As00            [12] 1930 	mov	r2,#(_memcmp >> 16)
      000454 12r00r00         [24] 1931 	lcall	__sdcc_banked_call
      000457 AE 82            [24] 1932 	mov	r6,dpl
      000459 AF 83            [24] 1933 	mov	r7,dph
      00045B E5 81            [12] 1934 	mov	a,sp
      00045D 24 FB            [12] 1935 	add	a,#0xfb
      00045F F5 81            [12] 1936 	mov	sp,a
      000461 EE               [12] 1937 	mov	a,r6
      000462 4F               [12] 1938 	orl	a,r7
      000463 60 03            [24] 1939 	jz	00123$
      000465 02r04rEB         [24] 1940 	ljmp	00102$
      000468                       1941 00123$:
                                   1942 ;	../../core/net/rpl/rpl.c:212: r->state.dag == dag) {
      000468 A8 81            [24] 1943 	mov	r0,sp
      00046A 18               [12] 1944 	dec	r0
      00046B 18               [12] 1945 	dec	r0
      00046C 74 16            [12] 1946 	mov	a,#0x16
      00046E 26               [12] 1947 	add	a,@r0
      00046F FD               [12] 1948 	mov	r5,a
      000470 E4               [12] 1949 	clr	a
      000471 08               [12] 1950 	inc	r0
      000472 36               [12] 1951 	addc	a,@r0
      000473 FE               [12] 1952 	mov	r6,a
      000474 08               [12] 1953 	inc	r0
      000475 86 07            [24] 1954 	mov	ar7,@r0
      000477 74 04            [12] 1955 	mov	a,#0x04
      000479 2D               [12] 1956 	add	a,r5
      00047A FD               [12] 1957 	mov	r5,a
      00047B E4               [12] 1958 	clr	a
      00047C 3E               [12] 1959 	addc	a,r6
      00047D FE               [12] 1960 	mov	r6,a
      00047E 8D 82            [24] 1961 	mov	dpl,r5
      000480 8E 83            [24] 1962 	mov	dph,r6
      000482 8F F0            [24] 1963 	mov	b,r7
      000484 12r00r00         [24] 1964 	lcall	__gptrget
      000487 FD               [12] 1965 	mov	r5,a
      000488 A3               [24] 1966 	inc	dptr
      000489 12r00r00         [24] 1967 	lcall	__gptrget
      00048C FE               [12] 1968 	mov	r6,a
      00048D A3               [24] 1969 	inc	dptr
      00048E 12r00r00         [24] 1970 	lcall	__gptrget
      000491 FF               [12] 1971 	mov	r7,a
      000492 E5 81            [12] 1972 	mov	a,sp
      000494 24 F5            [12] 1973 	add	a,#0xf5
      000496 F8               [12] 1974 	mov	r0,a
      000497 86 02            [24] 1975 	mov	ar2,@r0
      000499 08               [12] 1976 	inc	r0
      00049A 86 03            [24] 1977 	mov	ar3,@r0
      00049C 08               [12] 1978 	inc	r0
      00049D 86 04            [24] 1979 	mov	ar4,@r0
      00049F C0 02            [24] 1980 	push	ar2
      0004A1 C0 03            [24] 1981 	push	ar3
      0004A3 C0 04            [24] 1982 	push	ar4
      0004A5 8D 82            [24] 1983 	mov	dpl,r5
      0004A7 8E 83            [24] 1984 	mov	dph,r6
      0004A9 8F F0            [24] 1985 	mov	b,r7
      0004AB 12r00r00         [24] 1986 	lcall	___gptr_cmp
      0004AE 15 81            [12] 1987 	dec	sp
      0004B0 15 81            [12] 1988 	dec	sp
      0004B2 15 81            [12] 1989 	dec	sp
      0004B4 60 02            [24] 1990 	jz	00125$
      0004B6 80 33            [24] 1991 	sjmp	00102$
      0004B8                       1992 00125$:
                                   1993 ;	../../core/net/rpl/rpl.c:213: uip_ds6_route_rm(r);
      0004B8 A8 81            [24] 1994 	mov	r0,sp
      0004BA 18               [12] 1995 	dec	r0
      0004BB 18               [12] 1996 	dec	r0
      0004BC 86 82            [24] 1997 	mov	dpl,@r0
      0004BE 08               [12] 1998 	inc	r0
      0004BF 86 83            [24] 1999 	mov	dph,@r0
      0004C1 08               [12] 2000 	inc	r0
      0004C2 86 F0            [24] 2001 	mov	b,@r0
      0004C4 78r00            [12] 2002 	mov	r0,#_uip_ds6_route_rm
      0004C6 79s00            [12] 2003 	mov	r1,#(_uip_ds6_route_rm >> 8)
      0004C8 7As00            [12] 2004 	mov	r2,#(_uip_ds6_route_rm >> 16)
      0004CA 12r00r00         [24] 2005 	lcall	__sdcc_banked_call
                                   2006 ;	../../core/net/rpl/rpl.c:214: r = uip_ds6_route_head();
      0004CD 78r00            [12] 2007 	mov	r0,#_uip_ds6_route_head
      0004CF 79s00            [12] 2008 	mov	r1,#(_uip_ds6_route_head >> 8)
      0004D1 7As00            [12] 2009 	mov	r2,#(_uip_ds6_route_head >> 16)
      0004D3 12r00r00         [24] 2010 	lcall	__sdcc_banked_call
      0004D6 AD 82            [24] 2011 	mov	r5,dpl
      0004D8 AE 83            [24] 2012 	mov	r6,dph
      0004DA AF F0            [24] 2013 	mov	r7,b
      0004DC A8 81            [24] 2014 	mov	r0,sp
      0004DE 18               [12] 2015 	dec	r0
      0004DF 18               [12] 2016 	dec	r0
      0004E0 A6 05            [24] 2017 	mov	@r0,ar5
      0004E2 08               [12] 2018 	inc	r0
      0004E3 A6 06            [24] 2019 	mov	@r0,ar6
      0004E5 08               [12] 2020 	inc	r0
      0004E6 A6 07            [24] 2021 	mov	@r0,ar7
      0004E8 02r03rFB         [24] 2022 	ljmp	00105$
      0004EB                       2023 00102$:
                                   2024 ;	../../core/net/rpl/rpl.c:216: r = uip_ds6_route_next(r);
      0004EB A8 81            [24] 2025 	mov	r0,sp
      0004ED 18               [12] 2026 	dec	r0
      0004EE 18               [12] 2027 	dec	r0
      0004EF 86 82            [24] 2028 	mov	dpl,@r0
      0004F1 08               [12] 2029 	inc	r0
      0004F2 86 83            [24] 2030 	mov	dph,@r0
      0004F4 08               [12] 2031 	inc	r0
      0004F5 86 F0            [24] 2032 	mov	b,@r0
      0004F7 78r00            [12] 2033 	mov	r0,#_uip_ds6_route_next
      0004F9 79s00            [12] 2034 	mov	r1,#(_uip_ds6_route_next >> 8)
      0004FB 7As00            [12] 2035 	mov	r2,#(_uip_ds6_route_next >> 16)
      0004FD 12r00r00         [24] 2036 	lcall	__sdcc_banked_call
      000500 AD 82            [24] 2037 	mov	r5,dpl
      000502 AE 83            [24] 2038 	mov	r6,dph
      000504 AF F0            [24] 2039 	mov	r7,b
      000506 A8 81            [24] 2040 	mov	r0,sp
      000508 18               [12] 2041 	dec	r0
      000509 18               [12] 2042 	dec	r0
      00050A A6 05            [24] 2043 	mov	@r0,ar5
      00050C 08               [12] 2044 	inc	r0
      00050D A6 06            [24] 2045 	mov	@r0,ar6
      00050F 08               [12] 2046 	inc	r0
      000510 A6 07            [24] 2047 	mov	@r0,ar7
      000512 02r03rFB         [24] 2048 	ljmp	00105$
      000515                       2049 00108$:
      000515 E5 81            [12] 2050 	mov	a,sp
      000517 24 FA            [12] 2051 	add	a,#0xFA
      000519 F5 81            [12] 2052 	mov	sp,a
      00051B 02r00r00         [24] 2053 	ljmp	__sdcc_banked_ret
                                   2054 ;------------------------------------------------------------
                                   2055 ;Allocation info for local variables in function 'rpl_add_route'
                                   2056 ;------------------------------------------------------------
                                   2057 ;prefix                    Allocated to stack - sp -18
                                   2058 ;prefix_len                Allocated to stack - sp -20
                                   2059 ;next_hop                  Allocated to stack - sp -23
                                   2060 ;dag                       Allocated to stack - sp -12
                                   2061 ;rep                       Allocated to stack - sp -2
                                   2062 ;sloc0                     Allocated to stack - sp -6
                                   2063 ;sloc1                     Allocated to stack - sp -9
                                   2064 ;sloc2                     Allocated to stack - sp -6
                                   2065 ;------------------------------------------------------------
                                   2066 ;	../../core/net/rpl/rpl.c:223: rpl_add_route(rpl_dag_t *dag, uip_ipaddr_t *prefix, int prefix_len,
                                   2067 ;	-----------------------------------------
                                   2068 ;	 function rpl_add_route
                                   2069 ;	-----------------------------------------
      00051E                       2070 _rpl_add_route:
      00051E C0 82            [24] 2071 	push	dpl
      000520 C0 83            [24] 2072 	push	dph
      000522 C0 F0            [24] 2073 	push	b
      000524 E5 81            [12] 2074 	mov	a,sp
      000526 24 0A            [12] 2075 	add	a,#0x0A
                                   2076 ;	../../core/net/rpl/rpl.c:228: if((rep = uip_ds6_route_add(prefix, prefix_len, next_hop)) == NULL) {
      000528 F5 81            [12] 2077 	mov	sp,a
      00052A 24 EC            [12] 2078 	add	a,#0xec
      00052C F8               [12] 2079 	mov	r0,a
      00052D 86 04            [24] 2080 	mov	ar4,@r0
      00052F E5 81            [12] 2081 	mov	a,sp
      000531 24 E9            [12] 2082 	add	a,#0xe9
      000533 F8               [12] 2083 	mov	r0,a
      000534 E6               [12] 2084 	mov	a,@r0
      000535 C0 E0            [24] 2085 	push	acc
      000537 08               [12] 2086 	inc	r0
      000538 E6               [12] 2087 	mov	a,@r0
      000539 C0 E0            [24] 2088 	push	acc
      00053B 08               [12] 2089 	inc	r0
      00053C E6               [12] 2090 	mov	a,@r0
      00053D C0 E0            [24] 2091 	push	acc
      00053F C0 04            [24] 2092 	push	ar4
      000541 E5 81            [12] 2093 	mov	a,sp
      000543 24 EA            [12] 2094 	add	a,#0xea
      000545 F8               [12] 2095 	mov	r0,a
      000546 86 82            [24] 2096 	mov	dpl,@r0
      000548 08               [12] 2097 	inc	r0
      000549 86 83            [24] 2098 	mov	dph,@r0
      00054B 08               [12] 2099 	inc	r0
      00054C 86 F0            [24] 2100 	mov	b,@r0
      00054E 78r00            [12] 2101 	mov	r0,#_uip_ds6_route_add
      000550 79s00            [12] 2102 	mov	r1,#(_uip_ds6_route_add >> 8)
      000552 7As00            [12] 2103 	mov	r2,#(_uip_ds6_route_add >> 16)
      000554 12r00r00         [24] 2104 	lcall	__sdcc_banked_call
      000557 AA 82            [24] 2105 	mov	r2,dpl
      000559 AB 83            [24] 2106 	mov	r3,dph
      00055B AC F0            [24] 2107 	mov	r4,b
      00055D E5 81            [12] 2108 	mov	a,sp
      00055F 24 FC            [12] 2109 	add	a,#0xfc
      000561 F5 81            [12] 2110 	mov	sp,a
      000563 A8 81            [24] 2111 	mov	r0,sp
      000565 18               [12] 2112 	dec	r0
      000566 18               [12] 2113 	dec	r0
      000567 A6 02            [24] 2114 	mov	@r0,ar2
      000569 08               [12] 2115 	inc	r0
      00056A A6 03            [24] 2116 	mov	@r0,ar3
      00056C 08               [12] 2117 	inc	r0
      00056D A6 04            [24] 2118 	mov	@r0,ar4
      00056F EA               [12] 2119 	mov	a,r2
      000570 4B               [12] 2120 	orl	a,r3
                                   2121 ;	../../core/net/rpl/rpl.c:230: return NULL;
      000571 70 08            [24] 2122 	jnz	00102$
      000573 90 00 00         [24] 2123 	mov	dptr,#0x0000
      000576 F5 F0            [12] 2124 	mov	b,a
      000578 02r06r8E         [24] 2125 	ljmp	00103$
      00057B                       2126 00102$:
                                   2127 ;	../../core/net/rpl/rpl.c:233: rep->state.dag = dag;
      00057B A8 81            [24] 2128 	mov	r0,sp
      00057D 18               [12] 2129 	dec	r0
      00057E 18               [12] 2130 	dec	r0
      00057F E5 81            [12] 2131 	mov	a,sp
      000581 24 F7            [12] 2132 	add	a,#0xf7
      000583 F9               [12] 2133 	mov	r1,a
      000584 74 16            [12] 2134 	mov	a,#0x16
      000586 26               [12] 2135 	add	a,@r0
      000587 F7               [12] 2136 	mov	@r1,a
      000588 E4               [12] 2137 	clr	a
      000589 08               [12] 2138 	inc	r0
      00058A 36               [12] 2139 	addc	a,@r0
      00058B 09               [12] 2140 	inc	r1
      00058C F7               [12] 2141 	mov	@r1,a
      00058D 08               [12] 2142 	inc	r0
      00058E 09               [12] 2143 	inc	r1
      00058F E6               [12] 2144 	mov	a,@r0
      000590 F7               [12] 2145 	mov	@r1,a
      000591 A8 81            [24] 2146 	mov	r0,sp
      000593 18               [12] 2147 	dec	r0
      000594 18               [12] 2148 	dec	r0
      000595 74 1A            [12] 2149 	mov	a,#0x1A
      000597 26               [12] 2150 	add	a,@r0
      000598 FC               [12] 2151 	mov	r4,a
      000599 E4               [12] 2152 	clr	a
      00059A 08               [12] 2153 	inc	r0
      00059B 36               [12] 2154 	addc	a,@r0
      00059C FB               [12] 2155 	mov	r3,a
      00059D 08               [12] 2156 	inc	r0
      00059E 86 02            [24] 2157 	mov	ar2,@r0
      0005A0 E5 81            [12] 2158 	mov	a,sp
      0005A2 24 F4            [12] 2159 	add	a,#0xf4
      0005A4 F8               [12] 2160 	mov	r0,a
      0005A5 86 05            [24] 2161 	mov	ar5,@r0
      0005A7 08               [12] 2162 	inc	r0
      0005A8 86 06            [24] 2163 	mov	ar6,@r0
      0005AA 08               [12] 2164 	inc	r0
      0005AB 86 07            [24] 2165 	mov	ar7,@r0
      0005AD 8C 82            [24] 2166 	mov	dpl,r4
      0005AF 8B 83            [24] 2167 	mov	dph,r3
      0005B1 8A F0            [24] 2168 	mov	b,r2
      0005B3 ED               [12] 2169 	mov	a,r5
      0005B4 12r00r00         [24] 2170 	lcall	__gptrput
      0005B7 A3               [24] 2171 	inc	dptr
      0005B8 EE               [12] 2172 	mov	a,r6
      0005B9 12r00r00         [24] 2173 	lcall	__gptrput
      0005BC A3               [24] 2174 	inc	dptr
      0005BD EF               [12] 2175 	mov	a,r7
      0005BE 12r00r00         [24] 2176 	lcall	__gptrput
                                   2177 ;	../../core/net/rpl/rpl.c:234: rep->state.lifetime = RPL_LIFETIME(dag->instance, dag->instance->default_lifetime);
      0005C1 E5 81            [12] 2178 	mov	a,sp
      0005C3 24 F4            [12] 2179 	add	a,#0xf4
      0005C5 F8               [12] 2180 	mov	r0,a
      0005C6 74 1C            [12] 2181 	mov	a,#0x1C
      0005C8 26               [12] 2182 	add	a,@r0
      0005C9 FD               [12] 2183 	mov	r5,a
      0005CA E4               [12] 2184 	clr	a
      0005CB 08               [12] 2185 	inc	r0
      0005CC 36               [12] 2186 	addc	a,@r0
      0005CD FE               [12] 2187 	mov	r6,a
      0005CE 08               [12] 2188 	inc	r0
      0005CF 86 07            [24] 2189 	mov	ar7,@r0
      0005D1 8D 82            [24] 2190 	mov	dpl,r5
      0005D3 8E 83            [24] 2191 	mov	dph,r6
      0005D5 8F F0            [24] 2192 	mov	b,r7
      0005D7 12r00r00         [24] 2193 	lcall	__gptrget
      0005DA FD               [12] 2194 	mov	r5,a
      0005DB A3               [24] 2195 	inc	dptr
      0005DC 12r00r00         [24] 2196 	lcall	__gptrget
      0005DF FE               [12] 2197 	mov	r6,a
      0005E0 A3               [24] 2198 	inc	dptr
      0005E1 12r00r00         [24] 2199 	lcall	__gptrget
      0005E4 FF               [12] 2200 	mov	r7,a
      0005E5 74 89            [12] 2201 	mov	a,#0x89
      0005E7 2D               [12] 2202 	add	a,r5
      0005E8 FA               [12] 2203 	mov	r2,a
      0005E9 E4               [12] 2204 	clr	a
      0005EA 3E               [12] 2205 	addc	a,r6
      0005EB FB               [12] 2206 	mov	r3,a
      0005EC 8F 04            [24] 2207 	mov	ar4,r7
      0005EE 8A 82            [24] 2208 	mov	dpl,r2
      0005F0 8B 83            [24] 2209 	mov	dph,r3
      0005F2 8C F0            [24] 2210 	mov	b,r4
      0005F4 12r00r00         [24] 2211 	lcall	__gptrget
      0005F7 FA               [12] 2212 	mov	r2,a
      0005F8 A3               [24] 2213 	inc	dptr
      0005F9 12r00r00         [24] 2214 	lcall	__gptrget
      0005FC FB               [12] 2215 	mov	r3,a
      0005FD E5 81            [12] 2216 	mov	a,sp
      0005FF 24 FA            [12] 2217 	add	a,#0xfa
      000601 F8               [12] 2218 	mov	r0,a
      000602 A6 02            [24] 2219 	mov	@r0,ar2
      000604 08               [12] 2220 	inc	r0
      000605 A6 03            [24] 2221 	mov	@r0,ar3
      000607 08               [12] 2222 	inc	r0
      000608 76 00            [12] 2223 	mov	@r0,#0x00
      00060A 08               [12] 2224 	inc	r0
      00060B 76 00            [12] 2225 	mov	@r0,#0x00
      00060D 74 81            [12] 2226 	mov	a,#0x81
      00060F 2D               [12] 2227 	add	a,r5
      000610 FD               [12] 2228 	mov	r5,a
      000611 E4               [12] 2229 	clr	a
      000612 3E               [12] 2230 	addc	a,r6
      000613 FE               [12] 2231 	mov	r6,a
      000614 8D 82            [24] 2232 	mov	dpl,r5
      000616 8E 83            [24] 2233 	mov	dph,r6
      000618 8F F0            [24] 2234 	mov	b,r7
      00061A 12r00r00         [24] 2235 	lcall	__gptrget
      00061D FD               [12] 2236 	mov	r5,a
      00061E 7F 00            [12] 2237 	mov	r7,#0x00
      000620 7E 00            [12] 2238 	mov	r6,#0x00
      000622 7C 00            [12] 2239 	mov	r4,#0x00
      000624 C0 05            [24] 2240 	push	ar5
      000626 C0 07            [24] 2241 	push	ar7
      000628 C0 06            [24] 2242 	push	ar6
      00062A C0 04            [24] 2243 	push	ar4
      00062C E5 81            [12] 2244 	mov	a,sp
      00062E 24 F6            [12] 2245 	add	a,#0xf6
      000630 F8               [12] 2246 	mov	r0,a
      000631 86 82            [24] 2247 	mov	dpl,@r0
      000633 08               [12] 2248 	inc	r0
      000634 86 83            [24] 2249 	mov	dph,@r0
      000636 08               [12] 2250 	inc	r0
      000637 86 F0            [24] 2251 	mov	b,@r0
      000639 08               [12] 2252 	inc	r0
      00063A E6               [12] 2253 	mov	a,@r0
      00063B 12r00r00         [24] 2254 	lcall	__mullong
      00063E AC 82            [24] 2255 	mov	r4,dpl
      000640 AD 83            [24] 2256 	mov	r5,dph
      000642 AE F0            [24] 2257 	mov	r6,b
      000644 FF               [12] 2258 	mov	r7,a
      000645 E5 81            [12] 2259 	mov	a,sp
      000647 24 FC            [12] 2260 	add	a,#0xfc
      000649 F5 81            [12] 2261 	mov	sp,a
      00064B 24 F7            [12] 2262 	add	a,#0xf7
      00064D F8               [12] 2263 	mov	r0,a
      00064E 86 82            [24] 2264 	mov	dpl,@r0
      000650 08               [12] 2265 	inc	r0
      000651 86 83            [24] 2266 	mov	dph,@r0
      000653 08               [12] 2267 	inc	r0
      000654 86 F0            [24] 2268 	mov	b,@r0
      000656 EC               [12] 2269 	mov	a,r4
      000657 12r00r00         [24] 2270 	lcall	__gptrput
      00065A A3               [24] 2271 	inc	dptr
      00065B ED               [12] 2272 	mov	a,r5
      00065C 12r00r00         [24] 2273 	lcall	__gptrput
      00065F A3               [24] 2274 	inc	dptr
      000660 EE               [12] 2275 	mov	a,r6
      000661 12r00r00         [24] 2276 	lcall	__gptrput
      000664 A3               [24] 2277 	inc	dptr
      000665 EF               [12] 2278 	mov	a,r7
      000666 12r00r00         [24] 2279 	lcall	__gptrput
                                   2280 ;	../../core/net/rpl/rpl.c:235: rep->state.learned_from = RPL_ROUTE_FROM_INTERNAL;
      000669 A8 81            [24] 2281 	mov	r0,sp
      00066B 18               [12] 2282 	dec	r0
      00066C 18               [12] 2283 	dec	r0
      00066D 74 1D            [12] 2284 	mov	a,#0x1D
      00066F 26               [12] 2285 	add	a,@r0
      000670 FD               [12] 2286 	mov	r5,a
      000671 E4               [12] 2287 	clr	a
      000672 08               [12] 2288 	inc	r0
      000673 36               [12] 2289 	addc	a,@r0
      000674 FE               [12] 2290 	mov	r6,a
      000675 08               [12] 2291 	inc	r0
      000676 86 07            [24] 2292 	mov	ar7,@r0
      000678 8D 82            [24] 2293 	mov	dpl,r5
      00067A 8E 83            [24] 2294 	mov	dph,r6
      00067C 8F F0            [24] 2295 	mov	b,r7
      00067E E4               [12] 2296 	clr	a
      00067F 12r00r00         [24] 2297 	lcall	__gptrput
                                   2298 ;	../../core/net/rpl/rpl.c:243: return rep;
      000682 A8 81            [24] 2299 	mov	r0,sp
      000684 18               [12] 2300 	dec	r0
      000685 18               [12] 2301 	dec	r0
      000686 86 82            [24] 2302 	mov	dpl,@r0
      000688 08               [12] 2303 	inc	r0
      000689 86 83            [24] 2304 	mov	dph,@r0
      00068B 08               [12] 2305 	inc	r0
      00068C 86 F0            [24] 2306 	mov	b,@r0
      00068E                       2307 00103$:
      00068E C8               [12] 2308 	xch	a,r0
      00068F E5 81            [12] 2309 	mov	a,sp
      000691 24 F3            [12] 2310 	add	a,#0xF3
      000693 F5 81            [12] 2311 	mov	sp,a
      000695 C8               [12] 2312 	xch	a,r0
      000696 02r00r00         [24] 2313 	ljmp	__sdcc_banked_ret
                                   2314 ;------------------------------------------------------------
                                   2315 ;Allocation info for local variables in function 'rpl_link_neighbor_callback'
                                   2316 ;------------------------------------------------------------
                                   2317 ;status                    Allocated to stack - sp -29
                                   2318 ;numtx                     Allocated to stack - sp -31
                                   2319 ;addr                      Allocated to registers r5 r6 r7 
                                   2320 ;ipaddr                    Allocated to stack - sp -18
                                   2321 ;parent                    Allocated to stack - sp -2
                                   2322 ;instance                  Allocated to registers 
                                   2323 ;end                       Allocated to registers 
                                   2324 ;sloc0                     Allocated to stack - sp -24
                                   2325 ;sloc1                     Allocated to stack - sp -21
                                   2326 ;------------------------------------------------------------
                                   2327 ;	../../core/net/rpl/rpl.c:247: rpl_link_neighbor_callback(const linkaddr_t *addr, int status, int numtx)
                                   2328 ;	-----------------------------------------
                                   2329 ;	 function rpl_link_neighbor_callback
                                   2330 ;	-----------------------------------------
      000699                       2331 _rpl_link_neighbor_callback:
      000699 E5 81            [12] 2332 	mov	a,sp
      00069B 24 19            [12] 2333 	add	a,#0x19
      00069D F5 81            [12] 2334 	mov	sp,a
      00069F AD 82            [24] 2335 	mov	r5,dpl
      0006A1 AE 83            [24] 2336 	mov	r6,dph
      0006A3 AF F0            [24] 2337 	mov	r7,b
                                   2338 ;	../../core/net/rpl/rpl.c:254: uip_ip6addr(&ipaddr, 0xfe80, 0, 0, 0, 0, 0, 0, 0);
      0006A5 E5 81            [12] 2339 	mov	a,sp
      0006A7 24 EE            [12] 2340 	add	a,#0xEE
      0006A9 F8               [12] 2341 	mov	r0,a
      0006AA 76 FE            [12] 2342 	mov	@r0,#0xFE
      0006AC 08               [12] 2343 	inc	r0
      0006AD 76 80            [12] 2344 	mov	@r0,#0x80
      0006AF E5 81            [12] 2345 	mov	a,sp
      0006B1 24 EE            [12] 2346 	add	a,#0xEE
      0006B3 FC               [12] 2347 	mov	r4,a
      0006B4 24 02            [12] 2348 	add	a,#0x02
      0006B6 F8               [12] 2349 	mov	r0,a
      0006B7 76 00            [12] 2350 	mov	@r0,#0x00
      0006B9 08               [12] 2351 	inc	r0
      0006BA 76 00            [12] 2352 	mov	@r0,#0x00
      0006BC 74 04            [12] 2353 	mov	a,#0x04
      0006BE 2C               [12] 2354 	add	a,r4
      0006BF F8               [12] 2355 	mov	r0,a
      0006C0 76 00            [12] 2356 	mov	@r0,#0x00
      0006C2 08               [12] 2357 	inc	r0
      0006C3 76 00            [12] 2358 	mov	@r0,#0x00
      0006C5 74 06            [12] 2359 	mov	a,#0x06
      0006C7 2C               [12] 2360 	add	a,r4
      0006C8 F8               [12] 2361 	mov	r0,a
      0006C9 76 00            [12] 2362 	mov	@r0,#0x00
      0006CB 08               [12] 2363 	inc	r0
      0006CC 76 00            [12] 2364 	mov	@r0,#0x00
      0006CE 74 08            [12] 2365 	mov	a,#0x08
      0006D0 2C               [12] 2366 	add	a,r4
      0006D1 F8               [12] 2367 	mov	r0,a
      0006D2 76 00            [12] 2368 	mov	@r0,#0x00
      0006D4 08               [12] 2369 	inc	r0
      0006D5 76 00            [12] 2370 	mov	@r0,#0x00
      0006D7 74 0A            [12] 2371 	mov	a,#0x0A
      0006D9 2C               [12] 2372 	add	a,r4
      0006DA F8               [12] 2373 	mov	r0,a
      0006DB 76 00            [12] 2374 	mov	@r0,#0x00
      0006DD 08               [12] 2375 	inc	r0
      0006DE 76 00            [12] 2376 	mov	@r0,#0x00
      0006E0 74 0C            [12] 2377 	mov	a,#0x0C
      0006E2 2C               [12] 2378 	add	a,r4
      0006E3 F8               [12] 2379 	mov	r0,a
      0006E4 76 00            [12] 2380 	mov	@r0,#0x00
      0006E6 08               [12] 2381 	inc	r0
      0006E7 76 00            [12] 2382 	mov	@r0,#0x00
      0006E9 74 0E            [12] 2383 	mov	a,#0x0E
      0006EB 2C               [12] 2384 	add	a,r4
      0006EC F8               [12] 2385 	mov	r0,a
      0006ED 76 00            [12] 2386 	mov	@r0,#0x00
      0006EF 08               [12] 2387 	inc	r0
      0006F0 76 00            [12] 2388 	mov	@r0,#0x00
                                   2389 ;	../../core/net/rpl/rpl.c:255: uip_ds6_set_addr_iid(&ipaddr, (uip_lladdr_t *)addr);
      0006F2 E5 81            [12] 2390 	mov	a,sp
      0006F4 24 E8            [12] 2391 	add	a,#0xe8
      0006F6 F8               [12] 2392 	mov	r0,a
      0006F7 A6 05            [24] 2393 	mov	@r0,ar5
      0006F9 08               [12] 2394 	inc	r0
      0006FA A6 06            [24] 2395 	mov	@r0,ar6
      0006FC 08               [12] 2396 	inc	r0
      0006FD A6 07            [24] 2397 	mov	@r0,ar7
      0006FF E5 81            [12] 2398 	mov	a,sp
      000701 24 EE            [12] 2399 	add	a,#0xEE
      000703 FC               [12] 2400 	mov	r4,a
      000704 FA               [12] 2401 	mov	r2,a
      000705 7B 00            [12] 2402 	mov	r3,#0x00
      000707 7F 40            [12] 2403 	mov	r7,#0x40
      000709 C0 04            [24] 2404 	push	ar4
      00070B E5 81            [12] 2405 	mov	a,sp
      00070D 24 E7            [12] 2406 	add	a,#0xe7
      00070F F8               [12] 2407 	mov	r0,a
      000710 E6               [12] 2408 	mov	a,@r0
      000711 C0 E0            [24] 2409 	push	acc
      000713 08               [12] 2410 	inc	r0
      000714 E6               [12] 2411 	mov	a,@r0
      000715 C0 E0            [24] 2412 	push	acc
      000717 08               [12] 2413 	inc	r0
      000718 E6               [12] 2414 	mov	a,@r0
      000719 C0 E0            [24] 2415 	push	acc
      00071B 8A 82            [24] 2416 	mov	dpl,r2
      00071D 8B 83            [24] 2417 	mov	dph,r3
      00071F 8F F0            [24] 2418 	mov	b,r7
      000721 78r00            [12] 2419 	mov	r0,#_uip_ds6_set_addr_iid
      000723 79s00            [12] 2420 	mov	r1,#(_uip_ds6_set_addr_iid >> 8)
      000725 7As00            [12] 2421 	mov	r2,#(_uip_ds6_set_addr_iid >> 16)
      000727 12r00r00         [24] 2422 	lcall	__sdcc_banked_call
      00072A 15 81            [12] 2423 	dec	sp
      00072C 15 81            [12] 2424 	dec	sp
      00072E 15 81            [12] 2425 	dec	sp
      000730 D0 04            [24] 2426 	pop	ar4
                                   2427 ;	../../core/net/rpl/rpl.c:257: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      000732 E5 81            [12] 2428 	mov	a,sp
      000734 24 E8            [12] 2429 	add	a,#0xe8
      000736 F8               [12] 2430 	mov	r0,a
      000737 A6 04            [24] 2431 	mov	@r0,ar4
      000739 7Cr00            [12] 2432 	mov	r4,#_instance_table
      00073B 7Ds00            [12] 2433 	mov	r5,#(_instance_table >> 8)
      00073D 7E 00            [12] 2434 	mov	r6,#0x00
      00073F                       2435 00112$:
      00073F 74rE5            [12] 2436 	mov	a,#(_instance_table + 0x00e5)
      000741 C0 E0            [24] 2437 	push	acc
      000743 74s00            [12] 2438 	mov	a,#((_instance_table + 0x00e5) >> 8)
      000745 C0 E0            [24] 2439 	push	acc
      000747 E4               [12] 2440 	clr	a
      000748 C0 E0            [24] 2441 	push	acc
      00074A 8C 82            [24] 2442 	mov	dpl,r4
      00074C 8D 83            [24] 2443 	mov	dph,r5
      00074E 8E F0            [24] 2444 	mov	b,r6
      000750 12r00r00         [24] 2445 	lcall	___gptr_cmp
      000753 15 81            [12] 2446 	dec	sp
      000755 15 81            [12] 2447 	dec	sp
      000757 15 81            [12] 2448 	dec	sp
      000759 40 03            [24] 2449 	jc	00132$
      00075B 02r08rE4         [24] 2450 	ljmp	00114$
      00075E                       2451 00132$:
                                   2452 ;	../../core/net/rpl/rpl.c:258: if(instance->used == 1 ) {
      00075E 74 7B            [12] 2453 	mov	a,#0x7B
      000760 2C               [12] 2454 	add	a,r4
      000761 FA               [12] 2455 	mov	r2,a
      000762 E4               [12] 2456 	clr	a
      000763 3D               [12] 2457 	addc	a,r5
      000764 FB               [12] 2458 	mov	r3,a
      000765 8E 07            [24] 2459 	mov	ar7,r6
      000767 8A 82            [24] 2460 	mov	dpl,r2
      000769 8B 83            [24] 2461 	mov	dph,r3
      00076B 8F F0            [24] 2462 	mov	b,r7
      00076D 12r00r00         [24] 2463 	lcall	__gptrget
      000770 FA               [12] 2464 	mov	r2,a
      000771 BA 01 02         [24] 2465 	cjne	r2,#0x01,00133$
      000774 80 03            [24] 2466 	sjmp	00134$
      000776                       2467 00133$:
      000776 02r08rDA         [24] 2468 	ljmp	00113$
      000779                       2469 00134$:
                                   2470 ;	../../core/net/rpl/rpl.c:259: parent = rpl_find_parent_any_dag(instance, &ipaddr);
      000779 E5 81            [12] 2471 	mov	a,sp
      00077B 24 E8            [12] 2472 	add	a,#0xe8
      00077D F8               [12] 2473 	mov	r0,a
      00077E 86 02            [24] 2474 	mov	ar2,@r0
      000780 7B 00            [12] 2475 	mov	r3,#0x00
      000782 7F 40            [12] 2476 	mov	r7,#0x40
      000784 C0 06            [24] 2477 	push	ar6
      000786 C0 05            [24] 2478 	push	ar5
      000788 C0 04            [24] 2479 	push	ar4
      00078A C0 02            [24] 2480 	push	ar2
      00078C C0 03            [24] 2481 	push	ar3
      00078E C0 07            [24] 2482 	push	ar7
      000790 8C 82            [24] 2483 	mov	dpl,r4
      000792 8D 83            [24] 2484 	mov	dph,r5
      000794 8E F0            [24] 2485 	mov	b,r6
      000796 78r00            [12] 2486 	mov	r0,#_rpl_find_parent_any_dag
      000798 79s00            [12] 2487 	mov	r1,#(_rpl_find_parent_any_dag >> 8)
      00079A 7As00            [12] 2488 	mov	r2,#(_rpl_find_parent_any_dag >> 16)
      00079C 12r00r00         [24] 2489 	lcall	__sdcc_banked_call
      00079F AA 82            [24] 2490 	mov	r2,dpl
      0007A1 AB 83            [24] 2491 	mov	r3,dph
      0007A3 AF F0            [24] 2492 	mov	r7,b
      0007A5 15 81            [12] 2493 	dec	sp
      0007A7 15 81            [12] 2494 	dec	sp
      0007A9 15 81            [12] 2495 	dec	sp
      0007AB D0 04            [24] 2496 	pop	ar4
      0007AD D0 05            [24] 2497 	pop	ar5
      0007AF D0 06            [24] 2498 	pop	ar6
      0007B1 A8 81            [24] 2499 	mov	r0,sp
      0007B3 18               [12] 2500 	dec	r0
      0007B4 18               [12] 2501 	dec	r0
      0007B5 A6 02            [24] 2502 	mov	@r0,ar2
      0007B7 08               [12] 2503 	inc	r0
      0007B8 A6 03            [24] 2504 	mov	@r0,ar3
      0007BA 08               [12] 2505 	inc	r0
      0007BB A6 07            [24] 2506 	mov	@r0,ar7
                                   2507 ;	../../core/net/rpl/rpl.c:260: if(parent != NULL) {
      0007BD A8 81            [24] 2508 	mov	r0,sp
      0007BF 18               [12] 2509 	dec	r0
      0007C0 18               [12] 2510 	dec	r0
      0007C1 E6               [12] 2511 	mov	a,@r0
      0007C2 08               [12] 2512 	inc	r0
      0007C3 46               [12] 2513 	orl	a,@r0
      0007C4 70 03            [24] 2514 	jnz	00135$
      0007C6 02r08rDA         [24] 2515 	ljmp	00113$
      0007C9                       2516 00135$:
                                   2517 ;	../../core/net/rpl/rpl.c:263: parent->flags |= RPL_PARENT_FLAG_UPDATED;
      0007C9 A8 81            [24] 2518 	mov	r0,sp
      0007CB 18               [12] 2519 	dec	r0
      0007CC 18               [12] 2520 	dec	r0
      0007CD E5 81            [12] 2521 	mov	a,sp
      0007CF 24 EB            [12] 2522 	add	a,#0xeb
      0007D1 F9               [12] 2523 	mov	r1,a
      0007D2 74 0B            [12] 2524 	mov	a,#0x0B
      0007D4 26               [12] 2525 	add	a,@r0
      0007D5 F7               [12] 2526 	mov	@r1,a
      0007D6 E4               [12] 2527 	clr	a
      0007D7 08               [12] 2528 	inc	r0
      0007D8 36               [12] 2529 	addc	a,@r0
      0007D9 09               [12] 2530 	inc	r1
      0007DA F7               [12] 2531 	mov	@r1,a
      0007DB 08               [12] 2532 	inc	r0
      0007DC 09               [12] 2533 	inc	r1
      0007DD E6               [12] 2534 	mov	a,@r0
      0007DE F7               [12] 2535 	mov	@r1,a
      0007DF E5 81            [12] 2536 	mov	a,sp
      0007E1 24 EB            [12] 2537 	add	a,#0xeb
      0007E3 F8               [12] 2538 	mov	r0,a
      0007E4 86 82            [24] 2539 	mov	dpl,@r0
      0007E6 08               [12] 2540 	inc	r0
      0007E7 86 83            [24] 2541 	mov	dph,@r0
      0007E9 08               [12] 2542 	inc	r0
      0007EA 86 F0            [24] 2543 	mov	b,@r0
      0007EC 12r00r00         [24] 2544 	lcall	__gptrget
      0007EF FF               [12] 2545 	mov	r7,a
      0007F0 43 07 01         [24] 2546 	orl	ar7,#0x01
      0007F3 E5 81            [12] 2547 	mov	a,sp
      0007F5 24 EB            [12] 2548 	add	a,#0xeb
      0007F7 F8               [12] 2549 	mov	r0,a
      0007F8 86 82            [24] 2550 	mov	dpl,@r0
      0007FA 08               [12] 2551 	inc	r0
      0007FB 86 83            [24] 2552 	mov	dph,@r0
      0007FD 08               [12] 2553 	inc	r0
      0007FE 86 F0            [24] 2554 	mov	b,@r0
      000800 EF               [12] 2555 	mov	a,r7
      000801 12r00r00         [24] 2556 	lcall	__gptrput
                                   2557 ;	../../core/net/rpl/rpl.c:264: if(instance->of->neighbor_link_callback != NULL) {
      000804 74 07            [12] 2558 	mov	a,#0x07
      000806 2C               [12] 2559 	add	a,r4
      000807 FA               [12] 2560 	mov	r2,a
      000808 E4               [12] 2561 	clr	a
      000809 3D               [12] 2562 	addc	a,r5
      00080A FB               [12] 2563 	mov	r3,a
      00080B 8E 07            [24] 2564 	mov	ar7,r6
      00080D 8A 82            [24] 2565 	mov	dpl,r2
      00080F 8B 83            [24] 2566 	mov	dph,r3
      000811 8F F0            [24] 2567 	mov	b,r7
      000813 12r00r00         [24] 2568 	lcall	__gptrget
      000816 FA               [12] 2569 	mov	r2,a
      000817 A3               [24] 2570 	inc	dptr
      000818 12r00r00         [24] 2571 	lcall	__gptrget
      00081B FB               [12] 2572 	mov	r3,a
      00081C A3               [24] 2573 	inc	dptr
      00081D 12r00r00         [24] 2574 	lcall	__gptrget
      000820 FF               [12] 2575 	mov	r7,a
      000821 74 03            [12] 2576 	mov	a,#0x03
      000823 2A               [12] 2577 	add	a,r2
      000824 FA               [12] 2578 	mov	r2,a
      000825 E4               [12] 2579 	clr	a
      000826 3B               [12] 2580 	addc	a,r3
      000827 FB               [12] 2581 	mov	r3,a
      000828 8A 82            [24] 2582 	mov	dpl,r2
      00082A 8B 83            [24] 2583 	mov	dph,r3
      00082C 8F F0            [24] 2584 	mov	b,r7
      00082E 12r00r00         [24] 2585 	lcall	__gptrget
      000831 FA               [12] 2586 	mov	r2,a
      000832 A3               [24] 2587 	inc	dptr
      000833 12r00r00         [24] 2588 	lcall	__gptrget
      000836 FB               [12] 2589 	mov	r3,a
      000837 A3               [24] 2590 	inc	dptr
      000838 12r00r00         [24] 2591 	lcall	__gptrget
      00083B FF               [12] 2592 	mov	r7,a
      00083C EA               [12] 2593 	mov	a,r2
      00083D 4B               [12] 2594 	orl	a,r3
      00083E 70 03            [24] 2595 	jnz	00136$
      000840 02r08rDA         [24] 2596 	ljmp	00113$
      000843                       2597 00136$:
                                   2598 ;	../../core/net/rpl/rpl.c:265: instance->of->neighbor_link_callback(parent, status, numtx);
      000843 C0 07            [24] 2599 	push	ar7
      000845 C0 06            [24] 2600 	push	ar6
      000847 C0 05            [24] 2601 	push	ar5
      000849 C0 04            [24] 2602 	push	ar4
      00084B C0 03            [24] 2603 	push	ar3
      00084D C0 02            [24] 2604 	push	ar2
      00084F E5 81            [12] 2605 	mov	a,sp
      000851 24 DB            [12] 2606 	add	a,#0xdb
      000853 F8               [12] 2607 	mov	r0,a
      000854 E6               [12] 2608 	mov	a,@r0
      000855 C0 E0            [24] 2609 	push	acc
      000857 08               [12] 2610 	inc	r0
      000858 E6               [12] 2611 	mov	a,@r0
      000859 C0 E0            [24] 2612 	push	acc
      00085B E5 81            [12] 2613 	mov	a,sp
      00085D 24 DB            [12] 2614 	add	a,#0xdb
      00085F F8               [12] 2615 	mov	r0,a
      000860 E6               [12] 2616 	mov	a,@r0
      000861 C0 E0            [24] 2617 	push	acc
      000863 08               [12] 2618 	inc	r0
      000864 E6               [12] 2619 	mov	a,@r0
      000865 C0 E0            [24] 2620 	push	acc
      000867 C0 02            [24] 2621 	push	ar2
      000869 C0 03            [24] 2622 	push	ar3
      00086B C0 07            [24] 2623 	push	ar7
      00086D E5 81            [12] 2624 	mov	a,sp
      00086F 24 F1            [12] 2625 	add	a,#0xf1
      000871 F8               [12] 2626 	mov	r0,a
      000872 86 82            [24] 2627 	mov	dpl,@r0
      000874 08               [12] 2628 	inc	r0
      000875 86 83            [24] 2629 	mov	dph,@r0
      000877 08               [12] 2630 	inc	r0
      000878 86 F0            [24] 2631 	mov	b,@r0
      00087A D0 02            [24] 2632 	pop	ar2
      00087C D0 01            [24] 2633 	pop	ar1
      00087E D0 00            [24] 2634 	pop	ar0
      000880 12r00r00         [24] 2635 	lcall	__sdcc_banked_call
      000883 E5 81            [12] 2636 	mov	a,sp
      000885 24 FC            [12] 2637 	add	a,#0xfc
      000887 F5 81            [12] 2638 	mov	sp,a
      000889 D0 02            [24] 2639 	pop	ar2
      00088B D0 03            [24] 2640 	pop	ar3
      00088D D0 04            [24] 2641 	pop	ar4
      00088F D0 05            [24] 2642 	pop	ar5
      000891 D0 06            [24] 2643 	pop	ar6
      000893 D0 07            [24] 2644 	pop	ar7
                                   2645 ;	../../core/net/rpl/rpl.c:266: parent->last_tx_time = clock_time();
      000895 A8 81            [24] 2646 	mov	r0,sp
      000897 18               [12] 2647 	dec	r0
      000898 18               [12] 2648 	dec	r0
      000899 E5 81            [12] 2649 	mov	a,sp
      00089B 24 EB            [12] 2650 	add	a,#0xeb
      00089D F9               [12] 2651 	mov	r1,a
      00089E 74 08            [12] 2652 	mov	a,#0x08
      0008A0 26               [12] 2653 	add	a,@r0
      0008A1 F7               [12] 2654 	mov	@r1,a
      0008A2 E4               [12] 2655 	clr	a
      0008A3 08               [12] 2656 	inc	r0
      0008A4 36               [12] 2657 	addc	a,@r0
      0008A5 09               [12] 2658 	inc	r1
      0008A6 F7               [12] 2659 	mov	@r1,a
      0008A7 08               [12] 2660 	inc	r0
      0008A8 09               [12] 2661 	inc	r1
      0008A9 E6               [12] 2662 	mov	a,@r0
      0008AA F7               [12] 2663 	mov	@r1,a
      0008AB C0 06            [24] 2664 	push	ar6
      0008AD C0 05            [24] 2665 	push	ar5
      0008AF C0 04            [24] 2666 	push	ar4
      0008B1 78r00            [12] 2667 	mov	r0,#_clock_time
      0008B3 79s00            [12] 2668 	mov	r1,#(_clock_time >> 8)
      0008B5 7As00            [12] 2669 	mov	r2,#(_clock_time >> 16)
      0008B7 12r00r00         [24] 2670 	lcall	__sdcc_banked_call
      0008BA AB 82            [24] 2671 	mov	r3,dpl
      0008BC AF 83            [24] 2672 	mov	r7,dph
      0008BE D0 04            [24] 2673 	pop	ar4
      0008C0 D0 05            [24] 2674 	pop	ar5
      0008C2 D0 06            [24] 2675 	pop	ar6
      0008C4 E5 81            [12] 2676 	mov	a,sp
      0008C6 24 EB            [12] 2677 	add	a,#0xeb
      0008C8 F8               [12] 2678 	mov	r0,a
      0008C9 86 82            [24] 2679 	mov	dpl,@r0
      0008CB 08               [12] 2680 	inc	r0
      0008CC 86 83            [24] 2681 	mov	dph,@r0
      0008CE 08               [12] 2682 	inc	r0
      0008CF 86 F0            [24] 2683 	mov	b,@r0
      0008D1 EB               [12] 2684 	mov	a,r3
      0008D2 12r00r00         [24] 2685 	lcall	__gptrput
      0008D5 A3               [24] 2686 	inc	dptr
      0008D6 EF               [12] 2687 	mov	a,r7
      0008D7 12r00r00         [24] 2688 	lcall	__gptrput
      0008DA                       2689 00113$:
                                   2690 ;	../../core/net/rpl/rpl.c:257: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      0008DA 74 E5            [12] 2691 	mov	a,#0xE5
      0008DC 2C               [12] 2692 	add	a,r4
      0008DD FC               [12] 2693 	mov	r4,a
      0008DE E4               [12] 2694 	clr	a
      0008DF 3D               [12] 2695 	addc	a,r5
      0008E0 FD               [12] 2696 	mov	r5,a
      0008E1 02r07r3F         [24] 2697 	ljmp	00112$
      0008E4                       2698 00114$:
      0008E4 E5 81            [12] 2699 	mov	a,sp
      0008E6 24 E7            [12] 2700 	add	a,#0xE7
      0008E8 F5 81            [12] 2701 	mov	sp,a
      0008EA 02r00r00         [24] 2702 	ljmp	__sdcc_banked_ret
                                   2703 ;------------------------------------------------------------
                                   2704 ;Allocation info for local variables in function 'rpl_ipv6_neighbor_callback'
                                   2705 ;------------------------------------------------------------
                                   2706 ;nbr                       Allocated to stack - sp -2
                                   2707 ;p                         Allocated to registers r5 r6 r7 
                                   2708 ;instance                  Allocated to registers 
                                   2709 ;end                       Allocated to registers 
                                   2710 ;------------------------------------------------------------
                                   2711 ;	../../core/net/rpl/rpl.c:274: rpl_ipv6_neighbor_callback(uip_ds6_nbr_t *nbr)
                                   2712 ;	-----------------------------------------
                                   2713 ;	 function rpl_ipv6_neighbor_callback
                                   2714 ;	-----------------------------------------
      0008ED                       2715 _rpl_ipv6_neighbor_callback:
      0008ED C0 82            [24] 2716 	push	dpl
      0008EF C0 83            [24] 2717 	push	dph
      0008F1 C0 F0            [24] 2718 	push	b
                                   2719 ;	../../core/net/rpl/rpl.c:283: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      0008F3 7Ar00            [12] 2720 	mov	r2,#_instance_table
      0008F5 7Bs00            [12] 2721 	mov	r3,#(_instance_table >> 8)
      0008F7 7C 00            [12] 2722 	mov	r4,#0x00
      0008F9                       2723 00107$:
      0008F9 74rE5            [12] 2724 	mov	a,#(_instance_table + 0x00e5)
      0008FB C0 E0            [24] 2725 	push	acc
      0008FD 74s00            [12] 2726 	mov	a,#((_instance_table + 0x00e5) >> 8)
      0008FF C0 E0            [24] 2727 	push	acc
      000901 E4               [12] 2728 	clr	a
      000902 C0 E0            [24] 2729 	push	acc
      000904 8A 82            [24] 2730 	mov	dpl,r2
      000906 8B 83            [24] 2731 	mov	dph,r3
      000908 8C F0            [24] 2732 	mov	b,r4
      00090A 12r00r00         [24] 2733 	lcall	___gptr_cmp
      00090D 15 81            [12] 2734 	dec	sp
      00090F 15 81            [12] 2735 	dec	sp
      000911 15 81            [12] 2736 	dec	sp
      000913 40 03            [24] 2737 	jc	00124$
      000915 02r09rBC         [24] 2738 	ljmp	00109$
      000918                       2739 00124$:
                                   2740 ;	../../core/net/rpl/rpl.c:284: if(instance->used == 1 ) {
      000918 74 7B            [12] 2741 	mov	a,#0x7B
      00091A 2A               [12] 2742 	add	a,r2
      00091B FD               [12] 2743 	mov	r5,a
      00091C E4               [12] 2744 	clr	a
      00091D 3B               [12] 2745 	addc	a,r3
      00091E FE               [12] 2746 	mov	r6,a
      00091F 8C 07            [24] 2747 	mov	ar7,r4
      000921 8D 82            [24] 2748 	mov	dpl,r5
      000923 8E 83            [24] 2749 	mov	dph,r6
      000925 8F F0            [24] 2750 	mov	b,r7
      000927 12r00r00         [24] 2751 	lcall	__gptrget
      00092A FD               [12] 2752 	mov	r5,a
      00092B BD 01 02         [24] 2753 	cjne	r5,#0x01,00125$
      00092E 80 03            [24] 2754 	sjmp	00126$
      000930                       2755 00125$:
      000930 02r09rB2         [24] 2756 	ljmp	00108$
      000933                       2757 00126$:
                                   2758 ;	../../core/net/rpl/rpl.c:285: p = rpl_find_parent_any_dag(instance, &nbr->ipaddr);
      000933 C0 04            [24] 2759 	push	ar4
      000935 C0 03            [24] 2760 	push	ar3
      000937 C0 02            [24] 2761 	push	ar2
      000939 E5 81            [12] 2762 	mov	a,sp
      00093B 24 FB            [12] 2763 	add	a,#0xfb
      00093D F8               [12] 2764 	mov	r0,a
      00093E E6               [12] 2765 	mov	a,@r0
      00093F C0 E0            [24] 2766 	push	acc
      000941 08               [12] 2767 	inc	r0
      000942 E6               [12] 2768 	mov	a,@r0
      000943 C0 E0            [24] 2769 	push	acc
      000945 08               [12] 2770 	inc	r0
      000946 E6               [12] 2771 	mov	a,@r0
      000947 C0 E0            [24] 2772 	push	acc
      000949 8A 82            [24] 2773 	mov	dpl,r2
      00094B 8B 83            [24] 2774 	mov	dph,r3
      00094D 8C F0            [24] 2775 	mov	b,r4
      00094F 78r00            [12] 2776 	mov	r0,#_rpl_find_parent_any_dag
      000951 79s00            [12] 2777 	mov	r1,#(_rpl_find_parent_any_dag >> 8)
      000953 7As00            [12] 2778 	mov	r2,#(_rpl_find_parent_any_dag >> 16)
      000955 12r00r00         [24] 2779 	lcall	__sdcc_banked_call
      000958 AD 82            [24] 2780 	mov	r5,dpl
      00095A AE 83            [24] 2781 	mov	r6,dph
      00095C AF F0            [24] 2782 	mov	r7,b
      00095E 15 81            [12] 2783 	dec	sp
      000960 15 81            [12] 2784 	dec	sp
      000962 15 81            [12] 2785 	dec	sp
      000964 D0 02            [24] 2786 	pop	ar2
      000966 D0 03            [24] 2787 	pop	ar3
      000968 D0 04            [24] 2788 	pop	ar4
                                   2789 ;	../../core/net/rpl/rpl.c:286: if(p != NULL) {
      00096A ED               [12] 2790 	mov	a,r5
      00096B 4E               [12] 2791 	orl	a,r6
      00096C 60 44            [24] 2792 	jz	00108$
                                   2793 ;	../../core/net/rpl/rpl.c:287: p->rank = INFINITE_RANK;
      00096E C0 02            [24] 2794 	push	ar2
      000970 C0 03            [24] 2795 	push	ar3
      000972 C0 04            [24] 2796 	push	ar4
      000974 74 06            [12] 2797 	mov	a,#0x06
      000976 2D               [12] 2798 	add	a,r5
      000977 FA               [12] 2799 	mov	r2,a
      000978 E4               [12] 2800 	clr	a
      000979 3E               [12] 2801 	addc	a,r6
      00097A FB               [12] 2802 	mov	r3,a
      00097B 8F 04            [24] 2803 	mov	ar4,r7
      00097D 8A 82            [24] 2804 	mov	dpl,r2
      00097F 8B 83            [24] 2805 	mov	dph,r3
      000981 8C F0            [24] 2806 	mov	b,r4
      000983 74 FF            [12] 2807 	mov	a,#0xFF
      000985 12r00r00         [24] 2808 	lcall	__gptrput
      000988 A3               [24] 2809 	inc	dptr
      000989 74 FF            [12] 2810 	mov	a,#0xFF
      00098B 12r00r00         [24] 2811 	lcall	__gptrput
                                   2812 ;	../../core/net/rpl/rpl.c:290: p->flags |= RPL_PARENT_FLAG_UPDATED;
      00098E 74 0B            [12] 2813 	mov	a,#0x0B
      000990 2D               [12] 2814 	add	a,r5
      000991 FD               [12] 2815 	mov	r5,a
      000992 E4               [12] 2816 	clr	a
      000993 3E               [12] 2817 	addc	a,r6
      000994 FE               [12] 2818 	mov	r6,a
      000995 8D 82            [24] 2819 	mov	dpl,r5
      000997 8E 83            [24] 2820 	mov	dph,r6
      000999 8F F0            [24] 2821 	mov	b,r7
      00099B 12r00r00         [24] 2822 	lcall	__gptrget
      00099E FC               [12] 2823 	mov	r4,a
      00099F 43 04 01         [24] 2824 	orl	ar4,#0x01
      0009A2 8D 82            [24] 2825 	mov	dpl,r5
      0009A4 8E 83            [24] 2826 	mov	dph,r6
      0009A6 8F F0            [24] 2827 	mov	b,r7
      0009A8 EC               [12] 2828 	mov	a,r4
      0009A9 12r00r00         [24] 2829 	lcall	__gptrput
                                   2830 ;	../../core/net/rpl/rpl.c:283: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      0009AC D0 04            [24] 2831 	pop	ar4
      0009AE D0 03            [24] 2832 	pop	ar3
      0009B0 D0 02            [24] 2833 	pop	ar2
                                   2834 ;	../../core/net/rpl/rpl.c:290: p->flags |= RPL_PARENT_FLAG_UPDATED;
      0009B2                       2835 00108$:
                                   2836 ;	../../core/net/rpl/rpl.c:283: for(instance = &instance_table[0], end = instance + RPL_MAX_INSTANCES; instance < end; ++instance) {
      0009B2 74 E5            [12] 2837 	mov	a,#0xE5
      0009B4 2A               [12] 2838 	add	a,r2
      0009B5 FA               [12] 2839 	mov	r2,a
      0009B6 E4               [12] 2840 	clr	a
      0009B7 3B               [12] 2841 	addc	a,r3
      0009B8 FB               [12] 2842 	mov	r3,a
      0009B9 02r08rF9         [24] 2843 	ljmp	00107$
      0009BC                       2844 00109$:
      0009BC 15 81            [12] 2845 	dec	sp
      0009BE 15 81            [12] 2846 	dec	sp
      0009C0 15 81            [12] 2847 	dec	sp
      0009C2 02r00r00         [24] 2848 	ljmp	__sdcc_banked_ret
                                   2849 ;------------------------------------------------------------
                                   2850 ;Allocation info for local variables in function 'rpl_init'
                                   2851 ;------------------------------------------------------------
                                   2852 ;rplmaddr                  Allocated to stack - sp -15
                                   2853 ;------------------------------------------------------------
                                   2854 ;	../../core/net/rpl/rpl.c:297: rpl_init(void)
                                   2855 ;	-----------------------------------------
                                   2856 ;	 function rpl_init
                                   2857 ;	-----------------------------------------
      0009C5                       2858 _rpl_init:
      0009C5 E5 81            [12] 2859 	mov	a,sp
      0009C7 24 10            [12] 2860 	add	a,#0x10
      0009C9 F5 81            [12] 2861 	mov	sp,a
                                   2862 ;	../../core/net/rpl/rpl.c:301: default_instance = NULL;
      0009CB 90r00r00         [24] 2863 	mov	dptr,#_default_instance
      0009CE E4               [12] 2864 	clr	a
      0009CF F0               [24] 2865 	movx	@dptr,a
      0009D0 E4               [12] 2866 	clr	a
      0009D1 A3               [24] 2867 	inc	dptr
      0009D2 F0               [24] 2868 	movx	@dptr,a
      0009D3 E4               [12] 2869 	clr	a
      0009D4 A3               [24] 2870 	inc	dptr
      0009D5 F0               [24] 2871 	movx	@dptr,a
                                   2872 ;	../../core/net/rpl/rpl.c:303: rpl_dag_init();
      0009D6 78r00            [12] 2873 	mov	r0,#_rpl_dag_init
      0009D8 79s00            [12] 2874 	mov	r1,#(_rpl_dag_init >> 8)
      0009DA 7As00            [12] 2875 	mov	r2,#(_rpl_dag_init >> 16)
      0009DC 12r00r00         [24] 2876 	lcall	__sdcc_banked_call
                                   2877 ;	../../core/net/rpl/rpl.c:304: rpl_reset_periodic_timer();
      0009DF 78r00            [12] 2878 	mov	r0,#_rpl_reset_periodic_timer
      0009E1 79s00            [12] 2879 	mov	r1,#(_rpl_reset_periodic_timer >> 8)
      0009E3 7As00            [12] 2880 	mov	r2,#(_rpl_reset_periodic_timer >> 16)
      0009E5 12r00r00         [24] 2881 	lcall	__sdcc_banked_call
                                   2882 ;	../../core/net/rpl/rpl.c:305: rpl_icmp6_register_handlers();
      0009E8 78r00            [12] 2883 	mov	r0,#_rpl_icmp6_register_handlers
      0009EA 79s00            [12] 2884 	mov	r1,#(_rpl_icmp6_register_handlers >> 8)
      0009EC 7As00            [12] 2885 	mov	r2,#(_rpl_icmp6_register_handlers >> 16)
      0009EE 12r00r00         [24] 2886 	lcall	__sdcc_banked_call
                                   2887 ;	../../core/net/rpl/rpl.c:308: uip_create_linklocal_rplnodes_mcast(&rplmaddr);
      0009F1 E5 81            [12] 2888 	mov	a,sp
      0009F3 24 F1            [12] 2889 	add	a,#0xF1
      0009F5 F8               [12] 2890 	mov	r0,a
      0009F6 76 FF            [12] 2891 	mov	@r0,#0xFF
      0009F8 08               [12] 2892 	inc	r0
      0009F9 76 02            [12] 2893 	mov	@r0,#0x02
      0009FB E5 81            [12] 2894 	mov	a,sp
      0009FD 24 F1            [12] 2895 	add	a,#0xF1
      0009FF FF               [12] 2896 	mov	r7,a
      000A00 24 02            [12] 2897 	add	a,#0x02
      000A02 F8               [12] 2898 	mov	r0,a
      000A03 76 00            [12] 2899 	mov	@r0,#0x00
      000A05 08               [12] 2900 	inc	r0
      000A06 76 00            [12] 2901 	mov	@r0,#0x00
      000A08 74 04            [12] 2902 	mov	a,#0x04
      000A0A 2F               [12] 2903 	add	a,r7
      000A0B F8               [12] 2904 	mov	r0,a
      000A0C 76 00            [12] 2905 	mov	@r0,#0x00
      000A0E 08               [12] 2906 	inc	r0
      000A0F 76 00            [12] 2907 	mov	@r0,#0x00
      000A11 74 06            [12] 2908 	mov	a,#0x06
      000A13 2F               [12] 2909 	add	a,r7
      000A14 F8               [12] 2910 	mov	r0,a
      000A15 76 00            [12] 2911 	mov	@r0,#0x00
      000A17 08               [12] 2912 	inc	r0
      000A18 76 00            [12] 2913 	mov	@r0,#0x00
      000A1A 74 08            [12] 2914 	mov	a,#0x08
      000A1C 2F               [12] 2915 	add	a,r7
      000A1D F8               [12] 2916 	mov	r0,a
      000A1E 76 00            [12] 2917 	mov	@r0,#0x00
      000A20 08               [12] 2918 	inc	r0
      000A21 76 00            [12] 2919 	mov	@r0,#0x00
      000A23 74 0A            [12] 2920 	mov	a,#0x0A
      000A25 2F               [12] 2921 	add	a,r7
      000A26 F8               [12] 2922 	mov	r0,a
      000A27 76 00            [12] 2923 	mov	@r0,#0x00
      000A29 08               [12] 2924 	inc	r0
      000A2A 76 00            [12] 2925 	mov	@r0,#0x00
      000A2C 74 0C            [12] 2926 	mov	a,#0x0C
      000A2E 2F               [12] 2927 	add	a,r7
      000A2F F8               [12] 2928 	mov	r0,a
      000A30 76 00            [12] 2929 	mov	@r0,#0x00
      000A32 08               [12] 2930 	inc	r0
      000A33 76 00            [12] 2931 	mov	@r0,#0x00
      000A35 74 0E            [12] 2932 	mov	a,#0x0E
      000A37 2F               [12] 2933 	add	a,r7
      000A38 F8               [12] 2934 	mov	r0,a
      000A39 76 00            [12] 2935 	mov	@r0,#0x00
      000A3B 08               [12] 2936 	inc	r0
      000A3C 76 1A            [12] 2937 	mov	@r0,#0x1A
                                   2938 ;	../../core/net/rpl/rpl.c:309: uip_ds6_maddr_add(&rplmaddr);
      000A3E E5 81            [12] 2939 	mov	a,sp
      000A40 24 F1            [12] 2940 	add	a,#0xF1
      000A42 FF               [12] 2941 	mov	r7,a
      000A43 7E 00            [12] 2942 	mov	r6,#0x00
      000A45 7D 40            [12] 2943 	mov	r5,#0x40
      000A47 8F 82            [24] 2944 	mov	dpl,r7
      000A49 8E 83            [24] 2945 	mov	dph,r6
      000A4B 8D F0            [24] 2946 	mov	b,r5
      000A4D 78r00            [12] 2947 	mov	r0,#_uip_ds6_maddr_add
      000A4F 79s00            [12] 2948 	mov	r1,#(_uip_ds6_maddr_add >> 8)
      000A51 7As00            [12] 2949 	mov	r2,#(_uip_ds6_maddr_add >> 16)
      000A53 12r00r00         [24] 2950 	lcall	__sdcc_banked_call
                                   2951 ;	../../core/net/rpl/rpl.c:315: RPL_OF.reset(NULL);
      000A56 90r00r00         [24] 2952 	mov	dptr,#_rpl_mrhof
      000A59 E0               [24] 2953 	movx	a,@dptr
      000A5A FD               [12] 2954 	mov	r5,a
      000A5B A3               [24] 2955 	inc	dptr
      000A5C E0               [24] 2956 	movx	a,@dptr
      000A5D FE               [12] 2957 	mov	r6,a
      000A5E A3               [24] 2958 	inc	dptr
      000A5F E0               [24] 2959 	movx	a,@dptr
      000A60 FF               [12] 2960 	mov	r7,a
      000A61 C0 07            [24] 2961 	push	ar7
      000A63 C0 06            [24] 2962 	push	ar6
      000A65 C0 05            [24] 2963 	push	ar5
      000A67 C0 05            [24] 2964 	push	ar5
      000A69 C0 06            [24] 2965 	push	ar6
      000A6B C0 07            [24] 2966 	push	ar7
      000A6D 90 00 00         [24] 2967 	mov	dptr,#0x0000
      000A70 75 F0 00         [24] 2968 	mov	b,#0x00
      000A73 D0 02            [24] 2969 	pop	ar2
      000A75 D0 01            [24] 2970 	pop	ar1
      000A77 D0 00            [24] 2971 	pop	ar0
      000A79 12r00r00         [24] 2972 	lcall	__sdcc_banked_call
      000A7C D0 05            [24] 2973 	pop	ar5
      000A7E D0 06            [24] 2974 	pop	ar6
      000A80 D0 07            [24] 2975 	pop	ar7
      000A82 E5 81            [12] 2976 	mov	a,sp
      000A84 24 F0            [12] 2977 	add	a,#0xF0
      000A86 F5 81            [12] 2978 	mov	sp,a
      000A88 02r00r00         [24] 2979 	ljmp	__sdcc_banked_ret
                                   2980 	.area CSEG    (CODE)
                                   2981 	.area CONST   (CODE)
                                   2982 	.area XINIT   (CODE)
      000000                       2983 __xinit__mode:
      000000 00                    2984 	.db #0x00	; 0
                                   2985 	.area CABS    (ABS,CODE)
