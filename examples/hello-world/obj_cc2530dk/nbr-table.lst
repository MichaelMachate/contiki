                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:25 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module nbr_table
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _linkaddr_cmp
                                     13 	.globl _linkaddr_copy
                                     14 	.globl _list_item_next
                                     15 	.globl _list_remove
                                     16 	.globl _list_add
                                     17 	.globl _list_head
                                     18 	.globl _memb_alloc
                                     19 	.globl _memset
                                     20 	.globl _ACTIVE
                                     21 	.globl _TX_BYTE
                                     22 	.globl _RX_BYTE
                                     23 	.globl _ERR
                                     24 	.globl _FE
                                     25 	.globl _SLAVE
                                     26 	.globl _RE
                                     27 	.globl _MODE
                                     28 	.globl _T3OVFIF
                                     29 	.globl _T3CH0IF
                                     30 	.globl _T3CH1IF
                                     31 	.globl _T4OVFIF
                                     32 	.globl _T4CH0IF
                                     33 	.globl _T4CH1IF
                                     34 	.globl _OVFIM
                                     35 	.globl _B_0
                                     36 	.globl _B_1
                                     37 	.globl _B_2
                                     38 	.globl _B_3
                                     39 	.globl _B_4
                                     40 	.globl _B_5
                                     41 	.globl _B_6
                                     42 	.globl _B_7
                                     43 	.globl _P2IF
                                     44 	.globl _UTX0IF
                                     45 	.globl _UTX1IF
                                     46 	.globl _P1IF
                                     47 	.globl _WDTIF
                                     48 	.globl _ACC_0
                                     49 	.globl _ACC_1
                                     50 	.globl _ACC_2
                                     51 	.globl _ACC_3
                                     52 	.globl _ACC_4
                                     53 	.globl _ACC_5
                                     54 	.globl _ACC_6
                                     55 	.globl _ACC_7
                                     56 	.globl _P
                                     57 	.globl _F1
                                     58 	.globl _OV
                                     59 	.globl _RS0
                                     60 	.globl _RS1
                                     61 	.globl _F0
                                     62 	.globl _AC
                                     63 	.globl _CY
                                     64 	.globl _DMAIF
                                     65 	.globl _T1IF
                                     66 	.globl _T2IF
                                     67 	.globl _T3IF
                                     68 	.globl _T4IF
                                     69 	.globl _P0IF
                                     70 	.globl _STIF
                                     71 	.globl _DMAIE
                                     72 	.globl _T1IE
                                     73 	.globl _T2IE
                                     74 	.globl _T3IE
                                     75 	.globl _T4IE
                                     76 	.globl _P0IE
                                     77 	.globl _RFERRIE
                                     78 	.globl _ADCIE
                                     79 	.globl _URX0IE
                                     80 	.globl _URX1IE
                                     81 	.globl _ENCIE
                                     82 	.globl _STIE
                                     83 	.globl _EA
                                     84 	.globl _P2_0
                                     85 	.globl _P2_1
                                     86 	.globl _P2_2
                                     87 	.globl _P2_3
                                     88 	.globl _P2_4
                                     89 	.globl _P2_5
                                     90 	.globl _P2_6
                                     91 	.globl _P2_7
                                     92 	.globl _ENCIF_0
                                     93 	.globl _ENCIF_1
                                     94 	.globl _P1_0
                                     95 	.globl _P1_1
                                     96 	.globl _P1_2
                                     97 	.globl _P1_3
                                     98 	.globl _P1_4
                                     99 	.globl _P1_5
                                    100 	.globl _P1_6
                                    101 	.globl _P1_7
                                    102 	.globl _IT0
                                    103 	.globl _RFERRIF
                                    104 	.globl _IT1
                                    105 	.globl _URX0IF
                                    106 	.globl _ADCIF
                                    107 	.globl _URX1IF
                                    108 	.globl _P0_0
                                    109 	.globl _P0_1
                                    110 	.globl _P0_2
                                    111 	.globl _P0_3
                                    112 	.globl _P0_4
                                    113 	.globl _P0_5
                                    114 	.globl _P0_6
                                    115 	.globl _P0_7
                                    116 	.globl _WDCTL
                                    117 	.globl _U1GCR
                                    118 	.globl _U1UCR
                                    119 	.globl _U1BAUD
                                    120 	.globl _U1DBUF
                                    121 	.globl _U1CSR
                                    122 	.globl _U0GCR
                                    123 	.globl _U0UCR
                                    124 	.globl _U0BAUD
                                    125 	.globl _U0DBUF
                                    126 	.globl _U0CSR
                                    127 	.globl _TIMIF
                                    128 	.globl _T4CC1
                                    129 	.globl _T4CCTL1
                                    130 	.globl _T4CC0
                                    131 	.globl _T4CCTL0
                                    132 	.globl _T4CTL
                                    133 	.globl _T4CNT
                                    134 	.globl _T3CC1
                                    135 	.globl _T3CCTL1
                                    136 	.globl _T3CC0
                                    137 	.globl _T3CCTL0
                                    138 	.globl _T3CTL
                                    139 	.globl _T3CNT
                                    140 	.globl _T2MSEL
                                    141 	.globl _T2IRQM
                                    142 	.globl _T2MOVF2
                                    143 	.globl _T2MOVF1
                                    144 	.globl _T2MOVF0
                                    145 	.globl _T2M1
                                    146 	.globl _T2M0
                                    147 	.globl _T2IRQF
                                    148 	.globl _T2EVTCFG
                                    149 	.globl _T2CTRL
                                    150 	.globl _T1STAT
                                    151 	.globl _T1CCTL2
                                    152 	.globl _T1CCTL1
                                    153 	.globl _T1CCTL0
                                    154 	.globl _T1CTL
                                    155 	.globl _T1CNTH
                                    156 	.globl _T1CNTL
                                    157 	.globl _T1CC2H
                                    158 	.globl _T1CC2L
                                    159 	.globl _T1CC1H
                                    160 	.globl _T1CC1L
                                    161 	.globl _T1CC0H
                                    162 	.globl _T1CC0L
                                    163 	.globl _CLKCONSTA
                                    164 	.globl _CLKCONCMD
                                    165 	.globl _SLEEPSTA
                                    166 	.globl _SLEEPCMD
                                    167 	.globl _STLOAD
                                    168 	.globl _ST2
                                    169 	.globl _ST1
                                    170 	.globl _ST0
                                    171 	.globl _RFERRF
                                    172 	.globl _RFIRQF0
                                    173 	.globl _RFST
                                    174 	.globl _RFD
                                    175 	.globl _RFIRQF1
                                    176 	.globl _PSBANK
                                    177 	.globl _FMAP
                                    178 	.globl _MEMCTR
                                    179 	.globl __XPAGE
                                    180 	.globl _MPAGE
                                    181 	.globl _PMUX
                                    182 	.globl _P2DIR
                                    183 	.globl _P1DIR
                                    184 	.globl _P0DIR
                                    185 	.globl _P2INP
                                    186 	.globl _P1INP
                                    187 	.globl _P2SEL
                                    188 	.globl _P1SEL
                                    189 	.globl _P0SEL
                                    190 	.globl _APCFG
                                    191 	.globl _PERCFG
                                    192 	.globl _P0INP
                                    193 	.globl _P2IEN
                                    194 	.globl _P1IEN
                                    195 	.globl _P0IEN
                                    196 	.globl _PICTL
                                    197 	.globl _P2IFG
                                    198 	.globl _P1IFG
                                    199 	.globl _P0IFG
                                    200 	.globl _DMAREQ
                                    201 	.globl _DMAARM
                                    202 	.globl _DMA0CFGH
                                    203 	.globl _DMA0CFGL
                                    204 	.globl _DMA1CFGH
                                    205 	.globl _DMA1CFGL
                                    206 	.globl _DMAIRQ
                                    207 	.globl _ENCCS
                                    208 	.globl _ENCDO
                                    209 	.globl _ENCDI
                                    210 	.globl _RNDH
                                    211 	.globl _RNDL
                                    212 	.globl _ADCH
                                    213 	.globl _ADCL
                                    214 	.globl _ADCCON3
                                    215 	.globl _ADCCON2
                                    216 	.globl _ADCCON1
                                    217 	.globl _B
                                    218 	.globl _IRCON2
                                    219 	.globl _ACC
                                    220 	.globl _PSW
                                    221 	.globl _IRCON
                                    222 	.globl _IP1
                                    223 	.globl _IEN1
                                    224 	.globl _IP0
                                    225 	.globl _IEN0
                                    226 	.globl _P2
                                    227 	.globl _S1CON
                                    228 	.globl _IEN2
                                    229 	.globl _S0CON
                                    230 	.globl _DPS
                                    231 	.globl _P1
                                    232 	.globl _TCON
                                    233 	.globl _PCON
                                    234 	.globl _DPH1
                                    235 	.globl _DPL1
                                    236 	.globl _DPH0
                                    237 	.globl _DPL0
                                    238 	.globl _SP
                                    239 	.globl _P0
                                    240 	.globl _X_IEEE_ADDR
                                    241 	.globl _X_INFOPAGE
                                    242 	.globl _X_P2DIR
                                    243 	.globl _X_P1DIR
                                    244 	.globl _X_P0DIR
                                    245 	.globl _X_U1GCR
                                    246 	.globl _X_U1UCR
                                    247 	.globl _X_U1BAUD
                                    248 	.globl _X_U1DBUF
                                    249 	.globl _X_U1CSR
                                    250 	.globl _X_P2INP
                                    251 	.globl _X_P1INP
                                    252 	.globl _X_P2SEL
                                    253 	.globl _X_P1SEL
                                    254 	.globl _X_P0SEL
                                    255 	.globl _X_APCFG
                                    256 	.globl _X_PERCFG
                                    257 	.globl _X_T4CC1
                                    258 	.globl _X_T4CCTL1
                                    259 	.globl _X_T4CC0
                                    260 	.globl _X_T4CCTL0
                                    261 	.globl _X_T4CTL
                                    262 	.globl _X_T4CNT
                                    263 	.globl _X_RFIRQF0
                                    264 	.globl _X_T1CCTL2
                                    265 	.globl _X_T1CCTL1
                                    266 	.globl _X_T1CCTL0
                                    267 	.globl _X_T1CTL
                                    268 	.globl _X_T1CNTH
                                    269 	.globl _X_T1CNTL
                                    270 	.globl _X_RFST
                                    271 	.globl _X_T1CC2H
                                    272 	.globl _X_T1CC2L
                                    273 	.globl _X_T1CC1H
                                    274 	.globl _X_T1CC1L
                                    275 	.globl _X_T1CC0H
                                    276 	.globl _X_T1CC0L
                                    277 	.globl _X_RFD
                                    278 	.globl _X_TIMIF
                                    279 	.globl _X_DMAREQ
                                    280 	.globl _X_DMAARM
                                    281 	.globl _X_DMA0CFGH
                                    282 	.globl _X_DMA0CFGL
                                    283 	.globl _X_DMA1CFGH
                                    284 	.globl _X_DMA1CFGL
                                    285 	.globl _X_DMAIRQ
                                    286 	.globl _X_T3CC1
                                    287 	.globl _X_T3CCTL1
                                    288 	.globl _X_T3CC0
                                    289 	.globl _X_T3CCTL0
                                    290 	.globl _X_T3CTL
                                    291 	.globl _X_T3CNT
                                    292 	.globl _X_WDCTL
                                    293 	.globl _X_MEMCTR
                                    294 	.globl _X_CLKCONCMD
                                    295 	.globl _X_U0GCR
                                    296 	.globl _X_U0UCR
                                    297 	.globl _X_T2MSEL
                                    298 	.globl _X_U0BAUD
                                    299 	.globl _X_U0DBUF
                                    300 	.globl _X_RFERRF
                                    301 	.globl _X_SLEEPCMD
                                    302 	.globl _X_RNDH
                                    303 	.globl _X_RNDL
                                    304 	.globl _X_ADCH
                                    305 	.globl _X_ADCL
                                    306 	.globl _X_ADCCON3
                                    307 	.globl _X_ADCCON2
                                    308 	.globl _X_ADCCON1
                                    309 	.globl _X_ENCCS
                                    310 	.globl _X_ENCDO
                                    311 	.globl _X_ENCDI
                                    312 	.globl _X_T1STAT
                                    313 	.globl _X_PMUX
                                    314 	.globl _X_STLOAD
                                    315 	.globl _X_P2IEN
                                    316 	.globl _X_P0IEN
                                    317 	.globl _X_T2IRQM
                                    318 	.globl _X_T2MOVF2
                                    319 	.globl _X_T2MOVF1
                                    320 	.globl _X_T2MOVF0
                                    321 	.globl _X_T2M1
                                    322 	.globl _X_T2M0
                                    323 	.globl _X_T2IRQF
                                    324 	.globl _X_P2
                                    325 	.globl _X_PSBANK
                                    326 	.globl _X_FMAP
                                    327 	.globl _X_CLKCONSTA
                                    328 	.globl _X_SLEEPSTA
                                    329 	.globl _X_T2EVTCFG
                                    330 	.globl _X_ST2
                                    331 	.globl _X_ST1
                                    332 	.globl _X_ST0
                                    333 	.globl _X_T2CTRL
                                    334 	.globl _X__XPAGE
                                    335 	.globl _X_MPAGE
                                    336 	.globl _X_RFIRQF1
                                    337 	.globl _X_P1
                                    338 	.globl _X_P0INP
                                    339 	.globl _X_P1IEN
                                    340 	.globl _X_PICTL
                                    341 	.globl _X_P2IFG
                                    342 	.globl _X_P1IFG
                                    343 	.globl _X_P0IFG
                                    344 	.globl _X_U0CSR
                                    345 	.globl _X_P0
                                    346 	.globl _USBF5
                                    347 	.globl _USBF4
                                    348 	.globl _USBF3
                                    349 	.globl _USBF2
                                    350 	.globl _USBF1
                                    351 	.globl _USBF0
                                    352 	.globl _USBCNTH
                                    353 	.globl _USBCNTL
                                    354 	.globl _USBCNT0
                                    355 	.globl _USBCSOH
                                    356 	.globl _USBCSOL
                                    357 	.globl _USBMAXO
                                    358 	.globl _USBCSIH
                                    359 	.globl _USBCSIL
                                    360 	.globl _USBCS0
                                    361 	.globl _USBMAXI
                                    362 	.globl _USBCTRL
                                    363 	.globl _USBINDEX
                                    364 	.globl _USBFRMH
                                    365 	.globl _USBFRML
                                    366 	.globl _USBCIE
                                    367 	.globl _USBOIE
                                    368 	.globl _USBIIE
                                    369 	.globl _USBCIF
                                    370 	.globl _USBOIF
                                    371 	.globl _USBIIF
                                    372 	.globl _USBPOW
                                    373 	.globl _USBADDR
                                    374 	.globl _CSPT
                                    375 	.globl _CSPZ
                                    376 	.globl _CSPY
                                    377 	.globl _CSPX
                                    378 	.globl _CSPSTAT
                                    379 	.globl _CSPCTRL
                                    380 	.globl _CSPPROG23
                                    381 	.globl _CSPPROG22
                                    382 	.globl _CSPPROG21
                                    383 	.globl _CSPPROG20
                                    384 	.globl _CSPPROG19
                                    385 	.globl _CSPPROG18
                                    386 	.globl _CSPPROG17
                                    387 	.globl _CSPPROG16
                                    388 	.globl _CSPPROG15
                                    389 	.globl _CSPPROG14
                                    390 	.globl _CSPPROG13
                                    391 	.globl _CSPPROG12
                                    392 	.globl _CSPPROG11
                                    393 	.globl _CSPPROG10
                                    394 	.globl _CSPPROG9
                                    395 	.globl _CSPPROG8
                                    396 	.globl _CSPPROG7
                                    397 	.globl _CSPPROG6
                                    398 	.globl _CSPPROG5
                                    399 	.globl _CSPPROG4
                                    400 	.globl _CSPPROG3
                                    401 	.globl _CSPPROG2
                                    402 	.globl _CSPPROG1
                                    403 	.globl _CSPPROG0
                                    404 	.globl _RFC_OBS_CTRL2
                                    405 	.globl _RFC_OBS_CTRL1
                                    406 	.globl _RFC_OBS_CTRL0
                                    407 	.globl _TXFILTCFG
                                    408 	.globl _PTEST1
                                    409 	.globl _PTEST0
                                    410 	.globl _ATEST
                                    411 	.globl _DACTEST2
                                    412 	.globl _DACTEST1
                                    413 	.globl _DACTEST0
                                    414 	.globl _MDMTEST1
                                    415 	.globl _MDMTEST0
                                    416 	.globl _ADCTEST2
                                    417 	.globl _ADCTEST1
                                    418 	.globl _ADCTEST0
                                    419 	.globl _AGCCTRL3
                                    420 	.globl _AGCCTRL2
                                    421 	.globl _AGCCTRL1
                                    422 	.globl _AGCCTRL0
                                    423 	.globl _FSCAL3
                                    424 	.globl _FSCAL2
                                    425 	.globl _FSCAL1
                                    426 	.globl _FSCAL0
                                    427 	.globl _FSCTRL
                                    428 	.globl _RXCTRL
                                    429 	.globl _FREQEST
                                    430 	.globl _MDMCTRL1
                                    431 	.globl _MDMCTRL0
                                    432 	.globl _RFRND
                                    433 	.globl _RFERRM
                                    434 	.globl _RFIRQM1
                                    435 	.globl _RFIRQM0
                                    436 	.globl _TXLAST_PTR
                                    437 	.globl _TXFIRST_PTR
                                    438 	.globl _RXP1_PTR
                                    439 	.globl _RXLAST_PTR
                                    440 	.globl _RXFIRST_PTR
                                    441 	.globl _TXFIFOCNT
                                    442 	.globl _RXFIFOCNT
                                    443 	.globl _RXFIRST
                                    444 	.globl _RSSISTAT
                                    445 	.globl _RSSI
                                    446 	.globl _CCACTRL1
                                    447 	.globl _CCACTRL0
                                    448 	.globl _FSMCTRL
                                    449 	.globl _FIFOPCTRL
                                    450 	.globl _FSMSTAT1
                                    451 	.globl _FSMSTAT0
                                    452 	.globl _TXCTRL
                                    453 	.globl _TXPOWER
                                    454 	.globl _FREQCTRL
                                    455 	.globl _FREQTUNE
                                    456 	.globl _RXMASKCLR
                                    457 	.globl _RXMASKSET
                                    458 	.globl _RXENABLE
                                    459 	.globl _FRMCTRL1
                                    460 	.globl _FRMCTRL0
                                    461 	.globl _SRCEXTEN2
                                    462 	.globl _SRCEXTEN1
                                    463 	.globl _SRCEXTEN0
                                    464 	.globl _SRCSHORTEN2
                                    465 	.globl _SRCSHORTEN1
                                    466 	.globl _SRCSHORTEN0
                                    467 	.globl _SRCMATCH
                                    468 	.globl _FRMFILT1
                                    469 	.globl _FRMFILT0
                                    470 	.globl _SHORT_ADDR1
                                    471 	.globl _SHORT_ADDR0
                                    472 	.globl _PAN_ID1
                                    473 	.globl _PAN_ID0
                                    474 	.globl _EXT_ADDR7
                                    475 	.globl _EXT_ADDR6
                                    476 	.globl _EXT_ADDR5
                                    477 	.globl _EXT_ADDR4
                                    478 	.globl _EXT_ADDR3
                                    479 	.globl _EXT_ADDR2
                                    480 	.globl _EXT_ADDR1
                                    481 	.globl _EXT_ADDR0
                                    482 	.globl _SRCSHORTPENDEN2
                                    483 	.globl _SRCSHORTPENDEN1
                                    484 	.globl _SRCSHORTPENDEN0
                                    485 	.globl _SRCEXTPENDEN2
                                    486 	.globl _SRCEXTPENDEN1
                                    487 	.globl _SRCEXTPENDEN0
                                    488 	.globl _SRCRESINDEX
                                    489 	.globl _SRCRESMASK2
                                    490 	.globl _SRCRESMASK1
                                    491 	.globl _SRCRESMASK0
                                    492 	.globl _SRC_ADDR_TABLE
                                    493 	.globl _TXFIFO
                                    494 	.globl _RXFIFO
                                    495 	.globl _RFCORE_RAM
                                    496 	.globl _CMPCTL
                                    497 	.globl _OPAMPS
                                    498 	.globl _OPAMPC
                                    499 	.globl _STCV2
                                    500 	.globl _STCV1
                                    501 	.globl _STCV0
                                    502 	.globl _STCS
                                    503 	.globl _STCC
                                    504 	.globl _T1CC4H
                                    505 	.globl _T1CC4L
                                    506 	.globl _T1CC3H
                                    507 	.globl _T1CC3L
                                    508 	.globl _XX_T1CC2H
                                    509 	.globl _XX_T1CC2L
                                    510 	.globl _XX_T1CC1H
                                    511 	.globl _XX_T1CC1L
                                    512 	.globl _XX_T1CC0H
                                    513 	.globl _XX_T1CC0L
                                    514 	.globl _T1CCTL4
                                    515 	.globl _T1CCTL3
                                    516 	.globl _XX_T1CCTL2
                                    517 	.globl _XX_T1CCTL1
                                    518 	.globl _XX_T1CCTL0
                                    519 	.globl _CLD
                                    520 	.globl _IRCTL
                                    521 	.globl _CHIPINFO1
                                    522 	.globl _CHIPINFO0
                                    523 	.globl _FWDATA
                                    524 	.globl _FADDRH
                                    525 	.globl _FADDRL
                                    526 	.globl _FCTL
                                    527 	.globl _IVCTRL
                                    528 	.globl _BATTMON
                                    529 	.globl _SRCRC
                                    530 	.globl _DBGDATA
                                    531 	.globl _TESTREG0
                                    532 	.globl _CHIPID
                                    533 	.globl _CHVER
                                    534 	.globl _OBSSEL5
                                    535 	.globl _OBSSEL4
                                    536 	.globl _OBSSEL3
                                    537 	.globl _OBSSEL2
                                    538 	.globl _OBSSEL1
                                    539 	.globl _OBSSEL0
                                    540 	.globl _I2CIO
                                    541 	.globl _I2CWC
                                    542 	.globl _I2CADDR
                                    543 	.globl _I2CDATA
                                    544 	.globl _I2CSTAT
                                    545 	.globl _I2CCFG
                                    546 	.globl _OPAMPMC
                                    547 	.globl _MONMUX
                                    548 	.globl _nbr_table_register
                                    549 	.globl _nbr_table_head
                                    550 	.globl _nbr_table_next
                                    551 	.globl _nbr_table_add_lladdr
                                    552 	.globl _nbr_table_get_from_lladdr
                                    553 	.globl _nbr_table_remove
                                    554 	.globl _nbr_table_lock
                                    555 	.globl _nbr_table_unlock
                                    556 	.globl _nbr_table_get_lladdr
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
      000000                       1128 _used_map:
      000000                       1129 	.ds 4
      000004                       1130 _locked_map:
      000004                       1131 	.ds 4
      000008                       1132 _all_tables:
      000008                       1133 	.ds 24
      000020                       1134 _num_tables:
      000020                       1135 	.ds 2
      000022                       1136 _neighbor_addr_mem_memb_count:
      000022                       1137 	.ds 4
      000026                       1138 _neighbor_addr_mem_memb_mem:
      000026                       1139 	.ds 44
                                   1140 ;--------------------------------------------------------
                                   1141 ; absolute external ram data
                                   1142 ;--------------------------------------------------------
                                   1143 	.area XABS    (ABS,XDATA)
                                   1144 ;--------------------------------------------------------
                                   1145 ; external initialized ram data
                                   1146 ;--------------------------------------------------------
                                   1147 	.area XISEG   (XDATA)
      000000                       1148 _neighbor_addr_mem:
      000000                       1149 	.ds 10
      00000A                       1150 _nbr_table_keys_list:
      00000A                       1151 	.ds 3
      00000D                       1152 _nbr_table_keys:
      00000D                       1153 	.ds 3
                                   1154 	.area HOME    (CODE)
                                   1155 	.area GSINIT0 (CODE)
                                   1156 	.area GSINIT1 (CODE)
                                   1157 	.area GSINIT2 (CODE)
                                   1158 	.area GSINIT3 (CODE)
                                   1159 	.area GSINIT4 (CODE)
                                   1160 	.area GSINIT5 (CODE)
                                   1161 	.area GSINIT  (CODE)
                                   1162 	.area GSFINAL (CODE)
                                   1163 	.area CSEG    (CODE)
                                   1164 ;--------------------------------------------------------
                                   1165 ; global & static initialisations
                                   1166 ;--------------------------------------------------------
                                   1167 	.area HOME    (CODE)
                                   1168 	.area GSINIT  (CODE)
                                   1169 	.area GSFINAL (CODE)
                                   1170 	.area GSINIT  (CODE)
                                   1171 ;--------------------------------------------------------
                                   1172 ; Home
                                   1173 ;--------------------------------------------------------
                                   1174 	.area HOME    (CODE)
                                   1175 	.area HOME    (CODE)
                                   1176 ;--------------------------------------------------------
                                   1177 ; code
                                   1178 ;--------------------------------------------------------
                                   1179 	.area BANK1   (CODE)
                                   1180 ;------------------------------------------------------------
                                   1181 ;Allocation info for local variables in function 'key_from_index'
                                   1182 ;------------------------------------------------------------
                                   1183 ;index                     Allocated to registers r6 r7 
                                   1184 ;------------------------------------------------------------
                                   1185 ;	../../core/net/nbr-table.c:68: key_from_index(int index)
                                   1186 ;	-----------------------------------------
                                   1187 ;	 function key_from_index
                                   1188 ;	-----------------------------------------
      000000                       1189 _key_from_index:
                           000007  1190 	ar7 = 0x07
                           000006  1191 	ar6 = 0x06
                           000005  1192 	ar5 = 0x05
                           000004  1193 	ar4 = 0x04
                           000003  1194 	ar3 = 0x03
                           000002  1195 	ar2 = 0x02
                           000001  1196 	ar1 = 0x01
                           000000  1197 	ar0 = 0x00
      000000 AE 82            [24] 1198 	mov	r6,dpl
      000002 AF 83            [24] 1199 	mov	r7,dph
                                   1200 ;	../../core/net/nbr-table.c:70: return index != -1 ? &((nbr_table_key_t *)neighbor_addr_mem.mem)[index] : NULL;
      000004 E4               [12] 1201 	clr	a
      000005 BE FF 04         [24] 1202 	cjne	r6,#0xFF,00108$
      000008 BF FF 01         [24] 1203 	cjne	r7,#0xFF,00108$
      00000B 04               [12] 1204 	inc	a
      00000C                       1205 00108$:
      00000C FD               [12] 1206 	mov	r5,a
      00000D B4 01 00         [24] 1207 	cjne	a,#0x01,00110$
      000010                       1208 00110$:
      000010 E4               [12] 1209 	clr	a
      000011 33               [12] 1210 	rlc	a
      000012 FD               [12] 1211 	mov	r5,a
      000013 60 2C            [24] 1212 	jz	00103$
      000015 90r00r07         [24] 1213 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      000018 E0               [24] 1214 	movx	a,@dptr
      000019 FB               [12] 1215 	mov	r3,a
      00001A A3               [24] 1216 	inc	dptr
      00001B E0               [24] 1217 	movx	a,@dptr
      00001C FC               [12] 1218 	mov	r4,a
      00001D A3               [24] 1219 	inc	dptr
      00001E E0               [24] 1220 	movx	a,@dptr
      00001F FD               [12] 1221 	mov	r5,a
      000020 C0 05            [24] 1222 	push	ar5
      000022 C0 04            [24] 1223 	push	ar4
      000024 C0 03            [24] 1224 	push	ar3
      000026 C0 06            [24] 1225 	push	ar6
      000028 C0 07            [24] 1226 	push	ar7
      00002A 90 00 0B         [24] 1227 	mov	dptr,#0x000B
      00002D 12r00r00         [24] 1228 	lcall	__mulint
      000030 AE 82            [24] 1229 	mov	r6,dpl
      000032 15 81            [12] 1230 	dec	sp
      000034 15 81            [12] 1231 	dec	sp
      000036 D0 03            [24] 1232 	pop	ar3
      000038 D0 04            [24] 1233 	pop	ar4
      00003A D0 05            [24] 1234 	pop	ar5
      00003C EE               [12] 1235 	mov	a,r6
      00003D 2B               [12] 1236 	add	a,r3
      00003E FF               [12] 1237 	mov	r7,a
      00003F 80 02            [24] 1238 	sjmp	00104$
      000041                       1239 00103$:
      000041 7F 00            [12] 1240 	mov	r7,#0x00
      000043                       1241 00104$:
      000043 7E 00            [12] 1242 	mov	r6,#0x00
      000045 7D 40            [12] 1243 	mov	r5,#0x40
      000047 8F 82            [24] 1244 	mov	dpl,r7
      000049 8E 83            [24] 1245 	mov	dph,r6
      00004B 8D F0            [24] 1246 	mov	b,r5
      00004D 02r00r00         [24] 1247 	ljmp	__sdcc_banked_ret
                                   1248 ;------------------------------------------------------------
                                   1249 ;Allocation info for local variables in function 'item_from_index'
                                   1250 ;------------------------------------------------------------
                                   1251 ;index                     Allocated to stack - sp -4
                                   1252 ;table                     Allocated to registers r5 r6 r7 
                                   1253 ;------------------------------------------------------------
                                   1254 ;	../../core/net/nbr-table.c:75: item_from_index(nbr_table_t *table, int index)
                                   1255 ;	-----------------------------------------
                                   1256 ;	 function item_from_index
                                   1257 ;	-----------------------------------------
      000050                       1258 _item_from_index:
      000050 AD 82            [24] 1259 	mov	r5,dpl
      000052 AE 83            [24] 1260 	mov	r6,dph
      000054 AF F0            [24] 1261 	mov	r7,b
                                   1262 ;	../../core/net/nbr-table.c:77: return table != NULL && index != -1 ? (char *)table->data + index * table->item_size : NULL;
      000056 ED               [12] 1263 	mov	a,r5
      000057 4E               [12] 1264 	orl	a,r6
      000058 70 03            [24] 1265 	jnz	00113$
      00005A 02r00rD6         [24] 1266 	ljmp	00103$
      00005D                       1267 00113$:
      00005D E5 81            [12] 1268 	mov	a,sp
      00005F 24 FC            [12] 1269 	add	a,#0xfc
      000061 F8               [12] 1270 	mov	r0,a
      000062 E4               [12] 1271 	clr	a
      000063 B6 FF 05         [24] 1272 	cjne	@r0,#0xFF,00114$
      000066 08               [12] 1273 	inc	r0
      000067 B6 FF 01         [24] 1274 	cjne	@r0,#0xFF,00114$
      00006A 04               [12] 1275 	inc	a
      00006B                       1276 00114$:
      00006B FC               [12] 1277 	mov	r4,a
      00006C B4 01 00         [24] 1278 	cjne	a,#0x01,00116$
      00006F                       1279 00116$:
      00006F E4               [12] 1280 	clr	a
      000070 33               [12] 1281 	rlc	a
      000071 FC               [12] 1282 	mov	r4,a
      000072 60 62            [24] 1283 	jz	00103$
      000074 74 07            [12] 1284 	mov	a,#0x07
      000076 2D               [12] 1285 	add	a,r5
      000077 FA               [12] 1286 	mov	r2,a
      000078 E4               [12] 1287 	clr	a
      000079 3E               [12] 1288 	addc	a,r6
      00007A FB               [12] 1289 	mov	r3,a
      00007B 8F 04            [24] 1290 	mov	ar4,r7
      00007D 8A 82            [24] 1291 	mov	dpl,r2
      00007F 8B 83            [24] 1292 	mov	dph,r3
      000081 8C F0            [24] 1293 	mov	b,r4
      000083 12r00r00         [24] 1294 	lcall	__gptrget
      000086 FA               [12] 1295 	mov	r2,a
      000087 A3               [24] 1296 	inc	dptr
      000088 12r00r00         [24] 1297 	lcall	__gptrget
      00008B FB               [12] 1298 	mov	r3,a
      00008C A3               [24] 1299 	inc	dptr
      00008D 12r00r00         [24] 1300 	lcall	__gptrget
      000090 FC               [12] 1301 	mov	r4,a
      000091 74 02            [12] 1302 	mov	a,#0x02
      000093 2D               [12] 1303 	add	a,r5
      000094 FD               [12] 1304 	mov	r5,a
      000095 E4               [12] 1305 	clr	a
      000096 3E               [12] 1306 	addc	a,r6
      000097 FE               [12] 1307 	mov	r6,a
      000098 8D 82            [24] 1308 	mov	dpl,r5
      00009A 8E 83            [24] 1309 	mov	dph,r6
      00009C 8F F0            [24] 1310 	mov	b,r7
      00009E 12r00r00         [24] 1311 	lcall	__gptrget
      0000A1 FD               [12] 1312 	mov	r5,a
      0000A2 A3               [24] 1313 	inc	dptr
      0000A3 12r00r00         [24] 1314 	lcall	__gptrget
      0000A6 FE               [12] 1315 	mov	r6,a
      0000A7 C0 04            [24] 1316 	push	ar4
      0000A9 C0 03            [24] 1317 	push	ar3
      0000AB C0 02            [24] 1318 	push	ar2
      0000AD C0 05            [24] 1319 	push	ar5
      0000AF C0 06            [24] 1320 	push	ar6
      0000B1 E5 81            [12] 1321 	mov	a,sp
      0000B3 24 F7            [12] 1322 	add	a,#0xf7
      0000B5 F8               [12] 1323 	mov	r0,a
      0000B6 86 82            [24] 1324 	mov	dpl,@r0
      0000B8 08               [12] 1325 	inc	r0
      0000B9 86 83            [24] 1326 	mov	dph,@r0
      0000BB 12r00r00         [24] 1327 	lcall	__mulint
      0000BE AE 82            [24] 1328 	mov	r6,dpl
      0000C0 AF 83            [24] 1329 	mov	r7,dph
      0000C2 15 81            [12] 1330 	dec	sp
      0000C4 15 81            [12] 1331 	dec	sp
      0000C6 D0 02            [24] 1332 	pop	ar2
      0000C8 D0 03            [24] 1333 	pop	ar3
      0000CA D0 04            [24] 1334 	pop	ar4
      0000CC EE               [12] 1335 	mov	a,r6
      0000CD 2A               [12] 1336 	add	a,r2
      0000CE FE               [12] 1337 	mov	r6,a
      0000CF EF               [12] 1338 	mov	a,r7
      0000D0 3B               [12] 1339 	addc	a,r3
      0000D1 FD               [12] 1340 	mov	r5,a
      0000D2 8C 07            [24] 1341 	mov	ar7,r4
      0000D4 80 06            [24] 1342 	sjmp	00104$
      0000D6                       1343 00103$:
      0000D6 7E 00            [12] 1344 	mov	r6,#0x00
      0000D8 7D 00            [12] 1345 	mov	r5,#0x00
      0000DA 7F 00            [12] 1346 	mov	r7,#0x00
      0000DC                       1347 00104$:
      0000DC 8E 82            [24] 1348 	mov	dpl,r6
      0000DE 8D 83            [24] 1349 	mov	dph,r5
      0000E0 8F F0            [24] 1350 	mov	b,r7
      0000E2 02r00r00         [24] 1351 	ljmp	__sdcc_banked_ret
                                   1352 ;------------------------------------------------------------
                                   1353 ;Allocation info for local variables in function 'index_from_key'
                                   1354 ;------------------------------------------------------------
                                   1355 ;key                       Allocated to registers r5 r6 r7 
                                   1356 ;------------------------------------------------------------
                                   1357 ;	../../core/net/nbr-table.c:82: index_from_key(nbr_table_key_t *key)
                                   1358 ;	-----------------------------------------
                                   1359 ;	 function index_from_key
                                   1360 ;	-----------------------------------------
      0000E5                       1361 _index_from_key:
      0000E5 AD 82            [24] 1362 	mov	r5,dpl
      0000E7 AE 83            [24] 1363 	mov	r6,dph
      0000E9 AF F0            [24] 1364 	mov	r7,b
                                   1365 ;	../../core/net/nbr-table.c:84: return key != NULL ? key - (nbr_table_key_t *)neighbor_addr_mem.mem : -1;
      0000EB ED               [12] 1366 	mov	a,r5
      0000EC 4E               [12] 1367 	orl	a,r6
      0000ED 60 29            [24] 1368 	jz	00103$
      0000EF 90r00r07         [24] 1369 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      0000F2 E0               [24] 1370 	movx	a,@dptr
      0000F3 FA               [12] 1371 	mov	r2,a
      0000F4 A3               [24] 1372 	inc	dptr
      0000F5 E0               [24] 1373 	movx	a,@dptr
      0000F6 FB               [12] 1374 	mov	r3,a
      0000F7 A3               [24] 1375 	inc	dptr
      0000F8 E0               [24] 1376 	movx	a,@dptr
      0000F9 ED               [12] 1377 	mov	a,r5
      0000FA C3               [12] 1378 	clr	c
      0000FB 9A               [12] 1379 	subb	a,r2
      0000FC FD               [12] 1380 	mov	r5,a
      0000FD EE               [12] 1381 	mov	a,r6
      0000FE 9B               [12] 1382 	subb	a,r3
      0000FF FE               [12] 1383 	mov	r6,a
      000100 74 0B            [12] 1384 	mov	a,#0x0B
      000102 C0 E0            [24] 1385 	push	acc
      000104 E4               [12] 1386 	clr	a
      000105 C0 E0            [24] 1387 	push	acc
      000107 8D 82            [24] 1388 	mov	dpl,r5
      000109 8E 83            [24] 1389 	mov	dph,r6
      00010B 12r00r00         [24] 1390 	lcall	__divsint
      00010E AE 82            [24] 1391 	mov	r6,dpl
      000110 AF 83            [24] 1392 	mov	r7,dph
      000112 15 81            [12] 1393 	dec	sp
      000114 15 81            [12] 1394 	dec	sp
      000116 80 04            [24] 1395 	sjmp	00104$
      000118                       1396 00103$:
      000118 7E FF            [12] 1397 	mov	r6,#0xFF
      00011A 7F FF            [12] 1398 	mov	r7,#0xFF
      00011C                       1399 00104$:
      00011C 8E 82            [24] 1400 	mov	dpl,r6
      00011E 8F 83            [24] 1401 	mov	dph,r7
      000120 02r00r00         [24] 1402 	ljmp	__sdcc_banked_ret
                                   1403 ;------------------------------------------------------------
                                   1404 ;Allocation info for local variables in function 'index_from_item'
                                   1405 ;------------------------------------------------------------
                                   1406 ;item                      Allocated to stack - sp -8
                                   1407 ;table                     Allocated to stack - sp -2
                                   1408 ;------------------------------------------------------------
                                   1409 ;	../../core/net/nbr-table.c:89: index_from_item(nbr_table_t *table, const nbr_table_item_t *item)
                                   1410 ;	-----------------------------------------
                                   1411 ;	 function index_from_item
                                   1412 ;	-----------------------------------------
      000123                       1413 _index_from_item:
      000123 C0 82            [24] 1414 	push	dpl
      000125 C0 83            [24] 1415 	push	dph
      000127 C0 F0            [24] 1416 	push	b
                                   1417 ;	../../core/net/nbr-table.c:91: return table != NULL && item != NULL ? ((int)((char *)item - (char *)table->data)) / table->item_size : -1;
      000129 A8 81            [24] 1418 	mov	r0,sp
      00012B 18               [12] 1419 	dec	r0
      00012C 18               [12] 1420 	dec	r0
      00012D E6               [12] 1421 	mov	a,@r0
      00012E 08               [12] 1422 	inc	r0
      00012F 46               [12] 1423 	orl	a,@r0
      000130 60 73            [24] 1424 	jz	00103$
      000132 E5 81            [12] 1425 	mov	a,sp
      000134 24 F8            [12] 1426 	add	a,#0xf8
      000136 F8               [12] 1427 	mov	r0,a
      000137 E6               [12] 1428 	mov	a,@r0
      000138 08               [12] 1429 	inc	r0
      000139 46               [12] 1430 	orl	a,@r0
      00013A 60 69            [24] 1431 	jz	00103$
      00013C E5 81            [12] 1432 	mov	a,sp
      00013E 24 F8            [12] 1433 	add	a,#0xf8
      000140 F8               [12] 1434 	mov	r0,a
      000141 86 02            [24] 1435 	mov	ar2,@r0
      000143 08               [12] 1436 	inc	r0
      000144 86 03            [24] 1437 	mov	ar3,@r0
      000146 08               [12] 1438 	inc	r0
      000147 86 04            [24] 1439 	mov	ar4,@r0
      000149 A8 81            [24] 1440 	mov	r0,sp
      00014B 18               [12] 1441 	dec	r0
      00014C 18               [12] 1442 	dec	r0
      00014D 74 07            [12] 1443 	mov	a,#0x07
      00014F 26               [12] 1444 	add	a,@r0
      000150 FD               [12] 1445 	mov	r5,a
      000151 E4               [12] 1446 	clr	a
      000152 08               [12] 1447 	inc	r0
      000153 36               [12] 1448 	addc	a,@r0
      000154 FE               [12] 1449 	mov	r6,a
      000155 08               [12] 1450 	inc	r0
      000156 86 07            [24] 1451 	mov	ar7,@r0
      000158 8D 82            [24] 1452 	mov	dpl,r5
      00015A 8E 83            [24] 1453 	mov	dph,r6
      00015C 8F F0            [24] 1454 	mov	b,r7
      00015E 12r00r00         [24] 1455 	lcall	__gptrget
      000161 FD               [12] 1456 	mov	r5,a
      000162 A3               [24] 1457 	inc	dptr
      000163 12r00r00         [24] 1458 	lcall	__gptrget
      000166 FE               [12] 1459 	mov	r6,a
      000167 A3               [24] 1460 	inc	dptr
      000168 12r00r00         [24] 1461 	lcall	__gptrget
      00016B EA               [12] 1462 	mov	a,r2
      00016C C3               [12] 1463 	clr	c
      00016D 9D               [12] 1464 	subb	a,r5
      00016E FA               [12] 1465 	mov	r2,a
      00016F EB               [12] 1466 	mov	a,r3
      000170 9E               [12] 1467 	subb	a,r6
      000171 FB               [12] 1468 	mov	r3,a
      000172 A8 81            [24] 1469 	mov	r0,sp
      000174 18               [12] 1470 	dec	r0
      000175 18               [12] 1471 	dec	r0
      000176 74 02            [12] 1472 	mov	a,#0x02
      000178 26               [12] 1473 	add	a,@r0
      000179 FD               [12] 1474 	mov	r5,a
      00017A E4               [12] 1475 	clr	a
      00017B 08               [12] 1476 	inc	r0
      00017C 36               [12] 1477 	addc	a,@r0
      00017D FE               [12] 1478 	mov	r6,a
      00017E 08               [12] 1479 	inc	r0
      00017F 86 07            [24] 1480 	mov	ar7,@r0
      000181 8D 82            [24] 1481 	mov	dpl,r5
      000183 8E 83            [24] 1482 	mov	dph,r6
      000185 8F F0            [24] 1483 	mov	b,r7
      000187 12r00r00         [24] 1484 	lcall	__gptrget
      00018A FD               [12] 1485 	mov	r5,a
      00018B A3               [24] 1486 	inc	dptr
      00018C 12r00r00         [24] 1487 	lcall	__gptrget
      00018F FE               [12] 1488 	mov	r6,a
      000190 C0 05            [24] 1489 	push	ar5
      000192 C0 06            [24] 1490 	push	ar6
      000194 8A 82            [24] 1491 	mov	dpl,r2
      000196 8B 83            [24] 1492 	mov	dph,r3
      000198 12r00r00         [24] 1493 	lcall	__divsint
      00019B AE 82            [24] 1494 	mov	r6,dpl
      00019D AF 83            [24] 1495 	mov	r7,dph
      00019F 15 81            [12] 1496 	dec	sp
      0001A1 15 81            [12] 1497 	dec	sp
      0001A3 80 04            [24] 1498 	sjmp	00104$
      0001A5                       1499 00103$:
      0001A5 7E FF            [12] 1500 	mov	r6,#0xFF
      0001A7 7F FF            [12] 1501 	mov	r7,#0xFF
      0001A9                       1502 00104$:
      0001A9 8E 82            [24] 1503 	mov	dpl,r6
      0001AB 8F 83            [24] 1504 	mov	dph,r7
      0001AD 15 81            [12] 1505 	dec	sp
      0001AF 15 81            [12] 1506 	dec	sp
      0001B1 15 81            [12] 1507 	dec	sp
      0001B3 02r00r00         [24] 1508 	ljmp	__sdcc_banked_ret
                                   1509 ;------------------------------------------------------------
                                   1510 ;Allocation info for local variables in function 'item_from_key'
                                   1511 ;------------------------------------------------------------
                                   1512 ;key                       Allocated to stack - sp -5
                                   1513 ;table                     Allocated to registers r5 r6 r7 
                                   1514 ;------------------------------------------------------------
                                   1515 ;	../../core/net/nbr-table.c:96: item_from_key(nbr_table_t *table, nbr_table_key_t *key)
                                   1516 ;	-----------------------------------------
                                   1517 ;	 function item_from_key
                                   1518 ;	-----------------------------------------
      0001B6                       1519 _item_from_key:
      0001B6 AD 82            [24] 1520 	mov	r5,dpl
      0001B8 AE 83            [24] 1521 	mov	r6,dph
      0001BA AF F0            [24] 1522 	mov	r7,b
                                   1523 ;	../../core/net/nbr-table.c:98: return item_from_index(table, index_from_key(key));
      0001BC E5 81            [12] 1524 	mov	a,sp
      0001BE 24 FB            [12] 1525 	add	a,#0xfb
      0001C0 F8               [12] 1526 	mov	r0,a
      0001C1 86 82            [24] 1527 	mov	dpl,@r0
      0001C3 08               [12] 1528 	inc	r0
      0001C4 86 83            [24] 1529 	mov	dph,@r0
      0001C6 08               [12] 1530 	inc	r0
      0001C7 86 F0            [24] 1531 	mov	b,@r0
      0001C9 C0 07            [24] 1532 	push	ar7
      0001CB C0 06            [24] 1533 	push	ar6
      0001CD C0 05            [24] 1534 	push	ar5
      0001CF 78rE5            [12] 1535 	mov	r0,#_index_from_key
      0001D1 79s00            [12] 1536 	mov	r1,#(_index_from_key >> 8)
      0001D3 7As00            [12] 1537 	mov	r2,#(_index_from_key >> 16)
      0001D5 12r00r00         [24] 1538 	lcall	__sdcc_banked_call
      0001D8 AB 82            [24] 1539 	mov	r3,dpl
      0001DA AC 83            [24] 1540 	mov	r4,dph
      0001DC D0 05            [24] 1541 	pop	ar5
      0001DE D0 06            [24] 1542 	pop	ar6
      0001E0 D0 07            [24] 1543 	pop	ar7
      0001E2 C0 03            [24] 1544 	push	ar3
      0001E4 C0 04            [24] 1545 	push	ar4
      0001E6 8D 82            [24] 1546 	mov	dpl,r5
      0001E8 8E 83            [24] 1547 	mov	dph,r6
      0001EA 8F F0            [24] 1548 	mov	b,r7
      0001EC 78r50            [12] 1549 	mov	r0,#_item_from_index
      0001EE 79s00            [12] 1550 	mov	r1,#(_item_from_index >> 8)
      0001F0 7As00            [12] 1551 	mov	r2,#(_item_from_index >> 16)
      0001F2 12r00r00         [24] 1552 	lcall	__sdcc_banked_call
      0001F5 AD 82            [24] 1553 	mov	r5,dpl
      0001F7 AE 83            [24] 1554 	mov	r6,dph
      0001F9 AF F0            [24] 1555 	mov	r7,b
      0001FB 15 81            [12] 1556 	dec	sp
      0001FD 15 81            [12] 1557 	dec	sp
      0001FF 8D 82            [24] 1558 	mov	dpl,r5
      000201 8E 83            [24] 1559 	mov	dph,r6
      000203 8F F0            [24] 1560 	mov	b,r7
      000205 02r00r00         [24] 1561 	ljmp	__sdcc_banked_ret
                                   1562 ;------------------------------------------------------------
                                   1563 ;Allocation info for local variables in function 'key_from_item'
                                   1564 ;------------------------------------------------------------
                                   1565 ;item                      Allocated to stack - sp -5
                                   1566 ;table                     Allocated to registers r5 r6 r7 
                                   1567 ;------------------------------------------------------------
                                   1568 ;	../../core/net/nbr-table.c:103: key_from_item(nbr_table_t *table, const nbr_table_item_t *item)
                                   1569 ;	-----------------------------------------
                                   1570 ;	 function key_from_item
                                   1571 ;	-----------------------------------------
      000208                       1572 _key_from_item:
      000208 AD 82            [24] 1573 	mov	r5,dpl
      00020A AE 83            [24] 1574 	mov	r6,dph
      00020C AF F0            [24] 1575 	mov	r7,b
                                   1576 ;	../../core/net/nbr-table.c:105: return key_from_index(index_from_item(table, item));
      00020E E5 81            [12] 1577 	mov	a,sp
      000210 24 FB            [12] 1578 	add	a,#0xfb
      000212 F8               [12] 1579 	mov	r0,a
      000213 E6               [12] 1580 	mov	a,@r0
      000214 C0 E0            [24] 1581 	push	acc
      000216 08               [12] 1582 	inc	r0
      000217 E6               [12] 1583 	mov	a,@r0
      000218 C0 E0            [24] 1584 	push	acc
      00021A 08               [12] 1585 	inc	r0
      00021B E6               [12] 1586 	mov	a,@r0
      00021C C0 E0            [24] 1587 	push	acc
      00021E 8D 82            [24] 1588 	mov	dpl,r5
      000220 8E 83            [24] 1589 	mov	dph,r6
      000222 8F F0            [24] 1590 	mov	b,r7
      000224 78r23            [12] 1591 	mov	r0,#_index_from_item
      000226 79s01            [12] 1592 	mov	r1,#(_index_from_item >> 8)
      000228 7As00            [12] 1593 	mov	r2,#(_index_from_item >> 16)
      00022A 12r00r00         [24] 1594 	lcall	__sdcc_banked_call
      00022D AE 82            [24] 1595 	mov	r6,dpl
      00022F AF 83            [24] 1596 	mov	r7,dph
      000231 15 81            [12] 1597 	dec	sp
      000233 15 81            [12] 1598 	dec	sp
      000235 15 81            [12] 1599 	dec	sp
      000237 8E 82            [24] 1600 	mov	dpl,r6
      000239 8F 83            [24] 1601 	mov	dph,r7
      00023B 78r00            [12] 1602 	mov	r0,#_key_from_index
      00023D 79s00            [12] 1603 	mov	r1,#(_key_from_index >> 8)
      00023F 7As00            [12] 1604 	mov	r2,#(_key_from_index >> 16)
      000241 12r00r00         [24] 1605 	lcall	__sdcc_banked_call
      000244 AD 82            [24] 1606 	mov	r5,dpl
      000246 AE 83            [24] 1607 	mov	r6,dph
      000248 AF F0            [24] 1608 	mov	r7,b
      00024A 02r00r00         [24] 1609 	ljmp	__sdcc_banked_ret
                                   1610 ;------------------------------------------------------------
                                   1611 ;Allocation info for local variables in function 'index_from_lladdr'
                                   1612 ;------------------------------------------------------------
                                   1613 ;lladdr                    Allocated to stack - sp -2
                                   1614 ;key                       Allocated to registers r2 r3 r4 
                                   1615 ;------------------------------------------------------------
                                   1616 ;	../../core/net/nbr-table.c:110: index_from_lladdr(const linkaddr_t *lladdr)
                                   1617 ;	-----------------------------------------
                                   1618 ;	 function index_from_lladdr
                                   1619 ;	-----------------------------------------
      00024D                       1620 _index_from_lladdr:
      00024D C0 82            [24] 1621 	push	dpl
      00024F C0 83            [24] 1622 	push	dph
      000251 C0 F0            [24] 1623 	push	b
                                   1624 ;	../../core/net/nbr-table.c:115: if(lladdr == NULL) {
      000253 A8 81            [24] 1625 	mov	r0,sp
      000255 18               [12] 1626 	dec	r0
      000256 18               [12] 1627 	dec	r0
      000257 E6               [12] 1628 	mov	a,@r0
      000258 08               [12] 1629 	inc	r0
      000259 46               [12] 1630 	orl	a,@r0
      00025A 70 0C            [24] 1631 	jnz	00102$
                                   1632 ;	../../core/net/nbr-table.c:116: lladdr = &linkaddr_null;
      00025C A8 81            [24] 1633 	mov	r0,sp
      00025E 18               [12] 1634 	dec	r0
      00025F 18               [12] 1635 	dec	r0
      000260 76r00            [12] 1636 	mov	@r0,#_linkaddr_null
      000262 08               [12] 1637 	inc	r0
      000263 76s00            [12] 1638 	mov	@r0,#(_linkaddr_null >> 8)
      000265 08               [12] 1639 	inc	r0
      000266 76 80            [12] 1640 	mov	@r0,#0x80
      000268                       1641 00102$:
                                   1642 ;	../../core/net/nbr-table.c:118: key = list_head(nbr_table_keys);
      000268 90r00r0D         [24] 1643 	mov	dptr,#_nbr_table_keys
      00026B E0               [24] 1644 	movx	a,@dptr
      00026C FA               [12] 1645 	mov	r2,a
      00026D A3               [24] 1646 	inc	dptr
      00026E E0               [24] 1647 	movx	a,@dptr
      00026F FB               [12] 1648 	mov	r3,a
      000270 A3               [24] 1649 	inc	dptr
      000271 E0               [24] 1650 	movx	a,@dptr
      000272 FC               [12] 1651 	mov	r4,a
      000273 8A 82            [24] 1652 	mov	dpl,r2
      000275 8B 83            [24] 1653 	mov	dph,r3
      000277 8C F0            [24] 1654 	mov	b,r4
      000279 78r00            [12] 1655 	mov	r0,#_list_head
      00027B 79s00            [12] 1656 	mov	r1,#(_list_head >> 8)
      00027D 7As00            [12] 1657 	mov	r2,#(_list_head >> 16)
      00027F 12r00r00         [24] 1658 	lcall	__sdcc_banked_call
      000282 AA 82            [24] 1659 	mov	r2,dpl
      000284 AB 83            [24] 1660 	mov	r3,dph
      000286 AC F0            [24] 1661 	mov	r4,b
                                   1662 ;	../../core/net/nbr-table.c:119: while(key != NULL) {
      000288                       1663 00106$:
      000288 EA               [12] 1664 	mov	a,r2
      000289 4B               [12] 1665 	orl	a,r3
      00028A 70 03            [24] 1666 	jnz	00127$
      00028C 02r03r10         [24] 1667 	ljmp	00108$
      00028F                       1668 00127$:
                                   1669 ;	../../core/net/nbr-table.c:120: if(lladdr && linkaddr_cmp(lladdr, &key->lladdr)) {
      00028F A8 81            [24] 1670 	mov	r0,sp
      000291 18               [12] 1671 	dec	r0
      000292 18               [12] 1672 	dec	r0
      000293 E6               [12] 1673 	mov	a,@r0
      000294 08               [12] 1674 	inc	r0
      000295 46               [12] 1675 	orl	a,@r0
      000296 60 54            [24] 1676 	jz	00104$
      000298 74 03            [12] 1677 	mov	a,#0x03
      00029A 2A               [12] 1678 	add	a,r2
      00029B FD               [12] 1679 	mov	r5,a
      00029C E4               [12] 1680 	clr	a
      00029D 3B               [12] 1681 	addc	a,r3
      00029E FE               [12] 1682 	mov	r6,a
      00029F 8C 07            [24] 1683 	mov	ar7,r4
      0002A1 C0 04            [24] 1684 	push	ar4
      0002A3 C0 03            [24] 1685 	push	ar3
      0002A5 C0 02            [24] 1686 	push	ar2
      0002A7 C0 05            [24] 1687 	push	ar5
      0002A9 C0 06            [24] 1688 	push	ar6
      0002AB C0 07            [24] 1689 	push	ar7
      0002AD E5 81            [12] 1690 	mov	a,sp
      0002AF 24 F8            [12] 1691 	add	a,#0xf8
      0002B1 F8               [12] 1692 	mov	r0,a
      0002B2 86 82            [24] 1693 	mov	dpl,@r0
      0002B4 08               [12] 1694 	inc	r0
      0002B5 86 83            [24] 1695 	mov	dph,@r0
      0002B7 08               [12] 1696 	inc	r0
      0002B8 86 F0            [24] 1697 	mov	b,@r0
      0002BA 78r00            [12] 1698 	mov	r0,#_linkaddr_cmp
      0002BC 79s00            [12] 1699 	mov	r1,#(_linkaddr_cmp >> 8)
      0002BE 7As00            [12] 1700 	mov	r2,#(_linkaddr_cmp >> 16)
      0002C0 12r00r00         [24] 1701 	lcall	__sdcc_banked_call
      0002C3 AE 82            [24] 1702 	mov	r6,dpl
      0002C5 AF 83            [24] 1703 	mov	r7,dph
      0002C7 15 81            [12] 1704 	dec	sp
      0002C9 15 81            [12] 1705 	dec	sp
      0002CB 15 81            [12] 1706 	dec	sp
      0002CD D0 02            [24] 1707 	pop	ar2
      0002CF D0 03            [24] 1708 	pop	ar3
      0002D1 D0 04            [24] 1709 	pop	ar4
      0002D3 EE               [12] 1710 	mov	a,r6
      0002D4 4F               [12] 1711 	orl	a,r7
      0002D5 60 15            [24] 1712 	jz	00104$
                                   1713 ;	../../core/net/nbr-table.c:121: return index_from_key(key);
      0002D7 8A 82            [24] 1714 	mov	dpl,r2
      0002D9 8B 83            [24] 1715 	mov	dph,r3
      0002DB 8C F0            [24] 1716 	mov	b,r4
      0002DD 78rE5            [12] 1717 	mov	r0,#_index_from_key
      0002DF 79s00            [12] 1718 	mov	r1,#(_index_from_key >> 8)
      0002E1 7As00            [12] 1719 	mov	r2,#(_index_from_key >> 16)
      0002E3 12r00r00         [24] 1720 	lcall	__sdcc_banked_call
      0002E6 AE 82            [24] 1721 	mov	r6,dpl
      0002E8 AF 83            [24] 1722 	mov  r7,dph
      0002EA 80 27            [24] 1723 	sjmp	00109$
      0002EC                       1724 00104$:
                                   1725 ;	../../core/net/nbr-table.c:123: key = list_item_next(key);
      0002EC 8A 05            [24] 1726 	mov	ar5,r2
      0002EE 8B 06            [24] 1727 	mov	ar6,r3
      0002F0 8C 07            [24] 1728 	mov	ar7,r4
      0002F2 8D 82            [24] 1729 	mov	dpl,r5
      0002F4 8E 83            [24] 1730 	mov	dph,r6
      0002F6 8F F0            [24] 1731 	mov	b,r7
      0002F8 78r00            [12] 1732 	mov	r0,#_list_item_next
      0002FA 79s00            [12] 1733 	mov	r1,#(_list_item_next >> 8)
      0002FC 7As00            [12] 1734 	mov	r2,#(_list_item_next >> 16)
      0002FE 12r00r00         [24] 1735 	lcall	__sdcc_banked_call
      000301 AD 82            [24] 1736 	mov	r5,dpl
      000303 AE 83            [24] 1737 	mov	r6,dph
      000305 AF F0            [24] 1738 	mov	r7,b
      000307 8D 02            [24] 1739 	mov	ar2,r5
      000309 8E 03            [24] 1740 	mov	ar3,r6
      00030B 8F 04            [24] 1741 	mov	ar4,r7
      00030D 02r02r88         [24] 1742 	ljmp	00106$
      000310                       1743 00108$:
                                   1744 ;	../../core/net/nbr-table.c:125: return -1;
      000310 90 FF FF         [24] 1745 	mov	dptr,#0xFFFF
      000313                       1746 00109$:
      000313 15 81            [12] 1747 	dec	sp
      000315 15 81            [12] 1748 	dec	sp
      000317 15 81            [12] 1749 	dec	sp
      000319 02r00r00         [24] 1750 	ljmp	__sdcc_banked_ret
                                   1751 ;------------------------------------------------------------
                                   1752 ;Allocation info for local variables in function 'nbr_get_bit'
                                   1753 ;------------------------------------------------------------
                                   1754 ;table                     Allocated to stack - sp -5
                                   1755 ;item                      Allocated to stack - sp -8
                                   1756 ;bitmap                    Allocated to registers r5 r6 r7 
                                   1757 ;item_index                Allocated to registers r3 r4 
                                   1758 ;------------------------------------------------------------
                                   1759 ;	../../core/net/nbr-table.c:130: nbr_get_bit(uint8_t *bitmap, nbr_table_t *table, nbr_table_item_t *item)
                                   1760 ;	-----------------------------------------
                                   1761 ;	 function nbr_get_bit
                                   1762 ;	-----------------------------------------
      00031C                       1763 _nbr_get_bit:
      00031C AD 82            [24] 1764 	mov	r5,dpl
      00031E AE 83            [24] 1765 	mov	r6,dph
      000320 AF F0            [24] 1766 	mov	r7,b
                                   1767 ;	../../core/net/nbr-table.c:132: int item_index = index_from_item(table, item);
      000322 C0 07            [24] 1768 	push	ar7
      000324 C0 06            [24] 1769 	push	ar6
      000326 C0 05            [24] 1770 	push	ar5
      000328 E5 81            [12] 1771 	mov	a,sp
      00032A 24 F5            [12] 1772 	add	a,#0xf5
      00032C F8               [12] 1773 	mov	r0,a
      00032D E6               [12] 1774 	mov	a,@r0
      00032E C0 E0            [24] 1775 	push	acc
      000330 08               [12] 1776 	inc	r0
      000331 E6               [12] 1777 	mov	a,@r0
      000332 C0 E0            [24] 1778 	push	acc
      000334 08               [12] 1779 	inc	r0
      000335 E6               [12] 1780 	mov	a,@r0
      000336 C0 E0            [24] 1781 	push	acc
      000338 E5 81            [12] 1782 	mov	a,sp
      00033A 24 F5            [12] 1783 	add	a,#0xf5
      00033C F8               [12] 1784 	mov	r0,a
      00033D 86 82            [24] 1785 	mov	dpl,@r0
      00033F 08               [12] 1786 	inc	r0
      000340 86 83            [24] 1787 	mov	dph,@r0
      000342 08               [12] 1788 	inc	r0
      000343 86 F0            [24] 1789 	mov	b,@r0
      000345 78r23            [12] 1790 	mov	r0,#_index_from_item
      000347 79s01            [12] 1791 	mov	r1,#(_index_from_item >> 8)
      000349 7As00            [12] 1792 	mov	r2,#(_index_from_item >> 16)
      00034B 12r00r00         [24] 1793 	lcall	__sdcc_banked_call
      00034E AB 82            [24] 1794 	mov	r3,dpl
      000350 AC 83            [24] 1795 	mov	r4,dph
      000352 15 81            [12] 1796 	dec	sp
      000354 15 81            [12] 1797 	dec	sp
      000356 15 81            [12] 1798 	dec	sp
      000358 D0 05            [24] 1799 	pop	ar5
      00035A D0 06            [24] 1800 	pop	ar6
      00035C D0 07            [24] 1801 	pop	ar7
                                   1802 ;	../../core/net/nbr-table.c:133: if(table != NULL && item_index != -1) {
      00035E E5 81            [12] 1803 	mov	a,sp
      000360 24 FB            [12] 1804 	add	a,#0xfb
      000362 F8               [12] 1805 	mov	r0,a
      000363 E6               [12] 1806 	mov	a,@r0
      000364 08               [12] 1807 	inc	r0
      000365 46               [12] 1808 	orl	a,@r0
      000366 60 67            [24] 1809 	jz	00102$
      000368 BB FF 05         [24] 1810 	cjne	r3,#0xFF,00114$
      00036B BC FF 02         [24] 1811 	cjne	r4,#0xFF,00114$
      00036E 80 5F            [24] 1812 	sjmp	00102$
      000370                       1813 00114$:
                                   1814 ;	../../core/net/nbr-table.c:134: return (bitmap[item_index] & (1 << table->index)) != 0;
      000370 EB               [12] 1815 	mov	a,r3
      000371 2D               [12] 1816 	add	a,r5
      000372 FD               [12] 1817 	mov	r5,a
      000373 EC               [12] 1818 	mov	a,r4
      000374 3E               [12] 1819 	addc	a,r6
      000375 FE               [12] 1820 	mov	r6,a
      000376 8D 82            [24] 1821 	mov	dpl,r5
      000378 8E 83            [24] 1822 	mov	dph,r6
      00037A 8F F0            [24] 1823 	mov	b,r7
      00037C 12r00r00         [24] 1824 	lcall	__gptrget
      00037F FD               [12] 1825 	mov	r5,a
      000380 E5 81            [12] 1826 	mov	a,sp
      000382 24 FB            [12] 1827 	add	a,#0xfb
      000384 F8               [12] 1828 	mov	r0,a
      000385 86 04            [24] 1829 	mov	ar4,@r0
      000387 08               [12] 1830 	inc	r0
      000388 86 06            [24] 1831 	mov	ar6,@r0
      00038A 08               [12] 1832 	inc	r0
      00038B 86 07            [24] 1833 	mov	ar7,@r0
      00038D 8C 82            [24] 1834 	mov	dpl,r4
      00038F 8E 83            [24] 1835 	mov	dph,r6
      000391 8F F0            [24] 1836 	mov	b,r7
      000393 12r00r00         [24] 1837 	lcall	__gptrget
      000396 FC               [12] 1838 	mov	r4,a
      000397 A3               [24] 1839 	inc	dptr
      000398 12r00r00         [24] 1840 	lcall	__gptrget
      00039B 8C F0            [24] 1841 	mov	b,r4
      00039D 05 F0            [12] 1842 	inc	b
      00039F 7C 01            [12] 1843 	mov	r4,#0x01
      0003A1 7E 00            [12] 1844 	mov	r6,#0x00
      0003A3 80 06            [24] 1845 	sjmp	00116$
      0003A5                       1846 00115$:
      0003A5 EC               [12] 1847 	mov	a,r4
      0003A6 2C               [12] 1848 	add	a,r4
      0003A7 FC               [12] 1849 	mov	r4,a
      0003A8 EE               [12] 1850 	mov	a,r6
      0003A9 33               [12] 1851 	rlc	a
      0003AA FE               [12] 1852 	mov	r6,a
      0003AB                       1853 00116$:
      0003AB D5 F0 F7         [24] 1854 	djnz	b,00115$
      0003AE 7F 00            [12] 1855 	mov	r7,#0x00
      0003B0 ED               [12] 1856 	mov	a,r5
      0003B1 52 04            [12] 1857 	anl	ar4,a
      0003B3 EF               [12] 1858 	mov	a,r7
      0003B4 52 06            [12] 1859 	anl	ar6,a
      0003B6 E4               [12] 1860 	clr	a
      0003B7 BC 00 04         [24] 1861 	cjne	r4,#0x00,00117$
      0003BA BE 00 01         [24] 1862 	cjne	r6,#0x00,00117$
      0003BD 04               [12] 1863 	inc	a
      0003BE                       1864 00117$:
      0003BE FC               [12] 1865 	mov	r4,a
      0003BF B4 01 00         [24] 1866 	cjne	a,#0x01,00119$
      0003C2                       1867 00119$:
      0003C2 E4               [12] 1868 	clr	a
      0003C3 33               [12] 1869 	rlc	a
      0003C4 FC               [12] 1870 	mov	r4,a
      0003C5 33               [12] 1871 	rlc	a
      0003C6 95 E0            [12] 1872 	subb	a,acc
      0003C8 FF               [12] 1873 	mov	r7,a
      0003C9 8C 82            [24] 1874 	mov	dpl,r4
      0003CB 8F 83            [24] 1875 	mov	dph,r7
      0003CD 80 03            [24] 1876 	sjmp	00105$
      0003CF                       1877 00102$:
                                   1878 ;	../../core/net/nbr-table.c:136: return 0;
      0003CF 90 00 00         [24] 1879 	mov	dptr,#0x0000
                                   1880 ;	../../core/net/nbr-table.c:138: return 0;
      0003D2                       1881 00105$:
      0003D2 02r00r00         [24] 1882 	ljmp	__sdcc_banked_ret
                                   1883 ;------------------------------------------------------------
                                   1884 ;Allocation info for local variables in function 'nbr_set_bit'
                                   1885 ;------------------------------------------------------------
                                   1886 ;table                     Allocated to stack - sp -8
                                   1887 ;item                      Allocated to stack - sp -11
                                   1888 ;value                     Allocated to stack - sp -13
                                   1889 ;bitmap                    Allocated to registers r5 r6 r7 
                                   1890 ;item_index                Allocated to registers r3 r4 
                                   1891 ;sloc0                     Allocated to stack - sp +3
                                   1892 ;sloc1                     Allocated to stack - sp -2
                                   1893 ;------------------------------------------------------------
                                   1894 ;	../../core/net/nbr-table.c:143: nbr_set_bit(uint8_t *bitmap, nbr_table_t *table, nbr_table_item_t *item, int value)
                                   1895 ;	-----------------------------------------
                                   1896 ;	 function nbr_set_bit
                                   1897 ;	-----------------------------------------
      0003D5                       1898 _nbr_set_bit:
      0003D5 05 81            [12] 1899 	inc	sp
      0003D7 05 81            [12] 1900 	inc	sp
      0003D9 05 81            [12] 1901 	inc	sp
      0003DB AD 82            [24] 1902 	mov	r5,dpl
      0003DD AE 83            [24] 1903 	mov	r6,dph
      0003DF AF F0            [24] 1904 	mov	r7,b
                                   1905 ;	../../core/net/nbr-table.c:145: int item_index = index_from_item(table, item);
      0003E1 C0 07            [24] 1906 	push	ar7
      0003E3 C0 06            [24] 1907 	push	ar6
      0003E5 C0 05            [24] 1908 	push	ar5
      0003E7 E5 81            [12] 1909 	mov	a,sp
      0003E9 24 F2            [12] 1910 	add	a,#0xf2
      0003EB F8               [12] 1911 	mov	r0,a
      0003EC E6               [12] 1912 	mov	a,@r0
      0003ED C0 E0            [24] 1913 	push	acc
      0003EF 08               [12] 1914 	inc	r0
      0003F0 E6               [12] 1915 	mov	a,@r0
      0003F1 C0 E0            [24] 1916 	push	acc
      0003F3 08               [12] 1917 	inc	r0
      0003F4 E6               [12] 1918 	mov	a,@r0
      0003F5 C0 E0            [24] 1919 	push	acc
      0003F7 E5 81            [12] 1920 	mov	a,sp
      0003F9 24 F2            [12] 1921 	add	a,#0xf2
      0003FB F8               [12] 1922 	mov	r0,a
      0003FC 86 82            [24] 1923 	mov	dpl,@r0
      0003FE 08               [12] 1924 	inc	r0
      0003FF 86 83            [24] 1925 	mov	dph,@r0
      000401 08               [12] 1926 	inc	r0
      000402 86 F0            [24] 1927 	mov	b,@r0
      000404 78r23            [12] 1928 	mov	r0,#_index_from_item
      000406 79s01            [12] 1929 	mov	r1,#(_index_from_item >> 8)
      000408 7As00            [12] 1930 	mov	r2,#(_index_from_item >> 16)
      00040A 12r00r00         [24] 1931 	lcall	__sdcc_banked_call
      00040D AB 82            [24] 1932 	mov	r3,dpl
      00040F AC 83            [24] 1933 	mov	r4,dph
      000411 15 81            [12] 1934 	dec	sp
      000413 15 81            [12] 1935 	dec	sp
      000415 15 81            [12] 1936 	dec	sp
      000417 D0 05            [24] 1937 	pop	ar5
      000419 D0 06            [24] 1938 	pop	ar6
      00041B D0 07            [24] 1939 	pop	ar7
                                   1940 ;	../../core/net/nbr-table.c:146: if(table != NULL && item_index != -1) {
      00041D E5 81            [12] 1941 	mov	a,sp
      00041F 24 F8            [12] 1942 	add	a,#0xf8
      000421 F8               [12] 1943 	mov	r0,a
      000422 E6               [12] 1944 	mov	a,@r0
      000423 08               [12] 1945 	inc	r0
      000424 46               [12] 1946 	orl	a,@r0
      000425 70 03            [24] 1947 	jnz	00119$
      000427 02r04rF9         [24] 1948 	ljmp	00105$
      00042A                       1949 00119$:
      00042A BB FF 06         [24] 1950 	cjne	r3,#0xFF,00120$
      00042D BC FF 03         [24] 1951 	cjne	r4,#0xFF,00120$
      000430 02r04rF9         [24] 1952 	ljmp	00105$
      000433                       1953 00120$:
                                   1954 ;	../../core/net/nbr-table.c:147: if(value) {
      000433 E5 81            [12] 1955 	mov	a,sp
      000435 24 F3            [12] 1956 	add	a,#0xf3
      000437 F8               [12] 1957 	mov	r0,a
      000438 E6               [12] 1958 	mov	a,@r0
      000439 08               [12] 1959 	inc	r0
      00043A 46               [12] 1960 	orl	a,@r0
      00043B 60 61            [24] 1961 	jz	00102$
                                   1962 ;	../../core/net/nbr-table.c:148: bitmap[item_index] |= 1 << table->index;
      00043D A8 81            [24] 1963 	mov	r0,sp
      00043F 18               [12] 1964 	dec	r0
      000440 18               [12] 1965 	dec	r0
      000441 EB               [12] 1966 	mov	a,r3
      000442 2D               [12] 1967 	add	a,r5
      000443 F6               [12] 1968 	mov	@r0,a
      000444 EC               [12] 1969 	mov	a,r4
      000445 3E               [12] 1970 	addc	a,r6
      000446 08               [12] 1971 	inc	r0
      000447 F6               [12] 1972 	mov	@r0,a
      000448 08               [12] 1973 	inc	r0
      000449 A6 07            [24] 1974 	mov	@r0,ar7
      00044B A8 81            [24] 1975 	mov	r0,sp
      00044D 18               [12] 1976 	dec	r0
      00044E 18               [12] 1977 	dec	r0
      00044F 86 82            [24] 1978 	mov	dpl,@r0
      000451 08               [12] 1979 	inc	r0
      000452 86 83            [24] 1980 	mov	dph,@r0
      000454 08               [12] 1981 	inc	r0
      000455 86 F0            [24] 1982 	mov	b,@r0
      000457 12r00r00         [24] 1983 	lcall	__gptrget
      00045A FC               [12] 1984 	mov	r4,a
      00045B E5 81            [12] 1985 	mov	a,sp
      00045D 24 F8            [12] 1986 	add	a,#0xf8
      00045F F8               [12] 1987 	mov	r0,a
      000460 86 05            [24] 1988 	mov	ar5,@r0
      000462 08               [12] 1989 	inc	r0
      000463 86 06            [24] 1990 	mov	ar6,@r0
      000465 08               [12] 1991 	inc	r0
      000466 86 07            [24] 1992 	mov	ar7,@r0
      000468 8D 82            [24] 1993 	mov	dpl,r5
      00046A 8E 83            [24] 1994 	mov	dph,r6
      00046C 8F F0            [24] 1995 	mov	b,r7
      00046E 12r00r00         [24] 1996 	lcall	__gptrget
      000471 FD               [12] 1997 	mov	r5,a
      000472 A3               [24] 1998 	inc	dptr
      000473 12r00r00         [24] 1999 	lcall	__gptrget
      000476 8D F0            [24] 2000 	mov	b,r5
      000478 05 F0            [12] 2001 	inc	b
      00047A 7D 01            [12] 2002 	mov	r5,#0x01
      00047C 7E 00            [12] 2003 	mov	r6,#0x00
      00047E 80 06            [24] 2004 	sjmp	00123$
      000480                       2005 00122$:
      000480 ED               [12] 2006 	mov	a,r5
      000481 2D               [12] 2007 	add	a,r5
      000482 FD               [12] 2008 	mov	r5,a
      000483 EE               [12] 2009 	mov	a,r6
      000484 33               [12] 2010 	rlc	a
      000485 FE               [12] 2011 	mov	r6,a
      000486                       2012 00123$:
      000486 D5 F0 F7         [24] 2013 	djnz	b,00122$
      000489 EC               [12] 2014 	mov	a,r4
      00048A 42 05            [12] 2015 	orl	ar5,a
      00048C A8 81            [24] 2016 	mov	r0,sp
      00048E 18               [12] 2017 	dec	r0
      00048F 18               [12] 2018 	dec	r0
      000490 86 82            [24] 2019 	mov	dpl,@r0
      000492 08               [12] 2020 	inc	r0
      000493 86 83            [24] 2021 	mov	dph,@r0
      000495 08               [12] 2022 	inc	r0
      000496 86 F0            [24] 2023 	mov	b,@r0
      000498 ED               [12] 2024 	mov	a,r5
      000499 12r00r00         [24] 2025 	lcall	__gptrput
      00049C 80 56            [24] 2026 	sjmp	00103$
      00049E                       2027 00102$:
                                   2028 ;	../../core/net/nbr-table.c:150: bitmap[item_index] &= ~(1 << table->index);
      00049E EB               [12] 2029 	mov	a,r3
      00049F 2D               [12] 2030 	add	a,r5
      0004A0 FB               [12] 2031 	mov	r3,a
      0004A1 EC               [12] 2032 	mov	a,r4
      0004A2 3E               [12] 2033 	addc	a,r6
      0004A3 FC               [12] 2034 	mov	r4,a
      0004A4 8B 82            [24] 2035 	mov	dpl,r3
      0004A6 8C 83            [24] 2036 	mov	dph,r4
      0004A8 8F F0            [24] 2037 	mov	b,r7
      0004AA A8 81            [24] 2038 	mov	r0,sp
      0004AC 18               [12] 2039 	dec	r0
      0004AD 18               [12] 2040 	dec	r0
      0004AE 12r00r00         [24] 2041 	lcall	__gptrget
      0004B1 F6               [12] 2042 	mov	@r0,a
      0004B2 E5 81            [12] 2043 	mov	a,sp
      0004B4 24 F8            [12] 2044 	add	a,#0xf8
      0004B6 F8               [12] 2045 	mov	r0,a
      0004B7 86 02            [24] 2046 	mov	ar2,@r0
      0004B9 08               [12] 2047 	inc	r0
      0004BA 86 05            [24] 2048 	mov	ar5,@r0
      0004BC 08               [12] 2049 	inc	r0
      0004BD 86 06            [24] 2050 	mov	ar6,@r0
      0004BF 8A 82            [24] 2051 	mov	dpl,r2
      0004C1 8D 83            [24] 2052 	mov	dph,r5
      0004C3 8E F0            [24] 2053 	mov	b,r6
      0004C5 12r00r00         [24] 2054 	lcall	__gptrget
      0004C8 FA               [12] 2055 	mov	r2,a
      0004C9 A3               [24] 2056 	inc	dptr
      0004CA 12r00r00         [24] 2057 	lcall	__gptrget
      0004CD 8A F0            [24] 2058 	mov	b,r2
      0004CF 05 F0            [12] 2059 	inc	b
      0004D1 7A 01            [12] 2060 	mov	r2,#0x01
      0004D3 7D 00            [12] 2061 	mov	r5,#0x00
      0004D5 80 06            [24] 2062 	sjmp	00125$
      0004D7                       2063 00124$:
      0004D7 EA               [12] 2064 	mov	a,r2
      0004D8 2A               [12] 2065 	add	a,r2
      0004D9 FA               [12] 2066 	mov	r2,a
      0004DA ED               [12] 2067 	mov	a,r5
      0004DB 33               [12] 2068 	rlc	a
      0004DC FD               [12] 2069 	mov	r5,a
      0004DD                       2070 00125$:
      0004DD D5 F0 F7         [24] 2071 	djnz	b,00124$
      0004E0 EA               [12] 2072 	mov	a,r2
      0004E1 F4               [12] 2073 	cpl	a
      0004E2 FA               [12] 2074 	mov	r2,a
      0004E3 A8 81            [24] 2075 	mov	r0,sp
      0004E5 18               [12] 2076 	dec	r0
      0004E6 18               [12] 2077 	dec	r0
      0004E7 E6               [12] 2078 	mov	a,@r0
      0004E8 52 02            [12] 2079 	anl	ar2,a
      0004EA 8B 82            [24] 2080 	mov	dpl,r3
      0004EC 8C 83            [24] 2081 	mov	dph,r4
      0004EE 8F F0            [24] 2082 	mov	b,r7
      0004F0 EA               [12] 2083 	mov	a,r2
      0004F1 12r00r00         [24] 2084 	lcall	__gptrput
      0004F4                       2085 00103$:
                                   2086 ;	../../core/net/nbr-table.c:152: return 1;
      0004F4 90 00 01         [24] 2087 	mov	dptr,#0x0001
      0004F7 80 03            [24] 2088 	sjmp	00108$
      0004F9                       2089 00105$:
                                   2090 ;	../../core/net/nbr-table.c:154: return 0;
      0004F9 90 00 00         [24] 2091 	mov	dptr,#0x0000
                                   2092 ;	../../core/net/nbr-table.c:156: return 0;
      0004FC                       2093 00108$:
      0004FC 15 81            [12] 2094 	dec	sp
      0004FE 15 81            [12] 2095 	dec	sp
      000500 15 81            [12] 2096 	dec	sp
      000502 02r00r00         [24] 2097 	ljmp	__sdcc_banked_ret
                                   2098 ;------------------------------------------------------------
                                   2099 ;Allocation info for local variables in function 'nbr_table_allocate'
                                   2100 ;------------------------------------------------------------
                                   2101 ;key                       Allocated to registers r2 r6 r7 
                                   2102 ;least_used_count          Allocated to stack - sp -10
                                   2103 ;least_used_key            Allocated to stack - sp -8
                                   2104 ;item_index                Allocated to stack - sp -5
                                   2105 ;locked                    Allocated to registers r5 r4 
                                   2106 ;used                      Allocated to stack - sp -3
                                   2107 ;used_count                Allocated to stack - sp -1
                                   2108 ;i                         Allocated to stack - sp -5
                                   2109 ;removed_item              Allocated to stack - sp -3
                                   2110 ;sloc0                     Allocated to stack - sp -15
                                   2111 ;sloc1                     Allocated to stack - sp -12
                                   2112 ;------------------------------------------------------------
                                   2113 ;	../../core/net/nbr-table.c:160: nbr_table_allocate(void)
                                   2114 ;	-----------------------------------------
                                   2115 ;	 function nbr_table_allocate
                                   2116 ;	-----------------------------------------
      000505                       2117 _nbr_table_allocate:
      000505 E5 81            [12] 2118 	mov	a,sp
      000507 24 10            [12] 2119 	add	a,#0x10
                                   2120 ;	../../core/net/nbr-table.c:163: int least_used_count = 0;
      000509 F5 81            [12] 2121 	mov	sp,a
      00050B 24 F6            [12] 2122 	add	a,#0xf6
      00050D F8               [12] 2123 	mov	r0,a
      00050E E4               [12] 2124 	clr	a
      00050F F6               [12] 2125 	mov	@r0,a
      000510 08               [12] 2126 	inc	r0
      000511 F6               [12] 2127 	mov	@r0,a
                                   2128 ;	../../core/net/nbr-table.c:164: nbr_table_key_t *least_used_key = NULL;
      000512 E5 81            [12] 2129 	mov	a,sp
      000514 24 F8            [12] 2130 	add	a,#0xf8
      000516 F8               [12] 2131 	mov	r0,a
      000517 E4               [12] 2132 	clr	a
      000518 F6               [12] 2133 	mov	@r0,a
      000519 08               [12] 2134 	inc	r0
      00051A F6               [12] 2135 	mov	@r0,a
      00051B 08               [12] 2136 	inc	r0
      00051C 76 00            [12] 2137 	mov	@r0,#0x00
                                   2138 ;	../../core/net/nbr-table.c:166: key = memb_alloc(&neighbor_addr_mem);
      00051E 90r00r00         [24] 2139 	mov	dptr,#_neighbor_addr_mem
      000521 75 F0 00         [24] 2140 	mov	b,#0x00
      000524 78r00            [12] 2141 	mov	r0,#_memb_alloc
      000526 79s00            [12] 2142 	mov	r1,#(_memb_alloc >> 8)
      000528 7As00            [12] 2143 	mov	r2,#(_memb_alloc >> 16)
      00052A 12r00r00         [24] 2144 	lcall	__sdcc_banked_call
      00052D AA 82            [24] 2145 	mov	r2,dpl
      00052F AE 83            [24] 2146 	mov	r6,dph
      000531 AF F0            [24] 2147 	mov	r7,b
                                   2148 ;	../../core/net/nbr-table.c:167: if(key != NULL) {
      000533 EA               [12] 2149 	mov	a,r2
      000534 4E               [12] 2150 	orl	a,r6
      000535 60 09            [24] 2151 	jz	00126$
                                   2152 ;	../../core/net/nbr-table.c:168: return key;
      000537 8A 82            [24] 2153 	mov	dpl,r2
      000539 8E 83            [24] 2154 	mov	dph,r6
      00053B 8F F0            [24] 2155 	mov	b,r7
      00053D 02r08r61         [24] 2156 	ljmp	00130$
      000540                       2157 00126$:
                                   2158 ;	../../core/net/nbr-table.c:176: key = list_head(nbr_table_keys);
      000540 90r00r0D         [24] 2159 	mov	dptr,#_nbr_table_keys
      000543 E0               [24] 2160 	movx	a,@dptr
      000544 FB               [12] 2161 	mov	r3,a
      000545 A3               [24] 2162 	inc	dptr
      000546 E0               [24] 2163 	movx	a,@dptr
      000547 FC               [12] 2164 	mov	r4,a
      000548 A3               [24] 2165 	inc	dptr
      000549 E0               [24] 2166 	movx	a,@dptr
      00054A FD               [12] 2167 	mov	r5,a
      00054B 8B 82            [24] 2168 	mov	dpl,r3
      00054D 8C 83            [24] 2169 	mov	dph,r4
      00054F 8D F0            [24] 2170 	mov	b,r5
      000551 78r00            [12] 2171 	mov	r0,#_list_head
      000553 79s00            [12] 2172 	mov	r1,#(_list_head >> 8)
      000555 7As00            [12] 2173 	mov	r2,#(_list_head >> 16)
      000557 12r00r00         [24] 2174 	lcall	__sdcc_banked_call
      00055A AB 82            [24] 2175 	mov	r3,dpl
      00055C AC 83            [24] 2176 	mov	r4,dph
      00055E AD F0            [24] 2177 	mov	r5,b
      000560 8B 02            [24] 2178 	mov	ar2,r3
      000562 8C 06            [24] 2179 	mov	ar6,r4
      000564 8D 07            [24] 2180 	mov	ar7,r5
                                   2181 ;	../../core/net/nbr-table.c:177: while(key != NULL) {
                                   2182 ;	../../core/net/nbr-table.c:222: return least_used_key;
                                   2183 ;	../../core/net/nbr-table.c:177: while(key != NULL) {
      000566                       2184 00113$:
      000566 EA               [12] 2185 	mov	a,r2
      000567 4E               [12] 2186 	orl	a,r6
      000568 70 03            [24] 2187 	jnz	00177$
      00056A 02r06r73         [24] 2188 	ljmp	00115$
      00056D                       2189 00177$:
                                   2190 ;	../../core/net/nbr-table.c:178: int item_index = index_from_key(key);
      00056D 8A 82            [24] 2191 	mov	dpl,r2
      00056F 8E 83            [24] 2192 	mov	dph,r6
      000571 8F F0            [24] 2193 	mov	b,r7
      000573 C0 07            [24] 2194 	push	ar7
      000575 C0 06            [24] 2195 	push	ar6
      000577 C0 02            [24] 2196 	push	ar2
      000579 78rE5            [12] 2197 	mov	r0,#_index_from_key
      00057B 79s00            [12] 2198 	mov	r1,#(_index_from_key >> 8)
      00057D 7As00            [12] 2199 	mov	r2,#(_index_from_key >> 16)
      00057F 12r00r00         [24] 2200 	lcall	__sdcc_banked_call
      000582 AD 82            [24] 2201 	mov	r5,dpl
      000584 AC 83            [24] 2202 	mov	r4,dph
      000586 D0 02            [24] 2203 	pop	ar2
      000588 D0 06            [24] 2204 	pop	ar6
      00058A D0 07            [24] 2205 	pop	ar7
      00058C E5 81            [12] 2206 	mov	a,sp
      00058E 24 FB            [12] 2207 	add	a,#0xfb
      000590 F8               [12] 2208 	mov	r0,a
      000591 A6 05            [24] 2209 	mov	@r0,ar5
      000593 08               [12] 2210 	inc	r0
      000594 A6 04            [24] 2211 	mov	@r0,ar4
                                   2212 ;	../../core/net/nbr-table.c:179: int locked = locked_map[item_index];
      000596 E5 81            [12] 2213 	mov	a,sp
      000598 24 FB            [12] 2214 	add	a,#0xfb
      00059A F8               [12] 2215 	mov	r0,a
      00059B E6               [12] 2216 	mov	a,@r0
      00059C 24r04            [12] 2217 	add	a,#_locked_map
      00059E F5 82            [12] 2218 	mov	dpl,a
      0005A0 08               [12] 2219 	inc	r0
      0005A1 E6               [12] 2220 	mov	a,@r0
      0005A2 34s00            [12] 2221 	addc	a,#(_locked_map >> 8)
      0005A4 F5 83            [12] 2222 	mov	dph,a
      0005A6 E0               [24] 2223 	movx	a,@dptr
                                   2224 ;	../../core/net/nbr-table.c:181: if(!locked) {
      0005A7 FD               [12] 2225 	mov	r5,a
      0005A8 7C 00            [12] 2226 	mov	r4,#0x00
      0005AA 4C               [12] 2227 	orl	a,r4
      0005AB 60 03            [24] 2228 	jz	00178$
      0005AD 02r06r4F         [24] 2229 	ljmp	00112$
      0005B0                       2230 00178$:
                                   2231 ;	../../core/net/nbr-table.c:182: int used = used_map[item_index];
      0005B0 E5 81            [12] 2232 	mov	a,sp
      0005B2 24 FB            [12] 2233 	add	a,#0xfb
      0005B4 F8               [12] 2234 	mov	r0,a
      0005B5 E6               [12] 2235 	mov	a,@r0
      0005B6 24r00            [12] 2236 	add	a,#_used_map
      0005B8 F5 82            [12] 2237 	mov	dpl,a
      0005BA 08               [12] 2238 	inc	r0
      0005BB E6               [12] 2239 	mov	a,@r0
      0005BC 34s00            [12] 2240 	addc	a,#(_used_map >> 8)
      0005BE F5 83            [12] 2241 	mov	dph,a
      0005C0 E0               [24] 2242 	movx	a,@dptr
      0005C1 FD               [12] 2243 	mov	r5,a
      0005C2 E5 81            [12] 2244 	mov	a,sp
      0005C4 24 FD            [12] 2245 	add	a,#0xfd
      0005C6 F8               [12] 2246 	mov	r0,a
      0005C7 A6 05            [24] 2247 	mov	@r0,ar5
      0005C9 08               [12] 2248 	inc	r0
      0005CA 76 00            [12] 2249 	mov	@r0,#0x00
                                   2250 ;	../../core/net/nbr-table.c:185: while(used != 0) {
      0005CC A8 81            [24] 2251 	mov	r0,sp
      0005CE 18               [12] 2252 	dec	r0
      0005CF E4               [12] 2253 	clr	a
      0005D0 F6               [12] 2254 	mov	@r0,a
      0005D1 08               [12] 2255 	inc	r0
      0005D2 F6               [12] 2256 	mov	@r0,a
                                   2257 ;	../../core/net/nbr-table.c:222: return least_used_key;
                                   2258 ;	../../core/net/nbr-table.c:185: while(used != 0) {
      0005D3                       2259 00103$:
      0005D3 E5 81            [12] 2260 	mov	a,sp
      0005D5 24 FD            [12] 2261 	add	a,#0xfd
      0005D7 F8               [12] 2262 	mov	r0,a
      0005D8 E6               [12] 2263 	mov	a,@r0
      0005D9 08               [12] 2264 	inc	r0
      0005DA 46               [12] 2265 	orl	a,@r0
      0005DB 60 2C            [24] 2266 	jz	00146$
                                   2267 ;	../../core/net/nbr-table.c:186: if((used & 1) == 1) {
      0005DD E5 81            [12] 2268 	mov	a,sp
      0005DF 24 FD            [12] 2269 	add	a,#0xfd
      0005E1 F8               [12] 2270 	mov	r0,a
      0005E2 74 01            [12] 2271 	mov	a,#0x01
      0005E4 56               [12] 2272 	anl	a,@r0
      0005E5 FC               [12] 2273 	mov	r4,a
      0005E6 7D 00            [12] 2274 	mov	r5,#0x00
      0005E8 BC 01 0C         [24] 2275 	cjne	r4,#0x01,00102$
      0005EB BD 00 09         [24] 2276 	cjne	r5,#0x00,00102$
                                   2277 ;	../../core/net/nbr-table.c:187: used_count++;
      0005EE A8 81            [24] 2278 	mov	r0,sp
      0005F0 18               [12] 2279 	dec	r0
      0005F1 06               [12] 2280 	inc	@r0
      0005F2 B6 00 02         [24] 2281 	cjne	@r0,#0x00,00182$
      0005F5 08               [12] 2282 	inc	r0
      0005F6 06               [12] 2283 	inc	@r0
      0005F7                       2284 00182$:
      0005F7                       2285 00102$:
                                   2286 ;	../../core/net/nbr-table.c:189: used >>= 1;
      0005F7 E5 81            [12] 2287 	mov	a,sp
      0005F9 24 FD            [12] 2288 	add	a,#0xfd
      0005FB F8               [12] 2289 	mov	r0,a
      0005FC 08               [12] 2290 	inc	r0
      0005FD E6               [12] 2291 	mov	a,@r0
      0005FE 18               [12] 2292 	dec	r0
      0005FF A2 E7            [12] 2293 	mov	c,acc.7
      000601 13               [12] 2294 	rrc	a
      000602 C6               [12] 2295 	xch	a,@r0
      000603 13               [12] 2296 	rrc	a
      000604 C6               [12] 2297 	xch	a,@r0
      000605 08               [12] 2298 	inc	r0
      000606 F6               [12] 2299 	mov	@r0,a
      000607 80 CA            [24] 2300 	sjmp	00103$
      000609                       2301 00146$:
      000609 A8 81            [24] 2302 	mov	r0,sp
      00060B 18               [12] 2303 	dec	r0
      00060C 86 04            [24] 2304 	mov	ar4,@r0
      00060E 08               [12] 2305 	inc	r0
      00060F 86 05            [24] 2306 	mov	ar5,@r0
                                   2307 ;	../../core/net/nbr-table.c:192: if(least_used_key == NULL || used_count < least_used_count) {
      000611 E5 81            [12] 2308 	mov	a,sp
      000613 24 F8            [12] 2309 	add	a,#0xf8
      000615 F8               [12] 2310 	mov	r0,a
      000616 E6               [12] 2311 	mov	a,@r0
      000617 08               [12] 2312 	inc	r0
      000618 46               [12] 2313 	orl	a,@r0
      000619 60 19            [24] 2314 	jz	00108$
      00061B A8 81            [24] 2315 	mov	r0,sp
      00061D 18               [12] 2316 	dec	r0
      00061E E5 81            [12] 2317 	mov	a,sp
      000620 24 F6            [12] 2318 	add	a,#0xf6
      000622 F9               [12] 2319 	mov	r1,a
      000623 C3               [12] 2320 	clr	c
      000624 E6               [12] 2321 	mov	a,@r0
      000625 97               [12] 2322 	subb	a,@r1
      000626 08               [12] 2323 	inc	r0
      000627 E6               [12] 2324 	mov	a,@r0
      000628 64 80            [12] 2325 	xrl	a,#0x80
      00062A 09               [12] 2326 	inc	r1
      00062B 87 F0            [24] 2327 	mov	b,@r1
      00062D 63 F0 80         [24] 2328 	xrl	b,#0x80
      000630 95 F0            [12] 2329 	subb	a,b
      000632 50 1B            [24] 2330 	jnc	00112$
      000634                       2331 00108$:
                                   2332 ;	../../core/net/nbr-table.c:193: least_used_key = key;
      000634 E5 81            [12] 2333 	mov	a,sp
      000636 24 F8            [12] 2334 	add	a,#0xf8
      000638 F8               [12] 2335 	mov	r0,a
      000639 A6 02            [24] 2336 	mov	@r0,ar2
      00063B 08               [12] 2337 	inc	r0
      00063C A6 06            [24] 2338 	mov	@r0,ar6
      00063E 08               [12] 2339 	inc	r0
      00063F A6 07            [24] 2340 	mov	@r0,ar7
                                   2341 ;	../../core/net/nbr-table.c:194: least_used_count = used_count;
      000641 E5 81            [12] 2342 	mov	a,sp
      000643 24 F6            [12] 2343 	add	a,#0xf6
      000645 F8               [12] 2344 	mov	r0,a
      000646 A6 04            [24] 2345 	mov	@r0,ar4
      000648 08               [12] 2346 	inc	r0
      000649 A6 05            [24] 2347 	mov	@r0,ar5
                                   2348 ;	../../core/net/nbr-table.c:195: if(used_count == 0) { /* We won't find any least used item */
      00064B EC               [12] 2349 	mov	a,r4
      00064C 4D               [12] 2350 	orl	a,r5
      00064D 60 24            [24] 2351 	jz	00115$
                                   2352 ;	../../core/net/nbr-table.c:196: break;
      00064F                       2353 00112$:
                                   2354 ;	../../core/net/nbr-table.c:200: key = list_item_next(key);
      00064F 8A 03            [24] 2355 	mov	ar3,r2
      000651 8E 04            [24] 2356 	mov	ar4,r6
      000653 8F 05            [24] 2357 	mov	ar5,r7
      000655 8B 82            [24] 2358 	mov	dpl,r3
      000657 8C 83            [24] 2359 	mov	dph,r4
      000659 8D F0            [24] 2360 	mov	b,r5
      00065B 78r00            [12] 2361 	mov	r0,#_list_item_next
      00065D 79s00            [12] 2362 	mov	r1,#(_list_item_next >> 8)
      00065F 7As00            [12] 2363 	mov	r2,#(_list_item_next >> 16)
      000661 12r00r00         [24] 2364 	lcall	__sdcc_banked_call
      000664 AB 82            [24] 2365 	mov	r3,dpl
      000666 AC 83            [24] 2366 	mov	r4,dph
      000668 AD F0            [24] 2367 	mov	r5,b
      00066A 8B 02            [24] 2368 	mov	ar2,r3
      00066C 8C 06            [24] 2369 	mov	ar6,r4
      00066E 8D 07            [24] 2370 	mov	ar7,r5
      000670 02r05r66         [24] 2371 	ljmp	00113$
      000673                       2372 00115$:
                                   2373 ;	../../core/net/nbr-table.c:202: if(least_used_key == NULL) {
      000673 E5 81            [12] 2374 	mov	a,sp
      000675 24 F8            [12] 2375 	add	a,#0xf8
      000677 F8               [12] 2376 	mov	r0,a
      000678 E6               [12] 2377 	mov	a,@r0
      000679 08               [12] 2378 	inc	r0
      00067A 46               [12] 2379 	orl	a,@r0
                                   2380 ;	../../core/net/nbr-table.c:204: return NULL;
      00067B 70 08            [24] 2381 	jnz	00144$
      00067D 90 00 00         [24] 2382 	mov	dptr,#0x0000
      000680 F5 F0            [12] 2383 	mov	b,a
      000682 02r08r61         [24] 2384 	ljmp	00130$
                                   2385 ;	../../core/net/nbr-table.c:208: for(i = 0; i<MAX_NUM_TABLES; i++) {
      000685                       2386 00144$:
      000685 E5 81            [12] 2387 	mov	a,sp
      000687 24 FB            [12] 2388 	add	a,#0xfb
      000689 F8               [12] 2389 	mov	r0,a
      00068A E4               [12] 2390 	clr	a
      00068B F6               [12] 2391 	mov	@r0,a
      00068C 08               [12] 2392 	inc	r0
      00068D F6               [12] 2393 	mov	@r0,a
      00068E E5 81            [12] 2394 	mov	a,sp
      000690 24 F4            [12] 2395 	add	a,#0xf4
      000692 F8               [12] 2396 	mov	r0,a
      000693 E4               [12] 2397 	clr	a
      000694 F6               [12] 2398 	mov	@r0,a
      000695 08               [12] 2399 	inc	r0
      000696 F6               [12] 2400 	mov	@r0,a
      000697                       2401 00128$:
                                   2402 ;	../../core/net/nbr-table.c:209: if(all_tables[i] != NULL && all_tables[i]->callback != NULL) {
      000697 E5 81            [12] 2403 	mov	a,sp
      000699 24 F4            [12] 2404 	add	a,#0xf4
      00069B F8               [12] 2405 	mov	r0,a
      00069C E6               [12] 2406 	mov	a,@r0
      00069D 24r08            [12] 2407 	add	a,#_all_tables
      00069F FA               [12] 2408 	mov	r2,a
      0006A0 08               [12] 2409 	inc	r0
      0006A1 E6               [12] 2410 	mov	a,@r0
      0006A2 34s00            [12] 2411 	addc	a,#(_all_tables >> 8)
      0006A4 FB               [12] 2412 	mov	r3,a
      0006A5 8A 82            [24] 2413 	mov	dpl,r2
      0006A7 8B 83            [24] 2414 	mov	dph,r3
      0006A9 E5 81            [12] 2415 	mov	a,sp
      0006AB 24 F1            [12] 2416 	add	a,#0xf1
      0006AD F8               [12] 2417 	mov	r0,a
      0006AE E0               [24] 2418 	movx	a,@dptr
      0006AF F6               [12] 2419 	mov	@r0,a
      0006B0 A3               [24] 2420 	inc	dptr
      0006B1 E0               [24] 2421 	movx	a,@dptr
      0006B2 08               [12] 2422 	inc	r0
      0006B3 F6               [12] 2423 	mov	@r0,a
      0006B4 A3               [24] 2424 	inc	dptr
      0006B5 E0               [24] 2425 	movx	a,@dptr
      0006B6 08               [12] 2426 	inc	r0
      0006B7 F6               [12] 2427 	mov	@r0,a
      0006B8 E5 81            [12] 2428 	mov	a,sp
      0006BA 24 F1            [12] 2429 	add	a,#0xf1
      0006BC F8               [12] 2430 	mov	r0,a
      0006BD E6               [12] 2431 	mov	a,@r0
      0006BE 08               [12] 2432 	inc	r0
      0006BF 46               [12] 2433 	orl	a,@r0
      0006C0 70 03            [24] 2434 	jnz	00187$
      0006C2 02r07rCF         [24] 2435 	ljmp	00129$
      0006C5                       2436 00187$:
      0006C5 E5 81            [12] 2437 	mov	a,sp
      0006C7 24 F1            [12] 2438 	add	a,#0xf1
      0006C9 F8               [12] 2439 	mov	r0,a
      0006CA 74 04            [12] 2440 	mov	a,#0x04
      0006CC 26               [12] 2441 	add	a,@r0
      0006CD FD               [12] 2442 	mov	r5,a
      0006CE E4               [12] 2443 	clr	a
      0006CF 08               [12] 2444 	inc	r0
      0006D0 36               [12] 2445 	addc	a,@r0
      0006D1 FE               [12] 2446 	mov	r6,a
      0006D2 08               [12] 2447 	inc	r0
      0006D3 86 07            [24] 2448 	mov	ar7,@r0
      0006D5 8D 82            [24] 2449 	mov	dpl,r5
      0006D7 8E 83            [24] 2450 	mov	dph,r6
      0006D9 8F F0            [24] 2451 	mov	b,r7
      0006DB 12r00r00         [24] 2452 	lcall	__gptrget
      0006DE FD               [12] 2453 	mov	r5,a
      0006DF A3               [24] 2454 	inc	dptr
      0006E0 12r00r00         [24] 2455 	lcall	__gptrget
      0006E3 FE               [12] 2456 	mov	r6,a
      0006E4 A3               [24] 2457 	inc	dptr
      0006E5 12r00r00         [24] 2458 	lcall	__gptrget
      0006E8 FF               [12] 2459 	mov	r7,a
      0006E9 ED               [12] 2460 	mov	a,r5
      0006EA 4E               [12] 2461 	orl	a,r6
      0006EB 70 03            [24] 2462 	jnz	00188$
      0006ED 02r07rCF         [24] 2463 	ljmp	00129$
      0006F0                       2464 00188$:
                                   2465 ;	../../core/net/nbr-table.c:211: nbr_table_item_t *removed_item = item_from_key(all_tables[i], least_used_key);
      0006F0 C0 03            [24] 2466 	push	ar3
      0006F2 C0 02            [24] 2467 	push	ar2
      0006F4 E5 81            [12] 2468 	mov	a,sp
      0006F6 24 F6            [12] 2469 	add	a,#0xf6
      0006F8 F8               [12] 2470 	mov	r0,a
      0006F9 E6               [12] 2471 	mov	a,@r0
      0006FA C0 E0            [24] 2472 	push	acc
      0006FC 08               [12] 2473 	inc	r0
      0006FD E6               [12] 2474 	mov	a,@r0
      0006FE C0 E0            [24] 2475 	push	acc
      000700 08               [12] 2476 	inc	r0
      000701 E6               [12] 2477 	mov	a,@r0
      000702 C0 E0            [24] 2478 	push	acc
      000704 E5 81            [12] 2479 	mov	a,sp
      000706 24 EC            [12] 2480 	add	a,#0xec
      000708 F8               [12] 2481 	mov	r0,a
      000709 86 82            [24] 2482 	mov	dpl,@r0
      00070B 08               [12] 2483 	inc	r0
      00070C 86 83            [24] 2484 	mov	dph,@r0
      00070E 08               [12] 2485 	inc	r0
      00070F 86 F0            [24] 2486 	mov	b,@r0
      000711 78rB6            [12] 2487 	mov	r0,#_item_from_key
      000713 79s01            [12] 2488 	mov	r1,#(_item_from_key >> 8)
      000715 7As00            [12] 2489 	mov	r2,#(_item_from_key >> 16)
      000717 12r00r00         [24] 2490 	lcall	__sdcc_banked_call
      00071A AF 82            [24] 2491 	mov	r7,dpl
      00071C AE 83            [24] 2492 	mov	r6,dph
      00071E AD F0            [24] 2493 	mov	r5,b
      000720 15 81            [12] 2494 	dec	sp
      000722 15 81            [12] 2495 	dec	sp
      000724 15 81            [12] 2496 	dec	sp
      000726 D0 02            [24] 2497 	pop	ar2
      000728 D0 03            [24] 2498 	pop	ar3
      00072A E5 81            [12] 2499 	mov	a,sp
      00072C 24 FD            [12] 2500 	add	a,#0xfd
      00072E F8               [12] 2501 	mov	r0,a
      00072F A6 07            [24] 2502 	mov	@r0,ar7
      000731 08               [12] 2503 	inc	r0
      000732 A6 06            [24] 2504 	mov	@r0,ar6
      000734 08               [12] 2505 	inc	r0
      000735 A6 05            [24] 2506 	mov	@r0,ar5
                                   2507 ;	../../core/net/nbr-table.c:212: if(nbr_get_bit(used_map, all_tables[i], removed_item) == 1) {
      000737 8A 82            [24] 2508 	mov	dpl,r2
      000739 8B 83            [24] 2509 	mov	dph,r3
      00073B E0               [24] 2510 	movx	a,@dptr
      00073C FD               [12] 2511 	mov	r5,a
      00073D A3               [24] 2512 	inc	dptr
      00073E E0               [24] 2513 	movx	a,@dptr
      00073F FE               [12] 2514 	mov	r6,a
      000740 A3               [24] 2515 	inc	dptr
      000741 E0               [24] 2516 	movx	a,@dptr
      000742 FF               [12] 2517 	mov	r7,a
      000743 C0 03            [24] 2518 	push	ar3
      000745 C0 02            [24] 2519 	push	ar2
      000747 E5 81            [12] 2520 	mov	a,sp
      000749 24 FB            [12] 2521 	add	a,#0xfb
      00074B F8               [12] 2522 	mov	r0,a
      00074C E6               [12] 2523 	mov	a,@r0
      00074D C0 E0            [24] 2524 	push	acc
      00074F 08               [12] 2525 	inc	r0
      000750 E6               [12] 2526 	mov	a,@r0
      000751 C0 E0            [24] 2527 	push	acc
      000753 08               [12] 2528 	inc	r0
      000754 E6               [12] 2529 	mov	a,@r0
      000755 C0 E0            [24] 2530 	push	acc
      000757 C0 05            [24] 2531 	push	ar5
      000759 C0 06            [24] 2532 	push	ar6
      00075B C0 07            [24] 2533 	push	ar7
      00075D 90r00r00         [24] 2534 	mov	dptr,#_used_map
      000760 75 F0 00         [24] 2535 	mov	b,#0x00
      000763 78r1C            [12] 2536 	mov	r0,#_nbr_get_bit
      000765 79s03            [12] 2537 	mov	r1,#(_nbr_get_bit >> 8)
      000767 7As00            [12] 2538 	mov	r2,#(_nbr_get_bit >> 16)
      000769 12r00r00         [24] 2539 	lcall	__sdcc_banked_call
      00076C AE 82            [24] 2540 	mov	r6,dpl
      00076E AF 83            [24] 2541 	mov	r7,dph
      000770 E5 81            [12] 2542 	mov	a,sp
      000772 24 FA            [12] 2543 	add	a,#0xfa
      000774 F5 81            [12] 2544 	mov	sp,a
      000776 D0 02            [24] 2545 	pop	ar2
      000778 D0 03            [24] 2546 	pop	ar3
      00077A BE 01 52         [24] 2547 	cjne	r6,#0x01,00129$
      00077D BF 00 4F         [24] 2548 	cjne	r7,#0x00,00129$
                                   2549 ;	../../core/net/nbr-table.c:213: all_tables[i]->callback(removed_item);
      000780 8A 82            [24] 2550 	mov	dpl,r2
      000782 8B 83            [24] 2551 	mov	dph,r3
      000784 E0               [24] 2552 	movx	a,@dptr
      000785 FA               [12] 2553 	mov	r2,a
      000786 A3               [24] 2554 	inc	dptr
      000787 E0               [24] 2555 	movx	a,@dptr
      000788 FB               [12] 2556 	mov	r3,a
      000789 A3               [24] 2557 	inc	dptr
      00078A E0               [24] 2558 	movx	a,@dptr
      00078B FF               [12] 2559 	mov	r7,a
      00078C 74 04            [12] 2560 	mov	a,#0x04
      00078E 2A               [12] 2561 	add	a,r2
      00078F FA               [12] 2562 	mov	r2,a
      000790 E4               [12] 2563 	clr	a
      000791 3B               [12] 2564 	addc	a,r3
      000792 FB               [12] 2565 	mov	r3,a
      000793 8A 82            [24] 2566 	mov	dpl,r2
      000795 8B 83            [24] 2567 	mov	dph,r3
      000797 8F F0            [24] 2568 	mov	b,r7
      000799 12r00r00         [24] 2569 	lcall	__gptrget
      00079C FA               [12] 2570 	mov	r2,a
      00079D A3               [24] 2571 	inc	dptr
      00079E 12r00r00         [24] 2572 	lcall	__gptrget
      0007A1 FB               [12] 2573 	mov	r3,a
      0007A2 A3               [24] 2574 	inc	dptr
      0007A3 12r00r00         [24] 2575 	lcall	__gptrget
      0007A6 FF               [12] 2576 	mov	r7,a
      0007A7 C0 07            [24] 2577 	push	ar7
      0007A9 C0 03            [24] 2578 	push	ar3
      0007AB C0 02            [24] 2579 	push	ar2
      0007AD C0 02            [24] 2580 	push	ar2
      0007AF C0 03            [24] 2581 	push	ar3
      0007B1 C0 07            [24] 2582 	push	ar7
      0007B3 E5 81            [12] 2583 	mov	a,sp
      0007B5 24 F7            [12] 2584 	add	a,#0xf7
      0007B7 F8               [12] 2585 	mov	r0,a
      0007B8 86 82            [24] 2586 	mov	dpl,@r0
      0007BA 08               [12] 2587 	inc	r0
      0007BB 86 83            [24] 2588 	mov	dph,@r0
      0007BD 08               [12] 2589 	inc	r0
      0007BE 86 F0            [24] 2590 	mov	b,@r0
      0007C0 D0 02            [24] 2591 	pop	ar2
      0007C2 D0 01            [24] 2592 	pop	ar1
      0007C4 D0 00            [24] 2593 	pop	ar0
      0007C6 12r00r00         [24] 2594 	lcall	__sdcc_banked_call
      0007C9 D0 02            [24] 2595 	pop	ar2
      0007CB D0 03            [24] 2596 	pop	ar3
      0007CD D0 07            [24] 2597 	pop	ar7
      0007CF                       2598 00129$:
                                   2599 ;	../../core/net/nbr-table.c:208: for(i = 0; i<MAX_NUM_TABLES; i++) {
      0007CF E5 81            [12] 2600 	mov	a,sp
      0007D1 24 F4            [12] 2601 	add	a,#0xf4
      0007D3 F8               [12] 2602 	mov	r0,a
      0007D4 74 03            [12] 2603 	mov	a,#0x03
      0007D6 26               [12] 2604 	add	a,@r0
      0007D7 F6               [12] 2605 	mov	@r0,a
      0007D8 E4               [12] 2606 	clr	a
      0007D9 08               [12] 2607 	inc	r0
      0007DA 36               [12] 2608 	addc	a,@r0
      0007DB F6               [12] 2609 	mov	@r0,a
      0007DC E5 81            [12] 2610 	mov	a,sp
      0007DE 24 FB            [12] 2611 	add	a,#0xfb
      0007E0 F8               [12] 2612 	mov	r0,a
      0007E1 06               [12] 2613 	inc	@r0
      0007E2 B6 00 02         [24] 2614 	cjne	@r0,#0x00,00191$
      0007E5 08               [12] 2615 	inc	r0
      0007E6 06               [12] 2616 	inc	@r0
      0007E7                       2617 00191$:
      0007E7 E5 81            [12] 2618 	mov	a,sp
      0007E9 24 FB            [12] 2619 	add	a,#0xfb
      0007EB F8               [12] 2620 	mov	r0,a
      0007EC C3               [12] 2621 	clr	c
      0007ED E6               [12] 2622 	mov	a,@r0
      0007EE 94 08            [12] 2623 	subb	a,#0x08
      0007F0 08               [12] 2624 	inc	r0
      0007F1 E6               [12] 2625 	mov	a,@r0
      0007F2 64 80            [12] 2626 	xrl	a,#0x80
      0007F4 94 80            [12] 2627 	subb	a,#0x80
      0007F6 50 03            [24] 2628 	jnc	00192$
      0007F8 02r06r97         [24] 2629 	ljmp	00128$
      0007FB                       2630 00192$:
                                   2631 ;	../../core/net/nbr-table.c:218: used_map[index_from_key(least_used_key)] = 0;
      0007FB E5 81            [12] 2632 	mov	a,sp
      0007FD 24 F8            [12] 2633 	add	a,#0xf8
      0007FF F8               [12] 2634 	mov	r0,a
      000800 86 82            [24] 2635 	mov	dpl,@r0
      000802 08               [12] 2636 	inc	r0
      000803 86 83            [24] 2637 	mov	dph,@r0
      000805 08               [12] 2638 	inc	r0
      000806 86 F0            [24] 2639 	mov	b,@r0
      000808 78rE5            [12] 2640 	mov	r0,#_index_from_key
      00080A 79s00            [12] 2641 	mov	r1,#(_index_from_key >> 8)
      00080C 7As00            [12] 2642 	mov	r2,#(_index_from_key >> 16)
      00080E 12r00r00         [24] 2643 	lcall	__sdcc_banked_call
      000811 AE 82            [24] 2644 	mov	r6,dpl
      000813 AF 83            [24] 2645 	mov	r7,dph
      000815 EE               [12] 2646 	mov	a,r6
      000816 24r00            [12] 2647 	add	a,#_used_map
      000818 F5 82            [12] 2648 	mov	dpl,a
      00081A EF               [12] 2649 	mov	a,r7
      00081B 34s00            [12] 2650 	addc	a,#(_used_map >> 8)
      00081D F5 83            [12] 2651 	mov	dph,a
      00081F E4               [12] 2652 	clr	a
      000820 F0               [24] 2653 	movx	@dptr,a
                                   2654 ;	../../core/net/nbr-table.c:220: list_remove(nbr_table_keys, least_used_key);
      000821 E5 81            [12] 2655 	mov	a,sp
      000823 24 F8            [12] 2656 	add	a,#0xf8
      000825 F8               [12] 2657 	mov	r0,a
      000826 86 03            [24] 2658 	mov	ar3,@r0
      000828 08               [12] 2659 	inc	r0
      000829 86 04            [24] 2660 	mov	ar4,@r0
      00082B 08               [12] 2661 	inc	r0
      00082C 86 05            [24] 2662 	mov	ar5,@r0
      00082E 90r00r0D         [24] 2663 	mov	dptr,#_nbr_table_keys
      000831 E0               [24] 2664 	movx	a,@dptr
      000832 FA               [12] 2665 	mov	r2,a
      000833 A3               [24] 2666 	inc	dptr
      000834 E0               [24] 2667 	movx	a,@dptr
      000835 FE               [12] 2668 	mov	r6,a
      000836 A3               [24] 2669 	inc	dptr
      000837 E0               [24] 2670 	movx	a,@dptr
      000838 FF               [12] 2671 	mov	r7,a
      000839 C0 03            [24] 2672 	push	ar3
      00083B C0 04            [24] 2673 	push	ar4
      00083D C0 05            [24] 2674 	push	ar5
      00083F 8A 82            [24] 2675 	mov	dpl,r2
      000841 8E 83            [24] 2676 	mov	dph,r6
      000843 8F F0            [24] 2677 	mov	b,r7
      000845 78r00            [12] 2678 	mov	r0,#_list_remove
      000847 79s00            [12] 2679 	mov	r1,#(_list_remove >> 8)
      000849 7As00            [12] 2680 	mov	r2,#(_list_remove >> 16)
      00084B 12r00r00         [24] 2681 	lcall	__sdcc_banked_call
      00084E 15 81            [12] 2682 	dec	sp
      000850 15 81            [12] 2683 	dec	sp
      000852 15 81            [12] 2684 	dec	sp
                                   2685 ;	../../core/net/nbr-table.c:222: return least_used_key;
      000854 E5 81            [12] 2686 	mov	a,sp
      000856 24 F8            [12] 2687 	add	a,#0xf8
      000858 F8               [12] 2688 	mov	r0,a
      000859 86 82            [24] 2689 	mov	dpl,@r0
      00085B 08               [12] 2690 	inc	r0
      00085C 86 83            [24] 2691 	mov	dph,@r0
      00085E 08               [12] 2692 	inc	r0
      00085F 86 F0            [24] 2693 	mov	b,@r0
      000861                       2694 00130$:
      000861 C8               [12] 2695 	xch	a,r0
      000862 E5 81            [12] 2696 	mov	a,sp
      000864 24 F0            [12] 2697 	add	a,#0xF0
      000866 F5 81            [12] 2698 	mov	sp,a
      000868 C8               [12] 2699 	xch	a,r0
      000869 02r00r00         [24] 2700 	ljmp	__sdcc_banked_ret
                                   2701 ;------------------------------------------------------------
                                   2702 ;Allocation info for local variables in function 'nbr_table_register'
                                   2703 ;------------------------------------------------------------
                                   2704 ;callback                  Allocated to stack - sp -8
                                   2705 ;table                     Allocated to stack - sp -2
                                   2706 ;------------------------------------------------------------
                                   2707 ;	../../core/net/nbr-table.c:230: nbr_table_register(nbr_table_t *table, nbr_table_callback *callback)
                                   2708 ;	-----------------------------------------
                                   2709 ;	 function nbr_table_register
                                   2710 ;	-----------------------------------------
      00086C                       2711 _nbr_table_register:
      00086C C0 82            [24] 2712 	push	dpl
      00086E C0 83            [24] 2713 	push	dph
      000870 C0 F0            [24] 2714 	push	b
                                   2715 ;	../../core/net/nbr-table.c:232: if(num_tables < MAX_NUM_TABLES) {
      000872 90r00r20         [24] 2716 	mov	dptr,#_num_tables
      000875 E0               [24] 2717 	movx	a,@dptr
      000876 FB               [12] 2718 	mov	r3,a
      000877 A3               [24] 2719 	inc	dptr
      000878 E0               [24] 2720 	movx	a,@dptr
      000879 FC               [12] 2721 	mov	r4,a
      00087A C3               [12] 2722 	clr	c
      00087B EB               [12] 2723 	mov	a,r3
      00087C 94 08            [12] 2724 	subb	a,#0x08
      00087E EC               [12] 2725 	mov	a,r4
      00087F 94 00            [12] 2726 	subb	a,#0x00
      000881 40 03            [24] 2727 	jc	00109$
      000883 02r09r18         [24] 2728 	ljmp	00102$
      000886                       2729 00109$:
                                   2730 ;	../../core/net/nbr-table.c:233: table->index = num_tables++;
      000886 8B 02            [24] 2731 	mov	ar2,r3
      000888 8C 07            [24] 2732 	mov	ar7,r4
      00088A 90r00r20         [24] 2733 	mov	dptr,#_num_tables
      00088D 74 01            [12] 2734 	mov	a,#0x01
      00088F 2B               [12] 2735 	add	a,r3
      000890 F0               [24] 2736 	movx	@dptr,a
      000891 E4               [12] 2737 	clr	a
      000892 3C               [12] 2738 	addc	a,r4
      000893 A3               [24] 2739 	inc	dptr
      000894 F0               [24] 2740 	movx	@dptr,a
      000895 A8 81            [24] 2741 	mov	r0,sp
      000897 18               [12] 2742 	dec	r0
      000898 18               [12] 2743 	dec	r0
      000899 86 82            [24] 2744 	mov	dpl,@r0
      00089B 08               [12] 2745 	inc	r0
      00089C 86 83            [24] 2746 	mov	dph,@r0
      00089E 08               [12] 2747 	inc	r0
      00089F 86 F0            [24] 2748 	mov	b,@r0
      0008A1 EA               [12] 2749 	mov	a,r2
      0008A2 12r00r00         [24] 2750 	lcall	__gptrput
      0008A5 A3               [24] 2751 	inc	dptr
      0008A6 EF               [12] 2752 	mov	a,r7
      0008A7 12r00r00         [24] 2753 	lcall	__gptrput
                                   2754 ;	../../core/net/nbr-table.c:234: table->callback = callback;
      0008AA A8 81            [24] 2755 	mov	r0,sp
      0008AC 18               [12] 2756 	dec	r0
      0008AD 18               [12] 2757 	dec	r0
      0008AE 74 04            [12] 2758 	mov	a,#0x04
      0008B0 26               [12] 2759 	add	a,@r0
      0008B1 FD               [12] 2760 	mov	r5,a
      0008B2 E4               [12] 2761 	clr	a
      0008B3 08               [12] 2762 	inc	r0
      0008B4 36               [12] 2763 	addc	a,@r0
      0008B5 FE               [12] 2764 	mov	r6,a
      0008B6 08               [12] 2765 	inc	r0
      0008B7 86 07            [24] 2766 	mov	ar7,@r0
      0008B9 8D 82            [24] 2767 	mov	dpl,r5
      0008BB 8E 83            [24] 2768 	mov	dph,r6
      0008BD 8F F0            [24] 2769 	mov	b,r7
      0008BF E5 81            [12] 2770 	mov	a,sp
      0008C1 24 F8            [12] 2771 	add	a,#0xf8
      0008C3 F8               [12] 2772 	mov	r0,a
      0008C4 E6               [12] 2773 	mov	a,@r0
      0008C5 12r00r00         [24] 2774 	lcall	__gptrput
      0008C8 A3               [24] 2775 	inc	dptr
      0008C9 08               [12] 2776 	inc	r0
      0008CA E6               [12] 2777 	mov	a,@r0
      0008CB 12r00r00         [24] 2778 	lcall	__gptrput
      0008CE A3               [24] 2779 	inc	dptr
      0008CF 08               [12] 2780 	inc	r0
      0008D0 E6               [12] 2781 	mov	a,@r0
      0008D1 12r00r00         [24] 2782 	lcall	__gptrput
                                   2783 ;	../../core/net/nbr-table.c:235: all_tables[table->index] = table;
      0008D4 A8 81            [24] 2784 	mov	r0,sp
      0008D6 18               [12] 2785 	dec	r0
      0008D7 18               [12] 2786 	dec	r0
      0008D8 86 82            [24] 2787 	mov	dpl,@r0
      0008DA 08               [12] 2788 	inc	r0
      0008DB 86 83            [24] 2789 	mov	dph,@r0
      0008DD 08               [12] 2790 	inc	r0
      0008DE 86 F0            [24] 2791 	mov	b,@r0
      0008E0 12r00r00         [24] 2792 	lcall	__gptrget
      0008E3 FE               [12] 2793 	mov	r6,a
      0008E4 A3               [24] 2794 	inc	dptr
      0008E5 12r00r00         [24] 2795 	lcall	__gptrget
      0008E8 FF               [12] 2796 	mov	r7,a
      0008E9 C0 06            [24] 2797 	push	ar6
      0008EB C0 07            [24] 2798 	push	ar7
      0008ED 90 00 03         [24] 2799 	mov	dptr,#0x0003
      0008F0 12r00r00         [24] 2800 	lcall	__mulint
      0008F3 AE 82            [24] 2801 	mov	r6,dpl
      0008F5 AF 83            [24] 2802 	mov	r7,dph
      0008F7 15 81            [12] 2803 	dec	sp
      0008F9 15 81            [12] 2804 	dec	sp
      0008FB EE               [12] 2805 	mov	a,r6
      0008FC 24r08            [12] 2806 	add	a,#_all_tables
      0008FE F5 82            [12] 2807 	mov	dpl,a
      000900 EF               [12] 2808 	mov	a,r7
      000901 34s00            [12] 2809 	addc	a,#(_all_tables >> 8)
      000903 F5 83            [12] 2810 	mov	dph,a
      000905 A8 81            [24] 2811 	mov	r0,sp
      000907 18               [12] 2812 	dec	r0
      000908 18               [12] 2813 	dec	r0
      000909 E6               [12] 2814 	mov	a,@r0
      00090A F0               [24] 2815 	movx	@dptr,a
      00090B 08               [12] 2816 	inc	r0
      00090C E6               [12] 2817 	mov	a,@r0
      00090D A3               [24] 2818 	inc	dptr
      00090E F0               [24] 2819 	movx	@dptr,a
      00090F 08               [12] 2820 	inc	r0
      000910 E6               [12] 2821 	mov	a,@r0
      000911 A3               [24] 2822 	inc	dptr
      000912 F0               [24] 2823 	movx	@dptr,a
                                   2824 ;	../../core/net/nbr-table.c:236: return 1;
      000913 90 00 01         [24] 2825 	mov	dptr,#0x0001
      000916 80 03            [24] 2826 	sjmp	00104$
      000918                       2827 00102$:
                                   2828 ;	../../core/net/nbr-table.c:239: return 0;
      000918 90 00 00         [24] 2829 	mov	dptr,#0x0000
      00091B                       2830 00104$:
      00091B 15 81            [12] 2831 	dec	sp
      00091D 15 81            [12] 2832 	dec	sp
      00091F 15 81            [12] 2833 	dec	sp
      000921 02r00r00         [24] 2834 	ljmp	__sdcc_banked_ret
                                   2835 ;------------------------------------------------------------
                                   2836 ;Allocation info for local variables in function 'nbr_table_head'
                                   2837 ;------------------------------------------------------------
                                   2838 ;table                     Allocated to registers r5 r6 r7 
                                   2839 ;item                      Allocated to stack - sp -2
                                   2840 ;------------------------------------------------------------
                                   2841 ;	../../core/net/nbr-table.c:245: nbr_table_head(nbr_table_t *table)
                                   2842 ;	-----------------------------------------
                                   2843 ;	 function nbr_table_head
                                   2844 ;	-----------------------------------------
      000924                       2845 _nbr_table_head:
      000924 05 81            [12] 2846 	inc	sp
      000926 05 81            [12] 2847 	inc	sp
      000928 05 81            [12] 2848 	inc	sp
      00092A AD 82            [24] 2849 	mov	r5,dpl
      00092C AE 83            [24] 2850 	mov	r6,dph
      00092E AF F0            [24] 2851 	mov	r7,b
                                   2852 ;	../../core/net/nbr-table.c:248: nbr_table_item_t *item = item_from_key(table, list_head(nbr_table_keys));
      000930 90r00r0D         [24] 2853 	mov	dptr,#_nbr_table_keys
      000933 E0               [24] 2854 	movx	a,@dptr
      000934 FA               [12] 2855 	mov	r2,a
      000935 A3               [24] 2856 	inc	dptr
      000936 E0               [24] 2857 	movx	a,@dptr
      000937 FB               [12] 2858 	mov	r3,a
      000938 A3               [24] 2859 	inc	dptr
      000939 E0               [24] 2860 	movx	a,@dptr
      00093A FC               [12] 2861 	mov	r4,a
      00093B 8A 82            [24] 2862 	mov	dpl,r2
      00093D 8B 83            [24] 2863 	mov	dph,r3
      00093F 8C F0            [24] 2864 	mov	b,r4
      000941 C0 07            [24] 2865 	push	ar7
      000943 C0 06            [24] 2866 	push	ar6
      000945 C0 05            [24] 2867 	push	ar5
      000947 78r00            [12] 2868 	mov	r0,#_list_head
      000949 79s00            [12] 2869 	mov	r1,#(_list_head >> 8)
      00094B 7As00            [12] 2870 	mov	r2,#(_list_head >> 16)
      00094D 12r00r00         [24] 2871 	lcall	__sdcc_banked_call
      000950 AA 82            [24] 2872 	mov	r2,dpl
      000952 AB 83            [24] 2873 	mov	r3,dph
      000954 AC F0            [24] 2874 	mov	r4,b
      000956 D0 05            [24] 2875 	pop	ar5
      000958 D0 06            [24] 2876 	pop	ar6
      00095A D0 07            [24] 2877 	pop	ar7
      00095C C0 07            [24] 2878 	push	ar7
      00095E C0 06            [24] 2879 	push	ar6
      000960 C0 05            [24] 2880 	push	ar5
      000962 C0 02            [24] 2881 	push	ar2
      000964 C0 03            [24] 2882 	push	ar3
      000966 C0 04            [24] 2883 	push	ar4
      000968 8D 82            [24] 2884 	mov	dpl,r5
      00096A 8E 83            [24] 2885 	mov	dph,r6
      00096C 8F F0            [24] 2886 	mov	b,r7
      00096E 78rB6            [12] 2887 	mov	r0,#_item_from_key
      000970 79s01            [12] 2888 	mov	r1,#(_item_from_key >> 8)
      000972 7As00            [12] 2889 	mov	r2,#(_item_from_key >> 16)
      000974 12r00r00         [24] 2890 	lcall	__sdcc_banked_call
      000977 AA 82            [24] 2891 	mov	r2,dpl
      000979 AB 83            [24] 2892 	mov	r3,dph
      00097B AC F0            [24] 2893 	mov	r4,b
      00097D 15 81            [12] 2894 	dec	sp
      00097F 15 81            [12] 2895 	dec	sp
      000981 15 81            [12] 2896 	dec	sp
      000983 D0 05            [24] 2897 	pop	ar5
      000985 D0 06            [24] 2898 	pop	ar6
      000987 D0 07            [24] 2899 	pop	ar7
      000989 A8 81            [24] 2900 	mov	r0,sp
      00098B 18               [12] 2901 	dec	r0
      00098C 18               [12] 2902 	dec	r0
      00098D A6 02            [24] 2903 	mov	@r0,ar2
      00098F 08               [12] 2904 	inc	r0
      000990 A6 03            [24] 2905 	mov	@r0,ar3
      000992 08               [12] 2906 	inc	r0
      000993 A6 04            [24] 2907 	mov	@r0,ar4
                                   2908 ;	../../core/net/nbr-table.c:250: if(nbr_get_bit(used_map, table, item)) {
      000995 C0 07            [24] 2909 	push	ar7
      000997 C0 06            [24] 2910 	push	ar6
      000999 C0 05            [24] 2911 	push	ar5
      00099B E5 81            [12] 2912 	mov	a,sp
      00099D 24 FB            [12] 2913 	add	a,#0xfb
      00099F F8               [12] 2914 	mov	r0,a
      0009A0 E6               [12] 2915 	mov	a,@r0
      0009A1 C0 E0            [24] 2916 	push	acc
      0009A3 08               [12] 2917 	inc	r0
      0009A4 E6               [12] 2918 	mov	a,@r0
      0009A5 C0 E0            [24] 2919 	push	acc
      0009A7 08               [12] 2920 	inc	r0
      0009A8 E6               [12] 2921 	mov	a,@r0
      0009A9 C0 E0            [24] 2922 	push	acc
      0009AB C0 05            [24] 2923 	push	ar5
      0009AD C0 06            [24] 2924 	push	ar6
      0009AF C0 07            [24] 2925 	push	ar7
      0009B1 90r00r00         [24] 2926 	mov	dptr,#_used_map
      0009B4 75 F0 00         [24] 2927 	mov	b,#0x00
      0009B7 78r1C            [12] 2928 	mov	r0,#_nbr_get_bit
      0009B9 79s03            [12] 2929 	mov	r1,#(_nbr_get_bit >> 8)
      0009BB 7As00            [12] 2930 	mov	r2,#(_nbr_get_bit >> 16)
      0009BD 12r00r00         [24] 2931 	lcall	__sdcc_banked_call
      0009C0 AB 82            [24] 2932 	mov	r3,dpl
      0009C2 AC 83            [24] 2933 	mov	r4,dph
      0009C4 E5 81            [12] 2934 	mov	a,sp
      0009C6 24 FA            [12] 2935 	add	a,#0xfa
      0009C8 F5 81            [12] 2936 	mov	sp,a
      0009CA D0 05            [24] 2937 	pop	ar5
      0009CC D0 06            [24] 2938 	pop	ar6
      0009CE D0 07            [24] 2939 	pop	ar7
      0009D0 EB               [12] 2940 	mov	a,r3
      0009D1 4C               [12] 2941 	orl	a,r4
      0009D2 60 0E            [24] 2942 	jz	00102$
                                   2943 ;	../../core/net/nbr-table.c:251: return item;
      0009D4 A8 81            [24] 2944 	mov	r0,sp
      0009D6 18               [12] 2945 	dec	r0
      0009D7 18               [12] 2946 	dec	r0
      0009D8 86 82            [24] 2947 	mov	dpl,@r0
      0009DA 08               [12] 2948 	inc	r0
      0009DB 86 83            [24] 2949 	mov	dph,@r0
      0009DD 08               [12] 2950 	inc	r0
      0009DE 86 F0            [24] 2951 	mov	b,@r0
      0009E0 80 30            [24] 2952 	sjmp	00104$
      0009E2                       2953 00102$:
                                   2954 ;	../../core/net/nbr-table.c:253: return nbr_table_next(table, item);
      0009E2 A8 81            [24] 2955 	mov	r0,sp
      0009E4 18               [12] 2956 	dec	r0
      0009E5 18               [12] 2957 	dec	r0
      0009E6 E6               [12] 2958 	mov	a,@r0
      0009E7 C0 E0            [24] 2959 	push	acc
      0009E9 08               [12] 2960 	inc	r0
      0009EA E6               [12] 2961 	mov	a,@r0
      0009EB C0 E0            [24] 2962 	push	acc
      0009ED 08               [12] 2963 	inc	r0
      0009EE E6               [12] 2964 	mov	a,@r0
      0009EF C0 E0            [24] 2965 	push	acc
      0009F1 8D 82            [24] 2966 	mov	dpl,r5
      0009F3 8E 83            [24] 2967 	mov	dph,r6
      0009F5 8F F0            [24] 2968 	mov	b,r7
      0009F7 78r1B            [12] 2969 	mov	r0,#_nbr_table_next
      0009F9 79s0A            [12] 2970 	mov	r1,#(_nbr_table_next >> 8)
      0009FB 7As00            [12] 2971 	mov	r2,#(_nbr_table_next >> 16)
      0009FD 12r00r00         [24] 2972 	lcall	__sdcc_banked_call
      000A00 AD 82            [24] 2973 	mov	r5,dpl
      000A02 AE 83            [24] 2974 	mov	r6,dph
      000A04 AF F0            [24] 2975 	mov	r7,b
      000A06 15 81            [12] 2976 	dec	sp
      000A08 15 81            [12] 2977 	dec	sp
      000A0A 15 81            [12] 2978 	dec	sp
      000A0C 8D 82            [24] 2979 	mov	dpl,r5
      000A0E 8E 83            [24] 2980 	mov	dph,r6
      000A10 8F F0            [24] 2981 	mov	b,r7
      000A12                       2982 00104$:
      000A12 15 81            [12] 2983 	dec	sp
      000A14 15 81            [12] 2984 	dec	sp
      000A16 15 81            [12] 2985 	dec	sp
      000A18 02r00r00         [24] 2986 	ljmp	__sdcc_banked_ret
                                   2987 ;------------------------------------------------------------
                                   2988 ;Allocation info for local variables in function 'nbr_table_next'
                                   2989 ;------------------------------------------------------------
                                   2990 ;item                      Allocated to stack - sp -8
                                   2991 ;table                     Allocated to stack - sp -2
                                   2992 ;key                       Allocated to registers r2 r3 r4 
                                   2993 ;------------------------------------------------------------
                                   2994 ;	../../core/net/nbr-table.c:259: nbr_table_next(nbr_table_t *table, nbr_table_item_t *item)
                                   2995 ;	-----------------------------------------
                                   2996 ;	 function nbr_table_next
                                   2997 ;	-----------------------------------------
      000A1B                       2998 _nbr_table_next:
      000A1B C0 82            [24] 2999 	push	dpl
      000A1D C0 83            [24] 3000 	push	dph
      000A1F C0 F0            [24] 3001 	push	b
                                   3002 ;	../../core/net/nbr-table.c:261: do {
      000A21                       3003 00102$:
                                   3004 ;	../../core/net/nbr-table.c:262: void *key = key_from_item(table, item);
      000A21 E5 81            [12] 3005 	mov	a,sp
      000A23 24 F8            [12] 3006 	add	a,#0xf8
      000A25 F8               [12] 3007 	mov	r0,a
      000A26 E6               [12] 3008 	mov	a,@r0
      000A27 C0 E0            [24] 3009 	push	acc
      000A29 08               [12] 3010 	inc	r0
      000A2A E6               [12] 3011 	mov	a,@r0
      000A2B C0 E0            [24] 3012 	push	acc
      000A2D 08               [12] 3013 	inc	r0
      000A2E E6               [12] 3014 	mov	a,@r0
      000A2F C0 E0            [24] 3015 	push	acc
      000A31 E5 81            [12] 3016 	mov	a,sp
      000A33 24 FB            [12] 3017 	add	a,#0xfb
      000A35 F8               [12] 3018 	mov	r0,a
      000A36 86 82            [24] 3019 	mov	dpl,@r0
      000A38 08               [12] 3020 	inc	r0
      000A39 86 83            [24] 3021 	mov	dph,@r0
      000A3B 08               [12] 3022 	inc	r0
      000A3C 86 F0            [24] 3023 	mov	b,@r0
      000A3E 78r08            [12] 3024 	mov	r0,#_key_from_item
      000A40 79s02            [12] 3025 	mov	r1,#(_key_from_item >> 8)
      000A42 7As00            [12] 3026 	mov	r2,#(_key_from_item >> 16)
      000A44 12r00r00         [24] 3027 	lcall	__sdcc_banked_call
      000A47 AA 82            [24] 3028 	mov	r2,dpl
      000A49 AB 83            [24] 3029 	mov	r3,dph
      000A4B AC F0            [24] 3030 	mov	r4,b
      000A4D 15 81            [12] 3031 	dec	sp
      000A4F 15 81            [12] 3032 	dec	sp
      000A51 15 81            [12] 3033 	dec	sp
                                   3034 ;	../../core/net/nbr-table.c:263: key = list_item_next(key);
      000A53 8A 82            [24] 3035 	mov	dpl,r2
      000A55 8B 83            [24] 3036 	mov	dph,r3
      000A57 8C F0            [24] 3037 	mov	b,r4
      000A59 78r00            [12] 3038 	mov	r0,#_list_item_next
      000A5B 79s00            [12] 3039 	mov	r1,#(_list_item_next >> 8)
      000A5D 7As00            [12] 3040 	mov	r2,#(_list_item_next >> 16)
      000A5F 12r00r00         [24] 3041 	lcall	__sdcc_banked_call
      000A62 AD 82            [24] 3042 	mov	r5,dpl
      000A64 AE 83            [24] 3043 	mov	r6,dph
      000A66 AF F0            [24] 3044 	mov	r7,b
      000A68 8D 02            [24] 3045 	mov	ar2,r5
      000A6A 8E 03            [24] 3046 	mov	ar3,r6
      000A6C 8F 04            [24] 3047 	mov	ar4,r7
                                   3048 ;	../../core/net/nbr-table.c:265: item = item_from_key(table, key);
      000A6E C0 02            [24] 3049 	push	ar2
      000A70 C0 03            [24] 3050 	push	ar3
      000A72 C0 04            [24] 3051 	push	ar4
      000A74 E5 81            [12] 3052 	mov	a,sp
      000A76 24 FB            [12] 3053 	add	a,#0xfb
      000A78 F8               [12] 3054 	mov	r0,a
      000A79 86 82            [24] 3055 	mov	dpl,@r0
      000A7B 08               [12] 3056 	inc	r0
      000A7C 86 83            [24] 3057 	mov	dph,@r0
      000A7E 08               [12] 3058 	inc	r0
      000A7F 86 F0            [24] 3059 	mov	b,@r0
      000A81 78rB6            [12] 3060 	mov	r0,#_item_from_key
      000A83 79s01            [12] 3061 	mov	r1,#(_item_from_key >> 8)
      000A85 7As00            [12] 3062 	mov	r2,#(_item_from_key >> 16)
      000A87 12r00r00         [24] 3063 	lcall	__sdcc_banked_call
      000A8A AD 82            [24] 3064 	mov	r5,dpl
      000A8C AE 83            [24] 3065 	mov	r6,dph
      000A8E AF F0            [24] 3066 	mov	r7,b
      000A90 15 81            [12] 3067 	dec	sp
      000A92 15 81            [12] 3068 	dec	sp
      000A94 15 81            [12] 3069 	dec	sp
      000A96 E5 81            [12] 3070 	mov	a,sp
      000A98 24 F8            [12] 3071 	add	a,#0xf8
      000A9A F8               [12] 3072 	mov	r0,a
      000A9B A6 05            [24] 3073 	mov	@r0,ar5
      000A9D 08               [12] 3074 	inc	r0
      000A9E A6 06            [24] 3075 	mov	@r0,ar6
      000AA0 08               [12] 3076 	inc	r0
      000AA1 A6 07            [24] 3077 	mov	@r0,ar7
                                   3078 ;	../../core/net/nbr-table.c:266: } while(item && !nbr_get_bit(used_map, table, item));
      000AA3 ED               [12] 3079 	mov	a,r5
      000AA4 4E               [12] 3080 	orl	a,r6
      000AA5 60 42            [24] 3081 	jz	00104$
      000AA7 C0 07            [24] 3082 	push	ar7
      000AA9 C0 06            [24] 3083 	push	ar6
      000AAB C0 05            [24] 3084 	push	ar5
      000AAD C0 05            [24] 3085 	push	ar5
      000AAF C0 06            [24] 3086 	push	ar6
      000AB1 C0 07            [24] 3087 	push	ar7
      000AB3 E5 81            [12] 3088 	mov	a,sp
      000AB5 24 F8            [12] 3089 	add	a,#0xf8
      000AB7 F8               [12] 3090 	mov	r0,a
      000AB8 E6               [12] 3091 	mov	a,@r0
      000AB9 C0 E0            [24] 3092 	push	acc
      000ABB 08               [12] 3093 	inc	r0
      000ABC E6               [12] 3094 	mov	a,@r0
      000ABD C0 E0            [24] 3095 	push	acc
      000ABF 08               [12] 3096 	inc	r0
      000AC0 E6               [12] 3097 	mov	a,@r0
      000AC1 C0 E0            [24] 3098 	push	acc
      000AC3 90r00r00         [24] 3099 	mov	dptr,#_used_map
      000AC6 75 F0 00         [24] 3100 	mov	b,#0x00
      000AC9 78r1C            [12] 3101 	mov	r0,#_nbr_get_bit
      000ACB 79s03            [12] 3102 	mov	r1,#(_nbr_get_bit >> 8)
      000ACD 7As00            [12] 3103 	mov	r2,#(_nbr_get_bit >> 16)
      000ACF 12r00r00         [24] 3104 	lcall	__sdcc_banked_call
      000AD2 AB 82            [24] 3105 	mov	r3,dpl
      000AD4 AC 83            [24] 3106 	mov	r4,dph
      000AD6 E5 81            [12] 3107 	mov	a,sp
      000AD8 24 FA            [12] 3108 	add	a,#0xfa
      000ADA F5 81            [12] 3109 	mov	sp,a
      000ADC D0 05            [24] 3110 	pop	ar5
      000ADE D0 06            [24] 3111 	pop	ar6
      000AE0 D0 07            [24] 3112 	pop	ar7
      000AE2 EB               [12] 3113 	mov	a,r3
      000AE3 4C               [12] 3114 	orl	a,r4
      000AE4 70 03            [24] 3115 	jnz	00114$
      000AE6 02r0Ar21         [24] 3116 	ljmp	00102$
      000AE9                       3117 00114$:
      000AE9                       3118 00104$:
                                   3119 ;	../../core/net/nbr-table.c:267: return item;
      000AE9 8D 82            [24] 3120 	mov	dpl,r5
      000AEB 8E 83            [24] 3121 	mov	dph,r6
      000AED 8F F0            [24] 3122 	mov	b,r7
      000AEF 15 81            [12] 3123 	dec	sp
      000AF1 15 81            [12] 3124 	dec	sp
      000AF3 15 81            [12] 3125 	dec	sp
      000AF5 02r00r00         [24] 3126 	ljmp	__sdcc_banked_ret
                                   3127 ;------------------------------------------------------------
                                   3128 ;Allocation info for local variables in function 'nbr_table_add_lladdr'
                                   3129 ;------------------------------------------------------------
                                   3130 ;lladdr                    Allocated to stack - sp -11
                                   3131 ;table                     Allocated to stack - sp -5
                                   3132 ;index                     Allocated to registers r2 r4 
                                   3133 ;item                      Allocated to registers r5 r6 r7 
                                   3134 ;key                       Allocated to stack - sp -2
                                   3135 ;sloc0                     Allocated to stack - sp +6
                                   3136 ;------------------------------------------------------------
                                   3137 ;	../../core/net/nbr-table.c:272: nbr_table_add_lladdr(nbr_table_t *table, const linkaddr_t *lladdr)
                                   3138 ;	-----------------------------------------
                                   3139 ;	 function nbr_table_add_lladdr
                                   3140 ;	-----------------------------------------
      000AF8                       3141 _nbr_table_add_lladdr:
      000AF8 C0 82            [24] 3142 	push	dpl
      000AFA C0 83            [24] 3143 	push	dph
      000AFC C0 F0            [24] 3144 	push	b
      000AFE 05 81            [12] 3145 	inc	sp
      000B00 05 81            [12] 3146 	inc	sp
      000B02 05 81            [12] 3147 	inc	sp
                                   3148 ;	../../core/net/nbr-table.c:280: if(lladdr == NULL) {
      000B04 E5 81            [12] 3149 	mov	a,sp
      000B06 24 F5            [12] 3150 	add	a,#0xf5
      000B08 F8               [12] 3151 	mov	r0,a
      000B09 E6               [12] 3152 	mov	a,@r0
      000B0A 08               [12] 3153 	inc	r0
      000B0B 46               [12] 3154 	orl	a,@r0
      000B0C 70 0D            [24] 3155 	jnz	00102$
                                   3156 ;	../../core/net/nbr-table.c:281: lladdr = &linkaddr_null;
      000B0E E5 81            [12] 3157 	mov	a,sp
      000B10 24 F5            [12] 3158 	add	a,#0xf5
      000B12 F8               [12] 3159 	mov	r0,a
      000B13 76r00            [12] 3160 	mov	@r0,#_linkaddr_null
      000B15 08               [12] 3161 	inc	r0
      000B16 76s00            [12] 3162 	mov	@r0,#(_linkaddr_null >> 8)
      000B18 08               [12] 3163 	inc	r0
      000B19 76 80            [12] 3164 	mov	@r0,#0x80
      000B1B                       3165 00102$:
                                   3166 ;	../../core/net/nbr-table.c:284: if((index = index_from_lladdr(lladdr)) == -1) {
      000B1B E5 81            [12] 3167 	mov	a,sp
      000B1D 24 F5            [12] 3168 	add	a,#0xf5
      000B1F F8               [12] 3169 	mov	r0,a
      000B20 86 82            [24] 3170 	mov	dpl,@r0
      000B22 08               [12] 3171 	inc	r0
      000B23 86 83            [24] 3172 	mov	dph,@r0
      000B25 08               [12] 3173 	inc	r0
      000B26 86 F0            [24] 3174 	mov	b,@r0
      000B28 78r4D            [12] 3175 	mov	r0,#_index_from_lladdr
      000B2A 79s02            [12] 3176 	mov	r1,#(_index_from_lladdr >> 8)
      000B2C 7As00            [12] 3177 	mov	r2,#(_index_from_lladdr >> 16)
      000B2E 12r00r00         [24] 3178 	lcall	__sdcc_banked_call
      000B31 AF 82            [24] 3179 	mov	r7,dpl
      000B33 AE 83            [24] 3180 	mov	r6,dph
      000B35 8F 02            [24] 3181 	mov	ar2,r7
      000B37 8E 04            [24] 3182 	mov	ar4,r6
      000B39 BF FF 05         [24] 3183 	cjne	r7,#0xFF,00119$
      000B3C BE FF 02         [24] 3184 	cjne	r6,#0xFF,00119$
      000B3F 80 03            [24] 3185 	sjmp	00120$
      000B41                       3186 00119$:
      000B41 02r0BrFB         [24] 3187 	ljmp	00106$
      000B44                       3188 00120$:
                                   3189 ;	../../core/net/nbr-table.c:286: key = nbr_table_allocate();
      000B44 78r05            [12] 3190 	mov	r0,#_nbr_table_allocate
      000B46 79s05            [12] 3191 	mov	r1,#(_nbr_table_allocate >> 8)
      000B48 7As00            [12] 3192 	mov	r2,#(_nbr_table_allocate >> 16)
      000B4A 12r00r00         [24] 3193 	lcall	__sdcc_banked_call
      000B4D AF 82            [24] 3194 	mov	r7,dpl
      000B4F AE 83            [24] 3195 	mov	r6,dph
      000B51 AD F0            [24] 3196 	mov	r5,b
      000B53 A8 81            [24] 3197 	mov	r0,sp
      000B55 18               [12] 3198 	dec	r0
      000B56 18               [12] 3199 	dec	r0
      000B57 A6 07            [24] 3200 	mov	@r0,ar7
      000B59 08               [12] 3201 	inc	r0
      000B5A A6 06            [24] 3202 	mov	@r0,ar6
      000B5C 08               [12] 3203 	inc	r0
      000B5D A6 05            [24] 3204 	mov	@r0,ar5
                                   3205 ;	../../core/net/nbr-table.c:289: if(key == NULL) {
      000B5F A8 81            [24] 3206 	mov	r0,sp
      000B61 18               [12] 3207 	dec	r0
      000B62 18               [12] 3208 	dec	r0
      000B63 E6               [12] 3209 	mov	a,@r0
      000B64 08               [12] 3210 	inc	r0
      000B65 46               [12] 3211 	orl	a,@r0
                                   3212 ;	../../core/net/nbr-table.c:290: return NULL;
      000B66 70 08            [24] 3213 	jnz	00104$
      000B68 90 00 00         [24] 3214 	mov	dptr,#0x0000
      000B6B F5 F0            [12] 3215 	mov	b,a
      000B6D 02r0CrAA         [24] 3216 	ljmp	00107$
      000B70                       3217 00104$:
                                   3218 ;	../../core/net/nbr-table.c:294: list_add(nbr_table_keys, key);
      000B70 A8 81            [24] 3219 	mov	r0,sp
      000B72 18               [12] 3220 	dec	r0
      000B73 18               [12] 3221 	dec	r0
      000B74 86 05            [24] 3222 	mov	ar5,@r0
      000B76 08               [12] 3223 	inc	r0
      000B77 86 04            [24] 3224 	mov	ar4,@r0
      000B79 08               [12] 3225 	inc	r0
      000B7A 86 02            [24] 3226 	mov	ar2,@r0
      000B7C 90r00r0D         [24] 3227 	mov	dptr,#_nbr_table_keys
      000B7F E0               [24] 3228 	movx	a,@dptr
      000B80 FB               [12] 3229 	mov	r3,a
      000B81 A3               [24] 3230 	inc	dptr
      000B82 E0               [24] 3231 	movx	a,@dptr
      000B83 FE               [12] 3232 	mov	r6,a
      000B84 A3               [24] 3233 	inc	dptr
      000B85 E0               [24] 3234 	movx	a,@dptr
      000B86 FF               [12] 3235 	mov	r7,a
      000B87 C0 05            [24] 3236 	push	ar5
      000B89 C0 04            [24] 3237 	push	ar4
      000B8B C0 02            [24] 3238 	push	ar2
      000B8D 8B 82            [24] 3239 	mov	dpl,r3
      000B8F 8E 83            [24] 3240 	mov	dph,r6
      000B91 8F F0            [24] 3241 	mov	b,r7
      000B93 78r00            [12] 3242 	mov	r0,#_list_add
      000B95 79s00            [12] 3243 	mov	r1,#(_list_add >> 8)
      000B97 7As00            [12] 3244 	mov	r2,#(_list_add >> 16)
      000B99 12r00r00         [24] 3245 	lcall	__sdcc_banked_call
      000B9C 15 81            [12] 3246 	dec	sp
      000B9E 15 81            [12] 3247 	dec	sp
      000BA0 15 81            [12] 3248 	dec	sp
                                   3249 ;	../../core/net/nbr-table.c:297: index = index_from_key(key);
      000BA2 A8 81            [24] 3250 	mov	r0,sp
      000BA4 18               [12] 3251 	dec	r0
      000BA5 18               [12] 3252 	dec	r0
      000BA6 86 82            [24] 3253 	mov	dpl,@r0
      000BA8 08               [12] 3254 	inc	r0
      000BA9 86 83            [24] 3255 	mov	dph,@r0
      000BAB 08               [12] 3256 	inc	r0
      000BAC 86 F0            [24] 3257 	mov	b,@r0
      000BAE 78rE5            [12] 3258 	mov	r0,#_index_from_key
      000BB0 79s00            [12] 3259 	mov	r1,#(_index_from_key >> 8)
      000BB2 7As00            [12] 3260 	mov	r2,#(_index_from_key >> 16)
      000BB4 12r00r00         [24] 3261 	lcall	__sdcc_banked_call
      000BB7 AE 82            [24] 3262 	mov	r6,dpl
      000BB9 AF 83            [24] 3263 	mov	r7,dph
      000BBB 8E 02            [24] 3264 	mov	ar2,r6
      000BBD 8F 04            [24] 3265 	mov	ar4,r7
                                   3266 ;	../../core/net/nbr-table.c:300: linkaddr_copy(&key->lladdr, lladdr);
      000BBF A8 81            [24] 3267 	mov	r0,sp
      000BC1 18               [12] 3268 	dec	r0
      000BC2 18               [12] 3269 	dec	r0
      000BC3 74 03            [12] 3270 	mov	a,#0x03
      000BC5 26               [12] 3271 	add	a,@r0
      000BC6 FD               [12] 3272 	mov	r5,a
      000BC7 E4               [12] 3273 	clr	a
      000BC8 08               [12] 3274 	inc	r0
      000BC9 36               [12] 3275 	addc	a,@r0
      000BCA FE               [12] 3276 	mov	r6,a
      000BCB 08               [12] 3277 	inc	r0
      000BCC 86 07            [24] 3278 	mov	ar7,@r0
      000BCE C0 04            [24] 3279 	push	ar4
      000BD0 C0 02            [24] 3280 	push	ar2
      000BD2 E5 81            [12] 3281 	mov	a,sp
      000BD4 24 F3            [12] 3282 	add	a,#0xf3
      000BD6 F8               [12] 3283 	mov	r0,a
      000BD7 E6               [12] 3284 	mov	a,@r0
      000BD8 C0 E0            [24] 3285 	push	acc
      000BDA 08               [12] 3286 	inc	r0
      000BDB E6               [12] 3287 	mov	a,@r0
      000BDC C0 E0            [24] 3288 	push	acc
      000BDE 08               [12] 3289 	inc	r0
      000BDF E6               [12] 3290 	mov	a,@r0
      000BE0 C0 E0            [24] 3291 	push	acc
      000BE2 8D 82            [24] 3292 	mov	dpl,r5
      000BE4 8E 83            [24] 3293 	mov	dph,r6
      000BE6 8F F0            [24] 3294 	mov	b,r7
      000BE8 78r00            [12] 3295 	mov	r0,#_linkaddr_copy
      000BEA 79s00            [12] 3296 	mov	r1,#(_linkaddr_copy >> 8)
      000BEC 7As00            [12] 3297 	mov	r2,#(_linkaddr_copy >> 16)
      000BEE 12r00r00         [24] 3298 	lcall	__sdcc_banked_call
      000BF1 15 81            [12] 3299 	dec	sp
      000BF3 15 81            [12] 3300 	dec	sp
      000BF5 15 81            [12] 3301 	dec	sp
      000BF7 D0 02            [24] 3302 	pop	ar2
      000BF9 D0 04            [24] 3303 	pop	ar4
      000BFB                       3304 00106$:
                                   3305 ;	../../core/net/nbr-table.c:304: item = item_from_index(table, index);
      000BFB C0 02            [24] 3306 	push	ar2
      000BFD C0 04            [24] 3307 	push	ar4
      000BFF E5 81            [12] 3308 	mov	a,sp
      000C01 24 F9            [12] 3309 	add	a,#0xf9
      000C03 F8               [12] 3310 	mov	r0,a
      000C04 86 82            [24] 3311 	mov	dpl,@r0
      000C06 08               [12] 3312 	inc	r0
      000C07 86 83            [24] 3313 	mov	dph,@r0
      000C09 08               [12] 3314 	inc	r0
      000C0A 86 F0            [24] 3315 	mov	b,@r0
      000C0C 78r50            [12] 3316 	mov	r0,#_item_from_index
      000C0E 79s00            [12] 3317 	mov	r1,#(_item_from_index >> 8)
      000C10 7As00            [12] 3318 	mov	r2,#(_item_from_index >> 16)
      000C12 12r00r00         [24] 3319 	lcall	__sdcc_banked_call
      000C15 AD 82            [24] 3320 	mov	r5,dpl
      000C17 AE 83            [24] 3321 	mov	r6,dph
      000C19 AF F0            [24] 3322 	mov	r7,b
      000C1B 15 81            [12] 3323 	dec	sp
      000C1D 15 81            [12] 3324 	dec	sp
                                   3325 ;	../../core/net/nbr-table.c:307: memset(item, 0, table->item_size);
      000C1F E5 81            [12] 3326 	mov	a,sp
      000C21 24 FB            [12] 3327 	add	a,#0xfb
      000C23 F8               [12] 3328 	mov	r0,a
      000C24 74 02            [12] 3329 	mov	a,#0x02
      000C26 26               [12] 3330 	add	a,@r0
      000C27 FA               [12] 3331 	mov	r2,a
      000C28 E4               [12] 3332 	clr	a
      000C29 08               [12] 3333 	inc	r0
      000C2A 36               [12] 3334 	addc	a,@r0
      000C2B FB               [12] 3335 	mov	r3,a
      000C2C 08               [12] 3336 	inc	r0
      000C2D 86 04            [24] 3337 	mov	ar4,@r0
      000C2F 8A 82            [24] 3338 	mov	dpl,r2
      000C31 8B 83            [24] 3339 	mov	dph,r3
      000C33 8C F0            [24] 3340 	mov	b,r4
      000C35 12r00r00         [24] 3341 	lcall	__gptrget
      000C38 FA               [12] 3342 	mov	r2,a
      000C39 A3               [24] 3343 	inc	dptr
      000C3A 12r00r00         [24] 3344 	lcall	__gptrget
      000C3D FB               [12] 3345 	mov	r3,a
      000C3E C0 07            [24] 3346 	push	ar7
      000C40 C0 06            [24] 3347 	push	ar6
      000C42 C0 05            [24] 3348 	push	ar5
      000C44 C0 02            [24] 3349 	push	ar2
      000C46 C0 03            [24] 3350 	push	ar3
      000C48 E4               [12] 3351 	clr	a
      000C49 C0 E0            [24] 3352 	push	acc
      000C4B 8D 82            [24] 3353 	mov	dpl,r5
      000C4D 8E 83            [24] 3354 	mov	dph,r6
      000C4F 8F F0            [24] 3355 	mov	b,r7
      000C51 78r00            [12] 3356 	mov	r0,#_memset
      000C53 79s00            [12] 3357 	mov	r1,#(_memset >> 8)
      000C55 7As00            [12] 3358 	mov	r2,#(_memset >> 16)
      000C57 12r00r00         [24] 3359 	lcall	__sdcc_banked_call
      000C5A 15 81            [12] 3360 	dec	sp
      000C5C 15 81            [12] 3361 	dec	sp
      000C5E 15 81            [12] 3362 	dec	sp
      000C60 D0 05            [24] 3363 	pop	ar5
      000C62 D0 06            [24] 3364 	pop	ar6
      000C64 D0 07            [24] 3365 	pop	ar7
                                   3366 ;	../../core/net/nbr-table.c:308: nbr_set_bit(used_map, table, item, 1);
      000C66 C0 07            [24] 3367 	push	ar7
      000C68 C0 06            [24] 3368 	push	ar6
      000C6A C0 05            [24] 3369 	push	ar5
      000C6C 74 01            [12] 3370 	mov	a,#0x01
      000C6E C0 E0            [24] 3371 	push	acc
      000C70 E4               [12] 3372 	clr	a
      000C71 C0 E0            [24] 3373 	push	acc
      000C73 C0 05            [24] 3374 	push	ar5
      000C75 C0 06            [24] 3375 	push	ar6
      000C77 C0 07            [24] 3376 	push	ar7
      000C79 E5 81            [12] 3377 	mov	a,sp
      000C7B 24 F3            [12] 3378 	add	a,#0xf3
      000C7D F8               [12] 3379 	mov	r0,a
      000C7E E6               [12] 3380 	mov	a,@r0
      000C7F C0 E0            [24] 3381 	push	acc
      000C81 08               [12] 3382 	inc	r0
      000C82 E6               [12] 3383 	mov	a,@r0
      000C83 C0 E0            [24] 3384 	push	acc
      000C85 08               [12] 3385 	inc	r0
      000C86 E6               [12] 3386 	mov	a,@r0
      000C87 C0 E0            [24] 3387 	push	acc
      000C89 90r00r00         [24] 3388 	mov	dptr,#_used_map
      000C8C 75 F0 00         [24] 3389 	mov	b,#0x00
      000C8F 78rD5            [12] 3390 	mov	r0,#_nbr_set_bit
      000C91 79s03            [12] 3391 	mov	r1,#(_nbr_set_bit >> 8)
      000C93 7As00            [12] 3392 	mov	r2,#(_nbr_set_bit >> 16)
      000C95 12r00r00         [24] 3393 	lcall	__sdcc_banked_call
      000C98 E5 81            [12] 3394 	mov	a,sp
      000C9A 24 F8            [12] 3395 	add	a,#0xf8
      000C9C F5 81            [12] 3396 	mov	sp,a
      000C9E D0 05            [24] 3397 	pop	ar5
      000CA0 D0 06            [24] 3398 	pop	ar6
      000CA2 D0 07            [24] 3399 	pop	ar7
                                   3400 ;	../../core/net/nbr-table.c:310: return item;
      000CA4 8D 82            [24] 3401 	mov	dpl,r5
      000CA6 8E 83            [24] 3402 	mov	dph,r6
      000CA8 8F F0            [24] 3403 	mov	b,r7
      000CAA                       3404 00107$:
      000CAA E5 81            [12] 3405 	mov	a,sp
      000CAC 24 FA            [12] 3406 	add	a,#0xFA
      000CAE F5 81            [12] 3407 	mov	sp,a
      000CB0 02r00r00         [24] 3408 	ljmp	__sdcc_banked_ret
                                   3409 ;------------------------------------------------------------
                                   3410 ;Allocation info for local variables in function 'nbr_table_get_from_lladdr'
                                   3411 ;------------------------------------------------------------
                                   3412 ;lladdr                    Allocated to stack - sp -5
                                   3413 ;table                     Allocated to registers r5 r6 r7 
                                   3414 ;item                      Allocated to registers r2 r3 r4 
                                   3415 ;------------------------------------------------------------
                                   3416 ;	../../core/net/nbr-table.c:315: nbr_table_get_from_lladdr(nbr_table_t *table, const linkaddr_t *lladdr)
                                   3417 ;	-----------------------------------------
                                   3418 ;	 function nbr_table_get_from_lladdr
                                   3419 ;	-----------------------------------------
      000CB3                       3420 _nbr_table_get_from_lladdr:
      000CB3 AD 82            [24] 3421 	mov	r5,dpl
      000CB5 AE 83            [24] 3422 	mov	r6,dph
      000CB7 AF F0            [24] 3423 	mov	r7,b
                                   3424 ;	../../core/net/nbr-table.c:317: void *item = item_from_index(table, index_from_lladdr(lladdr));
      000CB9 E5 81            [12] 3425 	mov	a,sp
      000CBB 24 FB            [12] 3426 	add	a,#0xfb
      000CBD F8               [12] 3427 	mov	r0,a
      000CBE 86 82            [24] 3428 	mov	dpl,@r0
      000CC0 08               [12] 3429 	inc	r0
      000CC1 86 83            [24] 3430 	mov	dph,@r0
      000CC3 08               [12] 3431 	inc	r0
      000CC4 86 F0            [24] 3432 	mov	b,@r0
      000CC6 C0 07            [24] 3433 	push	ar7
      000CC8 C0 06            [24] 3434 	push	ar6
      000CCA C0 05            [24] 3435 	push	ar5
      000CCC 78r4D            [12] 3436 	mov	r0,#_index_from_lladdr
      000CCE 79s02            [12] 3437 	mov	r1,#(_index_from_lladdr >> 8)
      000CD0 7As00            [12] 3438 	mov	r2,#(_index_from_lladdr >> 16)
      000CD2 12r00r00         [24] 3439 	lcall	__sdcc_banked_call
      000CD5 AB 82            [24] 3440 	mov	r3,dpl
      000CD7 AC 83            [24] 3441 	mov	r4,dph
      000CD9 D0 05            [24] 3442 	pop	ar5
      000CDB D0 06            [24] 3443 	pop	ar6
      000CDD D0 07            [24] 3444 	pop	ar7
      000CDF C0 07            [24] 3445 	push	ar7
      000CE1 C0 06            [24] 3446 	push	ar6
      000CE3 C0 05            [24] 3447 	push	ar5
      000CE5 C0 03            [24] 3448 	push	ar3
      000CE7 C0 04            [24] 3449 	push	ar4
      000CE9 8D 82            [24] 3450 	mov	dpl,r5
      000CEB 8E 83            [24] 3451 	mov	dph,r6
      000CED 8F F0            [24] 3452 	mov	b,r7
      000CEF 78r50            [12] 3453 	mov	r0,#_item_from_index
      000CF1 79s00            [12] 3454 	mov	r1,#(_item_from_index >> 8)
      000CF3 7As00            [12] 3455 	mov	r2,#(_item_from_index >> 16)
      000CF5 12r00r00         [24] 3456 	lcall	__sdcc_banked_call
      000CF8 AA 82            [24] 3457 	mov	r2,dpl
      000CFA AB 83            [24] 3458 	mov	r3,dph
      000CFC AC F0            [24] 3459 	mov	r4,b
      000CFE 15 81            [12] 3460 	dec	sp
      000D00 15 81            [12] 3461 	dec	sp
      000D02 D0 05            [24] 3462 	pop	ar5
      000D04 D0 06            [24] 3463 	pop	ar6
      000D06 D0 07            [24] 3464 	pop	ar7
                                   3465 ;	../../core/net/nbr-table.c:318: return nbr_get_bit(used_map, table, item) ? item : NULL;
      000D08 C0 04            [24] 3466 	push	ar4
      000D0A C0 03            [24] 3467 	push	ar3
      000D0C C0 02            [24] 3468 	push	ar2
      000D0E C0 02            [24] 3469 	push	ar2
      000D10 C0 03            [24] 3470 	push	ar3
      000D12 C0 04            [24] 3471 	push	ar4
      000D14 C0 05            [24] 3472 	push	ar5
      000D16 C0 06            [24] 3473 	push	ar6
      000D18 C0 07            [24] 3474 	push	ar7
      000D1A 90r00r00         [24] 3475 	mov	dptr,#_used_map
      000D1D 75 F0 00         [24] 3476 	mov	b,#0x00
      000D20 78r1C            [12] 3477 	mov	r0,#_nbr_get_bit
      000D22 79s03            [12] 3478 	mov	r1,#(_nbr_get_bit >> 8)
      000D24 7As00            [12] 3479 	mov	r2,#(_nbr_get_bit >> 16)
      000D26 12r00r00         [24] 3480 	lcall	__sdcc_banked_call
      000D29 AE 82            [24] 3481 	mov	r6,dpl
      000D2B AF 83            [24] 3482 	mov	r7,dph
      000D2D E5 81            [12] 3483 	mov	a,sp
      000D2F 24 FA            [12] 3484 	add	a,#0xfa
      000D31 F5 81            [12] 3485 	mov	sp,a
      000D33 D0 02            [24] 3486 	pop	ar2
      000D35 D0 03            [24] 3487 	pop	ar3
      000D37 D0 04            [24] 3488 	pop	ar4
      000D39 EE               [12] 3489 	mov	a,r6
      000D3A 4F               [12] 3490 	orl	a,r7
      000D3B 60 08            [24] 3491 	jz	00103$
      000D3D 8A 05            [24] 3492 	mov	ar5,r2
      000D3F 8B 06            [24] 3493 	mov	ar6,r3
      000D41 8C 07            [24] 3494 	mov	ar7,r4
      000D43 80 06            [24] 3495 	sjmp	00104$
      000D45                       3496 00103$:
      000D45 7D 00            [12] 3497 	mov	r5,#0x00
      000D47 7E 00            [12] 3498 	mov	r6,#0x00
      000D49 7F 00            [12] 3499 	mov	r7,#0x00
      000D4B                       3500 00104$:
      000D4B 8D 82            [24] 3501 	mov	dpl,r5
      000D4D 8E 83            [24] 3502 	mov	dph,r6
      000D4F 8F F0            [24] 3503 	mov	b,r7
      000D51 02r00r00         [24] 3504 	ljmp	__sdcc_banked_ret
                                   3505 ;------------------------------------------------------------
                                   3506 ;Allocation info for local variables in function 'nbr_table_remove'
                                   3507 ;------------------------------------------------------------
                                   3508 ;item                      Allocated to stack - sp -5
                                   3509 ;table                     Allocated to registers r5 r6 r7 
                                   3510 ;ret                       Allocated to registers r3 r4 
                                   3511 ;------------------------------------------------------------
                                   3512 ;	../../core/net/nbr-table.c:323: nbr_table_remove(nbr_table_t *table, void *item)
                                   3513 ;	-----------------------------------------
                                   3514 ;	 function nbr_table_remove
                                   3515 ;	-----------------------------------------
      000D54                       3516 _nbr_table_remove:
      000D54 AD 82            [24] 3517 	mov	r5,dpl
      000D56 AE 83            [24] 3518 	mov	r6,dph
      000D58 AF F0            [24] 3519 	mov	r7,b
                                   3520 ;	../../core/net/nbr-table.c:325: int ret = nbr_set_bit(used_map, table, item, 0);
      000D5A C0 07            [24] 3521 	push	ar7
      000D5C C0 06            [24] 3522 	push	ar6
      000D5E C0 05            [24] 3523 	push	ar5
      000D60 E4               [12] 3524 	clr	a
      000D61 C0 E0            [24] 3525 	push	acc
      000D63 C0 E0            [24] 3526 	push	acc
      000D65 E5 81            [12] 3527 	mov	a,sp
      000D67 24 F6            [12] 3528 	add	a,#0xf6
      000D69 F8               [12] 3529 	mov	r0,a
      000D6A E6               [12] 3530 	mov	a,@r0
      000D6B C0 E0            [24] 3531 	push	acc
      000D6D 08               [12] 3532 	inc	r0
      000D6E E6               [12] 3533 	mov	a,@r0
      000D6F C0 E0            [24] 3534 	push	acc
      000D71 08               [12] 3535 	inc	r0
      000D72 E6               [12] 3536 	mov	a,@r0
      000D73 C0 E0            [24] 3537 	push	acc
      000D75 C0 05            [24] 3538 	push	ar5
      000D77 C0 06            [24] 3539 	push	ar6
      000D79 C0 07            [24] 3540 	push	ar7
      000D7B 90r00r00         [24] 3541 	mov	dptr,#_used_map
      000D7E 75 F0 00         [24] 3542 	mov	b,#0x00
      000D81 78rD5            [12] 3543 	mov	r0,#_nbr_set_bit
      000D83 79s03            [12] 3544 	mov	r1,#(_nbr_set_bit >> 8)
      000D85 7As00            [12] 3545 	mov	r2,#(_nbr_set_bit >> 16)
      000D87 12r00r00         [24] 3546 	lcall	__sdcc_banked_call
      000D8A AB 82            [24] 3547 	mov	r3,dpl
      000D8C AC 83            [24] 3548 	mov	r4,dph
      000D8E E5 81            [12] 3549 	mov	a,sp
      000D90 24 F8            [12] 3550 	add	a,#0xf8
      000D92 F5 81            [12] 3551 	mov	sp,a
      000D94 D0 05            [24] 3552 	pop	ar5
      000D96 D0 06            [24] 3553 	pop	ar6
      000D98 D0 07            [24] 3554 	pop	ar7
                                   3555 ;	../../core/net/nbr-table.c:326: nbr_set_bit(locked_map, table, item, 0);
      000D9A C0 04            [24] 3556 	push	ar4
      000D9C C0 03            [24] 3557 	push	ar3
      000D9E E4               [12] 3558 	clr	a
      000D9F C0 E0            [24] 3559 	push	acc
      000DA1 C0 E0            [24] 3560 	push	acc
      000DA3 E5 81            [12] 3561 	mov	a,sp
      000DA5 24 F7            [12] 3562 	add	a,#0xf7
      000DA7 F8               [12] 3563 	mov	r0,a
      000DA8 E6               [12] 3564 	mov	a,@r0
      000DA9 C0 E0            [24] 3565 	push	acc
      000DAB 08               [12] 3566 	inc	r0
      000DAC E6               [12] 3567 	mov	a,@r0
      000DAD C0 E0            [24] 3568 	push	acc
      000DAF 08               [12] 3569 	inc	r0
      000DB0 E6               [12] 3570 	mov	a,@r0
      000DB1 C0 E0            [24] 3571 	push	acc
      000DB3 C0 05            [24] 3572 	push	ar5
      000DB5 C0 06            [24] 3573 	push	ar6
      000DB7 C0 07            [24] 3574 	push	ar7
      000DB9 90r00r04         [24] 3575 	mov	dptr,#_locked_map
      000DBC 75 F0 00         [24] 3576 	mov	b,#0x00
      000DBF 78rD5            [12] 3577 	mov	r0,#_nbr_set_bit
      000DC1 79s03            [12] 3578 	mov	r1,#(_nbr_set_bit >> 8)
      000DC3 7As00            [12] 3579 	mov	r2,#(_nbr_set_bit >> 16)
      000DC5 12r00r00         [24] 3580 	lcall	__sdcc_banked_call
      000DC8 E5 81            [12] 3581 	mov	a,sp
      000DCA 24 F8            [12] 3582 	add	a,#0xf8
      000DCC F5 81            [12] 3583 	mov	sp,a
      000DCE D0 03            [24] 3584 	pop	ar3
      000DD0 D0 04            [24] 3585 	pop	ar4
                                   3586 ;	../../core/net/nbr-table.c:327: return ret;
      000DD2 8B 82            [24] 3587 	mov	dpl,r3
      000DD4 8C 83            [24] 3588 	mov	dph,r4
      000DD6 02r00r00         [24] 3589 	ljmp	__sdcc_banked_ret
                                   3590 ;------------------------------------------------------------
                                   3591 ;Allocation info for local variables in function 'nbr_table_lock'
                                   3592 ;------------------------------------------------------------
                                   3593 ;item                      Allocated to stack - sp -5
                                   3594 ;table                     Allocated to registers r5 r6 r7 
                                   3595 ;------------------------------------------------------------
                                   3596 ;	../../core/net/nbr-table.c:332: nbr_table_lock(nbr_table_t *table, void *item)
                                   3597 ;	-----------------------------------------
                                   3598 ;	 function nbr_table_lock
                                   3599 ;	-----------------------------------------
      000DD9                       3600 _nbr_table_lock:
      000DD9 AD 82            [24] 3601 	mov	r5,dpl
      000DDB AE 83            [24] 3602 	mov	r6,dph
      000DDD AF F0            [24] 3603 	mov	r7,b
                                   3604 ;	../../core/net/nbr-table.c:334: return nbr_set_bit(locked_map, table, item, 1);
      000DDF 74 01            [12] 3605 	mov	a,#0x01
      000DE1 C0 E0            [24] 3606 	push	acc
      000DE3 E4               [12] 3607 	clr	a
      000DE4 C0 E0            [24] 3608 	push	acc
      000DE6 E5 81            [12] 3609 	mov	a,sp
      000DE8 24 F9            [12] 3610 	add	a,#0xf9
      000DEA F8               [12] 3611 	mov	r0,a
      000DEB E6               [12] 3612 	mov	a,@r0
      000DEC C0 E0            [24] 3613 	push	acc
      000DEE 08               [12] 3614 	inc	r0
      000DEF E6               [12] 3615 	mov	a,@r0
      000DF0 C0 E0            [24] 3616 	push	acc
      000DF2 08               [12] 3617 	inc	r0
      000DF3 E6               [12] 3618 	mov	a,@r0
      000DF4 C0 E0            [24] 3619 	push	acc
      000DF6 C0 05            [24] 3620 	push	ar5
      000DF8 C0 06            [24] 3621 	push	ar6
      000DFA C0 07            [24] 3622 	push	ar7
      000DFC 90r00r04         [24] 3623 	mov	dptr,#_locked_map
      000DFF 75 F0 00         [24] 3624 	mov	b,#0x00
      000E02 78rD5            [12] 3625 	mov	r0,#_nbr_set_bit
      000E04 79s03            [12] 3626 	mov	r1,#(_nbr_set_bit >> 8)
      000E06 7As00            [12] 3627 	mov	r2,#(_nbr_set_bit >> 16)
      000E08 12r00r00         [24] 3628 	lcall	__sdcc_banked_call
      000E0B AE 82            [24] 3629 	mov	r6,dpl
      000E0D AF 83            [24] 3630 	mov	r7,dph
      000E0F E5 81            [12] 3631 	mov	a,sp
      000E11 24 F8            [12] 3632 	add	a,#0xf8
      000E13 F5 81            [12] 3633 	mov	sp,a
      000E15 8E 82            [24] 3634 	mov	dpl,r6
      000E17 8F 83            [24] 3635 	mov	dph,r7
      000E19 02r00r00         [24] 3636 	ljmp	__sdcc_banked_ret
                                   3637 ;------------------------------------------------------------
                                   3638 ;Allocation info for local variables in function 'nbr_table_unlock'
                                   3639 ;------------------------------------------------------------
                                   3640 ;item                      Allocated to stack - sp -5
                                   3641 ;table                     Allocated to registers r5 r6 r7 
                                   3642 ;------------------------------------------------------------
                                   3643 ;	../../core/net/nbr-table.c:339: nbr_table_unlock(nbr_table_t *table, void *item)
                                   3644 ;	-----------------------------------------
                                   3645 ;	 function nbr_table_unlock
                                   3646 ;	-----------------------------------------
      000E1C                       3647 _nbr_table_unlock:
      000E1C AD 82            [24] 3648 	mov	r5,dpl
      000E1E AE 83            [24] 3649 	mov	r6,dph
      000E20 AF F0            [24] 3650 	mov	r7,b
                                   3651 ;	../../core/net/nbr-table.c:341: return nbr_set_bit(locked_map, table, item, 0);
      000E22 E4               [12] 3652 	clr	a
      000E23 C0 E0            [24] 3653 	push	acc
      000E25 C0 E0            [24] 3654 	push	acc
      000E27 E5 81            [12] 3655 	mov	a,sp
      000E29 24 F9            [12] 3656 	add	a,#0xf9
      000E2B F8               [12] 3657 	mov	r0,a
      000E2C E6               [12] 3658 	mov	a,@r0
      000E2D C0 E0            [24] 3659 	push	acc
      000E2F 08               [12] 3660 	inc	r0
      000E30 E6               [12] 3661 	mov	a,@r0
      000E31 C0 E0            [24] 3662 	push	acc
      000E33 08               [12] 3663 	inc	r0
      000E34 E6               [12] 3664 	mov	a,@r0
      000E35 C0 E0            [24] 3665 	push	acc
      000E37 C0 05            [24] 3666 	push	ar5
      000E39 C0 06            [24] 3667 	push	ar6
      000E3B C0 07            [24] 3668 	push	ar7
      000E3D 90r00r04         [24] 3669 	mov	dptr,#_locked_map
      000E40 75 F0 00         [24] 3670 	mov	b,#0x00
      000E43 78rD5            [12] 3671 	mov	r0,#_nbr_set_bit
      000E45 79s03            [12] 3672 	mov	r1,#(_nbr_set_bit >> 8)
      000E47 7As00            [12] 3673 	mov	r2,#(_nbr_set_bit >> 16)
      000E49 12r00r00         [24] 3674 	lcall	__sdcc_banked_call
      000E4C AE 82            [24] 3675 	mov	r6,dpl
      000E4E AF 83            [24] 3676 	mov	r7,dph
      000E50 E5 81            [12] 3677 	mov	a,sp
      000E52 24 F8            [12] 3678 	add	a,#0xf8
      000E54 F5 81            [12] 3679 	mov	sp,a
      000E56 8E 82            [24] 3680 	mov	dpl,r6
      000E58 8F 83            [24] 3681 	mov	dph,r7
      000E5A 02r00r00         [24] 3682 	ljmp	__sdcc_banked_ret
                                   3683 ;------------------------------------------------------------
                                   3684 ;Allocation info for local variables in function 'nbr_table_get_lladdr'
                                   3685 ;------------------------------------------------------------
                                   3686 ;item                      Allocated to stack - sp -5
                                   3687 ;table                     Allocated to registers r5 r6 r7 
                                   3688 ;key                       Allocated to registers r5 r6 r7 
                                   3689 ;------------------------------------------------------------
                                   3690 ;	../../core/net/nbr-table.c:346: nbr_table_get_lladdr(nbr_table_t *table, const void *item)
                                   3691 ;	-----------------------------------------
                                   3692 ;	 function nbr_table_get_lladdr
                                   3693 ;	-----------------------------------------
      000E5D                       3694 _nbr_table_get_lladdr:
      000E5D AD 82            [24] 3695 	mov	r5,dpl
      000E5F AE 83            [24] 3696 	mov	r6,dph
      000E61 AF F0            [24] 3697 	mov	r7,b
                                   3698 ;	../../core/net/nbr-table.c:348: nbr_table_key_t *key = key_from_item(table, item);
      000E63 E5 81            [12] 3699 	mov	a,sp
      000E65 24 FB            [12] 3700 	add	a,#0xfb
      000E67 F8               [12] 3701 	mov	r0,a
      000E68 E6               [12] 3702 	mov	a,@r0
      000E69 C0 E0            [24] 3703 	push	acc
      000E6B 08               [12] 3704 	inc	r0
      000E6C E6               [12] 3705 	mov	a,@r0
      000E6D C0 E0            [24] 3706 	push	acc
      000E6F 08               [12] 3707 	inc	r0
      000E70 E6               [12] 3708 	mov	a,@r0
      000E71 C0 E0            [24] 3709 	push	acc
      000E73 8D 82            [24] 3710 	mov	dpl,r5
      000E75 8E 83            [24] 3711 	mov	dph,r6
      000E77 8F F0            [24] 3712 	mov	b,r7
      000E79 78r08            [12] 3713 	mov	r0,#_key_from_item
      000E7B 79s02            [12] 3714 	mov	r1,#(_key_from_item >> 8)
      000E7D 7As00            [12] 3715 	mov	r2,#(_key_from_item >> 16)
      000E7F 12r00r00         [24] 3716 	lcall	__sdcc_banked_call
      000E82 AD 82            [24] 3717 	mov	r5,dpl
      000E84 AE 83            [24] 3718 	mov	r6,dph
      000E86 AF F0            [24] 3719 	mov	r7,b
      000E88 15 81            [12] 3720 	dec	sp
      000E8A 15 81            [12] 3721 	dec	sp
      000E8C 15 81            [12] 3722 	dec	sp
                                   3723 ;	../../core/net/nbr-table.c:349: return key != NULL ? &key->lladdr : NULL;
      000E8E ED               [12] 3724 	mov	a,r5
      000E8F 4E               [12] 3725 	orl	a,r6
      000E90 60 09            [24] 3726 	jz	00103$
      000E92 74 03            [12] 3727 	mov	a,#0x03
      000E94 2D               [12] 3728 	add	a,r5
      000E95 FD               [12] 3729 	mov	r5,a
      000E96 E4               [12] 3730 	clr	a
      000E97 3E               [12] 3731 	addc	a,r6
      000E98 FE               [12] 3732 	mov	r6,a
      000E99 80 06            [24] 3733 	sjmp	00104$
      000E9B                       3734 00103$:
      000E9B 7D 00            [12] 3735 	mov	r5,#0x00
      000E9D 7E 00            [12] 3736 	mov	r6,#0x00
      000E9F 7F 00            [12] 3737 	mov	r7,#0x00
      000EA1                       3738 00104$:
      000EA1 8D 82            [24] 3739 	mov	dpl,r5
      000EA3 8E 83            [24] 3740 	mov	dph,r6
      000EA5 8F F0            [24] 3741 	mov	b,r7
      000EA7 02r00r00         [24] 3742 	ljmp	__sdcc_banked_ret
                                   3743 	.area CSEG    (CODE)
                                   3744 	.area CONST   (CODE)
                                   3745 	.area XINIT   (CODE)
      000000                       3746 __xinit__neighbor_addr_mem:
      000000 0B 00                 3747 	.byte #0x0B,#0x00	; 11
      000002 04 00                 3748 	.byte #0x04,#0x00	; 4
      000004r22s00 00              3749 	.byte _neighbor_addr_mem_memb_count,(_neighbor_addr_mem_memb_count >> 8),#0x00
      000007r26s00 00              3750 	.byte _neighbor_addr_mem_memb_mem,(_neighbor_addr_mem_memb_mem >> 8),#0x00
      00000A                       3751 __xinit__nbr_table_keys_list:
                                   3752 ; generic printIvalPtr
      00000A 00 00 00              3753 	.byte #0x00,#0x00,#0x00
      00000D                       3754 __xinit__nbr_table_keys:
      00000Dr0As00 00              3755 	.byte _nbr_table_keys_list,(_nbr_table_keys_list >> 8),#0x00
                                   3756 	.area CABS    (ABS,CODE)
