                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:28 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module csma
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _csma_driver
                                     13 	.globl _memb_free
                                     14 	.globl _memb_alloc
                                     15 	.globl _memb_init
                                     16 	.globl _list_item_next
                                     17 	.globl _list_length
                                     18 	.globl _list_remove
                                     19 	.globl _list_add
                                     20 	.globl _list_head
                                     21 	.globl _list_init
                                     22 	.globl _random_rand
                                     23 	.globl _queuebuf_attr
                                     24 	.globl _queuebuf_free
                                     25 	.globl _queuebuf_update_attr_from_packetbuf
                                     26 	.globl _queuebuf_new_from_packetbuf
                                     27 	.globl _packetbuf_addr
                                     28 	.globl _packetbuf_attr
                                     29 	.globl _packetbuf_set_attr
                                     30 	.globl _ctimer_stop
                                     31 	.globl _ctimer_set
                                     32 	.globl _linkaddr_cmp
                                     33 	.globl _linkaddr_copy
                                     34 	.globl _mac_call_sent_callback
                                     35 	.globl _ACTIVE
                                     36 	.globl _TX_BYTE
                                     37 	.globl _RX_BYTE
                                     38 	.globl _ERR
                                     39 	.globl _FE
                                     40 	.globl _SLAVE
                                     41 	.globl _RE
                                     42 	.globl _MODE
                                     43 	.globl _T3OVFIF
                                     44 	.globl _T3CH0IF
                                     45 	.globl _T3CH1IF
                                     46 	.globl _T4OVFIF
                                     47 	.globl _T4CH0IF
                                     48 	.globl _T4CH1IF
                                     49 	.globl _OVFIM
                                     50 	.globl _B_0
                                     51 	.globl _B_1
                                     52 	.globl _B_2
                                     53 	.globl _B_3
                                     54 	.globl _B_4
                                     55 	.globl _B_5
                                     56 	.globl _B_6
                                     57 	.globl _B_7
                                     58 	.globl _P2IF
                                     59 	.globl _UTX0IF
                                     60 	.globl _UTX1IF
                                     61 	.globl _P1IF
                                     62 	.globl _WDTIF
                                     63 	.globl _ACC_0
                                     64 	.globl _ACC_1
                                     65 	.globl _ACC_2
                                     66 	.globl _ACC_3
                                     67 	.globl _ACC_4
                                     68 	.globl _ACC_5
                                     69 	.globl _ACC_6
                                     70 	.globl _ACC_7
                                     71 	.globl _P
                                     72 	.globl _F1
                                     73 	.globl _OV
                                     74 	.globl _RS0
                                     75 	.globl _RS1
                                     76 	.globl _F0
                                     77 	.globl _AC
                                     78 	.globl _CY
                                     79 	.globl _DMAIF
                                     80 	.globl _T1IF
                                     81 	.globl _T2IF
                                     82 	.globl _T3IF
                                     83 	.globl _T4IF
                                     84 	.globl _P0IF
                                     85 	.globl _STIF
                                     86 	.globl _DMAIE
                                     87 	.globl _T1IE
                                     88 	.globl _T2IE
                                     89 	.globl _T3IE
                                     90 	.globl _T4IE
                                     91 	.globl _P0IE
                                     92 	.globl _RFERRIE
                                     93 	.globl _ADCIE
                                     94 	.globl _URX0IE
                                     95 	.globl _URX1IE
                                     96 	.globl _ENCIE
                                     97 	.globl _STIE
                                     98 	.globl _EA
                                     99 	.globl _P2_0
                                    100 	.globl _P2_1
                                    101 	.globl _P2_2
                                    102 	.globl _P2_3
                                    103 	.globl _P2_4
                                    104 	.globl _P2_5
                                    105 	.globl _P2_6
                                    106 	.globl _P2_7
                                    107 	.globl _ENCIF_0
                                    108 	.globl _ENCIF_1
                                    109 	.globl _P1_0
                                    110 	.globl _P1_1
                                    111 	.globl _P1_2
                                    112 	.globl _P1_3
                                    113 	.globl _P1_4
                                    114 	.globl _P1_5
                                    115 	.globl _P1_6
                                    116 	.globl _P1_7
                                    117 	.globl _IT0
                                    118 	.globl _RFERRIF
                                    119 	.globl _IT1
                                    120 	.globl _URX0IF
                                    121 	.globl _ADCIF
                                    122 	.globl _URX1IF
                                    123 	.globl _P0_0
                                    124 	.globl _P0_1
                                    125 	.globl _P0_2
                                    126 	.globl _P0_3
                                    127 	.globl _P0_4
                                    128 	.globl _P0_5
                                    129 	.globl _P0_6
                                    130 	.globl _P0_7
                                    131 	.globl _WDCTL
                                    132 	.globl _U1GCR
                                    133 	.globl _U1UCR
                                    134 	.globl _U1BAUD
                                    135 	.globl _U1DBUF
                                    136 	.globl _U1CSR
                                    137 	.globl _U0GCR
                                    138 	.globl _U0UCR
                                    139 	.globl _U0BAUD
                                    140 	.globl _U0DBUF
                                    141 	.globl _U0CSR
                                    142 	.globl _TIMIF
                                    143 	.globl _T4CC1
                                    144 	.globl _T4CCTL1
                                    145 	.globl _T4CC0
                                    146 	.globl _T4CCTL0
                                    147 	.globl _T4CTL
                                    148 	.globl _T4CNT
                                    149 	.globl _T3CC1
                                    150 	.globl _T3CCTL1
                                    151 	.globl _T3CC0
                                    152 	.globl _T3CCTL0
                                    153 	.globl _T3CTL
                                    154 	.globl _T3CNT
                                    155 	.globl _T2MSEL
                                    156 	.globl _T2IRQM
                                    157 	.globl _T2MOVF2
                                    158 	.globl _T2MOVF1
                                    159 	.globl _T2MOVF0
                                    160 	.globl _T2M1
                                    161 	.globl _T2M0
                                    162 	.globl _T2IRQF
                                    163 	.globl _T2EVTCFG
                                    164 	.globl _T2CTRL
                                    165 	.globl _T1STAT
                                    166 	.globl _T1CCTL2
                                    167 	.globl _T1CCTL1
                                    168 	.globl _T1CCTL0
                                    169 	.globl _T1CTL
                                    170 	.globl _T1CNTH
                                    171 	.globl _T1CNTL
                                    172 	.globl _T1CC2H
                                    173 	.globl _T1CC2L
                                    174 	.globl _T1CC1H
                                    175 	.globl _T1CC1L
                                    176 	.globl _T1CC0H
                                    177 	.globl _T1CC0L
                                    178 	.globl _CLKCONSTA
                                    179 	.globl _CLKCONCMD
                                    180 	.globl _SLEEPSTA
                                    181 	.globl _SLEEPCMD
                                    182 	.globl _STLOAD
                                    183 	.globl _ST2
                                    184 	.globl _ST1
                                    185 	.globl _ST0
                                    186 	.globl _RFERRF
                                    187 	.globl _RFIRQF0
                                    188 	.globl _RFST
                                    189 	.globl _RFD
                                    190 	.globl _RFIRQF1
                                    191 	.globl _PSBANK
                                    192 	.globl _FMAP
                                    193 	.globl _MEMCTR
                                    194 	.globl __XPAGE
                                    195 	.globl _MPAGE
                                    196 	.globl _PMUX
                                    197 	.globl _P2DIR
                                    198 	.globl _P1DIR
                                    199 	.globl _P0DIR
                                    200 	.globl _P2INP
                                    201 	.globl _P1INP
                                    202 	.globl _P2SEL
                                    203 	.globl _P1SEL
                                    204 	.globl _P0SEL
                                    205 	.globl _APCFG
                                    206 	.globl _PERCFG
                                    207 	.globl _P0INP
                                    208 	.globl _P2IEN
                                    209 	.globl _P1IEN
                                    210 	.globl _P0IEN
                                    211 	.globl _PICTL
                                    212 	.globl _P2IFG
                                    213 	.globl _P1IFG
                                    214 	.globl _P0IFG
                                    215 	.globl _DMAREQ
                                    216 	.globl _DMAARM
                                    217 	.globl _DMA0CFGH
                                    218 	.globl _DMA0CFGL
                                    219 	.globl _DMA1CFGH
                                    220 	.globl _DMA1CFGL
                                    221 	.globl _DMAIRQ
                                    222 	.globl _ENCCS
                                    223 	.globl _ENCDO
                                    224 	.globl _ENCDI
                                    225 	.globl _RNDH
                                    226 	.globl _RNDL
                                    227 	.globl _ADCH
                                    228 	.globl _ADCL
                                    229 	.globl _ADCCON3
                                    230 	.globl _ADCCON2
                                    231 	.globl _ADCCON1
                                    232 	.globl _B
                                    233 	.globl _IRCON2
                                    234 	.globl _ACC
                                    235 	.globl _PSW
                                    236 	.globl _IRCON
                                    237 	.globl _IP1
                                    238 	.globl _IEN1
                                    239 	.globl _IP0
                                    240 	.globl _IEN0
                                    241 	.globl _P2
                                    242 	.globl _S1CON
                                    243 	.globl _IEN2
                                    244 	.globl _S0CON
                                    245 	.globl _DPS
                                    246 	.globl _P1
                                    247 	.globl _TCON
                                    248 	.globl _PCON
                                    249 	.globl _DPH1
                                    250 	.globl _DPL1
                                    251 	.globl _DPH0
                                    252 	.globl _DPL0
                                    253 	.globl _SP
                                    254 	.globl _P0
                                    255 	.globl _X_IEEE_ADDR
                                    256 	.globl _X_INFOPAGE
                                    257 	.globl _X_P2DIR
                                    258 	.globl _X_P1DIR
                                    259 	.globl _X_P0DIR
                                    260 	.globl _X_U1GCR
                                    261 	.globl _X_U1UCR
                                    262 	.globl _X_U1BAUD
                                    263 	.globl _X_U1DBUF
                                    264 	.globl _X_U1CSR
                                    265 	.globl _X_P2INP
                                    266 	.globl _X_P1INP
                                    267 	.globl _X_P2SEL
                                    268 	.globl _X_P1SEL
                                    269 	.globl _X_P0SEL
                                    270 	.globl _X_APCFG
                                    271 	.globl _X_PERCFG
                                    272 	.globl _X_T4CC1
                                    273 	.globl _X_T4CCTL1
                                    274 	.globl _X_T4CC0
                                    275 	.globl _X_T4CCTL0
                                    276 	.globl _X_T4CTL
                                    277 	.globl _X_T4CNT
                                    278 	.globl _X_RFIRQF0
                                    279 	.globl _X_T1CCTL2
                                    280 	.globl _X_T1CCTL1
                                    281 	.globl _X_T1CCTL0
                                    282 	.globl _X_T1CTL
                                    283 	.globl _X_T1CNTH
                                    284 	.globl _X_T1CNTL
                                    285 	.globl _X_RFST
                                    286 	.globl _X_T1CC2H
                                    287 	.globl _X_T1CC2L
                                    288 	.globl _X_T1CC1H
                                    289 	.globl _X_T1CC1L
                                    290 	.globl _X_T1CC0H
                                    291 	.globl _X_T1CC0L
                                    292 	.globl _X_RFD
                                    293 	.globl _X_TIMIF
                                    294 	.globl _X_DMAREQ
                                    295 	.globl _X_DMAARM
                                    296 	.globl _X_DMA0CFGH
                                    297 	.globl _X_DMA0CFGL
                                    298 	.globl _X_DMA1CFGH
                                    299 	.globl _X_DMA1CFGL
                                    300 	.globl _X_DMAIRQ
                                    301 	.globl _X_T3CC1
                                    302 	.globl _X_T3CCTL1
                                    303 	.globl _X_T3CC0
                                    304 	.globl _X_T3CCTL0
                                    305 	.globl _X_T3CTL
                                    306 	.globl _X_T3CNT
                                    307 	.globl _X_WDCTL
                                    308 	.globl _X_MEMCTR
                                    309 	.globl _X_CLKCONCMD
                                    310 	.globl _X_U0GCR
                                    311 	.globl _X_U0UCR
                                    312 	.globl _X_T2MSEL
                                    313 	.globl _X_U0BAUD
                                    314 	.globl _X_U0DBUF
                                    315 	.globl _X_RFERRF
                                    316 	.globl _X_SLEEPCMD
                                    317 	.globl _X_RNDH
                                    318 	.globl _X_RNDL
                                    319 	.globl _X_ADCH
                                    320 	.globl _X_ADCL
                                    321 	.globl _X_ADCCON3
                                    322 	.globl _X_ADCCON2
                                    323 	.globl _X_ADCCON1
                                    324 	.globl _X_ENCCS
                                    325 	.globl _X_ENCDO
                                    326 	.globl _X_ENCDI
                                    327 	.globl _X_T1STAT
                                    328 	.globl _X_PMUX
                                    329 	.globl _X_STLOAD
                                    330 	.globl _X_P2IEN
                                    331 	.globl _X_P0IEN
                                    332 	.globl _X_T2IRQM
                                    333 	.globl _X_T2MOVF2
                                    334 	.globl _X_T2MOVF1
                                    335 	.globl _X_T2MOVF0
                                    336 	.globl _X_T2M1
                                    337 	.globl _X_T2M0
                                    338 	.globl _X_T2IRQF
                                    339 	.globl _X_P2
                                    340 	.globl _X_PSBANK
                                    341 	.globl _X_FMAP
                                    342 	.globl _X_CLKCONSTA
                                    343 	.globl _X_SLEEPSTA
                                    344 	.globl _X_T2EVTCFG
                                    345 	.globl _X_ST2
                                    346 	.globl _X_ST1
                                    347 	.globl _X_ST0
                                    348 	.globl _X_T2CTRL
                                    349 	.globl _X__XPAGE
                                    350 	.globl _X_MPAGE
                                    351 	.globl _X_RFIRQF1
                                    352 	.globl _X_P1
                                    353 	.globl _X_P0INP
                                    354 	.globl _X_P1IEN
                                    355 	.globl _X_PICTL
                                    356 	.globl _X_P2IFG
                                    357 	.globl _X_P1IFG
                                    358 	.globl _X_P0IFG
                                    359 	.globl _X_U0CSR
                                    360 	.globl _X_P0
                                    361 	.globl _USBF5
                                    362 	.globl _USBF4
                                    363 	.globl _USBF3
                                    364 	.globl _USBF2
                                    365 	.globl _USBF1
                                    366 	.globl _USBF0
                                    367 	.globl _USBCNTH
                                    368 	.globl _USBCNTL
                                    369 	.globl _USBCNT0
                                    370 	.globl _USBCSOH
                                    371 	.globl _USBCSOL
                                    372 	.globl _USBMAXO
                                    373 	.globl _USBCSIH
                                    374 	.globl _USBCSIL
                                    375 	.globl _USBCS0
                                    376 	.globl _USBMAXI
                                    377 	.globl _USBCTRL
                                    378 	.globl _USBINDEX
                                    379 	.globl _USBFRMH
                                    380 	.globl _USBFRML
                                    381 	.globl _USBCIE
                                    382 	.globl _USBOIE
                                    383 	.globl _USBIIE
                                    384 	.globl _USBCIF
                                    385 	.globl _USBOIF
                                    386 	.globl _USBIIF
                                    387 	.globl _USBPOW
                                    388 	.globl _USBADDR
                                    389 	.globl _CSPT
                                    390 	.globl _CSPZ
                                    391 	.globl _CSPY
                                    392 	.globl _CSPX
                                    393 	.globl _CSPSTAT
                                    394 	.globl _CSPCTRL
                                    395 	.globl _CSPPROG23
                                    396 	.globl _CSPPROG22
                                    397 	.globl _CSPPROG21
                                    398 	.globl _CSPPROG20
                                    399 	.globl _CSPPROG19
                                    400 	.globl _CSPPROG18
                                    401 	.globl _CSPPROG17
                                    402 	.globl _CSPPROG16
                                    403 	.globl _CSPPROG15
                                    404 	.globl _CSPPROG14
                                    405 	.globl _CSPPROG13
                                    406 	.globl _CSPPROG12
                                    407 	.globl _CSPPROG11
                                    408 	.globl _CSPPROG10
                                    409 	.globl _CSPPROG9
                                    410 	.globl _CSPPROG8
                                    411 	.globl _CSPPROG7
                                    412 	.globl _CSPPROG6
                                    413 	.globl _CSPPROG5
                                    414 	.globl _CSPPROG4
                                    415 	.globl _CSPPROG3
                                    416 	.globl _CSPPROG2
                                    417 	.globl _CSPPROG1
                                    418 	.globl _CSPPROG0
                                    419 	.globl _RFC_OBS_CTRL2
                                    420 	.globl _RFC_OBS_CTRL1
                                    421 	.globl _RFC_OBS_CTRL0
                                    422 	.globl _TXFILTCFG
                                    423 	.globl _PTEST1
                                    424 	.globl _PTEST0
                                    425 	.globl _ATEST
                                    426 	.globl _DACTEST2
                                    427 	.globl _DACTEST1
                                    428 	.globl _DACTEST0
                                    429 	.globl _MDMTEST1
                                    430 	.globl _MDMTEST0
                                    431 	.globl _ADCTEST2
                                    432 	.globl _ADCTEST1
                                    433 	.globl _ADCTEST0
                                    434 	.globl _AGCCTRL3
                                    435 	.globl _AGCCTRL2
                                    436 	.globl _AGCCTRL1
                                    437 	.globl _AGCCTRL0
                                    438 	.globl _FSCAL3
                                    439 	.globl _FSCAL2
                                    440 	.globl _FSCAL1
                                    441 	.globl _FSCAL0
                                    442 	.globl _FSCTRL
                                    443 	.globl _RXCTRL
                                    444 	.globl _FREQEST
                                    445 	.globl _MDMCTRL1
                                    446 	.globl _MDMCTRL0
                                    447 	.globl _RFRND
                                    448 	.globl _RFERRM
                                    449 	.globl _RFIRQM1
                                    450 	.globl _RFIRQM0
                                    451 	.globl _TXLAST_PTR
                                    452 	.globl _TXFIRST_PTR
                                    453 	.globl _RXP1_PTR
                                    454 	.globl _RXLAST_PTR
                                    455 	.globl _RXFIRST_PTR
                                    456 	.globl _TXFIFOCNT
                                    457 	.globl _RXFIFOCNT
                                    458 	.globl _RXFIRST
                                    459 	.globl _RSSISTAT
                                    460 	.globl _RSSI
                                    461 	.globl _CCACTRL1
                                    462 	.globl _CCACTRL0
                                    463 	.globl _FSMCTRL
                                    464 	.globl _FIFOPCTRL
                                    465 	.globl _FSMSTAT1
                                    466 	.globl _FSMSTAT0
                                    467 	.globl _TXCTRL
                                    468 	.globl _TXPOWER
                                    469 	.globl _FREQCTRL
                                    470 	.globl _FREQTUNE
                                    471 	.globl _RXMASKCLR
                                    472 	.globl _RXMASKSET
                                    473 	.globl _RXENABLE
                                    474 	.globl _FRMCTRL1
                                    475 	.globl _FRMCTRL0
                                    476 	.globl _SRCEXTEN2
                                    477 	.globl _SRCEXTEN1
                                    478 	.globl _SRCEXTEN0
                                    479 	.globl _SRCSHORTEN2
                                    480 	.globl _SRCSHORTEN1
                                    481 	.globl _SRCSHORTEN0
                                    482 	.globl _SRCMATCH
                                    483 	.globl _FRMFILT1
                                    484 	.globl _FRMFILT0
                                    485 	.globl _SHORT_ADDR1
                                    486 	.globl _SHORT_ADDR0
                                    487 	.globl _PAN_ID1
                                    488 	.globl _PAN_ID0
                                    489 	.globl _EXT_ADDR7
                                    490 	.globl _EXT_ADDR6
                                    491 	.globl _EXT_ADDR5
                                    492 	.globl _EXT_ADDR4
                                    493 	.globl _EXT_ADDR3
                                    494 	.globl _EXT_ADDR2
                                    495 	.globl _EXT_ADDR1
                                    496 	.globl _EXT_ADDR0
                                    497 	.globl _SRCSHORTPENDEN2
                                    498 	.globl _SRCSHORTPENDEN1
                                    499 	.globl _SRCSHORTPENDEN0
                                    500 	.globl _SRCEXTPENDEN2
                                    501 	.globl _SRCEXTPENDEN1
                                    502 	.globl _SRCEXTPENDEN0
                                    503 	.globl _SRCRESINDEX
                                    504 	.globl _SRCRESMASK2
                                    505 	.globl _SRCRESMASK1
                                    506 	.globl _SRCRESMASK0
                                    507 	.globl _SRC_ADDR_TABLE
                                    508 	.globl _TXFIFO
                                    509 	.globl _RXFIFO
                                    510 	.globl _RFCORE_RAM
                                    511 	.globl _CMPCTL
                                    512 	.globl _OPAMPS
                                    513 	.globl _OPAMPC
                                    514 	.globl _STCV2
                                    515 	.globl _STCV1
                                    516 	.globl _STCV0
                                    517 	.globl _STCS
                                    518 	.globl _STCC
                                    519 	.globl _T1CC4H
                                    520 	.globl _T1CC4L
                                    521 	.globl _T1CC3H
                                    522 	.globl _T1CC3L
                                    523 	.globl _XX_T1CC2H
                                    524 	.globl _XX_T1CC2L
                                    525 	.globl _XX_T1CC1H
                                    526 	.globl _XX_T1CC1L
                                    527 	.globl _XX_T1CC0H
                                    528 	.globl _XX_T1CC0L
                                    529 	.globl _T1CCTL4
                                    530 	.globl _T1CCTL3
                                    531 	.globl _XX_T1CCTL2
                                    532 	.globl _XX_T1CCTL1
                                    533 	.globl _XX_T1CCTL0
                                    534 	.globl _CLD
                                    535 	.globl _IRCTL
                                    536 	.globl _CHIPINFO1
                                    537 	.globl _CHIPINFO0
                                    538 	.globl _FWDATA
                                    539 	.globl _FADDRH
                                    540 	.globl _FADDRL
                                    541 	.globl _FCTL
                                    542 	.globl _IVCTRL
                                    543 	.globl _BATTMON
                                    544 	.globl _SRCRC
                                    545 	.globl _DBGDATA
                                    546 	.globl _TESTREG0
                                    547 	.globl _CHIPID
                                    548 	.globl _CHVER
                                    549 	.globl _OBSSEL5
                                    550 	.globl _OBSSEL4
                                    551 	.globl _OBSSEL3
                                    552 	.globl _OBSSEL2
                                    553 	.globl _OBSSEL1
                                    554 	.globl _OBSSEL0
                                    555 	.globl _I2CIO
                                    556 	.globl _I2CWC
                                    557 	.globl _I2CADDR
                                    558 	.globl _I2CDATA
                                    559 	.globl _I2CSTAT
                                    560 	.globl _I2CCFG
                                    561 	.globl _OPAMPMC
                                    562 	.globl _MONMUX
                                    563 ;--------------------------------------------------------
                                    564 ; special function registers
                                    565 ;--------------------------------------------------------
                                    566 	.area RSEG    (ABS,DATA)
      000000                        567 	.org 0x0000
                           000080   568 _P0	=	0x0080
                           000081   569 _SP	=	0x0081
                           000082   570 _DPL0	=	0x0082
                           000083   571 _DPH0	=	0x0083
                           000084   572 _DPL1	=	0x0084
                           000085   573 _DPH1	=	0x0085
                           000087   574 _PCON	=	0x0087
                           000088   575 _TCON	=	0x0088
                           000090   576 _P1	=	0x0090
                           000092   577 _DPS	=	0x0092
                           000098   578 _S0CON	=	0x0098
                           00009A   579 _IEN2	=	0x009a
                           00009B   580 _S1CON	=	0x009b
                           0000A0   581 _P2	=	0x00a0
                           0000A8   582 _IEN0	=	0x00a8
                           0000A9   583 _IP0	=	0x00a9
                           0000B8   584 _IEN1	=	0x00b8
                           0000B9   585 _IP1	=	0x00b9
                           0000C0   586 _IRCON	=	0x00c0
                           0000D0   587 _PSW	=	0x00d0
                           0000E0   588 _ACC	=	0x00e0
                           0000E8   589 _IRCON2	=	0x00e8
                           0000F0   590 _B	=	0x00f0
                           0000B4   591 _ADCCON1	=	0x00b4
                           0000B5   592 _ADCCON2	=	0x00b5
                           0000B6   593 _ADCCON3	=	0x00b6
                           0000BA   594 _ADCL	=	0x00ba
                           0000BB   595 _ADCH	=	0x00bb
                           0000BC   596 _RNDL	=	0x00bc
                           0000BD   597 _RNDH	=	0x00bd
                           0000B1   598 _ENCDI	=	0x00b1
                           0000B2   599 _ENCDO	=	0x00b2
                           0000B3   600 _ENCCS	=	0x00b3
                           0000D1   601 _DMAIRQ	=	0x00d1
                           0000D2   602 _DMA1CFGL	=	0x00d2
                           0000D3   603 _DMA1CFGH	=	0x00d3
                           0000D4   604 _DMA0CFGL	=	0x00d4
                           0000D5   605 _DMA0CFGH	=	0x00d5
                           0000D6   606 _DMAARM	=	0x00d6
                           0000D7   607 _DMAREQ	=	0x00d7
                           000089   608 _P0IFG	=	0x0089
                           00008A   609 _P1IFG	=	0x008a
                           00008B   610 _P2IFG	=	0x008b
                           00008C   611 _PICTL	=	0x008c
                           0000AB   612 _P0IEN	=	0x00ab
                           00008D   613 _P1IEN	=	0x008d
                           0000AC   614 _P2IEN	=	0x00ac
                           00008F   615 _P0INP	=	0x008f
                           0000F1   616 _PERCFG	=	0x00f1
                           0000F2   617 _APCFG	=	0x00f2
                           0000F3   618 _P0SEL	=	0x00f3
                           0000F4   619 _P1SEL	=	0x00f4
                           0000F5   620 _P2SEL	=	0x00f5
                           0000F6   621 _P1INP	=	0x00f6
                           0000F7   622 _P2INP	=	0x00f7
                           0000FD   623 _P0DIR	=	0x00fd
                           0000FE   624 _P1DIR	=	0x00fe
                           0000FF   625 _P2DIR	=	0x00ff
                           0000AE   626 _PMUX	=	0x00ae
                           000093   627 _MPAGE	=	0x0093
                           000093   628 __XPAGE	=	0x0093
                           0000C7   629 _MEMCTR	=	0x00c7
                           00009F   630 _FMAP	=	0x009f
                           00009F   631 _PSBANK	=	0x009f
                           000091   632 _RFIRQF1	=	0x0091
                           0000D9   633 _RFD	=	0x00d9
                           0000E1   634 _RFST	=	0x00e1
                           0000E9   635 _RFIRQF0	=	0x00e9
                           0000BF   636 _RFERRF	=	0x00bf
                           000095   637 _ST0	=	0x0095
                           000096   638 _ST1	=	0x0096
                           000097   639 _ST2	=	0x0097
                           0000AD   640 _STLOAD	=	0x00ad
                           0000BE   641 _SLEEPCMD	=	0x00be
                           00009D   642 _SLEEPSTA	=	0x009d
                           0000C6   643 _CLKCONCMD	=	0x00c6
                           00009E   644 _CLKCONSTA	=	0x009e
                           0000DA   645 _T1CC0L	=	0x00da
                           0000DB   646 _T1CC0H	=	0x00db
                           0000DC   647 _T1CC1L	=	0x00dc
                           0000DD   648 _T1CC1H	=	0x00dd
                           0000DE   649 _T1CC2L	=	0x00de
                           0000DF   650 _T1CC2H	=	0x00df
                           0000E2   651 _T1CNTL	=	0x00e2
                           0000E3   652 _T1CNTH	=	0x00e3
                           0000E4   653 _T1CTL	=	0x00e4
                           0000E5   654 _T1CCTL0	=	0x00e5
                           0000E6   655 _T1CCTL1	=	0x00e6
                           0000E7   656 _T1CCTL2	=	0x00e7
                           0000AF   657 _T1STAT	=	0x00af
                           000094   658 _T2CTRL	=	0x0094
                           00009C   659 _T2EVTCFG	=	0x009c
                           0000A1   660 _T2IRQF	=	0x00a1
                           0000A2   661 _T2M0	=	0x00a2
                           0000A3   662 _T2M1	=	0x00a3
                           0000A4   663 _T2MOVF0	=	0x00a4
                           0000A5   664 _T2MOVF1	=	0x00a5
                           0000A6   665 _T2MOVF2	=	0x00a6
                           0000A7   666 _T2IRQM	=	0x00a7
                           0000C3   667 _T2MSEL	=	0x00c3
                           0000CA   668 _T3CNT	=	0x00ca
                           0000CB   669 _T3CTL	=	0x00cb
                           0000CC   670 _T3CCTL0	=	0x00cc
                           0000CD   671 _T3CC0	=	0x00cd
                           0000CE   672 _T3CCTL1	=	0x00ce
                           0000CF   673 _T3CC1	=	0x00cf
                           0000EA   674 _T4CNT	=	0x00ea
                           0000EB   675 _T4CTL	=	0x00eb
                           0000EC   676 _T4CCTL0	=	0x00ec
                           0000ED   677 _T4CC0	=	0x00ed
                           0000EE   678 _T4CCTL1	=	0x00ee
                           0000EF   679 _T4CC1	=	0x00ef
                           0000D8   680 _TIMIF	=	0x00d8
                           000086   681 _U0CSR	=	0x0086
                           0000C1   682 _U0DBUF	=	0x00c1
                           0000C2   683 _U0BAUD	=	0x00c2
                           0000C4   684 _U0UCR	=	0x00c4
                           0000C5   685 _U0GCR	=	0x00c5
                           0000F8   686 _U1CSR	=	0x00f8
                           0000F9   687 _U1DBUF	=	0x00f9
                           0000FA   688 _U1BAUD	=	0x00fa
                           0000FB   689 _U1UCR	=	0x00fb
                           0000FC   690 _U1GCR	=	0x00fc
                           0000C9   691 _WDCTL	=	0x00c9
                                    692 ;--------------------------------------------------------
                                    693 ; special function bits
                                    694 ;--------------------------------------------------------
                                    695 	.area RSEG    (ABS,DATA)
      000000                        696 	.org 0x0000
                           000087   697 _P0_7	=	0x0087
                           000086   698 _P0_6	=	0x0086
                           000085   699 _P0_5	=	0x0085
                           000084   700 _P0_4	=	0x0084
                           000083   701 _P0_3	=	0x0083
                           000082   702 _P0_2	=	0x0082
                           000081   703 _P0_1	=	0x0081
                           000080   704 _P0_0	=	0x0080
                           00008F   705 _URX1IF	=	0x008f
                           00008D   706 _ADCIF	=	0x008d
                           00008B   707 _URX0IF	=	0x008b
                           00008A   708 _IT1	=	0x008a
                           000089   709 _RFERRIF	=	0x0089
                           000088   710 _IT0	=	0x0088
                           000097   711 _P1_7	=	0x0097
                           000096   712 _P1_6	=	0x0096
                           000095   713 _P1_5	=	0x0095
                           000094   714 _P1_4	=	0x0094
                           000093   715 _P1_3	=	0x0093
                           000092   716 _P1_2	=	0x0092
                           000091   717 _P1_1	=	0x0091
                           000090   718 _P1_0	=	0x0090
                           000099   719 _ENCIF_1	=	0x0099
                           000098   720 _ENCIF_0	=	0x0098
                           0000A7   721 _P2_7	=	0x00a7
                           0000A6   722 _P2_6	=	0x00a6
                           0000A5   723 _P2_5	=	0x00a5
                           0000A4   724 _P2_4	=	0x00a4
                           0000A3   725 _P2_3	=	0x00a3
                           0000A2   726 _P2_2	=	0x00a2
                           0000A1   727 _P2_1	=	0x00a1
                           0000A0   728 _P2_0	=	0x00a0
                           0000AF   729 _EA	=	0x00af
                           0000AD   730 _STIE	=	0x00ad
                           0000AC   731 _ENCIE	=	0x00ac
                           0000AB   732 _URX1IE	=	0x00ab
                           0000AA   733 _URX0IE	=	0x00aa
                           0000A9   734 _ADCIE	=	0x00a9
                           0000A8   735 _RFERRIE	=	0x00a8
                           0000BD   736 _P0IE	=	0x00bd
                           0000BC   737 _T4IE	=	0x00bc
                           0000BB   738 _T3IE	=	0x00bb
                           0000BA   739 _T2IE	=	0x00ba
                           0000B9   740 _T1IE	=	0x00b9
                           0000B8   741 _DMAIE	=	0x00b8
                           0000C7   742 _STIF	=	0x00c7
                           0000C5   743 _P0IF	=	0x00c5
                           0000C4   744 _T4IF	=	0x00c4
                           0000C3   745 _T3IF	=	0x00c3
                           0000C2   746 _T2IF	=	0x00c2
                           0000C1   747 _T1IF	=	0x00c1
                           0000C0   748 _DMAIF	=	0x00c0
                           0000D7   749 _CY	=	0x00d7
                           0000D6   750 _AC	=	0x00d6
                           0000D5   751 _F0	=	0x00d5
                           0000D4   752 _RS1	=	0x00d4
                           0000D3   753 _RS0	=	0x00d3
                           0000D2   754 _OV	=	0x00d2
                           0000D1   755 _F1	=	0x00d1
                           0000D0   756 _P	=	0x00d0
                           0000E7   757 _ACC_7	=	0x00e7
                           0000E6   758 _ACC_6	=	0x00e6
                           0000E5   759 _ACC_5	=	0x00e5
                           0000E4   760 _ACC_4	=	0x00e4
                           0000E3   761 _ACC_3	=	0x00e3
                           0000E2   762 _ACC_2	=	0x00e2
                           0000E1   763 _ACC_1	=	0x00e1
                           0000E0   764 _ACC_0	=	0x00e0
                           0000EC   765 _WDTIF	=	0x00ec
                           0000EB   766 _P1IF	=	0x00eb
                           0000EA   767 _UTX1IF	=	0x00ea
                           0000E9   768 _UTX0IF	=	0x00e9
                           0000E8   769 _P2IF	=	0x00e8
                           0000F7   770 _B_7	=	0x00f7
                           0000F6   771 _B_6	=	0x00f6
                           0000F5   772 _B_5	=	0x00f5
                           0000F4   773 _B_4	=	0x00f4
                           0000F3   774 _B_3	=	0x00f3
                           0000F2   775 _B_2	=	0x00f2
                           0000F1   776 _B_1	=	0x00f1
                           0000F0   777 _B_0	=	0x00f0
                           0000DE   778 _OVFIM	=	0x00de
                           0000DD   779 _T4CH1IF	=	0x00dd
                           0000DC   780 _T4CH0IF	=	0x00dc
                           0000DB   781 _T4OVFIF	=	0x00db
                           0000DA   782 _T3CH1IF	=	0x00da
                           0000D9   783 _T3CH0IF	=	0x00d9
                           0000D8   784 _T3OVFIF	=	0x00d8
                           0000FF   785 _MODE	=	0x00ff
                           0000FE   786 _RE	=	0x00fe
                           0000FD   787 _SLAVE	=	0x00fd
                           0000FC   788 _FE	=	0x00fc
                           0000FB   789 _ERR	=	0x00fb
                           0000FA   790 _RX_BYTE	=	0x00fa
                           0000F9   791 _TX_BYTE	=	0x00f9
                           0000F8   792 _ACTIVE	=	0x00f8
                                    793 ;--------------------------------------------------------
                                    794 ; overlayable register banks
                                    795 ;--------------------------------------------------------
                                    796 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        797 	.ds 8
                                    798 ;--------------------------------------------------------
                                    799 ; internal ram data
                                    800 ;--------------------------------------------------------
                                    801 	.area DSEG    (DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; overlayable items in internal ram 
                                    804 ;--------------------------------------------------------
                                    805 ;--------------------------------------------------------
                                    806 ; indirectly addressable internal ram data
                                    807 ;--------------------------------------------------------
                                    808 	.area ISEG    (DATA)
                                    809 ;--------------------------------------------------------
                                    810 ; absolute internal ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area IABS    (ABS,DATA)
                                    813 	.area IABS    (ABS,DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; bit data
                                    816 ;--------------------------------------------------------
                                    817 	.area BSEG    (BIT)
                                    818 ;--------------------------------------------------------
                                    819 ; paged external ram data
                                    820 ;--------------------------------------------------------
                                    821 	.area PSEG    (PAG,XDATA)
                                    822 ;--------------------------------------------------------
                                    823 ; external ram data
                                    824 ;--------------------------------------------------------
                                    825 	.area XSEG    (XDATA)
                           0061A6   826 _MONMUX	=	0x61a6
                           0061A6   827 _OPAMPMC	=	0x61a6
                           006230   828 _I2CCFG	=	0x6230
                           006231   829 _I2CSTAT	=	0x6231
                           006232   830 _I2CDATA	=	0x6232
                           006233   831 _I2CADDR	=	0x6233
                           006234   832 _I2CWC	=	0x6234
                           006235   833 _I2CIO	=	0x6235
                           006243   834 _OBSSEL0	=	0x6243
                           006244   835 _OBSSEL1	=	0x6244
                           006245   836 _OBSSEL2	=	0x6245
                           006246   837 _OBSSEL3	=	0x6246
                           006247   838 _OBSSEL4	=	0x6247
                           006248   839 _OBSSEL5	=	0x6248
                           006249   840 _CHVER	=	0x6249
                           00624A   841 _CHIPID	=	0x624a
                           00624B   842 _TESTREG0	=	0x624b
                           006260   843 _DBGDATA	=	0x6260
                           006262   844 _SRCRC	=	0x6262
                           006264   845 _BATTMON	=	0x6264
                           006265   846 _IVCTRL	=	0x6265
                           006270   847 _FCTL	=	0x6270
                           006271   848 _FADDRL	=	0x6271
                           006272   849 _FADDRH	=	0x6272
                           006273   850 _FWDATA	=	0x6273
                           006276   851 _CHIPINFO0	=	0x6276
                           006277   852 _CHIPINFO1	=	0x6277
                           006281   853 _IRCTL	=	0x6281
                           006290   854 _CLD	=	0x6290
                           0062A0   855 _XX_T1CCTL0	=	0x62a0
                           0062A1   856 _XX_T1CCTL1	=	0x62a1
                           0062A2   857 _XX_T1CCTL2	=	0x62a2
                           0062A3   858 _T1CCTL3	=	0x62a3
                           0062A4   859 _T1CCTL4	=	0x62a4
                           0062A6   860 _XX_T1CC0L	=	0x62a6
                           0062A7   861 _XX_T1CC0H	=	0x62a7
                           0062A8   862 _XX_T1CC1L	=	0x62a8
                           0062A9   863 _XX_T1CC1H	=	0x62a9
                           0062AA   864 _XX_T1CC2L	=	0x62aa
                           0062AB   865 _XX_T1CC2H	=	0x62ab
                           0062AC   866 _T1CC3L	=	0x62ac
                           0062AD   867 _T1CC3H	=	0x62ad
                           0062AE   868 _T1CC4L	=	0x62ae
                           0062AF   869 _T1CC4H	=	0x62af
                           0062B0   870 _STCC	=	0x62b0
                           0062B1   871 _STCS	=	0x62b1
                           0062B2   872 _STCV0	=	0x62b2
                           0062B3   873 _STCV1	=	0x62b3
                           0062B4   874 _STCV2	=	0x62b4
                           0062C0   875 _OPAMPC	=	0x62c0
                           0062C1   876 _OPAMPS	=	0x62c1
                           0062D0   877 _CMPCTL	=	0x62d0
                           006000   878 _RFCORE_RAM	=	0x6000
                           006000   879 _RXFIFO	=	0x6000
                           006080   880 _TXFIFO	=	0x6080
                           006100   881 _SRC_ADDR_TABLE	=	0x6100
                           006160   882 _SRCRESMASK0	=	0x6160
                           006161   883 _SRCRESMASK1	=	0x6161
                           006162   884 _SRCRESMASK2	=	0x6162
                           006163   885 _SRCRESINDEX	=	0x6163
                           006164   886 _SRCEXTPENDEN0	=	0x6164
                           006165   887 _SRCEXTPENDEN1	=	0x6165
                           006166   888 _SRCEXTPENDEN2	=	0x6166
                           006167   889 _SRCSHORTPENDEN0	=	0x6167
                           006168   890 _SRCSHORTPENDEN1	=	0x6168
                           006169   891 _SRCSHORTPENDEN2	=	0x6169
                           00616A   892 _EXT_ADDR0	=	0x616a
                           00616B   893 _EXT_ADDR1	=	0x616b
                           00616C   894 _EXT_ADDR2	=	0x616c
                           00616D   895 _EXT_ADDR3	=	0x616d
                           00616E   896 _EXT_ADDR4	=	0x616e
                           00616F   897 _EXT_ADDR5	=	0x616f
                           006170   898 _EXT_ADDR6	=	0x6170
                           006171   899 _EXT_ADDR7	=	0x6171
                           006172   900 _PAN_ID0	=	0x6172
                           006173   901 _PAN_ID1	=	0x6173
                           006174   902 _SHORT_ADDR0	=	0x6174
                           006175   903 _SHORT_ADDR1	=	0x6175
                           006180   904 _FRMFILT0	=	0x6180
                           006181   905 _FRMFILT1	=	0x6181
                           006182   906 _SRCMATCH	=	0x6182
                           006183   907 _SRCSHORTEN0	=	0x6183
                           006184   908 _SRCSHORTEN1	=	0x6184
                           006185   909 _SRCSHORTEN2	=	0x6185
                           006186   910 _SRCEXTEN0	=	0x6186
                           006187   911 _SRCEXTEN1	=	0x6187
                           006188   912 _SRCEXTEN2	=	0x6188
                           006189   913 _FRMCTRL0	=	0x6189
                           00618A   914 _FRMCTRL1	=	0x618a
                           00618B   915 _RXENABLE	=	0x618b
                           00618C   916 _RXMASKSET	=	0x618c
                           00618D   917 _RXMASKCLR	=	0x618d
                           00618E   918 _FREQTUNE	=	0x618e
                           00618F   919 _FREQCTRL	=	0x618f
                           006190   920 _TXPOWER	=	0x6190
                           006191   921 _TXCTRL	=	0x6191
                           006192   922 _FSMSTAT0	=	0x6192
                           006193   923 _FSMSTAT1	=	0x6193
                           006194   924 _FIFOPCTRL	=	0x6194
                           006195   925 _FSMCTRL	=	0x6195
                           006196   926 _CCACTRL0	=	0x6196
                           006197   927 _CCACTRL1	=	0x6197
                           006198   928 _RSSI	=	0x6198
                           006199   929 _RSSISTAT	=	0x6199
                           00619A   930 _RXFIRST	=	0x619a
                           00619B   931 _RXFIFOCNT	=	0x619b
                           00619C   932 _TXFIFOCNT	=	0x619c
                           00619D   933 _RXFIRST_PTR	=	0x619d
                           00619E   934 _RXLAST_PTR	=	0x619e
                           00619F   935 _RXP1_PTR	=	0x619f
                           0061A1   936 _TXFIRST_PTR	=	0x61a1
                           0061A2   937 _TXLAST_PTR	=	0x61a2
                           0061A3   938 _RFIRQM0	=	0x61a3
                           0061A4   939 _RFIRQM1	=	0x61a4
                           0061A5   940 _RFERRM	=	0x61a5
                           0061A7   941 _RFRND	=	0x61a7
                           0061A8   942 _MDMCTRL0	=	0x61a8
                           0061A9   943 _MDMCTRL1	=	0x61a9
                           0061AA   944 _FREQEST	=	0x61aa
                           0061AB   945 _RXCTRL	=	0x61ab
                           0061AC   946 _FSCTRL	=	0x61ac
                           0061AD   947 _FSCAL0	=	0x61ad
                           0061AE   948 _FSCAL1	=	0x61ae
                           0061AF   949 _FSCAL2	=	0x61af
                           0061B0   950 _FSCAL3	=	0x61b0
                           0061B1   951 _AGCCTRL0	=	0x61b1
                           0061B2   952 _AGCCTRL1	=	0x61b2
                           0061B3   953 _AGCCTRL2	=	0x61b3
                           0061B4   954 _AGCCTRL3	=	0x61b4
                           0061B5   955 _ADCTEST0	=	0x61b5
                           0061B6   956 _ADCTEST1	=	0x61b6
                           0061B7   957 _ADCTEST2	=	0x61b7
                           0061B8   958 _MDMTEST0	=	0x61b8
                           0061B9   959 _MDMTEST1	=	0x61b9
                           0061BA   960 _DACTEST0	=	0x61ba
                           0061BB   961 _DACTEST1	=	0x61bb
                           0061BC   962 _DACTEST2	=	0x61bc
                           0061BD   963 _ATEST	=	0x61bd
                           0061BE   964 _PTEST0	=	0x61be
                           0061BF   965 _PTEST1	=	0x61bf
                           0061FA   966 _TXFILTCFG	=	0x61fa
                           0061EB   967 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   968 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   969 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   970 _CSPPROG0	=	0x61c0
                           0061C1   971 _CSPPROG1	=	0x61c1
                           0061C2   972 _CSPPROG2	=	0x61c2
                           0061C3   973 _CSPPROG3	=	0x61c3
                           0061C4   974 _CSPPROG4	=	0x61c4
                           0061C5   975 _CSPPROG5	=	0x61c5
                           0061C6   976 _CSPPROG6	=	0x61c6
                           0061C7   977 _CSPPROG7	=	0x61c7
                           0061C8   978 _CSPPROG8	=	0x61c8
                           0061C9   979 _CSPPROG9	=	0x61c9
                           0061CA   980 _CSPPROG10	=	0x61ca
                           0061CB   981 _CSPPROG11	=	0x61cb
                           0061CC   982 _CSPPROG12	=	0x61cc
                           0061CD   983 _CSPPROG13	=	0x61cd
                           0061CE   984 _CSPPROG14	=	0x61ce
                           0061CF   985 _CSPPROG15	=	0x61cf
                           0061D0   986 _CSPPROG16	=	0x61d0
                           0061D1   987 _CSPPROG17	=	0x61d1
                           0061D2   988 _CSPPROG18	=	0x61d2
                           0061D3   989 _CSPPROG19	=	0x61d3
                           0061D4   990 _CSPPROG20	=	0x61d4
                           0061D5   991 _CSPPROG21	=	0x61d5
                           0061D6   992 _CSPPROG22	=	0x61d6
                           0061D7   993 _CSPPROG23	=	0x61d7
                           0061E0   994 _CSPCTRL	=	0x61e0
                           0061E1   995 _CSPSTAT	=	0x61e1
                           0061E2   996 _CSPX	=	0x61e2
                           0061E3   997 _CSPY	=	0x61e3
                           0061E4   998 _CSPZ	=	0x61e4
                           0061E5   999 _CSPT	=	0x61e5
                           006200  1000 _USBADDR	=	0x6200
                           006201  1001 _USBPOW	=	0x6201
                           006202  1002 _USBIIF	=	0x6202
                           006204  1003 _USBOIF	=	0x6204
                           006206  1004 _USBCIF	=	0x6206
                           006207  1005 _USBIIE	=	0x6207
                           006209  1006 _USBOIE	=	0x6209
                           00620B  1007 _USBCIE	=	0x620b
                           00620C  1008 _USBFRML	=	0x620c
                           00620D  1009 _USBFRMH	=	0x620d
                           00620E  1010 _USBINDEX	=	0x620e
                           00620F  1011 _USBCTRL	=	0x620f
                           006210  1012 _USBMAXI	=	0x6210
                           006211  1013 _USBCS0	=	0x6211
                           006211  1014 _USBCSIL	=	0x6211
                           006212  1015 _USBCSIH	=	0x6212
                           006213  1016 _USBMAXO	=	0x6213
                           006214  1017 _USBCSOL	=	0x6214
                           006215  1018 _USBCSOH	=	0x6215
                           006216  1019 _USBCNT0	=	0x6216
                           006216  1020 _USBCNTL	=	0x6216
                           006217  1021 _USBCNTH	=	0x6217
                           006220  1022 _USBF0	=	0x6220
                           006222  1023 _USBF1	=	0x6222
                           006224  1024 _USBF2	=	0x6224
                           006226  1025 _USBF3	=	0x6226
                           006228  1026 _USBF4	=	0x6228
                           00622A  1027 _USBF5	=	0x622a
                           007080  1028 _X_P0	=	0x7080
                           007086  1029 _X_U0CSR	=	0x7086
                           007089  1030 _X_P0IFG	=	0x7089
                           00708A  1031 _X_P1IFG	=	0x708a
                           00708B  1032 _X_P2IFG	=	0x708b
                           00708C  1033 _X_PICTL	=	0x708c
                           00708D  1034 _X_P1IEN	=	0x708d
                           00708F  1035 _X_P0INP	=	0x708f
                           007090  1036 _X_P1	=	0x7090
                           007091  1037 _X_RFIRQF1	=	0x7091
                           007093  1038 _X_MPAGE	=	0x7093
                           007093  1039 _X__XPAGE	=	0x7093
                           007094  1040 _X_T2CTRL	=	0x7094
                           007095  1041 _X_ST0	=	0x7095
                           007096  1042 _X_ST1	=	0x7096
                           007097  1043 _X_ST2	=	0x7097
                           00709C  1044 _X_T2EVTCFG	=	0x709c
                           00709D  1045 _X_SLEEPSTA	=	0x709d
                           00709E  1046 _X_CLKCONSTA	=	0x709e
                           00709F  1047 _X_FMAP	=	0x709f
                           00709F  1048 _X_PSBANK	=	0x709f
                           0070A0  1049 _X_P2	=	0x70a0
                           0070A1  1050 _X_T2IRQF	=	0x70a1
                           0070A2  1051 _X_T2M0	=	0x70a2
                           0070A3  1052 _X_T2M1	=	0x70a3
                           0070A4  1053 _X_T2MOVF0	=	0x70a4
                           0070A5  1054 _X_T2MOVF1	=	0x70a5
                           0070A6  1055 _X_T2MOVF2	=	0x70a6
                           0070A7  1056 _X_T2IRQM	=	0x70a7
                           0070AB  1057 _X_P0IEN	=	0x70ab
                           0070AC  1058 _X_P2IEN	=	0x70ac
                           0070AD  1059 _X_STLOAD	=	0x70ad
                           0070AE  1060 _X_PMUX	=	0x70ae
                           0070AF  1061 _X_T1STAT	=	0x70af
                           0070B1  1062 _X_ENCDI	=	0x70b1
                           0070B2  1063 _X_ENCDO	=	0x70b2
                           0070B3  1064 _X_ENCCS	=	0x70b3
                           0070B4  1065 _X_ADCCON1	=	0x70b4
                           0070B5  1066 _X_ADCCON2	=	0x70b5
                           0070B6  1067 _X_ADCCON3	=	0x70b6
                           0070BA  1068 _X_ADCL	=	0x70ba
                           0070BB  1069 _X_ADCH	=	0x70bb
                           0070BC  1070 _X_RNDL	=	0x70bc
                           0070BD  1071 _X_RNDH	=	0x70bd
                           0070BE  1072 _X_SLEEPCMD	=	0x70be
                           0070BF  1073 _X_RFERRF	=	0x70bf
                           0070C1  1074 _X_U0DBUF	=	0x70c1
                           0070C2  1075 _X_U0BAUD	=	0x70c2
                           0070C3  1076 _X_T2MSEL	=	0x70c3
                           0070C4  1077 _X_U0UCR	=	0x70c4
                           0070C5  1078 _X_U0GCR	=	0x70c5
                           0070C6  1079 _X_CLKCONCMD	=	0x70c6
                           0070C7  1080 _X_MEMCTR	=	0x70c7
                           0070C9  1081 _X_WDCTL	=	0x70c9
                           0070CA  1082 _X_T3CNT	=	0x70ca
                           0070CB  1083 _X_T3CTL	=	0x70cb
                           0070CC  1084 _X_T3CCTL0	=	0x70cc
                           0070CD  1085 _X_T3CC0	=	0x70cd
                           0070CE  1086 _X_T3CCTL1	=	0x70ce
                           0070CF  1087 _X_T3CC1	=	0x70cf
                           0070D1  1088 _X_DMAIRQ	=	0x70d1
                           0070D2  1089 _X_DMA1CFGL	=	0x70d2
                           0070D3  1090 _X_DMA1CFGH	=	0x70d3
                           0070D4  1091 _X_DMA0CFGL	=	0x70d4
                           0070D5  1092 _X_DMA0CFGH	=	0x70d5
                           0070D6  1093 _X_DMAARM	=	0x70d6
                           0070D7  1094 _X_DMAREQ	=	0x70d7
                           0070D8  1095 _X_TIMIF	=	0x70d8
                           0070D9  1096 _X_RFD	=	0x70d9
                           0070DA  1097 _X_T1CC0L	=	0x70da
                           0070DB  1098 _X_T1CC0H	=	0x70db
                           0070DC  1099 _X_T1CC1L	=	0x70dc
                           0070DD  1100 _X_T1CC1H	=	0x70dd
                           0070DE  1101 _X_T1CC2L	=	0x70de
                           0070DF  1102 _X_T1CC2H	=	0x70df
                           0070E1  1103 _X_RFST	=	0x70e1
                           0070E2  1104 _X_T1CNTL	=	0x70e2
                           0070E3  1105 _X_T1CNTH	=	0x70e3
                           0070E4  1106 _X_T1CTL	=	0x70e4
                           0070E5  1107 _X_T1CCTL0	=	0x70e5
                           0070E6  1108 _X_T1CCTL1	=	0x70e6
                           0070E7  1109 _X_T1CCTL2	=	0x70e7
                           0070E9  1110 _X_RFIRQF0	=	0x70e9
                           0070EA  1111 _X_T4CNT	=	0x70ea
                           0070EB  1112 _X_T4CTL	=	0x70eb
                           0070EC  1113 _X_T4CCTL0	=	0x70ec
                           0070ED  1114 _X_T4CC0	=	0x70ed
                           0070EE  1115 _X_T4CCTL1	=	0x70ee
                           0070EF  1116 _X_T4CC1	=	0x70ef
                           0070F1  1117 _X_PERCFG	=	0x70f1
                           0070F2  1118 _X_APCFG	=	0x70f2
                           0070F3  1119 _X_P0SEL	=	0x70f3
                           0070F4  1120 _X_P1SEL	=	0x70f4
                           0070F5  1121 _X_P2SEL	=	0x70f5
                           0070F6  1122 _X_P1INP	=	0x70f6
                           0070F7  1123 _X_P2INP	=	0x70f7
                           0070F8  1124 _X_U1CSR	=	0x70f8
                           0070F9  1125 _X_U1DBUF	=	0x70f9
                           0070FA  1126 _X_U1BAUD	=	0x70fa
                           0070FB  1127 _X_U1UCR	=	0x70fb
                           0070FC  1128 _X_U1GCR	=	0x70fc
                           0070FD  1129 _X_P0DIR	=	0x70fd
                           0070FE  1130 _X_P1DIR	=	0x70fe
                           0070FF  1131 _X_P2DIR	=	0x70ff
                           007800  1132 _X_INFOPAGE	=	0x7800
                           00780C  1133 _X_IEEE_ADDR	=	0x780c
      000000                       1134 _neighbor_memb_memb_count:
      000000                       1135 	.ds 2
      000002                       1136 _neighbor_memb_memb_mem:
      000002                       1137 	.ds 84
      000056                       1138 _packet_memb_memb_count:
      000056                       1139 	.ds 6
      00005C                       1140 _packet_memb_memb_mem:
      00005C                       1141 	.ds 54
      000092                       1142 _metadata_memb_memb_count:
      000092                       1143 	.ds 6
      000098                       1144 _metadata_memb_memb_mem:
      000098                       1145 	.ds 42
      0000C2                       1146 _send_packet_initialized_1_265:
      0000C2                       1147 	.ds 1
      0000C3                       1148 _send_packet_seqno_1_265:
      0000C3                       1149 	.ds 2
                                   1150 ;--------------------------------------------------------
                                   1151 ; absolute external ram data
                                   1152 ;--------------------------------------------------------
                                   1153 	.area XABS    (ABS,XDATA)
                                   1154 ;--------------------------------------------------------
                                   1155 ; external initialized ram data
                                   1156 ;--------------------------------------------------------
                                   1157 	.area XISEG   (XDATA)
      000000                       1158 _neighbor_memb:
      000000                       1159 	.ds 10
      00000A                       1160 _packet_memb:
      00000A                       1161 	.ds 10
      000014                       1162 _metadata_memb:
      000014                       1163 	.ds 10
      00001E                       1164 _neighbor_list_list:
      00001E                       1165 	.ds 3
      000021                       1166 _neighbor_list:
      000021                       1167 	.ds 3
                                   1168 	.area HOME    (CODE)
                                   1169 	.area GSINIT0 (CODE)
                                   1170 	.area GSINIT1 (CODE)
                                   1171 	.area GSINIT2 (CODE)
                                   1172 	.area GSINIT3 (CODE)
                                   1173 	.area GSINIT4 (CODE)
                                   1174 	.area GSINIT5 (CODE)
                                   1175 	.area GSINIT  (CODE)
                                   1176 	.area GSFINAL (CODE)
                                   1177 	.area CSEG    (CODE)
                                   1178 ;--------------------------------------------------------
                                   1179 ; global & static initialisations
                                   1180 ;--------------------------------------------------------
                                   1181 	.area HOME    (CODE)
                                   1182 	.area GSINIT  (CODE)
                                   1183 	.area GSFINAL (CODE)
                                   1184 	.area GSINIT  (CODE)
                                   1185 ;------------------------------------------------------------
                                   1186 ;Allocation info for local variables in function 'send_packet'
                                   1187 ;------------------------------------------------------------
                                   1188 ;ptr                       Allocated to stack - sp -26
                                   1189 ;sent                      Allocated to stack - sp -20
                                   1190 ;q                         Allocated to stack - sp -11
                                   1191 ;n                         Allocated to stack - sp -8
                                   1192 ;addr                      Allocated to stack - sp -5
                                   1193 ;metadata                  Allocated to stack - sp -2
                                   1194 ;sloc0                     Allocated to stack - sp -17
                                   1195 ;sloc1                     Allocated to stack - sp -14
                                   1196 ;initialized               Allocated with name '_send_packet_initialized_1_265'
                                   1197 ;seqno                     Allocated with name '_send_packet_seqno_1_265'
                                   1198 ;------------------------------------------------------------
                                   1199 ;	../../core/net/mac/csma.c:321: static uint8_t initialized = 0;
      000000 90r00rC2         [24] 1200 	mov	dptr,#_send_packet_initialized_1_265
      000003 E4               [12] 1201 	clr	a
      000004 F0               [24] 1202 	movx	@dptr,a
                                   1203 ;--------------------------------------------------------
                                   1204 ; Home
                                   1205 ;--------------------------------------------------------
                                   1206 	.area HOME    (CODE)
                                   1207 	.area HOME    (CODE)
                                   1208 ;--------------------------------------------------------
                                   1209 ; code
                                   1210 ;--------------------------------------------------------
                                   1211 	.area BANK1   (CODE)
                                   1212 ;------------------------------------------------------------
                                   1213 ;Allocation info for local variables in function 'neighbor_queue_from_addr'
                                   1214 ;------------------------------------------------------------
                                   1215 ;addr                      Allocated to stack - sp -2
                                   1216 ;n                         Allocated to registers r2 r3 r4 
                                   1217 ;------------------------------------------------------------
                                   1218 ;	../../core/net/mac/csma.c:129: neighbor_queue_from_addr(const linkaddr_t *addr)
                                   1219 ;	-----------------------------------------
                                   1220 ;	 function neighbor_queue_from_addr
                                   1221 ;	-----------------------------------------
      000000                       1222 _neighbor_queue_from_addr:
                           000007  1223 	ar7 = 0x07
                           000006  1224 	ar6 = 0x06
                           000005  1225 	ar5 = 0x05
                           000004  1226 	ar4 = 0x04
                           000003  1227 	ar3 = 0x03
                           000002  1228 	ar2 = 0x02
                           000001  1229 	ar1 = 0x01
                           000000  1230 	ar0 = 0x00
      000000 C0 82            [24] 1231 	push	dpl
      000002 C0 83            [24] 1232 	push	dph
      000004 C0 F0            [24] 1233 	push	b
                                   1234 ;	../../core/net/mac/csma.c:131: struct neighbor_queue *n = list_head(neighbor_list);
      000006 90r00r21         [24] 1235 	mov	dptr,#_neighbor_list
      000009 E0               [24] 1236 	movx	a,@dptr
      00000A FA               [12] 1237 	mov	r2,a
      00000B A3               [24] 1238 	inc	dptr
      00000C E0               [24] 1239 	movx	a,@dptr
      00000D FB               [12] 1240 	mov	r3,a
      00000E A3               [24] 1241 	inc	dptr
      00000F E0               [24] 1242 	movx	a,@dptr
      000010 FC               [12] 1243 	mov	r4,a
      000011 8A 82            [24] 1244 	mov	dpl,r2
      000013 8B 83            [24] 1245 	mov	dph,r3
      000015 8C F0            [24] 1246 	mov	b,r4
      000017 78r00            [12] 1247 	mov	r0,#_list_head
      000019 79s00            [12] 1248 	mov	r1,#(_list_head >> 8)
      00001B 7As00            [12] 1249 	mov	r2,#(_list_head >> 16)
      00001D 12r00r00         [24] 1250 	lcall	__sdcc_banked_call
      000020 AA 82            [24] 1251 	mov	r2,dpl
      000022 AB 83            [24] 1252 	mov	r3,dph
      000024 AC F0            [24] 1253 	mov	r4,b
                                   1254 ;	../../core/net/mac/csma.c:132: while(n != NULL) {
      000026                       1255 00103$:
      000026 EA               [12] 1256 	mov	a,r2
      000027 4B               [12] 1257 	orl	a,r3
      000028 60 6D            [24] 1258 	jz	00105$
                                   1259 ;	../../core/net/mac/csma.c:133: if(linkaddr_cmp(&n->addr, addr)) {
      00002A 74 03            [12] 1260 	mov	a,#0x03
      00002C 2A               [12] 1261 	add	a,r2
      00002D FD               [12] 1262 	mov	r5,a
      00002E E4               [12] 1263 	clr	a
      00002F 3B               [12] 1264 	addc	a,r3
      000030 FE               [12] 1265 	mov	r6,a
      000031 8C 07            [24] 1266 	mov	ar7,r4
      000033 C0 04            [24] 1267 	push	ar4
      000035 C0 03            [24] 1268 	push	ar3
      000037 C0 02            [24] 1269 	push	ar2
      000039 E5 81            [12] 1270 	mov	a,sp
      00003B 24 FB            [12] 1271 	add	a,#0xfb
      00003D F8               [12] 1272 	mov	r0,a
      00003E E6               [12] 1273 	mov	a,@r0
      00003F C0 E0            [24] 1274 	push	acc
      000041 08               [12] 1275 	inc	r0
      000042 E6               [12] 1276 	mov	a,@r0
      000043 C0 E0            [24] 1277 	push	acc
      000045 08               [12] 1278 	inc	r0
      000046 E6               [12] 1279 	mov	a,@r0
      000047 C0 E0            [24] 1280 	push	acc
      000049 8D 82            [24] 1281 	mov	dpl,r5
      00004B 8E 83            [24] 1282 	mov	dph,r6
      00004D 8F F0            [24] 1283 	mov	b,r7
      00004F 78r00            [12] 1284 	mov	r0,#_linkaddr_cmp
      000051 79s00            [12] 1285 	mov	r1,#(_linkaddr_cmp >> 8)
      000053 7As00            [12] 1286 	mov	r2,#(_linkaddr_cmp >> 16)
      000055 12r00r00         [24] 1287 	lcall	__sdcc_banked_call
      000058 AE 82            [24] 1288 	mov	r6,dpl
      00005A AF 83            [24] 1289 	mov	r7,dph
      00005C 15 81            [12] 1290 	dec	sp
      00005E 15 81            [12] 1291 	dec	sp
      000060 15 81            [12] 1292 	dec	sp
      000062 D0 02            [24] 1293 	pop	ar2
      000064 D0 03            [24] 1294 	pop	ar3
      000066 D0 04            [24] 1295 	pop	ar4
      000068 EE               [12] 1296 	mov	a,r6
      000069 4F               [12] 1297 	orl	a,r7
      00006A 60 08            [24] 1298 	jz	00102$
                                   1299 ;	../../core/net/mac/csma.c:134: return n;
      00006C 8A 82            [24] 1300 	mov	dpl,r2
      00006E 8B 83            [24] 1301 	mov	dph,r3
      000070 8C F0            [24] 1302 	mov	b,r4
      000072 80 29            [24] 1303 	sjmp	00106$
      000074                       1304 00102$:
                                   1305 ;	../../core/net/mac/csma.c:136: n = list_item_next(n);
      000074 8A 05            [24] 1306 	mov	ar5,r2
      000076 8B 06            [24] 1307 	mov	ar6,r3
      000078 8C 07            [24] 1308 	mov	ar7,r4
      00007A 8D 82            [24] 1309 	mov	dpl,r5
      00007C 8E 83            [24] 1310 	mov	dph,r6
      00007E 8F F0            [24] 1311 	mov	b,r7
      000080 78r00            [12] 1312 	mov	r0,#_list_item_next
      000082 79s00            [12] 1313 	mov	r1,#(_list_item_next >> 8)
      000084 7As00            [12] 1314 	mov	r2,#(_list_item_next >> 16)
      000086 12r00r00         [24] 1315 	lcall	__sdcc_banked_call
      000089 AD 82            [24] 1316 	mov	r5,dpl
      00008B AE 83            [24] 1317 	mov	r6,dph
      00008D AF F0            [24] 1318 	mov	r7,b
      00008F 8D 02            [24] 1319 	mov	ar2,r5
      000091 8E 03            [24] 1320 	mov	ar3,r6
      000093 8F 04            [24] 1321 	mov	ar4,r7
      000095 80 8F            [24] 1322 	sjmp	00103$
      000097                       1323 00105$:
                                   1324 ;	../../core/net/mac/csma.c:138: return NULL;
      000097 90 00 00         [24] 1325 	mov	dptr,#0x0000
      00009A 75 F0 00         [24] 1326 	mov	b,#0x00
      00009D                       1327 00106$:
      00009D 15 81            [12] 1328 	dec	sp
      00009F 15 81            [12] 1329 	dec	sp
      0000A1 15 81            [12] 1330 	dec	sp
      0000A3 02r00r00         [24] 1331 	ljmp	__sdcc_banked_ret
                                   1332 ;------------------------------------------------------------
                                   1333 ;Allocation info for local variables in function 'default_timebase'
                                   1334 ;------------------------------------------------------------
                                   1335 ;time                      Allocated to registers r7 r6 
                                   1336 ;------------------------------------------------------------
                                   1337 ;	../../core/net/mac/csma.c:142: default_timebase(void)
                                   1338 ;	-----------------------------------------
                                   1339 ;	 function default_timebase
                                   1340 ;	-----------------------------------------
      0000A6                       1341 _default_timebase:
                                   1342 ;	../../core/net/mac/csma.c:147: time = NETSTACK_RDC.channel_check_interval();
      0000A6 90r00r15         [24] 1343 	mov	dptr,#(_nullrdc_driver + 0x0015)
      0000A9 E4               [12] 1344 	clr	a
      0000AA 93               [24] 1345 	movc	a,@a+dptr
      0000AB FD               [12] 1346 	mov	r5,a
      0000AC A3               [24] 1347 	inc	dptr
      0000AD E4               [12] 1348 	clr	a
      0000AE 93               [24] 1349 	movc	a,@a+dptr
      0000AF FE               [12] 1350 	mov	r6,a
      0000B0 A3               [24] 1351 	inc	dptr
      0000B1 E4               [12] 1352 	clr	a
      0000B2 93               [24] 1353 	movc	a,@a+dptr
      0000B3 FF               [12] 1354 	mov	r7,a
      0000B4 C0 07            [24] 1355 	push	ar7
      0000B6 C0 05            [24] 1356 	push	ar5
      0000B8 C0 06            [24] 1357 	push	ar6
      0000BA C0 07            [24] 1358 	push	ar7
      0000BC D0 02            [24] 1359 	pop	ar2
      0000BE D0 01            [24] 1360 	pop	ar1
      0000C0 D0 00            [24] 1361 	pop	ar0
      0000C2 12r00r00         [24] 1362 	lcall	__sdcc_banked_call
      0000C5 AD 82            [24] 1363 	mov	r5,dpl
      0000C7 AE 83            [24] 1364 	mov	r6,dph
      0000C9 D0 07            [24] 1365 	pop	ar7
      0000CB 8D 07            [24] 1366 	mov	ar7,r5
                                   1367 ;	../../core/net/mac/csma.c:152: if(time == 0) {
      0000CD EF               [12] 1368 	mov	a,r7
      0000CE 4E               [12] 1369 	orl	a,r6
                                   1370 ;	../../core/net/mac/csma.c:153: time = CLOCK_SECOND / NETSTACK_RDC_CHANNEL_CHECK_RATE;
      0000CF 70 03            [24] 1371 	jnz	00102$
      0000D1 7F 10            [12] 1372 	mov	r7,#0x10
      0000D3 FE               [12] 1373 	mov	r6,a
      0000D4                       1374 00102$:
                                   1375 ;	../../core/net/mac/csma.c:155: return time;
      0000D4 8F 82            [24] 1376 	mov	dpl,r7
      0000D6 8E 83            [24] 1377 	mov	dph,r6
      0000D8 02r00r00         [24] 1378 	ljmp	__sdcc_banked_ret
                                   1379 ;------------------------------------------------------------
                                   1380 ;Allocation info for local variables in function 'transmit_packet_list'
                                   1381 ;------------------------------------------------------------
                                   1382 ;ptr                       Allocated to registers r5 r6 r7 
                                   1383 ;n                         Allocated to registers r5 r6 r7 
                                   1384 ;q                         Allocated to stack - sp -2
                                   1385 ;------------------------------------------------------------
                                   1386 ;	../../core/net/mac/csma.c:159: transmit_packet_list(void *ptr)
                                   1387 ;	-----------------------------------------
                                   1388 ;	 function transmit_packet_list
                                   1389 ;	-----------------------------------------
      0000DB                       1390 _transmit_packet_list:
      0000DB 05 81            [12] 1391 	inc	sp
      0000DD 05 81            [12] 1392 	inc	sp
      0000DF 05 81            [12] 1393 	inc	sp
      0000E1 AD 82            [24] 1394 	mov	r5,dpl
      0000E3 AE 83            [24] 1395 	mov	r6,dph
      0000E5 AF F0            [24] 1396 	mov	r7,b
                                   1397 ;	../../core/net/mac/csma.c:161: struct neighbor_queue *n = ptr;
                                   1398 ;	../../core/net/mac/csma.c:162: if(n) {
      0000E7 ED               [12] 1399 	mov	a,r5
      0000E8 4E               [12] 1400 	orl	a,r6
      0000E9 70 03            [24] 1401 	jnz	00113$
      0000EB 02r01r8C         [24] 1402 	ljmp	00105$
      0000EE                       1403 00113$:
                                   1404 ;	../../core/net/mac/csma.c:163: struct rdc_buf_list *q = list_head(n->queued_packet_list);
      0000EE 74 27            [12] 1405 	mov	a,#0x27
      0000F0 2D               [12] 1406 	add	a,r5
      0000F1 FA               [12] 1407 	mov	r2,a
      0000F2 E4               [12] 1408 	clr	a
      0000F3 3E               [12] 1409 	addc	a,r6
      0000F4 FB               [12] 1410 	mov	r3,a
      0000F5 8F 04            [24] 1411 	mov	ar4,r7
      0000F7 8A 82            [24] 1412 	mov	dpl,r2
      0000F9 8B 83            [24] 1413 	mov	dph,r3
      0000FB 8C F0            [24] 1414 	mov	b,r4
      0000FD 12r00r00         [24] 1415 	lcall	__gptrget
      000100 FA               [12] 1416 	mov	r2,a
      000101 A3               [24] 1417 	inc	dptr
      000102 12r00r00         [24] 1418 	lcall	__gptrget
      000105 FB               [12] 1419 	mov	r3,a
      000106 A3               [24] 1420 	inc	dptr
      000107 12r00r00         [24] 1421 	lcall	__gptrget
      00010A FC               [12] 1422 	mov	r4,a
      00010B 8A 82            [24] 1423 	mov	dpl,r2
      00010D 8B 83            [24] 1424 	mov	dph,r3
      00010F 8C F0            [24] 1425 	mov	b,r4
      000111 C0 07            [24] 1426 	push	ar7
      000113 C0 06            [24] 1427 	push	ar6
      000115 C0 05            [24] 1428 	push	ar5
      000117 78r00            [12] 1429 	mov	r0,#_list_head
      000119 79s00            [12] 1430 	mov	r1,#(_list_head >> 8)
      00011B 7As00            [12] 1431 	mov	r2,#(_list_head >> 16)
      00011D 12r00r00         [24] 1432 	lcall	__sdcc_banked_call
      000120 AA 82            [24] 1433 	mov	r2,dpl
      000122 AB 83            [24] 1434 	mov	r3,dph
      000124 AC F0            [24] 1435 	mov	r4,b
      000126 D0 05            [24] 1436 	pop	ar5
      000128 D0 06            [24] 1437 	pop	ar6
      00012A D0 07            [24] 1438 	pop	ar7
      00012C A8 81            [24] 1439 	mov	r0,sp
      00012E 18               [12] 1440 	dec	r0
      00012F 18               [12] 1441 	dec	r0
      000130 A6 02            [24] 1442 	mov	@r0,ar2
      000132 08               [12] 1443 	inc	r0
      000133 A6 03            [24] 1444 	mov	@r0,ar3
      000135 08               [12] 1445 	inc	r0
      000136 A6 04            [24] 1446 	mov	@r0,ar4
                                   1447 ;	../../core/net/mac/csma.c:164: if(q != NULL) {
      000138 A8 81            [24] 1448 	mov	r0,sp
      00013A 18               [12] 1449 	dec	r0
      00013B 18               [12] 1450 	dec	r0
      00013C E6               [12] 1451 	mov	a,@r0
      00013D 08               [12] 1452 	inc	r0
      00013E 46               [12] 1453 	orl	a,@r0
      00013F 60 4B            [24] 1454 	jz	00105$
                                   1455 ;	../../core/net/mac/csma.c:168: NETSTACK_RDC.send_list(packet_sent, n, q);
      000141 90r00r09         [24] 1456 	mov	dptr,#(_nullrdc_driver + 0x0009)
      000144 E4               [12] 1457 	clr	a
      000145 93               [24] 1458 	movc	a,@a+dptr
      000146 FA               [12] 1459 	mov	r2,a
      000147 A3               [24] 1460 	inc	dptr
      000148 E4               [12] 1461 	clr	a
      000149 93               [24] 1462 	movc	a,@a+dptr
      00014A FB               [12] 1463 	mov	r3,a
      00014B A3               [24] 1464 	inc	dptr
      00014C E4               [12] 1465 	clr	a
      00014D 93               [24] 1466 	movc	a,@a+dptr
      00014E FC               [12] 1467 	mov	r4,a
      00014F C0 04            [24] 1468 	push	ar4
      000151 C0 03            [24] 1469 	push	ar3
      000153 C0 02            [24] 1470 	push	ar2
      000155 E5 81            [12] 1471 	mov	a,sp
      000157 24 FB            [12] 1472 	add	a,#0xfb
      000159 F8               [12] 1473 	mov	r0,a
      00015A E6               [12] 1474 	mov	a,@r0
      00015B C0 E0            [24] 1475 	push	acc
      00015D 08               [12] 1476 	inc	r0
      00015E E6               [12] 1477 	mov	a,@r0
      00015F C0 E0            [24] 1478 	push	acc
      000161 08               [12] 1479 	inc	r0
      000162 E6               [12] 1480 	mov	a,@r0
      000163 C0 E0            [24] 1481 	push	acc
      000165 C0 05            [24] 1482 	push	ar5
      000167 C0 06            [24] 1483 	push	ar6
      000169 C0 07            [24] 1484 	push	ar7
      00016B C0 02            [24] 1485 	push	ar2
      00016D C0 03            [24] 1486 	push	ar3
      00016F C0 04            [24] 1487 	push	ar4
      000171 90r04r59         [24] 1488 	mov	dptr,#_packet_sent
      000174 75 F0s00         [24] 1489 	mov	b,#(_packet_sent >> 16)
      000177 D0 02            [24] 1490 	pop	ar2
      000179 D0 01            [24] 1491 	pop	ar1
      00017B D0 00            [24] 1492 	pop	ar0
      00017D 12r00r00         [24] 1493 	lcall	__sdcc_banked_call
      000180 E5 81            [12] 1494 	mov	a,sp
      000182 24 FA            [12] 1495 	add	a,#0xfa
      000184 F5 81            [12] 1496 	mov	sp,a
      000186 D0 02            [24] 1497 	pop	ar2
      000188 D0 03            [24] 1498 	pop	ar3
      00018A D0 04            [24] 1499 	pop	ar4
      00018C                       1500 00105$:
      00018C 15 81            [12] 1501 	dec	sp
      00018E 15 81            [12] 1502 	dec	sp
      000190 15 81            [12] 1503 	dec	sp
      000192 02r00r00         [24] 1504 	ljmp	__sdcc_banked_ret
                                   1505 ;------------------------------------------------------------
                                   1506 ;Allocation info for local variables in function 'free_packet'
                                   1507 ;------------------------------------------------------------
                                   1508 ;p                         Allocated to stack - sp -11
                                   1509 ;n                         Allocated to stack - sp -5
                                   1510 ;sloc0                     Allocated to stack - sp -2
                                   1511 ;------------------------------------------------------------
                                   1512 ;	../../core/net/mac/csma.c:174: free_packet(struct neighbor_queue *n, struct rdc_buf_list *p)
                                   1513 ;	-----------------------------------------
                                   1514 ;	 function free_packet
                                   1515 ;	-----------------------------------------
      000195                       1516 _free_packet:
      000195 C0 82            [24] 1517 	push	dpl
      000197 C0 83            [24] 1518 	push	dph
      000199 C0 F0            [24] 1519 	push	b
      00019B 05 81            [12] 1520 	inc	sp
      00019D 05 81            [12] 1521 	inc	sp
      00019F 05 81            [12] 1522 	inc	sp
                                   1523 ;	../../core/net/mac/csma.c:176: if(p != NULL) {
      0001A1 E5 81            [12] 1524 	mov	a,sp
      0001A3 24 F5            [12] 1525 	add	a,#0xf5
      0001A5 F8               [12] 1526 	mov	r0,a
      0001A6 E6               [12] 1527 	mov	a,@r0
      0001A7 08               [12] 1528 	inc	r0
      0001A8 46               [12] 1529 	orl	a,@r0
      0001A9 70 03            [24] 1530 	jnz	00114$
      0001AB 02r04r50         [24] 1531 	ljmp	00106$
      0001AE                       1532 00114$:
                                   1533 ;	../../core/net/mac/csma.c:178: list_remove(n->queued_packet_list, p);
      0001AE E5 81            [12] 1534 	mov	a,sp
      0001B0 24 F5            [12] 1535 	add	a,#0xf5
      0001B2 F8               [12] 1536 	mov	r0,a
      0001B3 A9 81            [24] 1537 	mov	r1,sp
      0001B5 19               [12] 1538 	dec	r1
      0001B6 19               [12] 1539 	dec	r1
      0001B7 E6               [12] 1540 	mov	a,@r0
      0001B8 F7               [12] 1541 	mov	@r1,a
      0001B9 08               [12] 1542 	inc	r0
      0001BA 09               [12] 1543 	inc	r1
      0001BB E6               [12] 1544 	mov	a,@r0
      0001BC F7               [12] 1545 	mov	@r1,a
      0001BD 08               [12] 1546 	inc	r0
      0001BE 09               [12] 1547 	inc	r1
      0001BF E6               [12] 1548 	mov	a,@r0
      0001C0 F7               [12] 1549 	mov	@r1,a
      0001C1 E5 81            [12] 1550 	mov	a,sp
      0001C3 24 FB            [12] 1551 	add	a,#0xfb
      0001C5 F8               [12] 1552 	mov	r0,a
      0001C6 74 27            [12] 1553 	mov	a,#0x27
      0001C8 26               [12] 1554 	add	a,@r0
      0001C9 FD               [12] 1555 	mov	r5,a
      0001CA E4               [12] 1556 	clr	a
      0001CB 08               [12] 1557 	inc	r0
      0001CC 36               [12] 1558 	addc	a,@r0
      0001CD FE               [12] 1559 	mov	r6,a
      0001CE 08               [12] 1560 	inc	r0
      0001CF 86 07            [24] 1561 	mov	ar7,@r0
      0001D1 8D 82            [24] 1562 	mov	dpl,r5
      0001D3 8E 83            [24] 1563 	mov	dph,r6
      0001D5 8F F0            [24] 1564 	mov	b,r7
      0001D7 12r00r00         [24] 1565 	lcall	__gptrget
      0001DA FA               [12] 1566 	mov	r2,a
      0001DB A3               [24] 1567 	inc	dptr
      0001DC 12r00r00         [24] 1568 	lcall	__gptrget
      0001DF FB               [12] 1569 	mov	r3,a
      0001E0 A3               [24] 1570 	inc	dptr
      0001E1 12r00r00         [24] 1571 	lcall	__gptrget
      0001E4 FC               [12] 1572 	mov	r4,a
      0001E5 C0 07            [24] 1573 	push	ar7
      0001E7 C0 06            [24] 1574 	push	ar6
      0001E9 C0 05            [24] 1575 	push	ar5
      0001EB E5 81            [12] 1576 	mov	a,sp
      0001ED 24 FB            [12] 1577 	add	a,#0xfb
      0001EF F8               [12] 1578 	mov	r0,a
      0001F0 E6               [12] 1579 	mov	a,@r0
      0001F1 C0 E0            [24] 1580 	push	acc
      0001F3 08               [12] 1581 	inc	r0
      0001F4 E6               [12] 1582 	mov	a,@r0
      0001F5 C0 E0            [24] 1583 	push	acc
      0001F7 08               [12] 1584 	inc	r0
      0001F8 E6               [12] 1585 	mov	a,@r0
      0001F9 C0 E0            [24] 1586 	push	acc
      0001FB 8A 82            [24] 1587 	mov	dpl,r2
      0001FD 8B 83            [24] 1588 	mov	dph,r3
      0001FF 8C F0            [24] 1589 	mov	b,r4
      000201 78r00            [12] 1590 	mov	r0,#_list_remove
      000203 79s00            [12] 1591 	mov	r1,#(_list_remove >> 8)
      000205 7As00            [12] 1592 	mov	r2,#(_list_remove >> 16)
      000207 12r00r00         [24] 1593 	lcall	__sdcc_banked_call
      00020A 15 81            [12] 1594 	dec	sp
      00020C 15 81            [12] 1595 	dec	sp
      00020E 15 81            [12] 1596 	dec	sp
      000210 D0 05            [24] 1597 	pop	ar5
      000212 D0 06            [24] 1598 	pop	ar6
      000214 D0 07            [24] 1599 	pop	ar7
                                   1600 ;	../../core/net/mac/csma.c:180: queuebuf_free(p->buf);
      000216 E5 81            [12] 1601 	mov	a,sp
      000218 24 F5            [12] 1602 	add	a,#0xf5
      00021A F8               [12] 1603 	mov	r0,a
      00021B A9 81            [24] 1604 	mov	r1,sp
      00021D 19               [12] 1605 	dec	r1
      00021E 19               [12] 1606 	dec	r1
      00021F E6               [12] 1607 	mov	a,@r0
      000220 F7               [12] 1608 	mov	@r1,a
      000221 08               [12] 1609 	inc	r0
      000222 09               [12] 1610 	inc	r1
      000223 E6               [12] 1611 	mov	a,@r0
      000224 F7               [12] 1612 	mov	@r1,a
      000225 08               [12] 1613 	inc	r0
      000226 09               [12] 1614 	inc	r1
      000227 E6               [12] 1615 	mov	a,@r0
      000228 F7               [12] 1616 	mov	@r1,a
      000229 A8 81            [24] 1617 	mov	r0,sp
      00022B 18               [12] 1618 	dec	r0
      00022C 18               [12] 1619 	dec	r0
      00022D 74 03            [12] 1620 	mov	a,#0x03
      00022F 26               [12] 1621 	add	a,@r0
      000230 FA               [12] 1622 	mov	r2,a
      000231 E4               [12] 1623 	clr	a
      000232 08               [12] 1624 	inc	r0
      000233 36               [12] 1625 	addc	a,@r0
      000234 FB               [12] 1626 	mov	r3,a
      000235 08               [12] 1627 	inc	r0
      000236 86 04            [24] 1628 	mov	ar4,@r0
      000238 8A 82            [24] 1629 	mov	dpl,r2
      00023A 8B 83            [24] 1630 	mov	dph,r3
      00023C 8C F0            [24] 1631 	mov	b,r4
      00023E 12r00r00         [24] 1632 	lcall	__gptrget
      000241 FA               [12] 1633 	mov	r2,a
      000242 A3               [24] 1634 	inc	dptr
      000243 12r00r00         [24] 1635 	lcall	__gptrget
      000246 FB               [12] 1636 	mov	r3,a
      000247 A3               [24] 1637 	inc	dptr
      000248 12r00r00         [24] 1638 	lcall	__gptrget
      00024B FC               [12] 1639 	mov	r4,a
      00024C 8A 82            [24] 1640 	mov	dpl,r2
      00024E 8B 83            [24] 1641 	mov	dph,r3
      000250 8C F0            [24] 1642 	mov	b,r4
      000252 C0 07            [24] 1643 	push	ar7
      000254 C0 06            [24] 1644 	push	ar6
      000256 C0 05            [24] 1645 	push	ar5
      000258 78r00            [12] 1646 	mov	r0,#_queuebuf_free
      00025A 79s00            [12] 1647 	mov	r1,#(_queuebuf_free >> 8)
      00025C 7As00            [12] 1648 	mov	r2,#(_queuebuf_free >> 16)
      00025E 12r00r00         [24] 1649 	lcall	__sdcc_banked_call
      000261 D0 05            [24] 1650 	pop	ar5
      000263 D0 06            [24] 1651 	pop	ar6
      000265 D0 07            [24] 1652 	pop	ar7
                                   1653 ;	../../core/net/mac/csma.c:181: memb_free(&metadata_memb, p->ptr);
      000267 A8 81            [24] 1654 	mov	r0,sp
      000269 18               [12] 1655 	dec	r0
      00026A 18               [12] 1656 	dec	r0
      00026B 74 06            [12] 1657 	mov	a,#0x06
      00026D 26               [12] 1658 	add	a,@r0
      00026E FA               [12] 1659 	mov	r2,a
      00026F E4               [12] 1660 	clr	a
      000270 08               [12] 1661 	inc	r0
      000271 36               [12] 1662 	addc	a,@r0
      000272 FB               [12] 1663 	mov	r3,a
      000273 08               [12] 1664 	inc	r0
      000274 86 04            [24] 1665 	mov	ar4,@r0
      000276 8A 82            [24] 1666 	mov	dpl,r2
      000278 8B 83            [24] 1667 	mov	dph,r3
      00027A 8C F0            [24] 1668 	mov	b,r4
      00027C 12r00r00         [24] 1669 	lcall	__gptrget
      00027F FA               [12] 1670 	mov	r2,a
      000280 A3               [24] 1671 	inc	dptr
      000281 12r00r00         [24] 1672 	lcall	__gptrget
      000284 FB               [12] 1673 	mov	r3,a
      000285 A3               [24] 1674 	inc	dptr
      000286 12r00r00         [24] 1675 	lcall	__gptrget
      000289 FC               [12] 1676 	mov	r4,a
      00028A C0 07            [24] 1677 	push	ar7
      00028C C0 06            [24] 1678 	push	ar6
      00028E C0 05            [24] 1679 	push	ar5
      000290 C0 02            [24] 1680 	push	ar2
      000292 C0 03            [24] 1681 	push	ar3
      000294 C0 04            [24] 1682 	push	ar4
      000296 90r00r14         [24] 1683 	mov	dptr,#_metadata_memb
      000299 75 F0 00         [24] 1684 	mov	b,#0x00
      00029C 78r00            [12] 1685 	mov	r0,#_memb_free
      00029E 79s00            [12] 1686 	mov	r1,#(_memb_free >> 8)
      0002A0 7As00            [12] 1687 	mov	r2,#(_memb_free >> 16)
      0002A2 12r00r00         [24] 1688 	lcall	__sdcc_banked_call
      0002A5 15 81            [12] 1689 	dec	sp
      0002A7 15 81            [12] 1690 	dec	sp
      0002A9 15 81            [12] 1691 	dec	sp
      0002AB D0 05            [24] 1692 	pop	ar5
      0002AD D0 06            [24] 1693 	pop	ar6
      0002AF D0 07            [24] 1694 	pop	ar7
                                   1695 ;	../../core/net/mac/csma.c:182: memb_free(&packet_memb, p);
      0002B1 E5 81            [12] 1696 	mov	a,sp
      0002B3 24 F5            [12] 1697 	add	a,#0xf5
      0002B5 F8               [12] 1698 	mov	r0,a
      0002B6 86 02            [24] 1699 	mov	ar2,@r0
      0002B8 08               [12] 1700 	inc	r0
      0002B9 86 03            [24] 1701 	mov	ar3,@r0
      0002BB 08               [12] 1702 	inc	r0
      0002BC 86 04            [24] 1703 	mov	ar4,@r0
      0002BE C0 07            [24] 1704 	push	ar7
      0002C0 C0 06            [24] 1705 	push	ar6
      0002C2 C0 05            [24] 1706 	push	ar5
      0002C4 C0 02            [24] 1707 	push	ar2
      0002C6 C0 03            [24] 1708 	push	ar3
      0002C8 C0 04            [24] 1709 	push	ar4
      0002CA 90r00r0A         [24] 1710 	mov	dptr,#_packet_memb
      0002CD 75 F0 00         [24] 1711 	mov	b,#0x00
      0002D0 78r00            [12] 1712 	mov	r0,#_memb_free
      0002D2 79s00            [12] 1713 	mov	r1,#(_memb_free >> 8)
      0002D4 7As00            [12] 1714 	mov	r2,#(_memb_free >> 16)
      0002D6 12r00r00         [24] 1715 	lcall	__sdcc_banked_call
      0002D9 15 81            [12] 1716 	dec	sp
      0002DB 15 81            [12] 1717 	dec	sp
      0002DD 15 81            [12] 1718 	dec	sp
      0002DF D0 05            [24] 1719 	pop	ar5
      0002E1 D0 06            [24] 1720 	pop	ar6
      0002E3 D0 07            [24] 1721 	pop	ar7
                                   1722 ;	../../core/net/mac/csma.c:185: if(list_head(n->queued_packet_list) != NULL) {
      0002E5 8D 82            [24] 1723 	mov	dpl,r5
      0002E7 8E 83            [24] 1724 	mov	dph,r6
      0002E9 8F F0            [24] 1725 	mov	b,r7
      0002EB 12r00r00         [24] 1726 	lcall	__gptrget
      0002EE FD               [12] 1727 	mov	r5,a
      0002EF A3               [24] 1728 	inc	dptr
      0002F0 12r00r00         [24] 1729 	lcall	__gptrget
      0002F3 FE               [12] 1730 	mov	r6,a
      0002F4 A3               [24] 1731 	inc	dptr
      0002F5 12r00r00         [24] 1732 	lcall	__gptrget
      0002F8 FF               [12] 1733 	mov	r7,a
      0002F9 8D 82            [24] 1734 	mov	dpl,r5
      0002FB 8E 83            [24] 1735 	mov	dph,r6
      0002FD 8F F0            [24] 1736 	mov	b,r7
      0002FF 78r00            [12] 1737 	mov	r0,#_list_head
      000301 79s00            [12] 1738 	mov	r1,#(_list_head >> 8)
      000303 7As00            [12] 1739 	mov	r2,#(_list_head >> 16)
      000305 12r00r00         [24] 1740 	lcall	__sdcc_banked_call
      000308 AD 82            [24] 1741 	mov	r5,dpl
      00030A AE 83            [24] 1742 	mov	r6,dph
      00030C AF F0            [24] 1743 	mov	r7,b
      00030E ED               [12] 1744 	mov	a,r5
      00030F 4E               [12] 1745 	orl	a,r6
      000310 70 03            [24] 1746 	jnz	00115$
      000312 02r03rD6         [24] 1747 	ljmp	00102$
      000315                       1748 00115$:
                                   1749 ;	../../core/net/mac/csma.c:187: n->transmissions = 0;
      000315 E5 81            [12] 1750 	mov	a,sp
      000317 24 FB            [12] 1751 	add	a,#0xfb
      000319 F8               [12] 1752 	mov	r0,a
      00031A 74 21            [12] 1753 	mov	a,#0x21
      00031C 26               [12] 1754 	add	a,@r0
      00031D FD               [12] 1755 	mov	r5,a
      00031E E4               [12] 1756 	clr	a
      00031F 08               [12] 1757 	inc	r0
      000320 36               [12] 1758 	addc	a,@r0
      000321 FE               [12] 1759 	mov	r6,a
      000322 08               [12] 1760 	inc	r0
      000323 86 07            [24] 1761 	mov	ar7,@r0
      000325 8D 82            [24] 1762 	mov	dpl,r5
      000327 8E 83            [24] 1763 	mov	dph,r6
      000329 8F F0            [24] 1764 	mov	b,r7
      00032B E4               [12] 1765 	clr	a
      00032C 12r00r00         [24] 1766 	lcall	__gptrput
                                   1767 ;	../../core/net/mac/csma.c:188: n->collisions = 0;
      00032F E5 81            [12] 1768 	mov	a,sp
      000331 24 FB            [12] 1769 	add	a,#0xfb
      000333 F8               [12] 1770 	mov	r0,a
      000334 74 22            [12] 1771 	mov	a,#0x22
      000336 26               [12] 1772 	add	a,@r0
      000337 FD               [12] 1773 	mov	r5,a
      000338 E4               [12] 1774 	clr	a
      000339 08               [12] 1775 	inc	r0
      00033A 36               [12] 1776 	addc	a,@r0
      00033B FE               [12] 1777 	mov	r6,a
      00033C 08               [12] 1778 	inc	r0
      00033D 86 07            [24] 1779 	mov	ar7,@r0
      00033F 8D 82            [24] 1780 	mov	dpl,r5
      000341 8E 83            [24] 1781 	mov	dph,r6
      000343 8F F0            [24] 1782 	mov	b,r7
      000345 E4               [12] 1783 	clr	a
      000346 12r00r00         [24] 1784 	lcall	__gptrput
                                   1785 ;	../../core/net/mac/csma.c:189: n->deferrals = 0;
      000349 E5 81            [12] 1786 	mov	a,sp
      00034B 24 FB            [12] 1787 	add	a,#0xfb
      00034D F8               [12] 1788 	mov	r0,a
      00034E 74 23            [12] 1789 	mov	a,#0x23
      000350 26               [12] 1790 	add	a,@r0
      000351 FD               [12] 1791 	mov	r5,a
      000352 E4               [12] 1792 	clr	a
      000353 08               [12] 1793 	inc	r0
      000354 36               [12] 1794 	addc	a,@r0
      000355 FE               [12] 1795 	mov	r6,a
      000356 08               [12] 1796 	inc	r0
      000357 86 07            [24] 1797 	mov	ar7,@r0
      000359 8D 82            [24] 1798 	mov	dpl,r5
      00035B 8E 83            [24] 1799 	mov	dph,r6
      00035D 8F F0            [24] 1800 	mov	b,r7
      00035F E4               [12] 1801 	clr	a
      000360 12r00r00         [24] 1802 	lcall	__gptrput
                                   1803 ;	../../core/net/mac/csma.c:192: transmit_packet_list, n);
      000363 E5 81            [12] 1804 	mov	a,sp
      000365 24 FB            [12] 1805 	add	a,#0xfb
      000367 F8               [12] 1806 	mov	r0,a
      000368 86 05            [24] 1807 	mov	ar5,@r0
      00036A 08               [12] 1808 	inc	r0
      00036B 86 06            [24] 1809 	mov	ar6,@r0
      00036D 08               [12] 1810 	inc	r0
      00036E 86 07            [24] 1811 	mov	ar7,@r0
                                   1812 ;	../../core/net/mac/csma.c:191: ctimer_set(&n->transmit_timer, default_timebase(),
      000370 C0 07            [24] 1813 	push	ar7
      000372 C0 06            [24] 1814 	push	ar6
      000374 C0 05            [24] 1815 	push	ar5
      000376 78rA6            [12] 1816 	mov	r0,#_default_timebase
      000378 79s00            [12] 1817 	mov	r1,#(_default_timebase >> 8)
      00037A 7As00            [12] 1818 	mov	r2,#(_default_timebase >> 16)
      00037C 12r00r00         [24] 1819 	lcall	__sdcc_banked_call
      00037F C8               [12] 1820 	xch	a,r0
      000380 E5 81            [12] 1821 	mov	a,sp
      000382 24 FB            [12] 1822 	add	a,#0xfb
      000384 C8               [12] 1823 	xch	a,r0
      000385 A6 82            [24] 1824 	mov	@r0,dpl
      000387 08               [12] 1825 	inc	r0
      000388 A6 83            [24] 1826 	mov	@r0,dph
      00038A D0 05            [24] 1827 	pop	ar5
      00038C D0 06            [24] 1828 	pop	ar6
      00038E D0 07            [24] 1829 	pop	ar7
      000390 E5 81            [12] 1830 	mov	a,sp
      000392 24 FB            [12] 1831 	add	a,#0xfb
      000394 F8               [12] 1832 	mov	r0,a
      000395 74 0B            [12] 1833 	mov	a,#0x0B
      000397 26               [12] 1834 	add	a,@r0
      000398 FA               [12] 1835 	mov	r2,a
      000399 E4               [12] 1836 	clr	a
      00039A 08               [12] 1837 	inc	r0
      00039B 36               [12] 1838 	addc	a,@r0
      00039C FB               [12] 1839 	mov	r3,a
      00039D 08               [12] 1840 	inc	r0
      00039E 86 04            [24] 1841 	mov	ar4,@r0
      0003A0 C0 05            [24] 1842 	push	ar5
      0003A2 C0 06            [24] 1843 	push	ar6
      0003A4 C0 07            [24] 1844 	push	ar7
      0003A6 74rDB            [12] 1845 	mov	a,#_transmit_packet_list
      0003A8 C0 E0            [24] 1846 	push	acc
      0003AA 74s00            [12] 1847 	mov	a,#(_transmit_packet_list >> 8)
      0003AC C0 E0            [24] 1848 	push	acc
      0003AE 74s00            [12] 1849 	mov	a,#(_transmit_packet_list >> 16)
      0003B0 C0 E0            [24] 1850 	push	acc
      0003B2 E5 81            [12] 1851 	mov	a,sp
      0003B4 24 F8            [12] 1852 	add	a,#0xf8
      0003B6 F8               [12] 1853 	mov	r0,a
      0003B7 E6               [12] 1854 	mov	a,@r0
      0003B8 C0 E0            [24] 1855 	push	acc
      0003BA 08               [12] 1856 	inc	r0
      0003BB E6               [12] 1857 	mov	a,@r0
      0003BC C0 E0            [24] 1858 	push	acc
      0003BE 8A 82            [24] 1859 	mov	dpl,r2
      0003C0 8B 83            [24] 1860 	mov	dph,r3
      0003C2 8C F0            [24] 1861 	mov	b,r4
      0003C4 78r00            [12] 1862 	mov	r0,#_ctimer_set
      0003C6 79s00            [12] 1863 	mov	r1,#(_ctimer_set >> 8)
      0003C8 7As00            [12] 1864 	mov	r2,#(_ctimer_set >> 16)
      0003CA 12r00r00         [24] 1865 	lcall	__sdcc_banked_call
      0003CD E5 81            [12] 1866 	mov	a,sp
      0003CF 24 F8            [12] 1867 	add	a,#0xf8
      0003D1 F5 81            [12] 1868 	mov	sp,a
      0003D3 02r04r50         [24] 1869 	ljmp	00106$
      0003D6                       1870 00102$:
                                   1871 ;	../../core/net/mac/csma.c:195: ctimer_stop(&n->transmit_timer);
      0003D6 E5 81            [12] 1872 	mov	a,sp
      0003D8 24 FB            [12] 1873 	add	a,#0xfb
      0003DA F8               [12] 1874 	mov	r0,a
      0003DB 74 0B            [12] 1875 	mov	a,#0x0B
      0003DD 26               [12] 1876 	add	a,@r0
      0003DE FD               [12] 1877 	mov	r5,a
      0003DF E4               [12] 1878 	clr	a
      0003E0 08               [12] 1879 	inc	r0
      0003E1 36               [12] 1880 	addc	a,@r0
      0003E2 FE               [12] 1881 	mov	r6,a
      0003E3 08               [12] 1882 	inc	r0
      0003E4 86 07            [24] 1883 	mov	ar7,@r0
      0003E6 8D 82            [24] 1884 	mov	dpl,r5
      0003E8 8E 83            [24] 1885 	mov	dph,r6
      0003EA 8F F0            [24] 1886 	mov	b,r7
      0003EC 78r00            [12] 1887 	mov	r0,#_ctimer_stop
      0003EE 79s00            [12] 1888 	mov	r1,#(_ctimer_stop >> 8)
      0003F0 7As00            [12] 1889 	mov	r2,#(_ctimer_stop >> 16)
      0003F2 12r00r00         [24] 1890 	lcall	__sdcc_banked_call
                                   1891 ;	../../core/net/mac/csma.c:196: list_remove(neighbor_list, n);
      0003F5 E5 81            [12] 1892 	mov	a,sp
      0003F7 24 FB            [12] 1893 	add	a,#0xfb
      0003F9 F8               [12] 1894 	mov	r0,a
      0003FA 86 05            [24] 1895 	mov	ar5,@r0
      0003FC 08               [12] 1896 	inc	r0
      0003FD 86 06            [24] 1897 	mov	ar6,@r0
      0003FF 08               [12] 1898 	inc	r0
      000400 86 07            [24] 1899 	mov	ar7,@r0
      000402 90r00r21         [24] 1900 	mov	dptr,#_neighbor_list
      000405 E0               [24] 1901 	movx	a,@dptr
      000406 FA               [12] 1902 	mov	r2,a
      000407 A3               [24] 1903 	inc	dptr
      000408 E0               [24] 1904 	movx	a,@dptr
      000409 FB               [12] 1905 	mov	r3,a
      00040A A3               [24] 1906 	inc	dptr
      00040B E0               [24] 1907 	movx	a,@dptr
      00040C FC               [12] 1908 	mov	r4,a
      00040D C0 05            [24] 1909 	push	ar5
      00040F C0 06            [24] 1910 	push	ar6
      000411 C0 07            [24] 1911 	push	ar7
      000413 8A 82            [24] 1912 	mov	dpl,r2
      000415 8B 83            [24] 1913 	mov	dph,r3
      000417 8C F0            [24] 1914 	mov	b,r4
      000419 78r00            [12] 1915 	mov	r0,#_list_remove
      00041B 79s00            [12] 1916 	mov	r1,#(_list_remove >> 8)
      00041D 7As00            [12] 1917 	mov	r2,#(_list_remove >> 16)
      00041F 12r00r00         [24] 1918 	lcall	__sdcc_banked_call
      000422 15 81            [12] 1919 	dec	sp
      000424 15 81            [12] 1920 	dec	sp
      000426 15 81            [12] 1921 	dec	sp
                                   1922 ;	../../core/net/mac/csma.c:197: memb_free(&neighbor_memb, n);
      000428 E5 81            [12] 1923 	mov	a,sp
      00042A 24 FB            [12] 1924 	add	a,#0xfb
      00042C F8               [12] 1925 	mov	r0,a
      00042D 86 05            [24] 1926 	mov	ar5,@r0
      00042F 08               [12] 1927 	inc	r0
      000430 86 06            [24] 1928 	mov	ar6,@r0
      000432 08               [12] 1929 	inc	r0
      000433 86 07            [24] 1930 	mov	ar7,@r0
      000435 C0 05            [24] 1931 	push	ar5
      000437 C0 06            [24] 1932 	push	ar6
      000439 C0 07            [24] 1933 	push	ar7
      00043B 90r00r00         [24] 1934 	mov	dptr,#_neighbor_memb
      00043E 75 F0 00         [24] 1935 	mov	b,#0x00
      000441 78r00            [12] 1936 	mov	r0,#_memb_free
      000443 79s00            [12] 1937 	mov	r1,#(_memb_free >> 8)
      000445 7As00            [12] 1938 	mov	r2,#(_memb_free >> 16)
      000447 12r00r00         [24] 1939 	lcall	__sdcc_banked_call
      00044A 15 81            [12] 1940 	dec	sp
      00044C 15 81            [12] 1941 	dec	sp
      00044E 15 81            [12] 1942 	dec	sp
      000450                       1943 00106$:
      000450 E5 81            [12] 1944 	mov	a,sp
      000452 24 FA            [12] 1945 	add	a,#0xFA
      000454 F5 81            [12] 1946 	mov	sp,a
      000456 02r00r00         [24] 1947 	ljmp	__sdcc_banked_ret
                                   1948 ;------------------------------------------------------------
                                   1949 ;Allocation info for local variables in function 'packet_sent'
                                   1950 ;------------------------------------------------------------
                                   1951 ;status                    Allocated to stack - sp -27
                                   1952 ;num_transmissions         Allocated to stack - sp -29
                                   1953 ;ptr                       Allocated to registers r5 r6 r7 
                                   1954 ;n                         Allocated to stack - sp -20
                                   1955 ;q                         Allocated to stack - sp -17
                                   1956 ;metadata                  Allocated to stack - sp -7
                                   1957 ;time                      Allocated to stack - sp -4
                                   1958 ;sent                      Allocated to stack - sp -2
                                   1959 ;cptr                      Allocated to stack - sp -12
                                   1960 ;num_tx                    Allocated to stack - sp -9
                                   1961 ;backoff_exponent          Allocated to registers r4 r3 
                                   1962 ;backoff_transmissions     Allocated to stack - sp -14
                                   1963 ;sloc0                     Allocated to stack - sp -22
                                   1964 ;------------------------------------------------------------
                                   1965 ;	../../core/net/mac/csma.c:203: packet_sent(void *ptr, int status, int num_transmissions)
                                   1966 ;	-----------------------------------------
                                   1967 ;	 function packet_sent
                                   1968 ;	-----------------------------------------
      000459                       1969 _packet_sent:
      000459 E5 81            [12] 1970 	mov	a,sp
      00045B 24 17            [12] 1971 	add	a,#0x17
      00045D F5 81            [12] 1972 	mov	sp,a
      00045F AD 82            [24] 1973 	mov	r5,dpl
      000461 AE 83            [24] 1974 	mov	r6,dph
      000463 AF F0            [24] 1975 	mov	r7,b
                                   1976 ;	../../core/net/mac/csma.c:215: n = ptr;
      000465 E5 81            [12] 1977 	mov	a,sp
      000467 24 EC            [12] 1978 	add	a,#0xec
      000469 F8               [12] 1979 	mov	r0,a
      00046A A6 05            [24] 1980 	mov	@r0,ar5
      00046C 08               [12] 1981 	inc	r0
      00046D A6 06            [24] 1982 	mov	@r0,ar6
      00046F 08               [12] 1983 	inc	r0
      000470 A6 07            [24] 1984 	mov	@r0,ar7
                                   1985 ;	../../core/net/mac/csma.c:216: if(n == NULL) {
      000472 E5 81            [12] 1986 	mov	a,sp
      000474 24 EC            [12] 1987 	add	a,#0xec
      000476 F8               [12] 1988 	mov	r0,a
      000477 E6               [12] 1989 	mov	a,@r0
      000478 08               [12] 1990 	inc	r0
      000479 46               [12] 1991 	orl	a,@r0
      00047A 70 03            [24] 1992 	jnz	00102$
                                   1993 ;	../../core/net/mac/csma.c:217: return;
      00047C 02r09r80         [24] 1994 	ljmp	00131$
      00047F                       1995 00102$:
                                   1996 ;	../../core/net/mac/csma.c:219: switch(status) {
      00047F E5 81            [12] 1997 	mov	a,sp
      000481 24 E5            [12] 1998 	add	a,#0xe5
      000483 F8               [12] 1999 	mov	r0,a
      000484 B6 00 06         [24] 2000 	cjne	@r0,#0x00,00174$
      000487 08               [12] 2001 	inc	r0
      000488 B6 00 02         [24] 2002 	cjne	@r0,#0x00,00174$
      00048B 80 2D            [24] 2003 	sjmp	00104$
      00048D                       2004 00174$:
      00048D E5 81            [12] 2005 	mov	a,sp
      00048F 24 E5            [12] 2006 	add	a,#0xe5
      000491 F8               [12] 2007 	mov	r0,a
      000492 B6 01 06         [24] 2008 	cjne	@r0,#0x01,00175$
      000495 08               [12] 2009 	inc	r0
      000496 B6 00 02         [24] 2010 	cjne	@r0,#0x00,00175$
      000499 80 4C            [24] 2011 	sjmp	00105$
      00049B                       2012 00175$:
      00049B E5 81            [12] 2013 	mov	a,sp
      00049D 24 E5            [12] 2014 	add	a,#0xe5
      00049F F8               [12] 2015 	mov	r0,a
      0004A0 B6 02 06         [24] 2016 	cjne	@r0,#0x02,00176$
      0004A3 08               [12] 2017 	inc	r0
      0004A4 B6 00 02         [24] 2018 	cjne	@r0,#0x00,00176$
      0004A7 80 11            [24] 2019 	sjmp	00104$
      0004A9                       2020 00176$:
      0004A9 E5 81            [12] 2021 	mov	a,sp
      0004AB 24 E5            [12] 2022 	add	a,#0xe5
      0004AD F8               [12] 2023 	mov	r0,a
      0004AE B6 03 06         [24] 2024 	cjne	@r0,#0x03,00177$
      0004B1 08               [12] 2025 	inc	r0
      0004B2 B6 00 02         [24] 2026 	cjne	@r0,#0x00,00177$
      0004B5 80 5D            [24] 2027 	sjmp	00106$
      0004B7                       2028 00177$:
      0004B7 02r05r3F         [24] 2029 	ljmp	00107$
                                   2030 ;	../../core/net/mac/csma.c:221: case MAC_TX_NOACK:
      0004BA                       2031 00104$:
                                   2032 ;	../../core/net/mac/csma.c:222: n->transmissions += num_transmissions;
      0004BA E5 81            [12] 2033 	mov	a,sp
      0004BC 24 EC            [12] 2034 	add	a,#0xec
      0004BE F8               [12] 2035 	mov	r0,a
      0004BF 74 21            [12] 2036 	mov	a,#0x21
      0004C1 26               [12] 2037 	add	a,@r0
      0004C2 FA               [12] 2038 	mov	r2,a
      0004C3 E4               [12] 2039 	clr	a
      0004C4 08               [12] 2040 	inc	r0
      0004C5 36               [12] 2041 	addc	a,@r0
      0004C6 FB               [12] 2042 	mov	r3,a
      0004C7 08               [12] 2043 	inc	r0
      0004C8 86 04            [24] 2044 	mov	ar4,@r0
      0004CA 8A 82            [24] 2045 	mov	dpl,r2
      0004CC 8B 83            [24] 2046 	mov	dph,r3
      0004CE 8C F0            [24] 2047 	mov	b,r4
      0004D0 12r00r00         [24] 2048 	lcall	__gptrget
      0004D3 FF               [12] 2049 	mov	r7,a
      0004D4 E5 81            [12] 2050 	mov	a,sp
      0004D6 24 E3            [12] 2051 	add	a,#0xe3
      0004D8 F8               [12] 2052 	mov	r0,a
      0004D9 E6               [12] 2053 	mov	a,@r0
      0004DA 2F               [12] 2054 	add	a,r7
      0004DB FE               [12] 2055 	mov	r6,a
      0004DC 8A 82            [24] 2056 	mov	dpl,r2
      0004DE 8B 83            [24] 2057 	mov	dph,r3
      0004E0 8C F0            [24] 2058 	mov	b,r4
      0004E2 12r00r00         [24] 2059 	lcall	__gptrput
                                   2060 ;	../../core/net/mac/csma.c:223: break;
                                   2061 ;	../../core/net/mac/csma.c:224: case MAC_TX_COLLISION:
      0004E5 80 58            [24] 2062 	sjmp	00107$
      0004E7                       2063 00105$:
                                   2064 ;	../../core/net/mac/csma.c:225: n->collisions += num_transmissions;
      0004E7 E5 81            [12] 2065 	mov	a,sp
      0004E9 24 EC            [12] 2066 	add	a,#0xec
      0004EB F8               [12] 2067 	mov	r0,a
      0004EC 74 22            [12] 2068 	mov	a,#0x22
      0004EE 26               [12] 2069 	add	a,@r0
      0004EF FA               [12] 2070 	mov	r2,a
      0004F0 E4               [12] 2071 	clr	a
      0004F1 08               [12] 2072 	inc	r0
      0004F2 36               [12] 2073 	addc	a,@r0
      0004F3 FB               [12] 2074 	mov	r3,a
      0004F4 08               [12] 2075 	inc	r0
      0004F5 86 04            [24] 2076 	mov	ar4,@r0
      0004F7 8A 82            [24] 2077 	mov	dpl,r2
      0004F9 8B 83            [24] 2078 	mov	dph,r3
      0004FB 8C F0            [24] 2079 	mov	b,r4
      0004FD 12r00r00         [24] 2080 	lcall	__gptrget
      000500 FF               [12] 2081 	mov	r7,a
      000501 E5 81            [12] 2082 	mov	a,sp
      000503 24 E3            [12] 2083 	add	a,#0xe3
      000505 F8               [12] 2084 	mov	r0,a
      000506 E6               [12] 2085 	mov	a,@r0
      000507 2F               [12] 2086 	add	a,r7
      000508 FE               [12] 2087 	mov	r6,a
      000509 8A 82            [24] 2088 	mov	dpl,r2
      00050B 8B 83            [24] 2089 	mov	dph,r3
      00050D 8C F0            [24] 2090 	mov	b,r4
      00050F 12r00r00         [24] 2091 	lcall	__gptrput
                                   2092 ;	../../core/net/mac/csma.c:226: break;
                                   2093 ;	../../core/net/mac/csma.c:227: case MAC_TX_DEFERRED:
      000512 80 2B            [24] 2094 	sjmp	00107$
      000514                       2095 00106$:
                                   2096 ;	../../core/net/mac/csma.c:228: n->deferrals += num_transmissions;
      000514 E5 81            [12] 2097 	mov	a,sp
      000516 24 EC            [12] 2098 	add	a,#0xec
      000518 F8               [12] 2099 	mov	r0,a
      000519 74 23            [12] 2100 	mov	a,#0x23
      00051B 26               [12] 2101 	add	a,@r0
      00051C FA               [12] 2102 	mov	r2,a
      00051D E4               [12] 2103 	clr	a
      00051E 08               [12] 2104 	inc	r0
      00051F 36               [12] 2105 	addc	a,@r0
      000520 FB               [12] 2106 	mov	r3,a
      000521 08               [12] 2107 	inc	r0
      000522 86 04            [24] 2108 	mov	ar4,@r0
      000524 8A 82            [24] 2109 	mov	dpl,r2
      000526 8B 83            [24] 2110 	mov	dph,r3
      000528 8C F0            [24] 2111 	mov	b,r4
      00052A 12r00r00         [24] 2112 	lcall	__gptrget
      00052D FF               [12] 2113 	mov	r7,a
      00052E E5 81            [12] 2114 	mov	a,sp
      000530 24 E3            [12] 2115 	add	a,#0xe3
      000532 F8               [12] 2116 	mov	r0,a
      000533 E6               [12] 2117 	mov	a,@r0
      000534 2F               [12] 2118 	add	a,r7
      000535 FE               [12] 2119 	mov	r6,a
      000536 8A 82            [24] 2120 	mov	dpl,r2
      000538 8B 83            [24] 2121 	mov	dph,r3
      00053A 8C F0            [24] 2122 	mov	b,r4
      00053C 12r00r00         [24] 2123 	lcall	__gptrput
                                   2124 ;	../../core/net/mac/csma.c:306: mac_call_sent_callback(sent, cptr, status, num_tx);
                                   2125 ;	../../core/net/mac/csma.c:230: }
      00053F                       2126 00107$:
                                   2127 ;	../../core/net/mac/csma.c:233: for(q = list_head(n->queued_packet_list);
      00053F E5 81            [12] 2128 	mov	a,sp
      000541 24 EC            [12] 2129 	add	a,#0xec
      000543 F8               [12] 2130 	mov	r0,a
      000544 74 27            [12] 2131 	mov	a,#0x27
      000546 26               [12] 2132 	add	a,@r0
      000547 FA               [12] 2133 	mov	r2,a
      000548 E4               [12] 2134 	clr	a
      000549 08               [12] 2135 	inc	r0
      00054A 36               [12] 2136 	addc	a,@r0
      00054B FB               [12] 2137 	mov	r3,a
      00054C 08               [12] 2138 	inc	r0
      00054D 86 04            [24] 2139 	mov	ar4,@r0
      00054F 8A 82            [24] 2140 	mov	dpl,r2
      000551 8B 83            [24] 2141 	mov	dph,r3
      000553 8C F0            [24] 2142 	mov	b,r4
      000555 12r00r00         [24] 2143 	lcall	__gptrget
      000558 FA               [12] 2144 	mov	r2,a
      000559 A3               [24] 2145 	inc	dptr
      00055A 12r00r00         [24] 2146 	lcall	__gptrget
      00055D FB               [12] 2147 	mov	r3,a
      00055E A3               [24] 2148 	inc	dptr
      00055F 12r00r00         [24] 2149 	lcall	__gptrget
      000562 FC               [12] 2150 	mov	r4,a
      000563 8A 82            [24] 2151 	mov	dpl,r2
      000565 8B 83            [24] 2152 	mov	dph,r3
      000567 8C F0            [24] 2153 	mov	b,r4
      000569 78r00            [12] 2154 	mov	r0,#_list_head
      00056B 79s00            [12] 2155 	mov	r1,#(_list_head >> 8)
      00056D 7As00            [12] 2156 	mov	r2,#(_list_head >> 16)
      00056F 12r00r00         [24] 2157 	lcall	__sdcc_banked_call
      000572 AA 82            [24] 2158 	mov	r2,dpl
      000574 AB 83            [24] 2159 	mov	r3,dph
      000576 AC F0            [24] 2160 	mov	r4,b
      000578 E5 81            [12] 2161 	mov	a,sp
      00057A 24 EF            [12] 2162 	add	a,#0xef
      00057C F8               [12] 2163 	mov	r0,a
      00057D A6 02            [24] 2164 	mov	@r0,ar2
      00057F 08               [12] 2165 	inc	r0
      000580 A6 03            [24] 2166 	mov	@r0,ar3
      000582 08               [12] 2167 	inc	r0
      000583 A6 04            [24] 2168 	mov	@r0,ar4
      000585                       2169 00129$:
                                   2170 ;	../../core/net/mac/csma.c:234: q != NULL; q = list_item_next(q)) {
      000585 E5 81            [12] 2171 	mov	a,sp
      000587 24 EF            [12] 2172 	add	a,#0xef
      000589 F8               [12] 2173 	mov	r0,a
      00058A E4               [12] 2174 	clr	a
      00058B C0 E0            [24] 2175 	push	acc
      00058D E4               [12] 2176 	clr	a
      00058E C0 E0            [24] 2177 	push	acc
      000590 E4               [12] 2178 	clr	a
      000591 C0 E0            [24] 2179 	push	acc
      000593 86 82            [24] 2180 	mov	dpl,@r0
      000595 08               [12] 2181 	inc	r0
      000596 86 83            [24] 2182 	mov	dph,@r0
      000598 08               [12] 2183 	inc	r0
      000599 86 F0            [24] 2184 	mov	b,@r0
      00059B 12r00r00         [24] 2185 	lcall	___gptr_cmp
      00059E 15 81            [12] 2186 	dec	sp
      0005A0 15 81            [12] 2187 	dec	sp
      0005A2 15 81            [12] 2188 	dec	sp
      0005A4 70 03            [24] 2189 	jnz	00178$
      0005A6 02r06r3A         [24] 2190 	ljmp	00110$
      0005A9                       2191 00178$:
                                   2192 ;	../../core/net/mac/csma.c:235: if(queuebuf_attr(q->buf, PACKETBUF_ATTR_MAC_SEQNO) ==
      0005A9 E5 81            [12] 2193 	mov	a,sp
      0005AB 24 EF            [12] 2194 	add	a,#0xef
      0005AD F8               [12] 2195 	mov	r0,a
      0005AE 74 03            [12] 2196 	mov	a,#0x03
      0005B0 26               [12] 2197 	add	a,@r0
      0005B1 FD               [12] 2198 	mov	r5,a
      0005B2 E4               [12] 2199 	clr	a
      0005B3 08               [12] 2200 	inc	r0
      0005B4 36               [12] 2201 	addc	a,@r0
      0005B5 FE               [12] 2202 	mov	r6,a
      0005B6 08               [12] 2203 	inc	r0
      0005B7 86 07            [24] 2204 	mov	ar7,@r0
      0005B9 8D 82            [24] 2205 	mov	dpl,r5
      0005BB 8E 83            [24] 2206 	mov	dph,r6
      0005BD 8F F0            [24] 2207 	mov	b,r7
      0005BF 12r00r00         [24] 2208 	lcall	__gptrget
      0005C2 FD               [12] 2209 	mov	r5,a
      0005C3 A3               [24] 2210 	inc	dptr
      0005C4 12r00r00         [24] 2211 	lcall	__gptrget
      0005C7 FE               [12] 2212 	mov	r6,a
      0005C8 A3               [24] 2213 	inc	dptr
      0005C9 12r00r00         [24] 2214 	lcall	__gptrget
      0005CC FF               [12] 2215 	mov	r7,a
      0005CD 74 0A            [12] 2216 	mov	a,#0x0A
      0005CF C0 E0            [24] 2217 	push	acc
      0005D1 8D 82            [24] 2218 	mov	dpl,r5
      0005D3 8E 83            [24] 2219 	mov	dph,r6
      0005D5 8F F0            [24] 2220 	mov	b,r7
      0005D7 78r00            [12] 2221 	mov	r0,#_queuebuf_attr
      0005D9 79s00            [12] 2222 	mov	r1,#(_queuebuf_attr >> 8)
      0005DB 7As00            [12] 2223 	mov	r2,#(_queuebuf_attr >> 16)
      0005DD 12r00r00         [24] 2224 	lcall	__sdcc_banked_call
      0005E0 AE 82            [24] 2225 	mov	r6,dpl
      0005E2 AF 83            [24] 2226 	mov	r7,dph
      0005E4 15 81            [12] 2227 	dec	sp
                                   2228 ;	../../core/net/mac/csma.c:236: packetbuf_attr(PACKETBUF_ATTR_MAC_SEQNO)) {
      0005E6 75 82 0A         [24] 2229 	mov	dpl,#0x0A
      0005E9 C0 07            [24] 2230 	push	ar7
      0005EB C0 06            [24] 2231 	push	ar6
      0005ED 78r00            [12] 2232 	mov	r0,#_packetbuf_attr
      0005EF 79s00            [12] 2233 	mov	r1,#(_packetbuf_attr >> 8)
      0005F1 7As00            [12] 2234 	mov	r2,#(_packetbuf_attr >> 16)
      0005F3 12r00r00         [24] 2235 	lcall	__sdcc_banked_call
      0005F6 AC 82            [24] 2236 	mov	r4,dpl
      0005F8 AD 83            [24] 2237 	mov	r5,dph
      0005FA D0 06            [24] 2238 	pop	ar6
      0005FC D0 07            [24] 2239 	pop	ar7
      0005FE EE               [12] 2240 	mov	a,r6
      0005FF B5 04 06         [24] 2241 	cjne	a,ar4,00179$
      000602 EF               [12] 2242 	mov	a,r7
      000603 B5 05 02         [24] 2243 	cjne	a,ar5,00179$
      000606 80 32            [24] 2244 	sjmp	00110$
      000608                       2245 00179$:
                                   2246 ;	../../core/net/mac/csma.c:234: q != NULL; q = list_item_next(q)) {
      000608 E5 81            [12] 2247 	mov	a,sp
      00060A 24 EF            [12] 2248 	add	a,#0xef
      00060C F8               [12] 2249 	mov	r0,a
      00060D 86 02            [24] 2250 	mov	ar2,@r0
      00060F 08               [12] 2251 	inc	r0
      000610 86 03            [24] 2252 	mov	ar3,@r0
      000612 08               [12] 2253 	inc	r0
      000613 86 04            [24] 2254 	mov	ar4,@r0
      000615 8A 82            [24] 2255 	mov	dpl,r2
      000617 8B 83            [24] 2256 	mov	dph,r3
      000619 8C F0            [24] 2257 	mov	b,r4
      00061B 78r00            [12] 2258 	mov	r0,#_list_item_next
      00061D 79s00            [12] 2259 	mov	r1,#(_list_item_next >> 8)
      00061F 7As00            [12] 2260 	mov	r2,#(_list_item_next >> 16)
      000621 12r00r00         [24] 2261 	lcall	__sdcc_banked_call
      000624 AA 82            [24] 2262 	mov	r2,dpl
      000626 AB 83            [24] 2263 	mov	r3,dph
      000628 AC F0            [24] 2264 	mov	r4,b
      00062A E5 81            [12] 2265 	mov	a,sp
      00062C 24 EF            [12] 2266 	add	a,#0xef
      00062E F8               [12] 2267 	mov	r0,a
      00062F A6 02            [24] 2268 	mov	@r0,ar2
      000631 08               [12] 2269 	inc	r0
      000632 A6 03            [24] 2270 	mov	@r0,ar3
      000634 08               [12] 2271 	inc	r0
      000635 A6 04            [24] 2272 	mov	@r0,ar4
      000637 02r05r85         [24] 2273 	ljmp	00129$
      00063A                       2274 00110$:
                                   2275 ;	../../core/net/mac/csma.c:241: if(q != NULL) {
      00063A E5 81            [12] 2276 	mov	a,sp
      00063C 24 EF            [12] 2277 	add	a,#0xef
      00063E F8               [12] 2278 	mov	r0,a
      00063F E6               [12] 2279 	mov	a,@r0
      000640 08               [12] 2280 	inc	r0
      000641 46               [12] 2281 	orl	a,@r0
      000642 70 03            [24] 2282 	jnz	00180$
      000644 02r09r80         [24] 2283 	ljmp	00131$
      000647                       2284 00180$:
                                   2285 ;	../../core/net/mac/csma.c:242: metadata = (struct qbuf_metadata *)q->ptr;
      000647 E5 81            [12] 2286 	mov	a,sp
      000649 24 EF            [12] 2287 	add	a,#0xef
      00064B F8               [12] 2288 	mov	r0,a
      00064C 74 06            [12] 2289 	mov	a,#0x06
      00064E 26               [12] 2290 	add	a,@r0
      00064F FA               [12] 2291 	mov	r2,a
      000650 E4               [12] 2292 	clr	a
      000651 08               [12] 2293 	inc	r0
      000652 36               [12] 2294 	addc	a,@r0
      000653 FB               [12] 2295 	mov	r3,a
      000654 08               [12] 2296 	inc	r0
      000655 86 04            [24] 2297 	mov	ar4,@r0
      000657 8A 82            [24] 2298 	mov	dpl,r2
      000659 8B 83            [24] 2299 	mov	dph,r3
      00065B 8C F0            [24] 2300 	mov	b,r4
      00065D 12r00r00         [24] 2301 	lcall	__gptrget
      000660 FA               [12] 2302 	mov	r2,a
      000661 A3               [24] 2303 	inc	dptr
      000662 12r00r00         [24] 2304 	lcall	__gptrget
      000665 FB               [12] 2305 	mov	r3,a
      000666 A3               [24] 2306 	inc	dptr
      000667 12r00r00         [24] 2307 	lcall	__gptrget
      00066A FC               [12] 2308 	mov	r4,a
      00066B E5 81            [12] 2309 	mov	a,sp
      00066D 24 F9            [12] 2310 	add	a,#0xf9
      00066F F8               [12] 2311 	mov	r0,a
      000670 A6 02            [24] 2312 	mov	@r0,ar2
      000672 08               [12] 2313 	inc	r0
      000673 A6 03            [24] 2314 	mov	@r0,ar3
      000675 08               [12] 2315 	inc	r0
      000676 A6 04            [24] 2316 	mov	@r0,ar4
                                   2317 ;	../../core/net/mac/csma.c:244: if(metadata != NULL) {
      000678 E5 81            [12] 2318 	mov	a,sp
      00067A 24 F9            [12] 2319 	add	a,#0xf9
      00067C F8               [12] 2320 	mov	r0,a
      00067D E6               [12] 2321 	mov	a,@r0
      00067E 08               [12] 2322 	inc	r0
      00067F 46               [12] 2323 	orl	a,@r0
      000680 70 03            [24] 2324 	jnz	00181$
      000682 02r09r80         [24] 2325 	ljmp	00131$
      000685                       2326 00181$:
                                   2327 ;	../../core/net/mac/csma.c:245: sent = metadata->sent;
      000685 E5 81            [12] 2328 	mov	a,sp
      000687 24 F9            [12] 2329 	add	a,#0xf9
      000689 F8               [12] 2330 	mov	r0,a
      00068A 86 82            [24] 2331 	mov	dpl,@r0
      00068C 08               [12] 2332 	inc	r0
      00068D 86 83            [24] 2333 	mov	dph,@r0
      00068F 08               [12] 2334 	inc	r0
      000690 86 F0            [24] 2335 	mov	b,@r0
      000692 A9 81            [24] 2336 	mov	r1,sp
      000694 19               [12] 2337 	dec	r1
      000695 19               [12] 2338 	dec	r1
      000696 12r00r00         [24] 2339 	lcall	__gptrget
      000699 F7               [12] 2340 	mov	@r1,a
      00069A A3               [24] 2341 	inc	dptr
      00069B 12r00r00         [24] 2342 	lcall	__gptrget
      00069E 09               [12] 2343 	inc	r1
      00069F F7               [12] 2344 	mov	@r1,a
      0006A0 A3               [24] 2345 	inc	dptr
      0006A1 12r00r00         [24] 2346 	lcall	__gptrget
      0006A4 09               [12] 2347 	inc	r1
      0006A5 F7               [12] 2348 	mov	@r1,a
                                   2349 ;	../../core/net/mac/csma.c:246: cptr = metadata->cptr;
      0006A6 E5 81            [12] 2350 	mov	a,sp
      0006A8 24 F9            [12] 2351 	add	a,#0xf9
      0006AA F8               [12] 2352 	mov	r0,a
      0006AB 74 03            [12] 2353 	mov	a,#0x03
      0006AD 26               [12] 2354 	add	a,@r0
      0006AE FD               [12] 2355 	mov	r5,a
      0006AF E4               [12] 2356 	clr	a
      0006B0 08               [12] 2357 	inc	r0
      0006B1 36               [12] 2358 	addc	a,@r0
      0006B2 FE               [12] 2359 	mov	r6,a
      0006B3 08               [12] 2360 	inc	r0
      0006B4 86 07            [24] 2361 	mov	ar7,@r0
      0006B6 8D 82            [24] 2362 	mov	dpl,r5
      0006B8 8E 83            [24] 2363 	mov	dph,r6
      0006BA 8F F0            [24] 2364 	mov	b,r7
      0006BC E5 81            [12] 2365 	mov	a,sp
      0006BE 24 F4            [12] 2366 	add	a,#0xf4
      0006C0 F8               [12] 2367 	mov	r0,a
      0006C1 12r00r00         [24] 2368 	lcall	__gptrget
      0006C4 F6               [12] 2369 	mov	@r0,a
      0006C5 A3               [24] 2370 	inc	dptr
      0006C6 12r00r00         [24] 2371 	lcall	__gptrget
      0006C9 08               [12] 2372 	inc	r0
      0006CA F6               [12] 2373 	mov	@r0,a
      0006CB A3               [24] 2374 	inc	dptr
      0006CC 12r00r00         [24] 2375 	lcall	__gptrget
      0006CF 08               [12] 2376 	inc	r0
      0006D0 F6               [12] 2377 	mov	@r0,a
                                   2378 ;	../../core/net/mac/csma.c:247: num_tx = n->transmissions;
      0006D1 E5 81            [12] 2379 	mov	a,sp
      0006D3 24 EC            [12] 2380 	add	a,#0xec
      0006D5 F8               [12] 2381 	mov	r0,a
      0006D6 74 21            [12] 2382 	mov	a,#0x21
      0006D8 26               [12] 2383 	add	a,@r0
      0006D9 FD               [12] 2384 	mov	r5,a
      0006DA E4               [12] 2385 	clr	a
      0006DB 08               [12] 2386 	inc	r0
      0006DC 36               [12] 2387 	addc	a,@r0
      0006DD FE               [12] 2388 	mov	r6,a
      0006DE 08               [12] 2389 	inc	r0
      0006DF 86 07            [24] 2390 	mov	ar7,@r0
      0006E1 8D 82            [24] 2391 	mov	dpl,r5
      0006E3 8E 83            [24] 2392 	mov	dph,r6
      0006E5 8F F0            [24] 2393 	mov	b,r7
      0006E7 12r00r00         [24] 2394 	lcall	__gptrget
      0006EA FC               [12] 2395 	mov	r4,a
      0006EB E5 81            [12] 2396 	mov	a,sp
      0006ED 24 F7            [12] 2397 	add	a,#0xf7
      0006EF F8               [12] 2398 	mov	r0,a
      0006F0 A6 04            [24] 2399 	mov	@r0,ar4
      0006F2 08               [12] 2400 	inc	r0
      0006F3 76 00            [12] 2401 	mov	@r0,#0x00
                                   2402 ;	../../core/net/mac/csma.c:248: if(status == MAC_TX_COLLISION ||
      0006F5 E5 81            [12] 2403 	mov	a,sp
      0006F7 24 E5            [12] 2404 	add	a,#0xe5
      0006F9 F8               [12] 2405 	mov	r0,a
      0006FA B6 01 06         [24] 2406 	cjne	@r0,#0x01,00182$
      0006FD 08               [12] 2407 	inc	r0
      0006FE B6 00 02         [24] 2408 	cjne	@r0,#0x00,00182$
      000701 80 11            [24] 2409 	sjmp	00114$
      000703                       2410 00182$:
                                   2411 ;	../../core/net/mac/csma.c:249: status == MAC_TX_NOACK) {
      000703 E5 81            [12] 2412 	mov	a,sp
      000705 24 E5            [12] 2413 	add	a,#0xe5
      000707 F8               [12] 2414 	mov	r0,a
      000708 B6 02 06         [24] 2415 	cjne	@r0,#0x02,00183$
      00070B 08               [12] 2416 	inc	r0
      00070C B6 00 02         [24] 2417 	cjne	@r0,#0x00,00183$
      00070F 80 03            [24] 2418 	sjmp	00184$
      000711                       2419 00183$:
      000711 02r09r10         [24] 2420 	ljmp	00121$
      000714                       2421 00184$:
                                   2422 ;	../../core/net/mac/csma.c:263: }
      000714                       2423 00114$:
                                   2424 ;	../../core/net/mac/csma.c:267: time = default_timebase();
      000714 C0 07            [24] 2425 	push	ar7
      000716 C0 06            [24] 2426 	push	ar6
      000718 C0 05            [24] 2427 	push	ar5
      00071A 78rA6            [12] 2428 	mov	r0,#_default_timebase
      00071C 79s00            [12] 2429 	mov	r1,#(_default_timebase >> 8)
      00071E 7As00            [12] 2430 	mov	r2,#(_default_timebase >> 16)
      000720 12r00r00         [24] 2431 	lcall	__sdcc_banked_call
      000723 AC 82            [24] 2432 	mov	r4,dpl
      000725 AB 83            [24] 2433 	mov	r3,dph
      000727 D0 05            [24] 2434 	pop	ar5
      000729 D0 06            [24] 2435 	pop	ar6
      00072B D0 07            [24] 2436 	pop	ar7
      00072D E5 81            [12] 2437 	mov	a,sp
      00072F 24 FC            [12] 2438 	add	a,#0xfc
      000731 F8               [12] 2439 	mov	r0,a
      000732 A6 04            [24] 2440 	mov	@r0,ar4
      000734 08               [12] 2441 	inc	r0
      000735 A6 03            [24] 2442 	mov	@r0,ar3
                                   2443 ;	../../core/net/mac/csma.c:272: backoff_exponent = num_tx;
      000737 E5 81            [12] 2444 	mov	a,sp
      000739 24 F7            [12] 2445 	add	a,#0xf7
      00073B F8               [12] 2446 	mov	r0,a
      00073C 86 04            [24] 2447 	mov	ar4,@r0
      00073E 08               [12] 2448 	inc	r0
      00073F 86 03            [24] 2449 	mov	ar3,@r0
                                   2450 ;	../../core/net/mac/csma.c:275: if(backoff_exponent > CSMA_MAX_BACKOFF_EXPONENT) {
      000741 E5 81            [12] 2451 	mov	a,sp
      000743 24 F7            [12] 2452 	add	a,#0xf7
      000745 F8               [12] 2453 	mov	r0,a
      000746 C3               [12] 2454 	clr	c
      000747 74 03            [12] 2455 	mov	a,#0x03
      000749 96               [12] 2456 	subb	a,@r0
      00074A E4               [12] 2457 	clr	a
      00074B 64 80            [12] 2458 	xrl	a,#0x80
      00074D 08               [12] 2459 	inc	r0
      00074E 86 F0            [24] 2460 	mov	b,@r0
      000750 63 F0 80         [24] 2461 	xrl	b,#0x80
      000753 95 F0            [12] 2462 	subb	a,b
      000755 50 04            [24] 2463 	jnc	00116$
                                   2464 ;	../../core/net/mac/csma.c:276: backoff_exponent = CSMA_MAX_BACKOFF_EXPONENT;
      000757 7C 03            [12] 2465 	mov	r4,#0x03
      000759 7B 00            [12] 2466 	mov	r3,#0x00
      00075B                       2467 00116$:
                                   2468 ;	../../core/net/mac/csma.c:280: backoff_transmissions = 1 << backoff_exponent;
      00075B 8C F0            [24] 2469 	mov	b,r4
      00075D 05 F0            [12] 2470 	inc	b
      00075F E5 81            [12] 2471 	mov	a,sp
      000761 24 F2            [12] 2472 	add	a,#0xf2
      000763 F8               [12] 2473 	mov	r0,a
      000764 76 01            [12] 2474 	mov	@r0,#0x01
      000766 08               [12] 2475 	inc	r0
      000767 76 00            [12] 2476 	mov	@r0,#0x00
      000769 18               [12] 2477 	dec	r0
      00076A 80 09            [24] 2478 	sjmp	00187$
      00076C                       2479 00186$:
      00076C E6               [12] 2480 	mov	a,@r0
      00076D 25 E0            [12] 2481 	add	a,acc
      00076F F6               [12] 2482 	mov	@r0,a
      000770 08               [12] 2483 	inc	r0
      000771 E6               [12] 2484 	mov	a,@r0
      000772 33               [12] 2485 	rlc	a
      000773 F6               [12] 2486 	mov	@r0,a
      000774 18               [12] 2487 	dec	r0
      000775                       2488 00187$:
      000775 D5 F0 F4         [24] 2489 	djnz	b,00186$
                                   2490 ;	../../core/net/mac/csma.c:284: time = time + (random_rand() % (backoff_transmissions * time));
      000778 C0 07            [24] 2491 	push	ar7
      00077A C0 06            [24] 2492 	push	ar6
      00077C C0 05            [24] 2493 	push	ar5
      00077E 78r00            [12] 2494 	mov	r0,#_random_rand
      000780 79s00            [12] 2495 	mov	r1,#(_random_rand >> 8)
      000782 7As00            [12] 2496 	mov	r2,#(_random_rand >> 16)
      000784 12r00r00         [24] 2497 	lcall	__sdcc_banked_call
      000787 C8               [12] 2498 	xch	a,r0
      000788 E5 81            [12] 2499 	mov	a,sp
      00078A 24 E7            [12] 2500 	add	a,#0xe7
      00078C C8               [12] 2501 	xch	a,r0
      00078D A6 82            [24] 2502 	mov	@r0,dpl
      00078F 08               [12] 2503 	inc	r0
      000790 A6 83            [24] 2504 	mov	@r0,dph
      000792 D0 05            [24] 2505 	pop	ar5
      000794 D0 06            [24] 2506 	pop	ar6
      000796 D0 07            [24] 2507 	pop	ar7
      000798 E5 81            [12] 2508 	mov	a,sp
      00079A 24 F2            [12] 2509 	add	a,#0xf2
      00079C F8               [12] 2510 	mov	r0,a
      00079D 86 03            [24] 2511 	mov	ar3,@r0
      00079F 08               [12] 2512 	inc	r0
      0007A0 86 04            [24] 2513 	mov	ar4,@r0
      0007A2 C0 07            [24] 2514 	push	ar7
      0007A4 C0 06            [24] 2515 	push	ar6
      0007A6 C0 05            [24] 2516 	push	ar5
      0007A8 E5 81            [12] 2517 	mov	a,sp
      0007AA 24 F9            [12] 2518 	add	a,#0xf9
      0007AC F8               [12] 2519 	mov	r0,a
      0007AD E6               [12] 2520 	mov	a,@r0
      0007AE C0 E0            [24] 2521 	push	acc
      0007B0 08               [12] 2522 	inc	r0
      0007B1 E6               [12] 2523 	mov	a,@r0
      0007B2 C0 E0            [24] 2524 	push	acc
      0007B4 8B 82            [24] 2525 	mov	dpl,r3
      0007B6 8C 83            [24] 2526 	mov	dph,r4
      0007B8 12r00r00         [24] 2527 	lcall	__mulint
      0007BB AB 82            [24] 2528 	mov	r3,dpl
      0007BD AC 83            [24] 2529 	mov	r4,dph
      0007BF 15 81            [12] 2530 	dec	sp
      0007C1 15 81            [12] 2531 	dec	sp
      0007C3 C0 03            [24] 2532 	push	ar3
      0007C5 C0 04            [24] 2533 	push	ar4
      0007C7 E5 81            [12] 2534 	mov	a,sp
      0007C9 24 E5            [12] 2535 	add	a,#0xe5
      0007CB F8               [12] 2536 	mov	r0,a
      0007CC 86 82            [24] 2537 	mov	dpl,@r0
      0007CE 08               [12] 2538 	inc	r0
      0007CF 86 83            [24] 2539 	mov	dph,@r0
      0007D1 12r00r00         [24] 2540 	lcall	__moduint
      0007D4 AB 82            [24] 2541 	mov	r3,dpl
      0007D6 AC 83            [24] 2542 	mov	r4,dph
      0007D8 15 81            [12] 2543 	dec	sp
      0007DA 15 81            [12] 2544 	dec	sp
      0007DC D0 05            [24] 2545 	pop	ar5
      0007DE D0 06            [24] 2546 	pop	ar6
      0007E0 D0 07            [24] 2547 	pop	ar7
      0007E2 E5 81            [12] 2548 	mov	a,sp
      0007E4 24 FC            [12] 2549 	add	a,#0xfc
      0007E6 F8               [12] 2550 	mov	r0,a
      0007E7 EB               [12] 2551 	mov	a,r3
      0007E8 26               [12] 2552 	add	a,@r0
      0007E9 F6               [12] 2553 	mov	@r0,a
      0007EA EC               [12] 2554 	mov	a,r4
      0007EB 08               [12] 2555 	inc	r0
      0007EC 36               [12] 2556 	addc	a,@r0
      0007ED F6               [12] 2557 	mov	@r0,a
                                   2558 ;	../../core/net/mac/csma.c:286: if(n->transmissions < metadata->max_transmissions) {
      0007EE 8D 82            [24] 2559 	mov	dpl,r5
      0007F0 8E 83            [24] 2560 	mov	dph,r6
      0007F2 8F F0            [24] 2561 	mov	b,r7
      0007F4 12r00r00         [24] 2562 	lcall	__gptrget
      0007F7 FD               [12] 2563 	mov	r5,a
      0007F8 E5 81            [12] 2564 	mov	a,sp
      0007FA 24 F9            [12] 2565 	add	a,#0xf9
      0007FC F8               [12] 2566 	mov	r0,a
      0007FD 74 06            [12] 2567 	mov	a,#0x06
      0007FF 26               [12] 2568 	add	a,@r0
      000800 FC               [12] 2569 	mov	r4,a
      000801 E4               [12] 2570 	clr	a
      000802 08               [12] 2571 	inc	r0
      000803 36               [12] 2572 	addc	a,@r0
      000804 FE               [12] 2573 	mov	r6,a
      000805 08               [12] 2574 	inc	r0
      000806 86 07            [24] 2575 	mov	ar7,@r0
      000808 8C 82            [24] 2576 	mov	dpl,r4
      00080A 8E 83            [24] 2577 	mov	dph,r6
      00080C 8F F0            [24] 2578 	mov	b,r7
      00080E 12r00r00         [24] 2579 	lcall	__gptrget
      000811 FC               [12] 2580 	mov	r4,a
      000812 C3               [12] 2581 	clr	c
      000813 ED               [12] 2582 	mov	a,r5
      000814 9C               [12] 2583 	subb	a,r4
      000815 40 03            [24] 2584 	jc	00188$
      000817 02r08r9E         [24] 2585 	ljmp	00118$
      00081A                       2586 00188$:
                                   2587 ;	../../core/net/mac/csma.c:289: transmit_packet_list, n);
      00081A E5 81            [12] 2588 	mov	a,sp
      00081C 24 EC            [12] 2589 	add	a,#0xec
      00081E F8               [12] 2590 	mov	r0,a
      00081F 86 05            [24] 2591 	mov	ar5,@r0
      000821 08               [12] 2592 	inc	r0
      000822 86 06            [24] 2593 	mov	ar6,@r0
      000824 08               [12] 2594 	inc	r0
      000825 86 07            [24] 2595 	mov	ar7,@r0
                                   2596 ;	../../core/net/mac/csma.c:288: ctimer_set(&n->transmit_timer, time,
      000827 E5 81            [12] 2597 	mov	a,sp
      000829 24 EC            [12] 2598 	add	a,#0xec
      00082B F8               [12] 2599 	mov	r0,a
      00082C 74 0B            [12] 2600 	mov	a,#0x0B
      00082E 26               [12] 2601 	add	a,@r0
      00082F FA               [12] 2602 	mov	r2,a
      000830 E4               [12] 2603 	clr	a
      000831 08               [12] 2604 	inc	r0
      000832 36               [12] 2605 	addc	a,@r0
      000833 FB               [12] 2606 	mov	r3,a
      000834 08               [12] 2607 	inc	r0
      000835 86 04            [24] 2608 	mov	ar4,@r0
      000837 C0 05            [24] 2609 	push	ar5
      000839 C0 06            [24] 2610 	push	ar6
      00083B C0 07            [24] 2611 	push	ar7
      00083D 74rDB            [12] 2612 	mov	a,#_transmit_packet_list
      00083F C0 E0            [24] 2613 	push	acc
      000841 74s00            [12] 2614 	mov	a,#(_transmit_packet_list >> 8)
      000843 C0 E0            [24] 2615 	push	acc
      000845 74s00            [12] 2616 	mov	a,#(_transmit_packet_list >> 16)
      000847 C0 E0            [24] 2617 	push	acc
      000849 E5 81            [12] 2618 	mov	a,sp
      00084B 24 F6            [12] 2619 	add	a,#0xf6
      00084D F8               [12] 2620 	mov	r0,a
      00084E E6               [12] 2621 	mov	a,@r0
      00084F C0 E0            [24] 2622 	push	acc
      000851 08               [12] 2623 	inc	r0
      000852 E6               [12] 2624 	mov	a,@r0
      000853 C0 E0            [24] 2625 	push	acc
      000855 8A 82            [24] 2626 	mov	dpl,r2
      000857 8B 83            [24] 2627 	mov	dph,r3
      000859 8C F0            [24] 2628 	mov	b,r4
      00085B 78r00            [12] 2629 	mov	r0,#_ctimer_set
      00085D 79s00            [12] 2630 	mov	r1,#(_ctimer_set >> 8)
      00085F 7As00            [12] 2631 	mov	r2,#(_ctimer_set >> 16)
      000861 12r00r00         [24] 2632 	lcall	__sdcc_banked_call
      000864 E5 81            [12] 2633 	mov	a,sp
      000866 24 F8            [12] 2634 	add	a,#0xf8
                                   2635 ;	../../core/net/mac/csma.c:292: queuebuf_update_attr_from_packetbuf(q->buf);
      000868 F5 81            [12] 2636 	mov	sp,a
      00086A 24 EF            [12] 2637 	add	a,#0xef
      00086C F8               [12] 2638 	mov	r0,a
      00086D 74 03            [12] 2639 	mov	a,#0x03
      00086F 26               [12] 2640 	add	a,@r0
      000870 FD               [12] 2641 	mov	r5,a
      000871 E4               [12] 2642 	clr	a
      000872 08               [12] 2643 	inc	r0
      000873 36               [12] 2644 	addc	a,@r0
      000874 FE               [12] 2645 	mov	r6,a
      000875 08               [12] 2646 	inc	r0
      000876 86 07            [24] 2647 	mov	ar7,@r0
      000878 8D 82            [24] 2648 	mov	dpl,r5
      00087A 8E 83            [24] 2649 	mov	dph,r6
      00087C 8F F0            [24] 2650 	mov	b,r7
      00087E 12r00r00         [24] 2651 	lcall	__gptrget
      000881 FD               [12] 2652 	mov	r5,a
      000882 A3               [24] 2653 	inc	dptr
      000883 12r00r00         [24] 2654 	lcall	__gptrget
      000886 FE               [12] 2655 	mov	r6,a
      000887 A3               [24] 2656 	inc	dptr
      000888 12r00r00         [24] 2657 	lcall	__gptrget
      00088B FF               [12] 2658 	mov	r7,a
      00088C 8D 82            [24] 2659 	mov	dpl,r5
      00088E 8E 83            [24] 2660 	mov	dph,r6
      000890 8F F0            [24] 2661 	mov	b,r7
      000892 78r00            [12] 2662 	mov	r0,#_queuebuf_update_attr_from_packetbuf
      000894 79s00            [12] 2663 	mov	r1,#(_queuebuf_update_attr_from_packetbuf >> 8)
      000896 7As00            [12] 2664 	mov	r2,#(_queuebuf_update_attr_from_packetbuf >> 16)
      000898 12r00r00         [24] 2665 	lcall	__sdcc_banked_call
      00089B 02r09r80         [24] 2666 	ljmp	00131$
      00089E                       2667 00118$:
                                   2668 ;	../../core/net/mac/csma.c:296: free_packet(n, q);
      00089E E5 81            [12] 2669 	mov	a,sp
      0008A0 24 EF            [12] 2670 	add	a,#0xef
      0008A2 F8               [12] 2671 	mov	r0,a
      0008A3 E6               [12] 2672 	mov	a,@r0
      0008A4 C0 E0            [24] 2673 	push	acc
      0008A6 08               [12] 2674 	inc	r0
      0008A7 E6               [12] 2675 	mov	a,@r0
      0008A8 C0 E0            [24] 2676 	push	acc
      0008AA 08               [12] 2677 	inc	r0
      0008AB E6               [12] 2678 	mov	a,@r0
      0008AC C0 E0            [24] 2679 	push	acc
      0008AE E5 81            [12] 2680 	mov	a,sp
      0008B0 24 E9            [12] 2681 	add	a,#0xe9
      0008B2 F8               [12] 2682 	mov	r0,a
      0008B3 86 82            [24] 2683 	mov	dpl,@r0
      0008B5 08               [12] 2684 	inc	r0
      0008B6 86 83            [24] 2685 	mov	dph,@r0
      0008B8 08               [12] 2686 	inc	r0
      0008B9 86 F0            [24] 2687 	mov	b,@r0
      0008BB 78r95            [12] 2688 	mov	r0,#_free_packet
      0008BD 79s01            [12] 2689 	mov	r1,#(_free_packet >> 8)
      0008BF 7As00            [12] 2690 	mov	r2,#(_free_packet >> 16)
      0008C1 12r00r00         [24] 2691 	lcall	__sdcc_banked_call
      0008C4 15 81            [12] 2692 	dec	sp
      0008C6 15 81            [12] 2693 	dec	sp
      0008C8 15 81            [12] 2694 	dec	sp
                                   2695 ;	../../core/net/mac/csma.c:297: mac_call_sent_callback(sent, cptr, status, num_tx);
      0008CA E5 81            [12] 2696 	mov	a,sp
      0008CC 24 F7            [12] 2697 	add	a,#0xf7
      0008CE F8               [12] 2698 	mov	r0,a
      0008CF E6               [12] 2699 	mov	a,@r0
      0008D0 C0 E0            [24] 2700 	push	acc
      0008D2 08               [12] 2701 	inc	r0
      0008D3 E6               [12] 2702 	mov	a,@r0
      0008D4 C0 E0            [24] 2703 	push	acc
      0008D6 E5 81            [12] 2704 	mov	a,sp
      0008D8 24 E3            [12] 2705 	add	a,#0xe3
      0008DA F8               [12] 2706 	mov	r0,a
      0008DB E6               [12] 2707 	mov	a,@r0
      0008DC C0 E0            [24] 2708 	push	acc
      0008DE 08               [12] 2709 	inc	r0
      0008DF E6               [12] 2710 	mov	a,@r0
      0008E0 C0 E0            [24] 2711 	push	acc
      0008E2 E5 81            [12] 2712 	mov	a,sp
      0008E4 24 F0            [12] 2713 	add	a,#0xf0
      0008E6 F8               [12] 2714 	mov	r0,a
      0008E7 E6               [12] 2715 	mov	a,@r0
      0008E8 C0 E0            [24] 2716 	push	acc
      0008EA 08               [12] 2717 	inc	r0
      0008EB E6               [12] 2718 	mov	a,@r0
      0008EC C0 E0            [24] 2719 	push	acc
      0008EE 08               [12] 2720 	inc	r0
      0008EF E6               [12] 2721 	mov	a,@r0
      0008F0 C0 E0            [24] 2722 	push	acc
      0008F2 E5 81            [12] 2723 	mov	a,sp
      0008F4 24 F7            [12] 2724 	add	a,#0xf7
      0008F6 F8               [12] 2725 	mov	r0,a
      0008F7 86 82            [24] 2726 	mov	dpl,@r0
      0008F9 08               [12] 2727 	inc	r0
      0008FA 86 83            [24] 2728 	mov	dph,@r0
      0008FC 08               [12] 2729 	inc	r0
      0008FD 86 F0            [24] 2730 	mov	b,@r0
      0008FF 78r00            [12] 2731 	mov	r0,#_mac_call_sent_callback
      000901 79s00            [12] 2732 	mov	r1,#(_mac_call_sent_callback >> 8)
      000903 7As00            [12] 2733 	mov	r2,#(_mac_call_sent_callback >> 16)
      000905 12r00r00         [24] 2734 	lcall	__sdcc_banked_call
      000908 E5 81            [12] 2735 	mov	a,sp
      00090A 24 F9            [12] 2736 	add	a,#0xf9
      00090C F5 81            [12] 2737 	mov	sp,a
      00090E 80 70            [24] 2738 	sjmp	00131$
      000910                       2739 00121$:
                                   2740 ;	../../core/net/mac/csma.c:305: free_packet(n, q);
      000910 E5 81            [12] 2741 	mov	a,sp
      000912 24 EF            [12] 2742 	add	a,#0xef
      000914 F8               [12] 2743 	mov	r0,a
      000915 E6               [12] 2744 	mov	a,@r0
      000916 C0 E0            [24] 2745 	push	acc
      000918 08               [12] 2746 	inc	r0
      000919 E6               [12] 2747 	mov	a,@r0
      00091A C0 E0            [24] 2748 	push	acc
      00091C 08               [12] 2749 	inc	r0
      00091D E6               [12] 2750 	mov	a,@r0
      00091E C0 E0            [24] 2751 	push	acc
      000920 E5 81            [12] 2752 	mov	a,sp
      000922 24 E9            [12] 2753 	add	a,#0xe9
      000924 F8               [12] 2754 	mov	r0,a
      000925 86 82            [24] 2755 	mov	dpl,@r0
      000927 08               [12] 2756 	inc	r0
      000928 86 83            [24] 2757 	mov	dph,@r0
      00092A 08               [12] 2758 	inc	r0
      00092B 86 F0            [24] 2759 	mov	b,@r0
      00092D 78r95            [12] 2760 	mov	r0,#_free_packet
      00092F 79s01            [12] 2761 	mov	r1,#(_free_packet >> 8)
      000931 7As00            [12] 2762 	mov	r2,#(_free_packet >> 16)
      000933 12r00r00         [24] 2763 	lcall	__sdcc_banked_call
      000936 15 81            [12] 2764 	dec	sp
      000938 15 81            [12] 2765 	dec	sp
      00093A 15 81            [12] 2766 	dec	sp
                                   2767 ;	../../core/net/mac/csma.c:306: mac_call_sent_callback(sent, cptr, status, num_tx);
      00093C E5 81            [12] 2768 	mov	a,sp
      00093E 24 F7            [12] 2769 	add	a,#0xf7
      000940 F8               [12] 2770 	mov	r0,a
      000941 E6               [12] 2771 	mov	a,@r0
      000942 C0 E0            [24] 2772 	push	acc
      000944 08               [12] 2773 	inc	r0
      000945 E6               [12] 2774 	mov	a,@r0
      000946 C0 E0            [24] 2775 	push	acc
      000948 E5 81            [12] 2776 	mov	a,sp
      00094A 24 E3            [12] 2777 	add	a,#0xe3
      00094C F8               [12] 2778 	mov	r0,a
      00094D E6               [12] 2779 	mov	a,@r0
      00094E C0 E0            [24] 2780 	push	acc
      000950 08               [12] 2781 	inc	r0
      000951 E6               [12] 2782 	mov	a,@r0
      000952 C0 E0            [24] 2783 	push	acc
      000954 E5 81            [12] 2784 	mov	a,sp
      000956 24 F0            [12] 2785 	add	a,#0xf0
      000958 F8               [12] 2786 	mov	r0,a
      000959 E6               [12] 2787 	mov	a,@r0
      00095A C0 E0            [24] 2788 	push	acc
      00095C 08               [12] 2789 	inc	r0
      00095D E6               [12] 2790 	mov	a,@r0
      00095E C0 E0            [24] 2791 	push	acc
      000960 08               [12] 2792 	inc	r0
      000961 E6               [12] 2793 	mov	a,@r0
      000962 C0 E0            [24] 2794 	push	acc
      000964 E5 81            [12] 2795 	mov	a,sp
      000966 24 F7            [12] 2796 	add	a,#0xf7
      000968 F8               [12] 2797 	mov	r0,a
      000969 86 82            [24] 2798 	mov	dpl,@r0
      00096B 08               [12] 2799 	inc	r0
      00096C 86 83            [24] 2800 	mov	dph,@r0
      00096E 08               [12] 2801 	inc	r0
      00096F 86 F0            [24] 2802 	mov	b,@r0
      000971 78r00            [12] 2803 	mov	r0,#_mac_call_sent_callback
      000973 79s00            [12] 2804 	mov	r1,#(_mac_call_sent_callback >> 8)
      000975 7As00            [12] 2805 	mov	r2,#(_mac_call_sent_callback >> 16)
      000977 12r00r00         [24] 2806 	lcall	__sdcc_banked_call
      00097A E5 81            [12] 2807 	mov	a,sp
      00097C 24 F9            [12] 2808 	add	a,#0xf9
      00097E F5 81            [12] 2809 	mov	sp,a
      000980                       2810 00131$:
      000980 E5 81            [12] 2811 	mov	a,sp
      000982 24 E9            [12] 2812 	add	a,#0xE9
      000984 F5 81            [12] 2813 	mov	sp,a
      000986 02r00r00         [24] 2814 	ljmp	__sdcc_banked_ret
                                   2815 ;------------------------------------------------------------
                                   2816 ;Allocation info for local variables in function 'send_packet'
                                   2817 ;------------------------------------------------------------
                                   2818 ;ptr                       Allocated to stack - sp -26
                                   2819 ;sent                      Allocated to stack - sp -20
                                   2820 ;q                         Allocated to stack - sp -11
                                   2821 ;n                         Allocated to stack - sp -8
                                   2822 ;addr                      Allocated to stack - sp -5
                                   2823 ;metadata                  Allocated to stack - sp -2
                                   2824 ;sloc0                     Allocated to stack - sp -17
                                   2825 ;sloc1                     Allocated to stack - sp -14
                                   2826 ;initialized               Allocated with name '_send_packet_initialized_1_265'
                                   2827 ;seqno                     Allocated with name '_send_packet_seqno_1_265'
                                   2828 ;------------------------------------------------------------
                                   2829 ;	../../core/net/mac/csma.c:317: send_packet(mac_callback_t sent, void *ptr)
                                   2830 ;	-----------------------------------------
                                   2831 ;	 function send_packet
                                   2832 ;	-----------------------------------------
      000989                       2833 _send_packet:
      000989 C0 82            [24] 2834 	push	dpl
      00098B C0 83            [24] 2835 	push	dph
      00098D C0 F0            [24] 2836 	push	b
      00098F E5 81            [12] 2837 	mov	a,sp
      000991 24 12            [12] 2838 	add	a,#0x12
      000993 F5 81            [12] 2839 	mov	sp,a
                                   2840 ;	../../core/net/mac/csma.c:323: const linkaddr_t *addr = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      000995 75 82 10         [24] 2841 	mov	dpl,#0x10
      000998 78r00            [12] 2842 	mov	r0,#_packetbuf_addr
      00099A 79s00            [12] 2843 	mov	r1,#(_packetbuf_addr >> 8)
      00099C 7As00            [12] 2844 	mov	r2,#(_packetbuf_addr >> 16)
      00099E 12r00r00         [24] 2845 	lcall	__sdcc_banked_call
      0009A1 AA 82            [24] 2846 	mov	r2,dpl
      0009A3 AB 83            [24] 2847 	mov	r3,dph
      0009A5 AC F0            [24] 2848 	mov	r4,b
      0009A7 E5 81            [12] 2849 	mov	a,sp
      0009A9 24 FB            [12] 2850 	add	a,#0xfb
      0009AB F8               [12] 2851 	mov	r0,a
      0009AC A6 02            [24] 2852 	mov	@r0,ar2
      0009AE 08               [12] 2853 	inc	r0
      0009AF A6 03            [24] 2854 	mov	@r0,ar3
      0009B1 08               [12] 2855 	inc	r0
      0009B2 A6 04            [24] 2856 	mov	@r0,ar4
                                   2857 ;	../../core/net/mac/csma.c:325: if(!initialized) {
      0009B4 90r00rC2         [24] 2858 	mov	dptr,#_send_packet_initialized_1_265
      0009B7 E0               [24] 2859 	movx	a,@dptr
      0009B8 FC               [12] 2860 	mov	r4,a
      0009B9 70 1C            [24] 2861 	jnz	00102$
                                   2862 ;	../../core/net/mac/csma.c:326: initialized = 1;
      0009BB 90r00rC2         [24] 2863 	mov	dptr,#_send_packet_initialized_1_265
      0009BE 74 01            [12] 2864 	mov	a,#0x01
      0009C0 F0               [24] 2865 	movx	@dptr,a
                                   2866 ;	../../core/net/mac/csma.c:328: seqno = random_rand();
      0009C1 78r00            [12] 2867 	mov	r0,#_random_rand
      0009C3 79s00            [12] 2868 	mov	r1,#(_random_rand >> 8)
      0009C5 7As00            [12] 2869 	mov	r2,#(_random_rand >> 16)
      0009C7 12r00r00         [24] 2870 	lcall	__sdcc_banked_call
      0009CA E5 82            [12] 2871 	mov	a,dpl
      0009CC 85 83 F0         [24] 2872 	mov	b,dph
      0009CF 90r00rC3         [24] 2873 	mov	dptr,#_send_packet_seqno_1_265
      0009D2 F0               [24] 2874 	movx	@dptr,a
      0009D3 E5 F0            [12] 2875 	mov	a,b
      0009D5 A3               [24] 2876 	inc	dptr
      0009D6 F0               [24] 2877 	movx	@dptr,a
      0009D7                       2878 00102$:
                                   2879 ;	../../core/net/mac/csma.c:331: if(seqno == 0) {
      0009D7 90r00rC3         [24] 2880 	mov	dptr,#_send_packet_seqno_1_265
      0009DA E0               [24] 2881 	movx	a,@dptr
      0009DB FB               [12] 2882 	mov	r3,a
      0009DC A3               [24] 2883 	inc	dptr
      0009DD E0               [24] 2884 	movx	a,@dptr
      0009DE FC               [12] 2885 	mov	r4,a
      0009DF 4B               [12] 2886 	orl	a,r3
      0009E0 70 0B            [24] 2887 	jnz	00104$
                                   2888 ;	../../core/net/mac/csma.c:334: seqno++;
      0009E2 90r00rC3         [24] 2889 	mov	dptr,#_send_packet_seqno_1_265
      0009E5 74 01            [12] 2890 	mov	a,#0x01
      0009E7 2B               [12] 2891 	add	a,r3
      0009E8 F0               [24] 2892 	movx	@dptr,a
      0009E9 E4               [12] 2893 	clr	a
      0009EA 3C               [12] 2894 	addc	a,r4
      0009EB A3               [24] 2895 	inc	dptr
      0009EC F0               [24] 2896 	movx	@dptr,a
      0009ED                       2897 00104$:
                                   2898 ;	../../core/net/mac/csma.c:336: packetbuf_set_attr(PACKETBUF_ATTR_MAC_SEQNO, seqno++);
      0009ED 90r00rC3         [24] 2899 	mov	dptr,#_send_packet_seqno_1_265
      0009F0 E0               [24] 2900 	movx	a,@dptr
      0009F1 FB               [12] 2901 	mov	r3,a
      0009F2 A3               [24] 2902 	inc	dptr
      0009F3 E0               [24] 2903 	movx	a,@dptr
      0009F4 FC               [12] 2904 	mov	r4,a
      0009F5 90r00rC3         [24] 2905 	mov	dptr,#_send_packet_seqno_1_265
      0009F8 74 01            [12] 2906 	mov	a,#0x01
      0009FA 2B               [12] 2907 	add	a,r3
      0009FB F0               [24] 2908 	movx	@dptr,a
      0009FC E4               [12] 2909 	clr	a
      0009FD 3C               [12] 2910 	addc	a,r4
      0009FE A3               [24] 2911 	inc	dptr
      0009FF F0               [24] 2912 	movx	@dptr,a
      000A00 C0 03            [24] 2913 	push	ar3
      000A02 C0 04            [24] 2914 	push	ar4
      000A04 75 82 0A         [24] 2915 	mov	dpl,#0x0A
      000A07 78r00            [12] 2916 	mov	r0,#_packetbuf_set_attr
      000A09 79s00            [12] 2917 	mov	r1,#(_packetbuf_set_attr >> 8)
      000A0B 7As00            [12] 2918 	mov	r2,#(_packetbuf_set_attr >> 16)
      000A0D 12r00r00         [24] 2919 	lcall	__sdcc_banked_call
      000A10 15 81            [12] 2920 	dec	sp
      000A12 15 81            [12] 2921 	dec	sp
                                   2922 ;	../../core/net/mac/csma.c:339: n = neighbor_queue_from_addr(addr);
      000A14 E5 81            [12] 2923 	mov	a,sp
      000A16 24 FB            [12] 2924 	add	a,#0xfb
      000A18 F8               [12] 2925 	mov	r0,a
      000A19 86 82            [24] 2926 	mov	dpl,@r0
      000A1B 08               [12] 2927 	inc	r0
      000A1C 86 83            [24] 2928 	mov	dph,@r0
      000A1E 08               [12] 2929 	inc	r0
      000A1F 86 F0            [24] 2930 	mov	b,@r0
      000A21 78r00            [12] 2931 	mov	r0,#_neighbor_queue_from_addr
      000A23 79s00            [12] 2932 	mov	r1,#(_neighbor_queue_from_addr >> 8)
      000A25 7As00            [12] 2933 	mov	r2,#(_neighbor_queue_from_addr >> 16)
      000A27 12r00r00         [24] 2934 	lcall	__sdcc_banked_call
      000A2A AA 82            [24] 2935 	mov	r2,dpl
      000A2C AB 83            [24] 2936 	mov	r3,dph
      000A2E AC F0            [24] 2937 	mov	r4,b
      000A30 E5 81            [12] 2938 	mov	a,sp
      000A32 24 F8            [12] 2939 	add	a,#0xf8
      000A34 F8               [12] 2940 	mov	r0,a
      000A35 A6 02            [24] 2941 	mov	@r0,ar2
      000A37 08               [12] 2942 	inc	r0
      000A38 A6 03            [24] 2943 	mov	@r0,ar3
      000A3A 08               [12] 2944 	inc	r0
      000A3B A6 04            [24] 2945 	mov	@r0,ar4
                                   2946 ;	../../core/net/mac/csma.c:340: if(n == NULL) {
      000A3D E5 81            [12] 2947 	mov	a,sp
      000A3F 24 F8            [12] 2948 	add	a,#0xf8
      000A41 F8               [12] 2949 	mov	r0,a
      000A42 E6               [12] 2950 	mov	a,@r0
      000A43 08               [12] 2951 	inc	r0
      000A44 46               [12] 2952 	orl	a,@r0
      000A45 60 03            [24] 2953 	jz	00169$
      000A47 02r0Br86         [24] 2954 	ljmp	00111$
      000A4A                       2955 00169$:
                                   2956 ;	../../core/net/mac/csma.c:342: n = memb_alloc(&neighbor_memb);
      000A4A 90r00r00         [24] 2957 	mov	dptr,#_neighbor_memb
      000A4D 75 F0 00         [24] 2958 	mov	b,#0x00
      000A50 78r00            [12] 2959 	mov	r0,#_memb_alloc
      000A52 79s00            [12] 2960 	mov	r1,#(_memb_alloc >> 8)
      000A54 7As00            [12] 2961 	mov	r2,#(_memb_alloc >> 16)
      000A56 12r00r00         [24] 2962 	lcall	__sdcc_banked_call
      000A59 AD 82            [24] 2963 	mov	r5,dpl
      000A5B AE 83            [24] 2964 	mov	r6,dph
      000A5D AF F0            [24] 2965 	mov	r7,b
      000A5F E5 81            [12] 2966 	mov	a,sp
      000A61 24 F8            [12] 2967 	add	a,#0xf8
      000A63 F8               [12] 2968 	mov	r0,a
      000A64 A6 05            [24] 2969 	mov	@r0,ar5
      000A66 08               [12] 2970 	inc	r0
      000A67 A6 06            [24] 2971 	mov	@r0,ar6
      000A69 08               [12] 2972 	inc	r0
      000A6A A6 07            [24] 2973 	mov	@r0,ar7
                                   2974 ;	../../core/net/mac/csma.c:343: if(n != NULL) {
      000A6C E5 81            [12] 2975 	mov	a,sp
      000A6E 24 F8            [12] 2976 	add	a,#0xf8
      000A70 F8               [12] 2977 	mov	r0,a
      000A71 E6               [12] 2978 	mov	a,@r0
      000A72 08               [12] 2979 	inc	r0
      000A73 46               [12] 2980 	orl	a,@r0
      000A74 70 03            [24] 2981 	jnz	00170$
      000A76 02r0Br86         [24] 2982 	ljmp	00111$
      000A79                       2983 00170$:
                                   2984 ;	../../core/net/mac/csma.c:345: linkaddr_copy(&n->addr, addr);
      000A79 E5 81            [12] 2985 	mov	a,sp
      000A7B 24 F8            [12] 2986 	add	a,#0xf8
      000A7D F8               [12] 2987 	mov	r0,a
      000A7E 74 03            [12] 2988 	mov	a,#0x03
      000A80 26               [12] 2989 	add	a,@r0
      000A81 FD               [12] 2990 	mov	r5,a
      000A82 E4               [12] 2991 	clr	a
      000A83 08               [12] 2992 	inc	r0
      000A84 36               [12] 2993 	addc	a,@r0
      000A85 FE               [12] 2994 	mov	r6,a
      000A86 08               [12] 2995 	inc	r0
      000A87 86 07            [24] 2996 	mov	ar7,@r0
      000A89 E5 81            [12] 2997 	mov	a,sp
      000A8B 24 FB            [12] 2998 	add	a,#0xfb
      000A8D F8               [12] 2999 	mov	r0,a
      000A8E E6               [12] 3000 	mov	a,@r0
      000A8F C0 E0            [24] 3001 	push	acc
      000A91 08               [12] 3002 	inc	r0
      000A92 E6               [12] 3003 	mov	a,@r0
      000A93 C0 E0            [24] 3004 	push	acc
      000A95 08               [12] 3005 	inc	r0
      000A96 E6               [12] 3006 	mov	a,@r0
      000A97 C0 E0            [24] 3007 	push	acc
      000A99 8D 82            [24] 3008 	mov	dpl,r5
      000A9B 8E 83            [24] 3009 	mov	dph,r6
      000A9D 8F F0            [24] 3010 	mov	b,r7
      000A9F 78r00            [12] 3011 	mov	r0,#_linkaddr_copy
      000AA1 79s00            [12] 3012 	mov	r1,#(_linkaddr_copy >> 8)
      000AA3 7As00            [12] 3013 	mov	r2,#(_linkaddr_copy >> 16)
      000AA5 12r00r00         [24] 3014 	lcall	__sdcc_banked_call
      000AA8 15 81            [12] 3015 	dec	sp
      000AAA 15 81            [12] 3016 	dec	sp
      000AAC 15 81            [12] 3017 	dec	sp
                                   3018 ;	../../core/net/mac/csma.c:346: n->transmissions = 0;
      000AAE E5 81            [12] 3019 	mov	a,sp
      000AB0 24 F8            [12] 3020 	add	a,#0xf8
      000AB2 F8               [12] 3021 	mov	r0,a
      000AB3 74 21            [12] 3022 	mov	a,#0x21
      000AB5 26               [12] 3023 	add	a,@r0
      000AB6 FD               [12] 3024 	mov	r5,a
      000AB7 E4               [12] 3025 	clr	a
      000AB8 08               [12] 3026 	inc	r0
      000AB9 36               [12] 3027 	addc	a,@r0
      000ABA FE               [12] 3028 	mov	r6,a
      000ABB 08               [12] 3029 	inc	r0
      000ABC 86 07            [24] 3030 	mov	ar7,@r0
      000ABE 8D 82            [24] 3031 	mov	dpl,r5
      000AC0 8E 83            [24] 3032 	mov	dph,r6
      000AC2 8F F0            [24] 3033 	mov	b,r7
      000AC4 E4               [12] 3034 	clr	a
      000AC5 12r00r00         [24] 3035 	lcall	__gptrput
                                   3036 ;	../../core/net/mac/csma.c:347: n->collisions = 0;
      000AC8 E5 81            [12] 3037 	mov	a,sp
      000ACA 24 F8            [12] 3038 	add	a,#0xf8
      000ACC F8               [12] 3039 	mov	r0,a
      000ACD 74 22            [12] 3040 	mov	a,#0x22
      000ACF 26               [12] 3041 	add	a,@r0
      000AD0 FD               [12] 3042 	mov	r5,a
      000AD1 E4               [12] 3043 	clr	a
      000AD2 08               [12] 3044 	inc	r0
      000AD3 36               [12] 3045 	addc	a,@r0
      000AD4 FE               [12] 3046 	mov	r6,a
      000AD5 08               [12] 3047 	inc	r0
      000AD6 86 07            [24] 3048 	mov	ar7,@r0
      000AD8 8D 82            [24] 3049 	mov	dpl,r5
      000ADA 8E 83            [24] 3050 	mov	dph,r6
      000ADC 8F F0            [24] 3051 	mov	b,r7
      000ADE E4               [12] 3052 	clr	a
      000ADF 12r00r00         [24] 3053 	lcall	__gptrput
                                   3054 ;	../../core/net/mac/csma.c:348: n->deferrals = 0;
      000AE2 E5 81            [12] 3055 	mov	a,sp
      000AE4 24 F8            [12] 3056 	add	a,#0xf8
      000AE6 F8               [12] 3057 	mov	r0,a
      000AE7 74 23            [12] 3058 	mov	a,#0x23
      000AE9 26               [12] 3059 	add	a,@r0
      000AEA FD               [12] 3060 	mov	r5,a
      000AEB E4               [12] 3061 	clr	a
      000AEC 08               [12] 3062 	inc	r0
      000AED 36               [12] 3063 	addc	a,@r0
      000AEE FE               [12] 3064 	mov	r6,a
      000AEF 08               [12] 3065 	inc	r0
      000AF0 86 07            [24] 3066 	mov	ar7,@r0
      000AF2 8D 82            [24] 3067 	mov	dpl,r5
      000AF4 8E 83            [24] 3068 	mov	dph,r6
      000AF6 8F F0            [24] 3069 	mov	b,r7
      000AF8 E4               [12] 3070 	clr	a
      000AF9 12r00r00         [24] 3071 	lcall	__gptrput
                                   3072 ;	../../core/net/mac/csma.c:350: LIST_STRUCT_INIT(n, queued_packet_list);
      000AFC E5 81            [12] 3073 	mov	a,sp
      000AFE 24 F8            [12] 3074 	add	a,#0xf8
      000B00 F8               [12] 3075 	mov	r0,a
      000B01 74 27            [12] 3076 	mov	a,#0x27
      000B03 26               [12] 3077 	add	a,@r0
      000B04 FD               [12] 3078 	mov	r5,a
      000B05 E4               [12] 3079 	clr	a
      000B06 08               [12] 3080 	inc	r0
      000B07 36               [12] 3081 	addc	a,@r0
      000B08 FE               [12] 3082 	mov	r6,a
      000B09 08               [12] 3083 	inc	r0
      000B0A 86 07            [24] 3084 	mov	ar7,@r0
      000B0C E5 81            [12] 3085 	mov	a,sp
      000B0E 24 F8            [12] 3086 	add	a,#0xf8
      000B10 F8               [12] 3087 	mov	r0,a
      000B11 74 24            [12] 3088 	mov	a,#0x24
      000B13 26               [12] 3089 	add	a,@r0
      000B14 FA               [12] 3090 	mov	r2,a
      000B15 E4               [12] 3091 	clr	a
      000B16 08               [12] 3092 	inc	r0
      000B17 36               [12] 3093 	addc	a,@r0
      000B18 FB               [12] 3094 	mov	r3,a
      000B19 08               [12] 3095 	inc	r0
      000B1A 86 04            [24] 3096 	mov	ar4,@r0
      000B1C 8D 82            [24] 3097 	mov	dpl,r5
      000B1E 8E 83            [24] 3098 	mov	dph,r6
      000B20 8F F0            [24] 3099 	mov	b,r7
      000B22 EA               [12] 3100 	mov	a,r2
      000B23 12r00r00         [24] 3101 	lcall	__gptrput
      000B26 A3               [24] 3102 	inc	dptr
      000B27 EB               [12] 3103 	mov	a,r3
      000B28 12r00r00         [24] 3104 	lcall	__gptrput
      000B2B A3               [24] 3105 	inc	dptr
      000B2C EC               [12] 3106 	mov	a,r4
      000B2D 12r00r00         [24] 3107 	lcall	__gptrput
      000B30 8A 82            [24] 3108 	mov	dpl,r2
      000B32 8B 83            [24] 3109 	mov	dph,r3
      000B34 8C F0            [24] 3110 	mov	b,r4
      000B36 E4               [12] 3111 	clr	a
      000B37 12r00r00         [24] 3112 	lcall	__gptrput
      000B3A A3               [24] 3113 	inc	dptr
      000B3B E4               [12] 3114 	clr	a
      000B3C 12r00r00         [24] 3115 	lcall	__gptrput
      000B3F A3               [24] 3116 	inc	dptr
      000B40 E4               [12] 3117 	clr	a
      000B41 12r00r00         [24] 3118 	lcall	__gptrput
      000B44 8A 82            [24] 3119 	mov	dpl,r2
      000B46 8B 83            [24] 3120 	mov	dph,r3
      000B48 8C F0            [24] 3121 	mov	b,r4
      000B4A 78r00            [12] 3122 	mov	r0,#_list_init
      000B4C 79s00            [12] 3123 	mov	r1,#(_list_init >> 8)
      000B4E 7As00            [12] 3124 	mov	r2,#(_list_init >> 16)
      000B50 12r00r00         [24] 3125 	lcall	__sdcc_banked_call
                                   3126 ;	../../core/net/mac/csma.c:352: list_add(neighbor_list, n);
      000B53 E5 81            [12] 3127 	mov	a,sp
      000B55 24 F8            [12] 3128 	add	a,#0xf8
      000B57 F8               [12] 3129 	mov	r0,a
      000B58 86 02            [24] 3130 	mov	ar2,@r0
      000B5A 08               [12] 3131 	inc	r0
      000B5B 86 03            [24] 3132 	mov	ar3,@r0
      000B5D 08               [12] 3133 	inc	r0
      000B5E 86 04            [24] 3134 	mov	ar4,@r0
      000B60 90r00r21         [24] 3135 	mov	dptr,#_neighbor_list
      000B63 E0               [24] 3136 	movx	a,@dptr
      000B64 FD               [12] 3137 	mov	r5,a
      000B65 A3               [24] 3138 	inc	dptr
      000B66 E0               [24] 3139 	movx	a,@dptr
      000B67 FE               [12] 3140 	mov	r6,a
      000B68 A3               [24] 3141 	inc	dptr
      000B69 E0               [24] 3142 	movx	a,@dptr
      000B6A FF               [12] 3143 	mov	r7,a
      000B6B C0 02            [24] 3144 	push	ar2
      000B6D C0 03            [24] 3145 	push	ar3
      000B6F C0 04            [24] 3146 	push	ar4
      000B71 8D 82            [24] 3147 	mov	dpl,r5
      000B73 8E 83            [24] 3148 	mov	dph,r6
      000B75 8F F0            [24] 3149 	mov	b,r7
      000B77 78r00            [12] 3150 	mov	r0,#_list_add
      000B79 79s00            [12] 3151 	mov	r1,#(_list_add >> 8)
      000B7B 7As00            [12] 3152 	mov	r2,#(_list_add >> 16)
      000B7D 12r00r00         [24] 3153 	lcall	__sdcc_banked_call
      000B80 15 81            [12] 3154 	dec	sp
      000B82 15 81            [12] 3155 	dec	sp
      000B84 15 81            [12] 3156 	dec	sp
                                   3157 ;	../../core/net/mac/csma.c:412: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 1);
                                   3158 ;	../../core/net/mac/csma.c:352: list_add(neighbor_list, n);
      000B86                       3159 00111$:
                                   3160 ;	../../core/net/mac/csma.c:356: if(n != NULL) {
      000B86 E5 81            [12] 3161 	mov	a,sp
      000B88 24 F8            [12] 3162 	add	a,#0xf8
      000B8A F8               [12] 3163 	mov	r0,a
      000B8B E6               [12] 3164 	mov	a,@r0
      000B8C 08               [12] 3165 	inc	r0
      000B8D 46               [12] 3166 	orl	a,@r0
      000B8E 70 03            [24] 3167 	jnz	00171$
      000B90 02r0FrBE         [24] 3168 	ljmp	00128$
      000B93                       3169 00171$:
                                   3170 ;	../../core/net/mac/csma.c:358: if(list_length(n->queued_packet_list) < CSMA_MAX_PACKET_PER_NEIGHBOR) {
      000B93 E5 81            [12] 3171 	mov	a,sp
      000B95 24 F8            [12] 3172 	add	a,#0xf8
      000B97 F8               [12] 3173 	mov	r0,a
      000B98 74 27            [12] 3174 	mov	a,#0x27
      000B9A 26               [12] 3175 	add	a,@r0
      000B9B FA               [12] 3176 	mov	r2,a
      000B9C E4               [12] 3177 	clr	a
      000B9D 08               [12] 3178 	inc	r0
      000B9E 36               [12] 3179 	addc	a,@r0
      000B9F FB               [12] 3180 	mov	r3,a
      000BA0 08               [12] 3181 	inc	r0
      000BA1 86 04            [24] 3182 	mov	ar4,@r0
      000BA3 8A 82            [24] 3183 	mov	dpl,r2
      000BA5 8B 83            [24] 3184 	mov	dph,r3
      000BA7 8C F0            [24] 3185 	mov	b,r4
      000BA9 12r00r00         [24] 3186 	lcall	__gptrget
      000BAC FD               [12] 3187 	mov	r5,a
      000BAD A3               [24] 3188 	inc	dptr
      000BAE 12r00r00         [24] 3189 	lcall	__gptrget
      000BB1 FE               [12] 3190 	mov	r6,a
      000BB2 A3               [24] 3191 	inc	dptr
      000BB3 12r00r00         [24] 3192 	lcall	__gptrget
      000BB6 FF               [12] 3193 	mov	r7,a
      000BB7 8D 82            [24] 3194 	mov	dpl,r5
      000BB9 8E 83            [24] 3195 	mov	dph,r6
      000BBB 8F F0            [24] 3196 	mov	b,r7
      000BBD C0 04            [24] 3197 	push	ar4
      000BBF C0 03            [24] 3198 	push	ar3
      000BC1 C0 02            [24] 3199 	push	ar2
      000BC3 78r00            [12] 3200 	mov	r0,#_list_length
      000BC5 79s00            [12] 3201 	mov	r1,#(_list_length >> 8)
      000BC7 7As00            [12] 3202 	mov	r2,#(_list_length >> 16)
      000BC9 12r00r00         [24] 3203 	lcall	__sdcc_banked_call
      000BCC AE 82            [24] 3204 	mov	r6,dpl
      000BCE AF 83            [24] 3205 	mov	r7,dph
      000BD0 D0 02            [24] 3206 	pop	ar2
      000BD2 D0 03            [24] 3207 	pop	ar3
      000BD4 D0 04            [24] 3208 	pop	ar4
      000BD6 C3               [12] 3209 	clr	c
      000BD7 EE               [12] 3210 	mov	a,r6
      000BD8 94 06            [12] 3211 	subb	a,#0x06
      000BDA EF               [12] 3212 	mov	a,r7
      000BDB 64 80            [12] 3213 	xrl	a,#0x80
      000BDD 94 80            [12] 3214 	subb	a,#0x80
      000BDF 40 03            [24] 3215 	jc	00172$
      000BE1 02r0FrBE         [24] 3216 	ljmp	00128$
      000BE4                       3217 00172$:
                                   3218 ;	../../core/net/mac/csma.c:359: q = memb_alloc(&packet_memb);
      000BE4 90r00r0A         [24] 3219 	mov	dptr,#_packet_memb
      000BE7 75 F0 00         [24] 3220 	mov	b,#0x00
      000BEA C0 04            [24] 3221 	push	ar4
      000BEC C0 03            [24] 3222 	push	ar3
      000BEE C0 02            [24] 3223 	push	ar2
      000BF0 78r00            [12] 3224 	mov	r0,#_memb_alloc
      000BF2 79s00            [12] 3225 	mov	r1,#(_memb_alloc >> 8)
      000BF4 7As00            [12] 3226 	mov	r2,#(_memb_alloc >> 16)
      000BF6 12r00r00         [24] 3227 	lcall	__sdcc_banked_call
      000BF9 AD 82            [24] 3228 	mov	r5,dpl
      000BFB AE 83            [24] 3229 	mov	r6,dph
      000BFD AF F0            [24] 3230 	mov	r7,b
      000BFF D0 02            [24] 3231 	pop	ar2
      000C01 D0 03            [24] 3232 	pop	ar3
      000C03 D0 04            [24] 3233 	pop	ar4
      000C05 E5 81            [12] 3234 	mov	a,sp
      000C07 24 F5            [12] 3235 	add	a,#0xf5
      000C09 F8               [12] 3236 	mov	r0,a
      000C0A A6 05            [24] 3237 	mov	@r0,ar5
      000C0C 08               [12] 3238 	inc	r0
      000C0D A6 06            [24] 3239 	mov	@r0,ar6
      000C0F 08               [12] 3240 	inc	r0
      000C10 A6 07            [24] 3241 	mov	@r0,ar7
                                   3242 ;	../../core/net/mac/csma.c:360: if(q != NULL) {
      000C12 E5 81            [12] 3243 	mov	a,sp
      000C14 24 F5            [12] 3244 	add	a,#0xf5
      000C16 F8               [12] 3245 	mov	r0,a
      000C17 E6               [12] 3246 	mov	a,@r0
      000C18 08               [12] 3247 	inc	r0
      000C19 46               [12] 3248 	orl	a,@r0
      000C1A 70 03            [24] 3249 	jnz	00173$
      000C1C 02r0Fr37         [24] 3250 	ljmp	00122$
      000C1F                       3251 00173$:
                                   3252 ;	../../core/net/mac/csma.c:361: q->ptr = memb_alloc(&metadata_memb);
      000C1F E5 81            [12] 3253 	mov	a,sp
      000C21 24 F5            [12] 3254 	add	a,#0xf5
      000C23 F8               [12] 3255 	mov	r0,a
      000C24 E5 81            [12] 3256 	mov	a,sp
      000C26 24 EF            [12] 3257 	add	a,#0xef
      000C28 F9               [12] 3258 	mov	r1,a
      000C29 74 06            [12] 3259 	mov	a,#0x06
      000C2B 26               [12] 3260 	add	a,@r0
      000C2C F7               [12] 3261 	mov	@r1,a
      000C2D E4               [12] 3262 	clr	a
      000C2E 08               [12] 3263 	inc	r0
      000C2F 36               [12] 3264 	addc	a,@r0
      000C30 09               [12] 3265 	inc	r1
      000C31 F7               [12] 3266 	mov	@r1,a
      000C32 08               [12] 3267 	inc	r0
      000C33 09               [12] 3268 	inc	r1
      000C34 E6               [12] 3269 	mov	a,@r0
      000C35 F7               [12] 3270 	mov	@r1,a
      000C36 90r00r14         [24] 3271 	mov	dptr,#_metadata_memb
      000C39 75 F0 00         [24] 3272 	mov	b,#0x00
      000C3C C0 04            [24] 3273 	push	ar4
      000C3E C0 03            [24] 3274 	push	ar3
      000C40 C0 02            [24] 3275 	push	ar2
      000C42 78r00            [12] 3276 	mov	r0,#_memb_alloc
      000C44 79s00            [12] 3277 	mov	r1,#(_memb_alloc >> 8)
      000C46 7As00            [12] 3278 	mov	r2,#(_memb_alloc >> 16)
      000C48 12r00r00         [24] 3279 	lcall	__sdcc_banked_call
      000C4B AD 82            [24] 3280 	mov	r5,dpl
      000C4D AE 83            [24] 3281 	mov	r6,dph
      000C4F AF F0            [24] 3282 	mov	r7,b
      000C51 D0 02            [24] 3283 	pop	ar2
      000C53 D0 03            [24] 3284 	pop	ar3
      000C55 D0 04            [24] 3285 	pop	ar4
      000C57 E5 81            [12] 3286 	mov	a,sp
      000C59 24 EF            [12] 3287 	add	a,#0xef
      000C5B F8               [12] 3288 	mov	r0,a
      000C5C 86 82            [24] 3289 	mov	dpl,@r0
      000C5E 08               [12] 3290 	inc	r0
      000C5F 86 83            [24] 3291 	mov	dph,@r0
      000C61 08               [12] 3292 	inc	r0
      000C62 86 F0            [24] 3293 	mov	b,@r0
      000C64 ED               [12] 3294 	mov	a,r5
      000C65 12r00r00         [24] 3295 	lcall	__gptrput
      000C68 A3               [24] 3296 	inc	dptr
      000C69 EE               [12] 3297 	mov	a,r6
      000C6A 12r00r00         [24] 3298 	lcall	__gptrput
      000C6D A3               [24] 3299 	inc	dptr
      000C6E EF               [12] 3300 	mov	a,r7
      000C6F 12r00r00         [24] 3301 	lcall	__gptrput
                                   3302 ;	../../core/net/mac/csma.c:362: if(q->ptr != NULL) {
      000C72 ED               [12] 3303 	mov	a,r5
      000C73 4E               [12] 3304 	orl	a,r6
      000C74 70 03            [24] 3305 	jnz	00174$
      000C76 02r0Fr03         [24] 3306 	ljmp	00120$
      000C79                       3307 00174$:
                                   3308 ;	../../core/net/mac/csma.c:363: q->buf = queuebuf_new_from_packetbuf();
      000C79 E5 81            [12] 3309 	mov	a,sp
      000C7B 24 F5            [12] 3310 	add	a,#0xf5
      000C7D F8               [12] 3311 	mov	r0,a
      000C7E E5 81            [12] 3312 	mov	a,sp
      000C80 24 F2            [12] 3313 	add	a,#0xf2
      000C82 F9               [12] 3314 	mov	r1,a
      000C83 74 03            [12] 3315 	mov	a,#0x03
      000C85 26               [12] 3316 	add	a,@r0
      000C86 F7               [12] 3317 	mov	@r1,a
      000C87 E4               [12] 3318 	clr	a
      000C88 08               [12] 3319 	inc	r0
      000C89 36               [12] 3320 	addc	a,@r0
      000C8A 09               [12] 3321 	inc	r1
      000C8B F7               [12] 3322 	mov	@r1,a
      000C8C 08               [12] 3323 	inc	r0
      000C8D 09               [12] 3324 	inc	r1
      000C8E E6               [12] 3325 	mov	a,@r0
      000C8F F7               [12] 3326 	mov	@r1,a
      000C90 C0 04            [24] 3327 	push	ar4
      000C92 C0 03            [24] 3328 	push	ar3
      000C94 C0 02            [24] 3329 	push	ar2
      000C96 78r00            [12] 3330 	mov	r0,#_queuebuf_new_from_packetbuf
      000C98 79s00            [12] 3331 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000C9A 7As00            [12] 3332 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000C9C 12r00r00         [24] 3333 	lcall	__sdcc_banked_call
      000C9F AD 82            [24] 3334 	mov	r5,dpl
      000CA1 AE 83            [24] 3335 	mov	r6,dph
      000CA3 AF F0            [24] 3336 	mov	r7,b
      000CA5 D0 02            [24] 3337 	pop	ar2
      000CA7 D0 03            [24] 3338 	pop	ar3
      000CA9 D0 04            [24] 3339 	pop	ar4
      000CAB E5 81            [12] 3340 	mov	a,sp
      000CAD 24 F2            [12] 3341 	add	a,#0xf2
      000CAF F8               [12] 3342 	mov	r0,a
      000CB0 86 82            [24] 3343 	mov	dpl,@r0
      000CB2 08               [12] 3344 	inc	r0
      000CB3 86 83            [24] 3345 	mov	dph,@r0
      000CB5 08               [12] 3346 	inc	r0
      000CB6 86 F0            [24] 3347 	mov	b,@r0
      000CB8 ED               [12] 3348 	mov	a,r5
      000CB9 12r00r00         [24] 3349 	lcall	__gptrput
      000CBC A3               [24] 3350 	inc	dptr
      000CBD EE               [12] 3351 	mov	a,r6
      000CBE 12r00r00         [24] 3352 	lcall	__gptrput
      000CC1 A3               [24] 3353 	inc	dptr
      000CC2 EF               [12] 3354 	mov	a,r7
      000CC3 12r00r00         [24] 3355 	lcall	__gptrput
                                   3356 ;	../../core/net/mac/csma.c:364: if(q->buf != NULL) {
      000CC6 ED               [12] 3357 	mov	a,r5
      000CC7 4E               [12] 3358 	orl	a,r6
      000CC8 70 03            [24] 3359 	jnz	00175$
      000CCA 02r0ErC1         [24] 3360 	ljmp	00118$
      000CCD                       3361 00175$:
                                   3362 ;	../../core/net/mac/csma.c:365: struct qbuf_metadata *metadata = (struct qbuf_metadata *)q->ptr;
      000CCD E5 81            [12] 3363 	mov	a,sp
      000CCF 24 EF            [12] 3364 	add	a,#0xef
      000CD1 F8               [12] 3365 	mov	r0,a
      000CD2 86 82            [24] 3366 	mov	dpl,@r0
      000CD4 08               [12] 3367 	inc	r0
      000CD5 86 83            [24] 3368 	mov	dph,@r0
      000CD7 08               [12] 3369 	inc	r0
      000CD8 86 F0            [24] 3370 	mov	b,@r0
      000CDA 12r00r00         [24] 3371 	lcall	__gptrget
      000CDD FD               [12] 3372 	mov	r5,a
      000CDE A3               [24] 3373 	inc	dptr
      000CDF 12r00r00         [24] 3374 	lcall	__gptrget
      000CE2 FE               [12] 3375 	mov	r6,a
      000CE3 A3               [24] 3376 	inc	dptr
      000CE4 12r00r00         [24] 3377 	lcall	__gptrget
      000CE7 FF               [12] 3378 	mov	r7,a
      000CE8 A8 81            [24] 3379 	mov	r0,sp
      000CEA 18               [12] 3380 	dec	r0
      000CEB 18               [12] 3381 	dec	r0
      000CEC A6 05            [24] 3382 	mov	@r0,ar5
      000CEE 08               [12] 3383 	inc	r0
      000CEF A6 06            [24] 3384 	mov	@r0,ar6
      000CF1 08               [12] 3385 	inc	r0
      000CF2 A6 07            [24] 3386 	mov	@r0,ar7
                                   3387 ;	../../core/net/mac/csma.c:367: if(packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS) == 0) {
      000CF4 75 82 09         [24] 3388 	mov	dpl,#0x09
      000CF7 C0 04            [24] 3389 	push	ar4
      000CF9 C0 03            [24] 3390 	push	ar3
      000CFB C0 02            [24] 3391 	push	ar2
      000CFD 78r00            [12] 3392 	mov	r0,#_packetbuf_attr
      000CFF 79s00            [12] 3393 	mov	r1,#(_packetbuf_attr >> 8)
      000D01 7As00            [12] 3394 	mov	r2,#(_packetbuf_attr >> 16)
      000D03 12r00r00         [24] 3395 	lcall	__sdcc_banked_call
      000D06 E5 82            [12] 3396 	mov	a,dpl
      000D08 85 83 F0         [24] 3397 	mov	b,dph
      000D0B D0 02            [24] 3398 	pop	ar2
      000D0D D0 03            [24] 3399 	pop	ar3
      000D0F D0 04            [24] 3400 	pop	ar4
      000D11 45 F0            [12] 3401 	orl	a,b
      000D13 70 29            [24] 3402 	jnz	00113$
                                   3403 ;	../../core/net/mac/csma.c:369: metadata->max_transmissions = CSMA_MAX_MAC_TRANSMISSIONS;
      000D15 C0 02            [24] 3404 	push	ar2
      000D17 C0 03            [24] 3405 	push	ar3
      000D19 C0 04            [24] 3406 	push	ar4
      000D1B E5 81            [12] 3407 	mov	a,sp
      000D1D 24 FB            [12] 3408 	add	a,#0xfb
      000D1F F8               [12] 3409 	mov	r0,a
      000D20 74 06            [12] 3410 	mov	a,#0x06
      000D22 26               [12] 3411 	add	a,@r0
      000D23 FA               [12] 3412 	mov	r2,a
      000D24 E4               [12] 3413 	clr	a
      000D25 08               [12] 3414 	inc	r0
      000D26 36               [12] 3415 	addc	a,@r0
      000D27 FB               [12] 3416 	mov	r3,a
      000D28 08               [12] 3417 	inc	r0
      000D29 86 04            [24] 3418 	mov	ar4,@r0
      000D2B 8A 82            [24] 3419 	mov	dpl,r2
      000D2D 8B 83            [24] 3420 	mov	dph,r3
      000D2F 8C F0            [24] 3421 	mov	b,r4
      000D31 74 03            [12] 3422 	mov	a,#0x03
      000D33 12r00r00         [24] 3423 	lcall	__gptrput
      000D36 D0 04            [24] 3424 	pop	ar4
      000D38 D0 03            [24] 3425 	pop	ar3
      000D3A D0 02            [24] 3426 	pop	ar2
      000D3C 80 44            [24] 3427 	sjmp	00114$
      000D3E                       3428 00113$:
                                   3429 ;	../../core/net/mac/csma.c:371: metadata->max_transmissions =
      000D3E C0 02            [24] 3430 	push	ar2
      000D40 C0 03            [24] 3431 	push	ar3
      000D42 C0 04            [24] 3432 	push	ar4
      000D44 E5 81            [12] 3433 	mov	a,sp
      000D46 24 FB            [12] 3434 	add	a,#0xfb
      000D48 F8               [12] 3435 	mov	r0,a
      000D49 74 06            [12] 3436 	mov	a,#0x06
      000D4B 26               [12] 3437 	add	a,@r0
      000D4C FD               [12] 3438 	mov	r5,a
      000D4D E4               [12] 3439 	clr	a
      000D4E 08               [12] 3440 	inc	r0
      000D4F 36               [12] 3441 	addc	a,@r0
      000D50 FE               [12] 3442 	mov	r6,a
      000D51 08               [12] 3443 	inc	r0
      000D52 86 07            [24] 3444 	mov	ar7,@r0
                                   3445 ;	../../core/net/mac/csma.c:372: packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS);
      000D54 75 82 09         [24] 3446 	mov	dpl,#0x09
      000D57 C0 07            [24] 3447 	push	ar7
      000D59 C0 06            [24] 3448 	push	ar6
      000D5B C0 05            [24] 3449 	push	ar5
      000D5D C0 02            [24] 3450 	push	ar2
      000D5F 78r00            [12] 3451 	mov	r0,#_packetbuf_attr
      000D61 79s00            [12] 3452 	mov	r1,#(_packetbuf_attr >> 8)
      000D63 7As00            [12] 3453 	mov	r2,#(_packetbuf_attr >> 16)
      000D65 12r00r00         [24] 3454 	lcall	__sdcc_banked_call
      000D68 AB 82            [24] 3455 	mov	r3,dpl
      000D6A D0 02            [24] 3456 	pop	ar2
      000D6C D0 05            [24] 3457 	pop	ar5
      000D6E D0 06            [24] 3458 	pop	ar6
      000D70 D0 07            [24] 3459 	pop	ar7
      000D72 8D 82            [24] 3460 	mov	dpl,r5
      000D74 8E 83            [24] 3461 	mov	dph,r6
      000D76 8F F0            [24] 3462 	mov	b,r7
      000D78 EB               [12] 3463 	mov	a,r3
      000D79 12r00r00         [24] 3464 	lcall	__gptrput
                                   3465 ;	../../core/net/mac/csma.c:412: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 1);
      000D7C D0 04            [24] 3466 	pop	ar4
      000D7E D0 03            [24] 3467 	pop	ar3
      000D80 D0 02            [24] 3468 	pop	ar2
                                   3469 ;	../../core/net/mac/csma.c:372: packetbuf_attr(PACKETBUF_ATTR_MAX_MAC_TRANSMISSIONS);
      000D82                       3470 00114$:
                                   3471 ;	../../core/net/mac/csma.c:374: metadata->sent = sent;
      000D82 A8 81            [24] 3472 	mov	r0,sp
      000D84 18               [12] 3473 	dec	r0
      000D85 18               [12] 3474 	dec	r0
      000D86 86 82            [24] 3475 	mov	dpl,@r0
      000D88 08               [12] 3476 	inc	r0
      000D89 86 83            [24] 3477 	mov	dph,@r0
      000D8B 08               [12] 3478 	inc	r0
      000D8C 86 F0            [24] 3479 	mov	b,@r0
      000D8E E5 81            [12] 3480 	mov	a,sp
      000D90 24 EC            [12] 3481 	add	a,#0xec
      000D92 F9               [12] 3482 	mov	r1,a
      000D93 E7               [12] 3483 	mov	a,@r1
      000D94 12r00r00         [24] 3484 	lcall	__gptrput
      000D97 A3               [24] 3485 	inc	dptr
      000D98 09               [12] 3486 	inc	r1
      000D99 E7               [12] 3487 	mov	a,@r1
      000D9A 12r00r00         [24] 3488 	lcall	__gptrput
      000D9D A3               [24] 3489 	inc	dptr
      000D9E 09               [12] 3490 	inc	r1
      000D9F E7               [12] 3491 	mov	a,@r1
      000DA0 12r00r00         [24] 3492 	lcall	__gptrput
                                   3493 ;	../../core/net/mac/csma.c:375: metadata->cptr = ptr;
      000DA3 A8 81            [24] 3494 	mov	r0,sp
      000DA5 18               [12] 3495 	dec	r0
      000DA6 18               [12] 3496 	dec	r0
      000DA7 74 03            [12] 3497 	mov	a,#0x03
      000DA9 26               [12] 3498 	add	a,@r0
      000DAA FD               [12] 3499 	mov	r5,a
      000DAB E4               [12] 3500 	clr	a
      000DAC 08               [12] 3501 	inc	r0
      000DAD 36               [12] 3502 	addc	a,@r0
      000DAE FE               [12] 3503 	mov	r6,a
      000DAF 08               [12] 3504 	inc	r0
      000DB0 86 07            [24] 3505 	mov	ar7,@r0
      000DB2 8D 82            [24] 3506 	mov	dpl,r5
      000DB4 8E 83            [24] 3507 	mov	dph,r6
      000DB6 8F F0            [24] 3508 	mov	b,r7
      000DB8 E5 81            [12] 3509 	mov	a,sp
      000DBA 24 E6            [12] 3510 	add	a,#0xe6
      000DBC F8               [12] 3511 	mov	r0,a
      000DBD E6               [12] 3512 	mov	a,@r0
      000DBE 12r00r00         [24] 3513 	lcall	__gptrput
      000DC1 A3               [24] 3514 	inc	dptr
      000DC2 08               [12] 3515 	inc	r0
      000DC3 E6               [12] 3516 	mov	a,@r0
      000DC4 12r00r00         [24] 3517 	lcall	__gptrput
      000DC7 A3               [24] 3518 	inc	dptr
      000DC8 08               [12] 3519 	inc	r0
      000DC9 E6               [12] 3520 	mov	a,@r0
      000DCA 12r00r00         [24] 3521 	lcall	__gptrput
                                   3522 ;	../../core/net/mac/csma.c:383: list_add(n->queued_packet_list, q);
      000DCD E5 81            [12] 3523 	mov	a,sp
      000DCF 24 F5            [12] 3524 	add	a,#0xf5
      000DD1 F8               [12] 3525 	mov	r0,a
      000DD2 E5 81            [12] 3526 	mov	a,sp
      000DD4 24 F2            [12] 3527 	add	a,#0xf2
      000DD6 F9               [12] 3528 	mov	r1,a
      000DD7 E6               [12] 3529 	mov	a,@r0
      000DD8 F7               [12] 3530 	mov	@r1,a
      000DD9 08               [12] 3531 	inc	r0
      000DDA 09               [12] 3532 	inc	r1
      000DDB E6               [12] 3533 	mov	a,@r0
      000DDC F7               [12] 3534 	mov	@r1,a
      000DDD 08               [12] 3535 	inc	r0
      000DDE 09               [12] 3536 	inc	r1
      000DDF E6               [12] 3537 	mov	a,@r0
      000DE0 F7               [12] 3538 	mov	@r1,a
      000DE1 8A 82            [24] 3539 	mov	dpl,r2
      000DE3 8B 83            [24] 3540 	mov	dph,r3
      000DE5 8C F0            [24] 3541 	mov	b,r4
      000DE7 12r00r00         [24] 3542 	lcall	__gptrget
      000DEA FD               [12] 3543 	mov	r5,a
      000DEB A3               [24] 3544 	inc	dptr
      000DEC 12r00r00         [24] 3545 	lcall	__gptrget
      000DEF FE               [12] 3546 	mov	r6,a
      000DF0 A3               [24] 3547 	inc	dptr
      000DF1 12r00r00         [24] 3548 	lcall	__gptrget
      000DF4 FF               [12] 3549 	mov	r7,a
      000DF5 C0 04            [24] 3550 	push	ar4
      000DF7 C0 03            [24] 3551 	push	ar3
      000DF9 C0 02            [24] 3552 	push	ar2
      000DFB E5 81            [12] 3553 	mov	a,sp
      000DFD 24 EF            [12] 3554 	add	a,#0xef
      000DFF F8               [12] 3555 	mov	r0,a
      000E00 E6               [12] 3556 	mov	a,@r0
      000E01 C0 E0            [24] 3557 	push	acc
      000E03 08               [12] 3558 	inc	r0
      000E04 E6               [12] 3559 	mov	a,@r0
      000E05 C0 E0            [24] 3560 	push	acc
      000E07 08               [12] 3561 	inc	r0
      000E08 E6               [12] 3562 	mov	a,@r0
      000E09 C0 E0            [24] 3563 	push	acc
      000E0B 8D 82            [24] 3564 	mov	dpl,r5
      000E0D 8E 83            [24] 3565 	mov	dph,r6
      000E0F 8F F0            [24] 3566 	mov	b,r7
      000E11 78r00            [12] 3567 	mov	r0,#_list_add
      000E13 79s00            [12] 3568 	mov	r1,#(_list_add >> 8)
      000E15 7As00            [12] 3569 	mov	r2,#(_list_add >> 16)
      000E17 12r00r00         [24] 3570 	lcall	__sdcc_banked_call
      000E1A 15 81            [12] 3571 	dec	sp
      000E1C 15 81            [12] 3572 	dec	sp
      000E1E 15 81            [12] 3573 	dec	sp
      000E20 D0 02            [24] 3574 	pop	ar2
      000E22 D0 03            [24] 3575 	pop	ar3
      000E24 D0 04            [24] 3576 	pop	ar4
                                   3577 ;	../../core/net/mac/csma.c:389: if(list_head(n->queued_packet_list) == q) {
      000E26 8A 82            [24] 3578 	mov	dpl,r2
      000E28 8B 83            [24] 3579 	mov	dph,r3
      000E2A 8C F0            [24] 3580 	mov	b,r4
      000E2C 12r00r00         [24] 3581 	lcall	__gptrget
      000E2F FD               [12] 3582 	mov	r5,a
      000E30 A3               [24] 3583 	inc	dptr
      000E31 12r00r00         [24] 3584 	lcall	__gptrget
      000E34 FE               [12] 3585 	mov	r6,a
      000E35 A3               [24] 3586 	inc	dptr
      000E36 12r00r00         [24] 3587 	lcall	__gptrget
      000E39 FF               [12] 3588 	mov	r7,a
      000E3A 8D 82            [24] 3589 	mov	dpl,r5
      000E3C 8E 83            [24] 3590 	mov	dph,r6
      000E3E 8F F0            [24] 3591 	mov	b,r7
      000E40 78r00            [12] 3592 	mov	r0,#_list_head
      000E42 79s00            [12] 3593 	mov	r1,#(_list_head >> 8)
      000E44 7As00            [12] 3594 	mov	r2,#(_list_head >> 16)
      000E46 12r00r00         [24] 3595 	lcall	__sdcc_banked_call
      000E49 AC 82            [24] 3596 	mov	r4,dpl
      000E4B AB 83            [24] 3597 	mov	r3,dph
      000E4D AA F0            [24] 3598 	mov	r2,b
      000E4F E5 81            [12] 3599 	mov	a,sp
      000E51 24 F5            [12] 3600 	add	a,#0xf5
      000E53 F8               [12] 3601 	mov	r0,a
      000E54 86 05            [24] 3602 	mov	ar5,@r0
      000E56 08               [12] 3603 	inc	r0
      000E57 86 06            [24] 3604 	mov	ar6,@r0
      000E59 08               [12] 3605 	inc	r0
      000E5A 86 07            [24] 3606 	mov	ar7,@r0
      000E5C C0 05            [24] 3607 	push	ar5
      000E5E C0 06            [24] 3608 	push	ar6
      000E60 C0 07            [24] 3609 	push	ar7
      000E62 8C 82            [24] 3610 	mov	dpl,r4
      000E64 8B 83            [24] 3611 	mov	dph,r3
      000E66 8A F0            [24] 3612 	mov	b,r2
      000E68 12r00r00         [24] 3613 	lcall	___gptr_cmp
      000E6B 15 81            [12] 3614 	dec	sp
      000E6D 15 81            [12] 3615 	dec	sp
      000E6F 15 81            [12] 3616 	dec	sp
      000E71 60 02            [24] 3617 	jz	00178$
      000E73 80 49            [24] 3618 	sjmp	00116$
      000E75                       3619 00178$:
                                   3620 ;	../../core/net/mac/csma.c:390: ctimer_set(&n->transmit_timer, 0, transmit_packet_list, n);
      000E75 E5 81            [12] 3621 	mov	a,sp
      000E77 24 F8            [12] 3622 	add	a,#0xf8
      000E79 F8               [12] 3623 	mov	r0,a
      000E7A 86 02            [24] 3624 	mov	ar2,@r0
      000E7C 08               [12] 3625 	inc	r0
      000E7D 86 03            [24] 3626 	mov	ar3,@r0
      000E7F 08               [12] 3627 	inc	r0
      000E80 86 04            [24] 3628 	mov	ar4,@r0
      000E82 E5 81            [12] 3629 	mov	a,sp
      000E84 24 F8            [12] 3630 	add	a,#0xf8
      000E86 F8               [12] 3631 	mov	r0,a
      000E87 74 0B            [12] 3632 	mov	a,#0x0B
      000E89 26               [12] 3633 	add	a,@r0
      000E8A FD               [12] 3634 	mov	r5,a
      000E8B E4               [12] 3635 	clr	a
      000E8C 08               [12] 3636 	inc	r0
      000E8D 36               [12] 3637 	addc	a,@r0
      000E8E FE               [12] 3638 	mov	r6,a
      000E8F 08               [12] 3639 	inc	r0
      000E90 86 07            [24] 3640 	mov	ar7,@r0
      000E92 C0 02            [24] 3641 	push	ar2
      000E94 C0 03            [24] 3642 	push	ar3
      000E96 C0 04            [24] 3643 	push	ar4
      000E98 74rDB            [12] 3644 	mov	a,#_transmit_packet_list
      000E9A C0 E0            [24] 3645 	push	acc
      000E9C 74s00            [12] 3646 	mov	a,#(_transmit_packet_list >> 8)
      000E9E C0 E0            [24] 3647 	push	acc
      000EA0 74s00            [12] 3648 	mov	a,#(_transmit_packet_list >> 16)
      000EA2 C0 E0            [24] 3649 	push	acc
      000EA4 E4               [12] 3650 	clr	a
      000EA5 C0 E0            [24] 3651 	push	acc
      000EA7 C0 E0            [24] 3652 	push	acc
      000EA9 8D 82            [24] 3653 	mov	dpl,r5
      000EAB 8E 83            [24] 3654 	mov	dph,r6
      000EAD 8F F0            [24] 3655 	mov	b,r7
      000EAF 78r00            [12] 3656 	mov	r0,#_ctimer_set
      000EB1 79s00            [12] 3657 	mov	r1,#(_ctimer_set >> 8)
      000EB3 7As00            [12] 3658 	mov	r2,#(_ctimer_set >> 16)
      000EB5 12r00r00         [24] 3659 	lcall	__sdcc_banked_call
      000EB8 E5 81            [12] 3660 	mov	a,sp
      000EBA 24 F8            [12] 3661 	add	a,#0xf8
      000EBC F5 81            [12] 3662 	mov	sp,a
      000EBE                       3663 00116$:
                                   3664 ;	../../core/net/mac/csma.c:392: return;
      000EBE 02r0FrF8         [24] 3665 	ljmp	00129$
      000EC1                       3666 00118$:
                                   3667 ;	../../core/net/mac/csma.c:394: memb_free(&metadata_memb, q->ptr);
      000EC1 E5 81            [12] 3668 	mov	a,sp
      000EC3 24 EF            [12] 3669 	add	a,#0xef
      000EC5 F8               [12] 3670 	mov	r0,a
      000EC6 86 82            [24] 3671 	mov	dpl,@r0
      000EC8 08               [12] 3672 	inc	r0
      000EC9 86 83            [24] 3673 	mov	dph,@r0
      000ECB 08               [12] 3674 	inc	r0
      000ECC 86 F0            [24] 3675 	mov	b,@r0
      000ECE 12r00r00         [24] 3676 	lcall	__gptrget
      000ED1 FD               [12] 3677 	mov	r5,a
      000ED2 A3               [24] 3678 	inc	dptr
      000ED3 12r00r00         [24] 3679 	lcall	__gptrget
      000ED6 FE               [12] 3680 	mov	r6,a
      000ED7 A3               [24] 3681 	inc	dptr
      000ED8 12r00r00         [24] 3682 	lcall	__gptrget
      000EDB FF               [12] 3683 	mov	r7,a
      000EDC C0 04            [24] 3684 	push	ar4
      000EDE C0 03            [24] 3685 	push	ar3
      000EE0 C0 02            [24] 3686 	push	ar2
      000EE2 C0 05            [24] 3687 	push	ar5
      000EE4 C0 06            [24] 3688 	push	ar6
      000EE6 C0 07            [24] 3689 	push	ar7
      000EE8 90r00r14         [24] 3690 	mov	dptr,#_metadata_memb
      000EEB 75 F0 00         [24] 3691 	mov	b,#0x00
      000EEE 78r00            [12] 3692 	mov	r0,#_memb_free
      000EF0 79s00            [12] 3693 	mov	r1,#(_memb_free >> 8)
      000EF2 7As00            [12] 3694 	mov	r2,#(_memb_free >> 16)
      000EF4 12r00r00         [24] 3695 	lcall	__sdcc_banked_call
      000EF7 15 81            [12] 3696 	dec	sp
      000EF9 15 81            [12] 3697 	dec	sp
      000EFB 15 81            [12] 3698 	dec	sp
      000EFD D0 02            [24] 3699 	pop	ar2
      000EFF D0 03            [24] 3700 	pop	ar3
      000F01 D0 04            [24] 3701 	pop	ar4
      000F03                       3702 00120$:
                                   3703 ;	../../core/net/mac/csma.c:397: memb_free(&packet_memb, q);
      000F03 E5 81            [12] 3704 	mov	a,sp
      000F05 24 F5            [12] 3705 	add	a,#0xf5
      000F07 F8               [12] 3706 	mov	r0,a
      000F08 86 05            [24] 3707 	mov	ar5,@r0
      000F0A 08               [12] 3708 	inc	r0
      000F0B 86 06            [24] 3709 	mov	ar6,@r0
      000F0D 08               [12] 3710 	inc	r0
      000F0E 86 07            [24] 3711 	mov	ar7,@r0
      000F10 C0 04            [24] 3712 	push	ar4
      000F12 C0 03            [24] 3713 	push	ar3
      000F14 C0 02            [24] 3714 	push	ar2
      000F16 C0 05            [24] 3715 	push	ar5
      000F18 C0 06            [24] 3716 	push	ar6
      000F1A C0 07            [24] 3717 	push	ar7
      000F1C 90r00r0A         [24] 3718 	mov	dptr,#_packet_memb
      000F1F 75 F0 00         [24] 3719 	mov	b,#0x00
      000F22 78r00            [12] 3720 	mov	r0,#_memb_free
      000F24 79s00            [12] 3721 	mov	r1,#(_memb_free >> 8)
      000F26 7As00            [12] 3722 	mov	r2,#(_memb_free >> 16)
      000F28 12r00r00         [24] 3723 	lcall	__sdcc_banked_call
      000F2B 15 81            [12] 3724 	dec	sp
      000F2D 15 81            [12] 3725 	dec	sp
      000F2F 15 81            [12] 3726 	dec	sp
      000F31 D0 02            [24] 3727 	pop	ar2
      000F33 D0 03            [24] 3728 	pop	ar3
      000F35 D0 04            [24] 3729 	pop	ar4
      000F37                       3730 00122$:
                                   3731 ;	../../core/net/mac/csma.c:401: if(list_length(n->queued_packet_list) == 0) {
      000F37 8A 82            [24] 3732 	mov	dpl,r2
      000F39 8B 83            [24] 3733 	mov	dph,r3
      000F3B 8C F0            [24] 3734 	mov	b,r4
      000F3D 12r00r00         [24] 3735 	lcall	__gptrget
      000F40 FA               [12] 3736 	mov	r2,a
      000F41 A3               [24] 3737 	inc	dptr
      000F42 12r00r00         [24] 3738 	lcall	__gptrget
      000F45 FB               [12] 3739 	mov	r3,a
      000F46 A3               [24] 3740 	inc	dptr
      000F47 12r00r00         [24] 3741 	lcall	__gptrget
      000F4A FC               [12] 3742 	mov	r4,a
      000F4B 8A 82            [24] 3743 	mov	dpl,r2
      000F4D 8B 83            [24] 3744 	mov	dph,r3
      000F4F 8C F0            [24] 3745 	mov	b,r4
      000F51 78r00            [12] 3746 	mov	r0,#_list_length
      000F53 79s00            [12] 3747 	mov	r1,#(_list_length >> 8)
      000F55 7As00            [12] 3748 	mov	r2,#(_list_length >> 16)
      000F57 12r00r00         [24] 3749 	lcall	__sdcc_banked_call
      000F5A E5 82            [12] 3750 	mov	a,dpl
      000F5C 85 83 F0         [24] 3751 	mov	b,dph
      000F5F 45 F0            [12] 3752 	orl	a,b
      000F61 70 5B            [24] 3753 	jnz	00128$
                                   3754 ;	../../core/net/mac/csma.c:402: list_remove(neighbor_list, n);
      000F63 E5 81            [12] 3755 	mov	a,sp
      000F65 24 F8            [12] 3756 	add	a,#0xf8
      000F67 F8               [12] 3757 	mov	r0,a
      000F68 86 02            [24] 3758 	mov	ar2,@r0
      000F6A 08               [12] 3759 	inc	r0
      000F6B 86 03            [24] 3760 	mov	ar3,@r0
      000F6D 08               [12] 3761 	inc	r0
      000F6E 86 04            [24] 3762 	mov	ar4,@r0
      000F70 90r00r21         [24] 3763 	mov	dptr,#_neighbor_list
      000F73 E0               [24] 3764 	movx	a,@dptr
      000F74 FD               [12] 3765 	mov	r5,a
      000F75 A3               [24] 3766 	inc	dptr
      000F76 E0               [24] 3767 	movx	a,@dptr
      000F77 FE               [12] 3768 	mov	r6,a
      000F78 A3               [24] 3769 	inc	dptr
      000F79 E0               [24] 3770 	movx	a,@dptr
      000F7A FF               [12] 3771 	mov	r7,a
      000F7B C0 02            [24] 3772 	push	ar2
      000F7D C0 03            [24] 3773 	push	ar3
      000F7F C0 04            [24] 3774 	push	ar4
      000F81 8D 82            [24] 3775 	mov	dpl,r5
      000F83 8E 83            [24] 3776 	mov	dph,r6
      000F85 8F F0            [24] 3777 	mov	b,r7
      000F87 78r00            [12] 3778 	mov	r0,#_list_remove
      000F89 79s00            [12] 3779 	mov	r1,#(_list_remove >> 8)
      000F8B 7As00            [12] 3780 	mov	r2,#(_list_remove >> 16)
      000F8D 12r00r00         [24] 3781 	lcall	__sdcc_banked_call
      000F90 15 81            [12] 3782 	dec	sp
      000F92 15 81            [12] 3783 	dec	sp
      000F94 15 81            [12] 3784 	dec	sp
                                   3785 ;	../../core/net/mac/csma.c:403: memb_free(&neighbor_memb, n);
      000F96 E5 81            [12] 3786 	mov	a,sp
      000F98 24 F8            [12] 3787 	add	a,#0xf8
      000F9A F8               [12] 3788 	mov	r0,a
      000F9B 86 02            [24] 3789 	mov	ar2,@r0
      000F9D 08               [12] 3790 	inc	r0
      000F9E 86 03            [24] 3791 	mov	ar3,@r0
      000FA0 08               [12] 3792 	inc	r0
      000FA1 86 04            [24] 3793 	mov	ar4,@r0
      000FA3 C0 02            [24] 3794 	push	ar2
      000FA5 C0 03            [24] 3795 	push	ar3
      000FA7 C0 04            [24] 3796 	push	ar4
      000FA9 90r00r00         [24] 3797 	mov	dptr,#_neighbor_memb
      000FAC 75 F0 00         [24] 3798 	mov	b,#0x00
      000FAF 78r00            [12] 3799 	mov	r0,#_memb_free
      000FB1 79s00            [12] 3800 	mov	r1,#(_memb_free >> 8)
      000FB3 7As00            [12] 3801 	mov	r2,#(_memb_free >> 16)
      000FB5 12r00r00         [24] 3802 	lcall	__sdcc_banked_call
      000FB8 15 81            [12] 3803 	dec	sp
      000FBA 15 81            [12] 3804 	dec	sp
      000FBC 15 81            [12] 3805 	dec	sp
      000FBE                       3806 00128$:
                                   3807 ;	../../core/net/mac/csma.c:412: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 1);
      000FBE 74 01            [12] 3808 	mov	a,#0x01
      000FC0 C0 E0            [24] 3809 	push	acc
      000FC2 E4               [12] 3810 	clr	a
      000FC3 C0 E0            [24] 3811 	push	acc
      000FC5 74 04            [12] 3812 	mov	a,#0x04
      000FC7 C0 E0            [24] 3813 	push	acc
      000FC9 E4               [12] 3814 	clr	a
      000FCA C0 E0            [24] 3815 	push	acc
      000FCC E5 81            [12] 3816 	mov	a,sp
      000FCE 24 E2            [12] 3817 	add	a,#0xe2
      000FD0 F8               [12] 3818 	mov	r0,a
      000FD1 E6               [12] 3819 	mov	a,@r0
      000FD2 C0 E0            [24] 3820 	push	acc
      000FD4 08               [12] 3821 	inc	r0
      000FD5 E6               [12] 3822 	mov	a,@r0
      000FD6 C0 E0            [24] 3823 	push	acc
      000FD8 08               [12] 3824 	inc	r0
      000FD9 E6               [12] 3825 	mov	a,@r0
      000FDA C0 E0            [24] 3826 	push	acc
      000FDC E5 81            [12] 3827 	mov	a,sp
      000FDE 24 E5            [12] 3828 	add	a,#0xe5
      000FE0 F8               [12] 3829 	mov	r0,a
      000FE1 86 82            [24] 3830 	mov	dpl,@r0
      000FE3 08               [12] 3831 	inc	r0
      000FE4 86 83            [24] 3832 	mov	dph,@r0
      000FE6 08               [12] 3833 	inc	r0
      000FE7 86 F0            [24] 3834 	mov	b,@r0
      000FE9 78r00            [12] 3835 	mov	r0,#_mac_call_sent_callback
      000FEB 79s00            [12] 3836 	mov	r1,#(_mac_call_sent_callback >> 8)
      000FED 7As00            [12] 3837 	mov	r2,#(_mac_call_sent_callback >> 16)
      000FEF 12r00r00         [24] 3838 	lcall	__sdcc_banked_call
      000FF2 E5 81            [12] 3839 	mov	a,sp
      000FF4 24 F9            [12] 3840 	add	a,#0xf9
      000FF6 F5 81            [12] 3841 	mov	sp,a
      000FF8                       3842 00129$:
      000FF8 E5 81            [12] 3843 	mov	a,sp
      000FFA 24 EB            [12] 3844 	add	a,#0xEB
      000FFC F5 81            [12] 3845 	mov	sp,a
      000FFE 02r00r00         [24] 3846 	ljmp	__sdcc_banked_ret
                                   3847 ;------------------------------------------------------------
                                   3848 ;Allocation info for local variables in function 'input_packet'
                                   3849 ;------------------------------------------------------------
                                   3850 ;	../../core/net/mac/csma.c:416: input_packet(void)
                                   3851 ;	-----------------------------------------
                                   3852 ;	 function input_packet
                                   3853 ;	-----------------------------------------
      001001                       3854 _input_packet:
                                   3855 ;	../../core/net/mac/csma.c:418: NETSTACK_LLSEC.input();
      001001 90r00r0C         [24] 3856 	mov	dptr,#(_nullsec_driver + 0x000c)
      001004 E4               [12] 3857 	clr	a
      001005 93               [24] 3858 	movc	a,@a+dptr
      001006 FD               [12] 3859 	mov	r5,a
      001007 A3               [24] 3860 	inc	dptr
      001008 E4               [12] 3861 	clr	a
      001009 93               [24] 3862 	movc	a,@a+dptr
      00100A FE               [12] 3863 	mov	r6,a
      00100B A3               [24] 3864 	inc	dptr
      00100C E4               [12] 3865 	clr	a
      00100D 93               [24] 3866 	movc	a,@a+dptr
      00100E FF               [12] 3867 	mov	r7,a
      00100F C0 07            [24] 3868 	push	ar7
      001011 C0 06            [24] 3869 	push	ar6
      001013 C0 05            [24] 3870 	push	ar5
      001015 C0 05            [24] 3871 	push	ar5
      001017 C0 06            [24] 3872 	push	ar6
      001019 C0 07            [24] 3873 	push	ar7
      00101B D0 02            [24] 3874 	pop	ar2
      00101D D0 01            [24] 3875 	pop	ar1
      00101F D0 00            [24] 3876 	pop	ar0
      001021 12r00r00         [24] 3877 	lcall	__sdcc_banked_call
      001024 D0 05            [24] 3878 	pop	ar5
      001026 D0 06            [24] 3879 	pop	ar6
      001028 D0 07            [24] 3880 	pop	ar7
      00102A 02r00r00         [24] 3881 	ljmp	__sdcc_banked_ret
                                   3882 ;------------------------------------------------------------
                                   3883 ;Allocation info for local variables in function 'on'
                                   3884 ;------------------------------------------------------------
                                   3885 ;	../../core/net/mac/csma.c:422: on(void)
                                   3886 ;	-----------------------------------------
                                   3887 ;	 function on
                                   3888 ;	-----------------------------------------
      00102D                       3889 _on:
                                   3890 ;	../../core/net/mac/csma.c:424: return NETSTACK_RDC.on();
      00102D 90r00r0F         [24] 3891 	mov	dptr,#(_nullrdc_driver + 0x000f)
      001030 E4               [12] 3892 	clr	a
      001031 93               [24] 3893 	movc	a,@a+dptr
      001032 FD               [12] 3894 	mov	r5,a
      001033 A3               [24] 3895 	inc	dptr
      001034 E4               [12] 3896 	clr	a
      001035 93               [24] 3897 	movc	a,@a+dptr
      001036 FE               [12] 3898 	mov	r6,a
      001037 A3               [24] 3899 	inc	dptr
      001038 E4               [12] 3900 	clr	a
      001039 93               [24] 3901 	movc	a,@a+dptr
      00103A FF               [12] 3902 	mov	r7,a
      00103B C0 07            [24] 3903 	push	ar7
      00103D C0 05            [24] 3904 	push	ar5
      00103F C0 06            [24] 3905 	push	ar6
      001041 C0 07            [24] 3906 	push	ar7
      001043 D0 02            [24] 3907 	pop	ar2
      001045 D0 01            [24] 3908 	pop	ar1
      001047 D0 00            [24] 3909 	pop	ar0
      001049 12r00r00         [24] 3910 	lcall	__sdcc_banked_call
      00104C AD 82            [24] 3911 	mov	r5,dpl
      00104E AE 83            [24] 3912 	mov	r6,dph
      001050 D0 07            [24] 3913 	pop	ar7
      001052 8D 82            [24] 3914 	mov	dpl,r5
      001054 8E 83            [24] 3915 	mov	dph,r6
      001056 02r00r00         [24] 3916 	ljmp	__sdcc_banked_ret
                                   3917 ;------------------------------------------------------------
                                   3918 ;Allocation info for local variables in function 'off'
                                   3919 ;------------------------------------------------------------
                                   3920 ;keep_radio_on             Allocated to registers r6 r7 
                                   3921 ;------------------------------------------------------------
                                   3922 ;	../../core/net/mac/csma.c:428: off(int keep_radio_on)
                                   3923 ;	-----------------------------------------
                                   3924 ;	 function off
                                   3925 ;	-----------------------------------------
      001059                       3926 _off:
      001059 AE 82            [24] 3927 	mov	r6,dpl
      00105B AF 83            [24] 3928 	mov	r7,dph
                                   3929 ;	../../core/net/mac/csma.c:430: return NETSTACK_RDC.off(keep_radio_on);
      00105D 90r00r12         [24] 3930 	mov	dptr,#(_nullrdc_driver + 0x0012)
      001060 E4               [12] 3931 	clr	a
      001061 93               [24] 3932 	movc	a,@a+dptr
      001062 FB               [12] 3933 	mov	r3,a
      001063 A3               [24] 3934 	inc	dptr
      001064 E4               [12] 3935 	clr	a
      001065 93               [24] 3936 	movc	a,@a+dptr
      001066 FC               [12] 3937 	mov	r4,a
      001067 A3               [24] 3938 	inc	dptr
      001068 E4               [12] 3939 	clr	a
      001069 93               [24] 3940 	movc	a,@a+dptr
      00106A FD               [12] 3941 	mov	r5,a
      00106B C0 05            [24] 3942 	push	ar5
      00106D C0 03            [24] 3943 	push	ar3
      00106F C0 04            [24] 3944 	push	ar4
      001071 C0 05            [24] 3945 	push	ar5
      001073 8E 82            [24] 3946 	mov	dpl,r6
      001075 8F 83            [24] 3947 	mov	dph,r7
      001077 D0 02            [24] 3948 	pop	ar2
      001079 D0 01            [24] 3949 	pop	ar1
      00107B D0 00            [24] 3950 	pop	ar0
      00107D 12r00r00         [24] 3951 	lcall	__sdcc_banked_call
      001080 AB 82            [24] 3952 	mov	r3,dpl
      001082 AC 83            [24] 3953 	mov	r4,dph
      001084 D0 05            [24] 3954 	pop	ar5
      001086 8B 82            [24] 3955 	mov	dpl,r3
      001088 8C 83            [24] 3956 	mov	dph,r4
      00108A 02r00r00         [24] 3957 	ljmp	__sdcc_banked_ret
                                   3958 ;------------------------------------------------------------
                                   3959 ;Allocation info for local variables in function 'channel_check_interval'
                                   3960 ;------------------------------------------------------------
                                   3961 ;	../../core/net/mac/csma.c:434: channel_check_interval(void)
                                   3962 ;	-----------------------------------------
                                   3963 ;	 function channel_check_interval
                                   3964 ;	-----------------------------------------
      00108D                       3965 _channel_check_interval:
                                   3966 ;	../../core/net/mac/csma.c:436: if(NETSTACK_RDC.channel_check_interval) {
      00108D 90r00r15         [24] 3967 	mov	dptr,#(_nullrdc_driver + 0x0015)
      001090 E4               [12] 3968 	clr	a
      001091 93               [24] 3969 	movc	a,@a+dptr
      001092 FD               [12] 3970 	mov	r5,a
      001093 A3               [24] 3971 	inc	dptr
      001094 E4               [12] 3972 	clr	a
      001095 93               [24] 3973 	movc	a,@a+dptr
      001096 FE               [12] 3974 	mov	r6,a
      001097 A3               [24] 3975 	inc	dptr
      001098 E4               [12] 3976 	clr	a
      001099 93               [24] 3977 	movc	a,@a+dptr
      00109A FF               [12] 3978 	mov	r7,a
      00109B ED               [12] 3979 	mov	a,r5
      00109C 4E               [12] 3980 	orl	a,r6
      00109D 60 1D            [24] 3981 	jz	00102$
                                   3982 ;	../../core/net/mac/csma.c:437: return NETSTACK_RDC.channel_check_interval();
      00109F C0 07            [24] 3983 	push	ar7
      0010A1 C0 05            [24] 3984 	push	ar5
      0010A3 C0 06            [24] 3985 	push	ar6
      0010A5 C0 07            [24] 3986 	push	ar7
      0010A7 D0 02            [24] 3987 	pop	ar2
      0010A9 D0 01            [24] 3988 	pop	ar1
      0010AB D0 00            [24] 3989 	pop	ar0
      0010AD 12r00r00         [24] 3990 	lcall	__sdcc_banked_call
      0010B0 AD 82            [24] 3991 	mov	r5,dpl
      0010B2 AE 83            [24] 3992 	mov	r6,dph
      0010B4 D0 07            [24] 3993 	pop	ar7
      0010B6 8D 82            [24] 3994 	mov	dpl,r5
      0010B8 8E 83            [24] 3995 	mov	dph,r6
      0010BA 80 03            [24] 3996 	sjmp	00103$
      0010BC                       3997 00102$:
                                   3998 ;	../../core/net/mac/csma.c:439: return 0;
      0010BC 90 00 00         [24] 3999 	mov	dptr,#0x0000
      0010BF                       4000 00103$:
      0010BF 02r00r00         [24] 4001 	ljmp	__sdcc_banked_ret
                                   4002 ;------------------------------------------------------------
                                   4003 ;Allocation info for local variables in function 'init'
                                   4004 ;------------------------------------------------------------
                                   4005 ;	../../core/net/mac/csma.c:443: init(void)
                                   4006 ;	-----------------------------------------
                                   4007 ;	 function init
                                   4008 ;	-----------------------------------------
      0010C2                       4009 _init:
                                   4010 ;	../../core/net/mac/csma.c:445: memb_init(&packet_memb);
      0010C2 90r00r0A         [24] 4011 	mov	dptr,#_packet_memb
      0010C5 75 F0 00         [24] 4012 	mov	b,#0x00
      0010C8 78r00            [12] 4013 	mov	r0,#_memb_init
      0010CA 79s00            [12] 4014 	mov	r1,#(_memb_init >> 8)
      0010CC 7As00            [12] 4015 	mov	r2,#(_memb_init >> 16)
      0010CE 12r00r00         [24] 4016 	lcall	__sdcc_banked_call
                                   4017 ;	../../core/net/mac/csma.c:446: memb_init(&metadata_memb);
      0010D1 90r00r14         [24] 4018 	mov	dptr,#_metadata_memb
      0010D4 75 F0 00         [24] 4019 	mov	b,#0x00
      0010D7 78r00            [12] 4020 	mov	r0,#_memb_init
      0010D9 79s00            [12] 4021 	mov	r1,#(_memb_init >> 8)
      0010DB 7As00            [12] 4022 	mov	r2,#(_memb_init >> 16)
      0010DD 12r00r00         [24] 4023 	lcall	__sdcc_banked_call
                                   4024 ;	../../core/net/mac/csma.c:447: memb_init(&neighbor_memb);
      0010E0 90r00r00         [24] 4025 	mov	dptr,#_neighbor_memb
      0010E3 75 F0 00         [24] 4026 	mov	b,#0x00
      0010E6 78r00            [12] 4027 	mov	r0,#_memb_init
      0010E8 79s00            [12] 4028 	mov	r1,#(_memb_init >> 8)
      0010EA 7As00            [12] 4029 	mov	r2,#(_memb_init >> 16)
      0010EC 12r00r00         [24] 4030 	lcall	__sdcc_banked_call
      0010EF 02r00r00         [24] 4031 	ljmp	__sdcc_banked_ret
                                   4032 	.area CSEG    (CODE)
                                   4033 	.area CONST   (CODE)
      000000                       4034 _csma_driver:
      000000r15s00 80              4035 	.byte _str_0,(_str_0 >> 8),#0x80
      000003rC2s10s00              4036 	.byte _init,(_init >> 8),(_init >> 16)
      000006r89s09s00              4037 	.byte _send_packet,(_send_packet >> 8),(_send_packet >> 16)
      000009r01s10s00              4038 	.byte _input_packet,(_input_packet >> 8),(_input_packet >> 16)
      00000Cr2Ds10s00              4039 	.byte _on,(_on >> 8),(_on >> 16)
      00000Fr59s10s00              4040 	.byte _off,(_off >> 8),(_off >> 16)
      000012r8Ds10s00              4041 	.byte _channel_check_interval,(_channel_check_interval >> 8),(_channel_check_interval >> 16)
      000015                       4042 _str_0:
      000015 43 53 4D 41           4043 	.ascii "CSMA"
      000019 00                    4044 	.db 0x00
                                   4045 	.area XINIT   (CODE)
      000000                       4046 __xinit__neighbor_memb:
      000000 2A 00                 4047 	.byte #0x2A,#0x00	; 42
      000002 02 00                 4048 	.byte #0x02,#0x00	; 2
      000004r00s00 00              4049 	.byte _neighbor_memb_memb_count,(_neighbor_memb_memb_count >> 8),#0x00
      000007r02s00 00              4050 	.byte _neighbor_memb_memb_mem,(_neighbor_memb_memb_mem >> 8),#0x00
      00000A                       4051 __xinit__packet_memb:
      00000A 09 00                 4052 	.byte #0x09,#0x00	; 9
      00000C 06 00                 4053 	.byte #0x06,#0x00	; 6
      00000Er56s00 00              4054 	.byte _packet_memb_memb_count,(_packet_memb_memb_count >> 8),#0x00
      000011r5Cs00 00              4055 	.byte _packet_memb_memb_mem,(_packet_memb_memb_mem >> 8),#0x00
      000014                       4056 __xinit__metadata_memb:
      000014 07 00                 4057 	.byte #0x07,#0x00	; 7
      000016 06 00                 4058 	.byte #0x06,#0x00	; 6
      000018r92s00 00              4059 	.byte _metadata_memb_memb_count,(_metadata_memb_memb_count >> 8),#0x00
      00001Br98s00 00              4060 	.byte _metadata_memb_memb_mem,(_metadata_memb_memb_mem >> 8),#0x00
      00001E                       4061 __xinit__neighbor_list_list:
                                   4062 ; generic printIvalPtr
      00001E 00 00 00              4063 	.byte #0x00,#0x00,#0x00
      000021                       4064 __xinit__neighbor_list:
      000021r1Es00 00              4065 	.byte _neighbor_list_list,(_neighbor_list_list >> 8),#0x00
                                   4066 	.area CABS    (ABS,CODE)
