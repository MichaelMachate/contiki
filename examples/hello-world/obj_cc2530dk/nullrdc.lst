                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:31 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module nullrdc
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _nullrdc_driver
                                     13 	.globl _watchdog_periodic
                                     14 	.globl _queuebuf_to_packetbuf
                                     15 	.globl _packetbuf_holds_broadcast
                                     16 	.globl _packetbuf_addr
                                     17 	.globl _packetbuf_set_addr
                                     18 	.globl _packetbuf_set_attr
                                     19 	.globl _packetbuf_totlen
                                     20 	.globl _packetbuf_datalen
                                     21 	.globl _packetbuf_hdrptr
                                     22 	.globl _linkaddr_cmp
                                     23 	.globl _mac_call_sent_callback
                                     24 	.globl _mac_sequence_register_seqno
                                     25 	.globl _mac_sequence_is_duplicate
                                     26 	.globl _ACTIVE
                                     27 	.globl _TX_BYTE
                                     28 	.globl _RX_BYTE
                                     29 	.globl _ERR
                                     30 	.globl _FE
                                     31 	.globl _SLAVE
                                     32 	.globl _RE
                                     33 	.globl _MODE
                                     34 	.globl _T3OVFIF
                                     35 	.globl _T3CH0IF
                                     36 	.globl _T3CH1IF
                                     37 	.globl _T4OVFIF
                                     38 	.globl _T4CH0IF
                                     39 	.globl _T4CH1IF
                                     40 	.globl _OVFIM
                                     41 	.globl _B_0
                                     42 	.globl _B_1
                                     43 	.globl _B_2
                                     44 	.globl _B_3
                                     45 	.globl _B_4
                                     46 	.globl _B_5
                                     47 	.globl _B_6
                                     48 	.globl _B_7
                                     49 	.globl _P2IF
                                     50 	.globl _UTX0IF
                                     51 	.globl _UTX1IF
                                     52 	.globl _P1IF
                                     53 	.globl _WDTIF
                                     54 	.globl _ACC_0
                                     55 	.globl _ACC_1
                                     56 	.globl _ACC_2
                                     57 	.globl _ACC_3
                                     58 	.globl _ACC_4
                                     59 	.globl _ACC_5
                                     60 	.globl _ACC_6
                                     61 	.globl _ACC_7
                                     62 	.globl _P
                                     63 	.globl _F1
                                     64 	.globl _OV
                                     65 	.globl _RS0
                                     66 	.globl _RS1
                                     67 	.globl _F0
                                     68 	.globl _AC
                                     69 	.globl _CY
                                     70 	.globl _DMAIF
                                     71 	.globl _T1IF
                                     72 	.globl _T2IF
                                     73 	.globl _T3IF
                                     74 	.globl _T4IF
                                     75 	.globl _P0IF
                                     76 	.globl _STIF
                                     77 	.globl _DMAIE
                                     78 	.globl _T1IE
                                     79 	.globl _T2IE
                                     80 	.globl _T3IE
                                     81 	.globl _T4IE
                                     82 	.globl _P0IE
                                     83 	.globl _RFERRIE
                                     84 	.globl _ADCIE
                                     85 	.globl _URX0IE
                                     86 	.globl _URX1IE
                                     87 	.globl _ENCIE
                                     88 	.globl _STIE
                                     89 	.globl _EA
                                     90 	.globl _P2_0
                                     91 	.globl _P2_1
                                     92 	.globl _P2_2
                                     93 	.globl _P2_3
                                     94 	.globl _P2_4
                                     95 	.globl _P2_5
                                     96 	.globl _P2_6
                                     97 	.globl _P2_7
                                     98 	.globl _ENCIF_0
                                     99 	.globl _ENCIF_1
                                    100 	.globl _P1_0
                                    101 	.globl _P1_1
                                    102 	.globl _P1_2
                                    103 	.globl _P1_3
                                    104 	.globl _P1_4
                                    105 	.globl _P1_5
                                    106 	.globl _P1_6
                                    107 	.globl _P1_7
                                    108 	.globl _IT0
                                    109 	.globl _RFERRIF
                                    110 	.globl _IT1
                                    111 	.globl _URX0IF
                                    112 	.globl _ADCIF
                                    113 	.globl _URX1IF
                                    114 	.globl _P0_0
                                    115 	.globl _P0_1
                                    116 	.globl _P0_2
                                    117 	.globl _P0_3
                                    118 	.globl _P0_4
                                    119 	.globl _P0_5
                                    120 	.globl _P0_6
                                    121 	.globl _P0_7
                                    122 	.globl _WDCTL
                                    123 	.globl _U1GCR
                                    124 	.globl _U1UCR
                                    125 	.globl _U1BAUD
                                    126 	.globl _U1DBUF
                                    127 	.globl _U1CSR
                                    128 	.globl _U0GCR
                                    129 	.globl _U0UCR
                                    130 	.globl _U0BAUD
                                    131 	.globl _U0DBUF
                                    132 	.globl _U0CSR
                                    133 	.globl _TIMIF
                                    134 	.globl _T4CC1
                                    135 	.globl _T4CCTL1
                                    136 	.globl _T4CC0
                                    137 	.globl _T4CCTL0
                                    138 	.globl _T4CTL
                                    139 	.globl _T4CNT
                                    140 	.globl _T3CC1
                                    141 	.globl _T3CCTL1
                                    142 	.globl _T3CC0
                                    143 	.globl _T3CCTL0
                                    144 	.globl _T3CTL
                                    145 	.globl _T3CNT
                                    146 	.globl _T2MSEL
                                    147 	.globl _T2IRQM
                                    148 	.globl _T2MOVF2
                                    149 	.globl _T2MOVF1
                                    150 	.globl _T2MOVF0
                                    151 	.globl _T2M1
                                    152 	.globl _T2M0
                                    153 	.globl _T2IRQF
                                    154 	.globl _T2EVTCFG
                                    155 	.globl _T2CTRL
                                    156 	.globl _T1STAT
                                    157 	.globl _T1CCTL2
                                    158 	.globl _T1CCTL1
                                    159 	.globl _T1CCTL0
                                    160 	.globl _T1CTL
                                    161 	.globl _T1CNTH
                                    162 	.globl _T1CNTL
                                    163 	.globl _T1CC2H
                                    164 	.globl _T1CC2L
                                    165 	.globl _T1CC1H
                                    166 	.globl _T1CC1L
                                    167 	.globl _T1CC0H
                                    168 	.globl _T1CC0L
                                    169 	.globl _CLKCONSTA
                                    170 	.globl _CLKCONCMD
                                    171 	.globl _SLEEPSTA
                                    172 	.globl _SLEEPCMD
                                    173 	.globl _STLOAD
                                    174 	.globl _ST2
                                    175 	.globl _ST1
                                    176 	.globl _ST0
                                    177 	.globl _RFERRF
                                    178 	.globl _RFIRQF0
                                    179 	.globl _RFST
                                    180 	.globl _RFD
                                    181 	.globl _RFIRQF1
                                    182 	.globl _PSBANK
                                    183 	.globl _FMAP
                                    184 	.globl _MEMCTR
                                    185 	.globl __XPAGE
                                    186 	.globl _MPAGE
                                    187 	.globl _PMUX
                                    188 	.globl _P2DIR
                                    189 	.globl _P1DIR
                                    190 	.globl _P0DIR
                                    191 	.globl _P2INP
                                    192 	.globl _P1INP
                                    193 	.globl _P2SEL
                                    194 	.globl _P1SEL
                                    195 	.globl _P0SEL
                                    196 	.globl _APCFG
                                    197 	.globl _PERCFG
                                    198 	.globl _P0INP
                                    199 	.globl _P2IEN
                                    200 	.globl _P1IEN
                                    201 	.globl _P0IEN
                                    202 	.globl _PICTL
                                    203 	.globl _P2IFG
                                    204 	.globl _P1IFG
                                    205 	.globl _P0IFG
                                    206 	.globl _DMAREQ
                                    207 	.globl _DMAARM
                                    208 	.globl _DMA0CFGH
                                    209 	.globl _DMA0CFGL
                                    210 	.globl _DMA1CFGH
                                    211 	.globl _DMA1CFGL
                                    212 	.globl _DMAIRQ
                                    213 	.globl _ENCCS
                                    214 	.globl _ENCDO
                                    215 	.globl _ENCDI
                                    216 	.globl _RNDH
                                    217 	.globl _RNDL
                                    218 	.globl _ADCH
                                    219 	.globl _ADCL
                                    220 	.globl _ADCCON3
                                    221 	.globl _ADCCON2
                                    222 	.globl _ADCCON1
                                    223 	.globl _B
                                    224 	.globl _IRCON2
                                    225 	.globl _ACC
                                    226 	.globl _PSW
                                    227 	.globl _IRCON
                                    228 	.globl _IP1
                                    229 	.globl _IEN1
                                    230 	.globl _IP0
                                    231 	.globl _IEN0
                                    232 	.globl _P2
                                    233 	.globl _S1CON
                                    234 	.globl _IEN2
                                    235 	.globl _S0CON
                                    236 	.globl _DPS
                                    237 	.globl _P1
                                    238 	.globl _TCON
                                    239 	.globl _PCON
                                    240 	.globl _DPH1
                                    241 	.globl _DPL1
                                    242 	.globl _DPH0
                                    243 	.globl _DPL0
                                    244 	.globl _SP
                                    245 	.globl _P0
                                    246 	.globl _X_IEEE_ADDR
                                    247 	.globl _X_INFOPAGE
                                    248 	.globl _X_P2DIR
                                    249 	.globl _X_P1DIR
                                    250 	.globl _X_P0DIR
                                    251 	.globl _X_U1GCR
                                    252 	.globl _X_U1UCR
                                    253 	.globl _X_U1BAUD
                                    254 	.globl _X_U1DBUF
                                    255 	.globl _X_U1CSR
                                    256 	.globl _X_P2INP
                                    257 	.globl _X_P1INP
                                    258 	.globl _X_P2SEL
                                    259 	.globl _X_P1SEL
                                    260 	.globl _X_P0SEL
                                    261 	.globl _X_APCFG
                                    262 	.globl _X_PERCFG
                                    263 	.globl _X_T4CC1
                                    264 	.globl _X_T4CCTL1
                                    265 	.globl _X_T4CC0
                                    266 	.globl _X_T4CCTL0
                                    267 	.globl _X_T4CTL
                                    268 	.globl _X_T4CNT
                                    269 	.globl _X_RFIRQF0
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl _X_T1CC2H
                                    278 	.globl _X_T1CC2L
                                    279 	.globl _X_T1CC1H
                                    280 	.globl _X_T1CC1L
                                    281 	.globl _X_T1CC0H
                                    282 	.globl _X_T1CC0L
                                    283 	.globl _X_RFD
                                    284 	.globl _X_TIMIF
                                    285 	.globl _X_DMAREQ
                                    286 	.globl _X_DMAARM
                                    287 	.globl _X_DMA0CFGH
                                    288 	.globl _X_DMA0CFGL
                                    289 	.globl _X_DMA1CFGH
                                    290 	.globl _X_DMA1CFGL
                                    291 	.globl _X_DMAIRQ
                                    292 	.globl _X_T3CC1
                                    293 	.globl _X_T3CCTL1
                                    294 	.globl _X_T3CC0
                                    295 	.globl _X_T3CCTL0
                                    296 	.globl _X_T3CTL
                                    297 	.globl _X_T3CNT
                                    298 	.globl _X_WDCTL
                                    299 	.globl _X_MEMCTR
                                    300 	.globl _X_CLKCONCMD
                                    301 	.globl _X_U0GCR
                                    302 	.globl _X_U0UCR
                                    303 	.globl _X_T2MSEL
                                    304 	.globl _X_U0BAUD
                                    305 	.globl _X_U0DBUF
                                    306 	.globl _X_RFERRF
                                    307 	.globl _X_SLEEPCMD
                                    308 	.globl _X_RNDH
                                    309 	.globl _X_RNDL
                                    310 	.globl _X_ADCH
                                    311 	.globl _X_ADCL
                                    312 	.globl _X_ADCCON3
                                    313 	.globl _X_ADCCON2
                                    314 	.globl _X_ADCCON1
                                    315 	.globl _X_ENCCS
                                    316 	.globl _X_ENCDO
                                    317 	.globl _X_ENCDI
                                    318 	.globl _X_T1STAT
                                    319 	.globl _X_PMUX
                                    320 	.globl _X_STLOAD
                                    321 	.globl _X_P2IEN
                                    322 	.globl _X_P0IEN
                                    323 	.globl _X_T2IRQM
                                    324 	.globl _X_T2MOVF2
                                    325 	.globl _X_T2MOVF1
                                    326 	.globl _X_T2MOVF0
                                    327 	.globl _X_T2M1
                                    328 	.globl _X_T2M0
                                    329 	.globl _X_T2IRQF
                                    330 	.globl _X_P2
                                    331 	.globl _X_PSBANK
                                    332 	.globl _X_FMAP
                                    333 	.globl _X_CLKCONSTA
                                    334 	.globl _X_SLEEPSTA
                                    335 	.globl _X_T2EVTCFG
                                    336 	.globl _X_ST2
                                    337 	.globl _X_ST1
                                    338 	.globl _X_ST0
                                    339 	.globl _X_T2CTRL
                                    340 	.globl _X__XPAGE
                                    341 	.globl _X_MPAGE
                                    342 	.globl _X_RFIRQF1
                                    343 	.globl _X_P1
                                    344 	.globl _X_P0INP
                                    345 	.globl _X_P1IEN
                                    346 	.globl _X_PICTL
                                    347 	.globl _X_P2IFG
                                    348 	.globl _X_P1IFG
                                    349 	.globl _X_P0IFG
                                    350 	.globl _X_U0CSR
                                    351 	.globl _X_P0
                                    352 	.globl _USBF5
                                    353 	.globl _USBF4
                                    354 	.globl _USBF3
                                    355 	.globl _USBF2
                                    356 	.globl _USBF1
                                    357 	.globl _USBF0
                                    358 	.globl _USBCNTH
                                    359 	.globl _USBCNTL
                                    360 	.globl _USBCNT0
                                    361 	.globl _USBCSOH
                                    362 	.globl _USBCSOL
                                    363 	.globl _USBMAXO
                                    364 	.globl _USBCSIH
                                    365 	.globl _USBCSIL
                                    366 	.globl _USBCS0
                                    367 	.globl _USBMAXI
                                    368 	.globl _USBCTRL
                                    369 	.globl _USBINDEX
                                    370 	.globl _USBFRMH
                                    371 	.globl _USBFRML
                                    372 	.globl _USBCIE
                                    373 	.globl _USBOIE
                                    374 	.globl _USBIIE
                                    375 	.globl _USBCIF
                                    376 	.globl _USBOIF
                                    377 	.globl _USBIIF
                                    378 	.globl _USBPOW
                                    379 	.globl _USBADDR
                                    380 	.globl _CSPT
                                    381 	.globl _CSPZ
                                    382 	.globl _CSPY
                                    383 	.globl _CSPX
                                    384 	.globl _CSPSTAT
                                    385 	.globl _CSPCTRL
                                    386 	.globl _CSPPROG23
                                    387 	.globl _CSPPROG22
                                    388 	.globl _CSPPROG21
                                    389 	.globl _CSPPROG20
                                    390 	.globl _CSPPROG19
                                    391 	.globl _CSPPROG18
                                    392 	.globl _CSPPROG17
                                    393 	.globl _CSPPROG16
                                    394 	.globl _CSPPROG15
                                    395 	.globl _CSPPROG14
                                    396 	.globl _CSPPROG13
                                    397 	.globl _CSPPROG12
                                    398 	.globl _CSPPROG11
                                    399 	.globl _CSPPROG10
                                    400 	.globl _CSPPROG9
                                    401 	.globl _CSPPROG8
                                    402 	.globl _CSPPROG7
                                    403 	.globl _CSPPROG6
                                    404 	.globl _CSPPROG5
                                    405 	.globl _CSPPROG4
                                    406 	.globl _CSPPROG3
                                    407 	.globl _CSPPROG2
                                    408 	.globl _CSPPROG1
                                    409 	.globl _CSPPROG0
                                    410 	.globl _RFC_OBS_CTRL2
                                    411 	.globl _RFC_OBS_CTRL1
                                    412 	.globl _RFC_OBS_CTRL0
                                    413 	.globl _TXFILTCFG
                                    414 	.globl _PTEST1
                                    415 	.globl _PTEST0
                                    416 	.globl _ATEST
                                    417 	.globl _DACTEST2
                                    418 	.globl _DACTEST1
                                    419 	.globl _DACTEST0
                                    420 	.globl _MDMTEST1
                                    421 	.globl _MDMTEST0
                                    422 	.globl _ADCTEST2
                                    423 	.globl _ADCTEST1
                                    424 	.globl _ADCTEST0
                                    425 	.globl _AGCCTRL3
                                    426 	.globl _AGCCTRL2
                                    427 	.globl _AGCCTRL1
                                    428 	.globl _AGCCTRL0
                                    429 	.globl _FSCAL3
                                    430 	.globl _FSCAL2
                                    431 	.globl _FSCAL1
                                    432 	.globl _FSCAL0
                                    433 	.globl _FSCTRL
                                    434 	.globl _RXCTRL
                                    435 	.globl _FREQEST
                                    436 	.globl _MDMCTRL1
                                    437 	.globl _MDMCTRL0
                                    438 	.globl _RFRND
                                    439 	.globl _RFERRM
                                    440 	.globl _RFIRQM1
                                    441 	.globl _RFIRQM0
                                    442 	.globl _TXLAST_PTR
                                    443 	.globl _TXFIRST_PTR
                                    444 	.globl _RXP1_PTR
                                    445 	.globl _RXLAST_PTR
                                    446 	.globl _RXFIRST_PTR
                                    447 	.globl _TXFIFOCNT
                                    448 	.globl _RXFIFOCNT
                                    449 	.globl _RXFIRST
                                    450 	.globl _RSSISTAT
                                    451 	.globl _RSSI
                                    452 	.globl _CCACTRL1
                                    453 	.globl _CCACTRL0
                                    454 	.globl _FSMCTRL
                                    455 	.globl _FIFOPCTRL
                                    456 	.globl _FSMSTAT1
                                    457 	.globl _FSMSTAT0
                                    458 	.globl _TXCTRL
                                    459 	.globl _TXPOWER
                                    460 	.globl _FREQCTRL
                                    461 	.globl _FREQTUNE
                                    462 	.globl _RXMASKCLR
                                    463 	.globl _RXMASKSET
                                    464 	.globl _RXENABLE
                                    465 	.globl _FRMCTRL1
                                    466 	.globl _FRMCTRL0
                                    467 	.globl _SRCEXTEN2
                                    468 	.globl _SRCEXTEN1
                                    469 	.globl _SRCEXTEN0
                                    470 	.globl _SRCSHORTEN2
                                    471 	.globl _SRCSHORTEN1
                                    472 	.globl _SRCSHORTEN0
                                    473 	.globl _SRCMATCH
                                    474 	.globl _FRMFILT1
                                    475 	.globl _FRMFILT0
                                    476 	.globl _SHORT_ADDR1
                                    477 	.globl _SHORT_ADDR0
                                    478 	.globl _PAN_ID1
                                    479 	.globl _PAN_ID0
                                    480 	.globl _EXT_ADDR7
                                    481 	.globl _EXT_ADDR6
                                    482 	.globl _EXT_ADDR5
                                    483 	.globl _EXT_ADDR4
                                    484 	.globl _EXT_ADDR3
                                    485 	.globl _EXT_ADDR2
                                    486 	.globl _EXT_ADDR1
                                    487 	.globl _EXT_ADDR0
                                    488 	.globl _SRCSHORTPENDEN2
                                    489 	.globl _SRCSHORTPENDEN1
                                    490 	.globl _SRCSHORTPENDEN0
                                    491 	.globl _SRCEXTPENDEN2
                                    492 	.globl _SRCEXTPENDEN1
                                    493 	.globl _SRCEXTPENDEN0
                                    494 	.globl _SRCRESINDEX
                                    495 	.globl _SRCRESMASK2
                                    496 	.globl _SRCRESMASK1
                                    497 	.globl _SRCRESMASK0
                                    498 	.globl _SRC_ADDR_TABLE
                                    499 	.globl _TXFIFO
                                    500 	.globl _RXFIFO
                                    501 	.globl _RFCORE_RAM
                                    502 	.globl _CMPCTL
                                    503 	.globl _OPAMPS
                                    504 	.globl _OPAMPC
                                    505 	.globl _STCV2
                                    506 	.globl _STCV1
                                    507 	.globl _STCV0
                                    508 	.globl _STCS
                                    509 	.globl _STCC
                                    510 	.globl _T1CC4H
                                    511 	.globl _T1CC4L
                                    512 	.globl _T1CC3H
                                    513 	.globl _T1CC3L
                                    514 	.globl _XX_T1CC2H
                                    515 	.globl _XX_T1CC2L
                                    516 	.globl _XX_T1CC1H
                                    517 	.globl _XX_T1CC1L
                                    518 	.globl _XX_T1CC0H
                                    519 	.globl _XX_T1CC0L
                                    520 	.globl _T1CCTL4
                                    521 	.globl _T1CCTL3
                                    522 	.globl _XX_T1CCTL2
                                    523 	.globl _XX_T1CCTL1
                                    524 	.globl _XX_T1CCTL0
                                    525 	.globl _CLD
                                    526 	.globl _IRCTL
                                    527 	.globl _CHIPINFO1
                                    528 	.globl _CHIPINFO0
                                    529 	.globl _FWDATA
                                    530 	.globl _FADDRH
                                    531 	.globl _FADDRL
                                    532 	.globl _FCTL
                                    533 	.globl _IVCTRL
                                    534 	.globl _BATTMON
                                    535 	.globl _SRCRC
                                    536 	.globl _DBGDATA
                                    537 	.globl _TESTREG0
                                    538 	.globl _CHIPID
                                    539 	.globl _CHVER
                                    540 	.globl _OBSSEL5
                                    541 	.globl _OBSSEL4
                                    542 	.globl _OBSSEL3
                                    543 	.globl _OBSSEL2
                                    544 	.globl _OBSSEL1
                                    545 	.globl _OBSSEL0
                                    546 	.globl _I2CIO
                                    547 	.globl _I2CWC
                                    548 	.globl _I2CADDR
                                    549 	.globl _I2CDATA
                                    550 	.globl _I2CSTAT
                                    551 	.globl _I2CCFG
                                    552 	.globl _OPAMPMC
                                    553 	.globl _MONMUX
                                    554 ;--------------------------------------------------------
                                    555 ; special function registers
                                    556 ;--------------------------------------------------------
                                    557 	.area RSEG    (ABS,DATA)
      000000                        558 	.org 0x0000
                           000080   559 _P0	=	0x0080
                           000081   560 _SP	=	0x0081
                           000082   561 _DPL0	=	0x0082
                           000083   562 _DPH0	=	0x0083
                           000084   563 _DPL1	=	0x0084
                           000085   564 _DPH1	=	0x0085
                           000087   565 _PCON	=	0x0087
                           000088   566 _TCON	=	0x0088
                           000090   567 _P1	=	0x0090
                           000092   568 _DPS	=	0x0092
                           000098   569 _S0CON	=	0x0098
                           00009A   570 _IEN2	=	0x009a
                           00009B   571 _S1CON	=	0x009b
                           0000A0   572 _P2	=	0x00a0
                           0000A8   573 _IEN0	=	0x00a8
                           0000A9   574 _IP0	=	0x00a9
                           0000B8   575 _IEN1	=	0x00b8
                           0000B9   576 _IP1	=	0x00b9
                           0000C0   577 _IRCON	=	0x00c0
                           0000D0   578 _PSW	=	0x00d0
                           0000E0   579 _ACC	=	0x00e0
                           0000E8   580 _IRCON2	=	0x00e8
                           0000F0   581 _B	=	0x00f0
                           0000B4   582 _ADCCON1	=	0x00b4
                           0000B5   583 _ADCCON2	=	0x00b5
                           0000B6   584 _ADCCON3	=	0x00b6
                           0000BA   585 _ADCL	=	0x00ba
                           0000BB   586 _ADCH	=	0x00bb
                           0000BC   587 _RNDL	=	0x00bc
                           0000BD   588 _RNDH	=	0x00bd
                           0000B1   589 _ENCDI	=	0x00b1
                           0000B2   590 _ENCDO	=	0x00b2
                           0000B3   591 _ENCCS	=	0x00b3
                           0000D1   592 _DMAIRQ	=	0x00d1
                           0000D2   593 _DMA1CFGL	=	0x00d2
                           0000D3   594 _DMA1CFGH	=	0x00d3
                           0000D4   595 _DMA0CFGL	=	0x00d4
                           0000D5   596 _DMA0CFGH	=	0x00d5
                           0000D6   597 _DMAARM	=	0x00d6
                           0000D7   598 _DMAREQ	=	0x00d7
                           000089   599 _P0IFG	=	0x0089
                           00008A   600 _P1IFG	=	0x008a
                           00008B   601 _P2IFG	=	0x008b
                           00008C   602 _PICTL	=	0x008c
                           0000AB   603 _P0IEN	=	0x00ab
                           00008D   604 _P1IEN	=	0x008d
                           0000AC   605 _P2IEN	=	0x00ac
                           00008F   606 _P0INP	=	0x008f
                           0000F1   607 _PERCFG	=	0x00f1
                           0000F2   608 _APCFG	=	0x00f2
                           0000F3   609 _P0SEL	=	0x00f3
                           0000F4   610 _P1SEL	=	0x00f4
                           0000F5   611 _P2SEL	=	0x00f5
                           0000F6   612 _P1INP	=	0x00f6
                           0000F7   613 _P2INP	=	0x00f7
                           0000FD   614 _P0DIR	=	0x00fd
                           0000FE   615 _P1DIR	=	0x00fe
                           0000FF   616 _P2DIR	=	0x00ff
                           0000AE   617 _PMUX	=	0x00ae
                           000093   618 _MPAGE	=	0x0093
                           000093   619 __XPAGE	=	0x0093
                           0000C7   620 _MEMCTR	=	0x00c7
                           00009F   621 _FMAP	=	0x009f
                           00009F   622 _PSBANK	=	0x009f
                           000091   623 _RFIRQF1	=	0x0091
                           0000D9   624 _RFD	=	0x00d9
                           0000E1   625 _RFST	=	0x00e1
                           0000E9   626 _RFIRQF0	=	0x00e9
                           0000BF   627 _RFERRF	=	0x00bf
                           000095   628 _ST0	=	0x0095
                           000096   629 _ST1	=	0x0096
                           000097   630 _ST2	=	0x0097
                           0000AD   631 _STLOAD	=	0x00ad
                           0000BE   632 _SLEEPCMD	=	0x00be
                           00009D   633 _SLEEPSTA	=	0x009d
                           0000C6   634 _CLKCONCMD	=	0x00c6
                           00009E   635 _CLKCONSTA	=	0x009e
                           0000DA   636 _T1CC0L	=	0x00da
                           0000DB   637 _T1CC0H	=	0x00db
                           0000DC   638 _T1CC1L	=	0x00dc
                           0000DD   639 _T1CC1H	=	0x00dd
                           0000DE   640 _T1CC2L	=	0x00de
                           0000DF   641 _T1CC2H	=	0x00df
                           0000E2   642 _T1CNTL	=	0x00e2
                           0000E3   643 _T1CNTH	=	0x00e3
                           0000E4   644 _T1CTL	=	0x00e4
                           0000E5   645 _T1CCTL0	=	0x00e5
                           0000E6   646 _T1CCTL1	=	0x00e6
                           0000E7   647 _T1CCTL2	=	0x00e7
                           0000AF   648 _T1STAT	=	0x00af
                           000094   649 _T2CTRL	=	0x0094
                           00009C   650 _T2EVTCFG	=	0x009c
                           0000A1   651 _T2IRQF	=	0x00a1
                           0000A2   652 _T2M0	=	0x00a2
                           0000A3   653 _T2M1	=	0x00a3
                           0000A4   654 _T2MOVF0	=	0x00a4
                           0000A5   655 _T2MOVF1	=	0x00a5
                           0000A6   656 _T2MOVF2	=	0x00a6
                           0000A7   657 _T2IRQM	=	0x00a7
                           0000C3   658 _T2MSEL	=	0x00c3
                           0000CA   659 _T3CNT	=	0x00ca
                           0000CB   660 _T3CTL	=	0x00cb
                           0000CC   661 _T3CCTL0	=	0x00cc
                           0000CD   662 _T3CC0	=	0x00cd
                           0000CE   663 _T3CCTL1	=	0x00ce
                           0000CF   664 _T3CC1	=	0x00cf
                           0000EA   665 _T4CNT	=	0x00ea
                           0000EB   666 _T4CTL	=	0x00eb
                           0000EC   667 _T4CCTL0	=	0x00ec
                           0000ED   668 _T4CC0	=	0x00ed
                           0000EE   669 _T4CCTL1	=	0x00ee
                           0000EF   670 _T4CC1	=	0x00ef
                           0000D8   671 _TIMIF	=	0x00d8
                           000086   672 _U0CSR	=	0x0086
                           0000C1   673 _U0DBUF	=	0x00c1
                           0000C2   674 _U0BAUD	=	0x00c2
                           0000C4   675 _U0UCR	=	0x00c4
                           0000C5   676 _U0GCR	=	0x00c5
                           0000F8   677 _U1CSR	=	0x00f8
                           0000F9   678 _U1DBUF	=	0x00f9
                           0000FA   679 _U1BAUD	=	0x00fa
                           0000FB   680 _U1UCR	=	0x00fb
                           0000FC   681 _U1GCR	=	0x00fc
                           0000C9   682 _WDCTL	=	0x00c9
                                    683 ;--------------------------------------------------------
                                    684 ; special function bits
                                    685 ;--------------------------------------------------------
                                    686 	.area RSEG    (ABS,DATA)
      000000                        687 	.org 0x0000
                           000087   688 _P0_7	=	0x0087
                           000086   689 _P0_6	=	0x0086
                           000085   690 _P0_5	=	0x0085
                           000084   691 _P0_4	=	0x0084
                           000083   692 _P0_3	=	0x0083
                           000082   693 _P0_2	=	0x0082
                           000081   694 _P0_1	=	0x0081
                           000080   695 _P0_0	=	0x0080
                           00008F   696 _URX1IF	=	0x008f
                           00008D   697 _ADCIF	=	0x008d
                           00008B   698 _URX0IF	=	0x008b
                           00008A   699 _IT1	=	0x008a
                           000089   700 _RFERRIF	=	0x0089
                           000088   701 _IT0	=	0x0088
                           000097   702 _P1_7	=	0x0097
                           000096   703 _P1_6	=	0x0096
                           000095   704 _P1_5	=	0x0095
                           000094   705 _P1_4	=	0x0094
                           000093   706 _P1_3	=	0x0093
                           000092   707 _P1_2	=	0x0092
                           000091   708 _P1_1	=	0x0091
                           000090   709 _P1_0	=	0x0090
                           000099   710 _ENCIF_1	=	0x0099
                           000098   711 _ENCIF_0	=	0x0098
                           0000A7   712 _P2_7	=	0x00a7
                           0000A6   713 _P2_6	=	0x00a6
                           0000A5   714 _P2_5	=	0x00a5
                           0000A4   715 _P2_4	=	0x00a4
                           0000A3   716 _P2_3	=	0x00a3
                           0000A2   717 _P2_2	=	0x00a2
                           0000A1   718 _P2_1	=	0x00a1
                           0000A0   719 _P2_0	=	0x00a0
                           0000AF   720 _EA	=	0x00af
                           0000AD   721 _STIE	=	0x00ad
                           0000AC   722 _ENCIE	=	0x00ac
                           0000AB   723 _URX1IE	=	0x00ab
                           0000AA   724 _URX0IE	=	0x00aa
                           0000A9   725 _ADCIE	=	0x00a9
                           0000A8   726 _RFERRIE	=	0x00a8
                           0000BD   727 _P0IE	=	0x00bd
                           0000BC   728 _T4IE	=	0x00bc
                           0000BB   729 _T3IE	=	0x00bb
                           0000BA   730 _T2IE	=	0x00ba
                           0000B9   731 _T1IE	=	0x00b9
                           0000B8   732 _DMAIE	=	0x00b8
                           0000C7   733 _STIF	=	0x00c7
                           0000C5   734 _P0IF	=	0x00c5
                           0000C4   735 _T4IF	=	0x00c4
                           0000C3   736 _T3IF	=	0x00c3
                           0000C2   737 _T2IF	=	0x00c2
                           0000C1   738 _T1IF	=	0x00c1
                           0000C0   739 _DMAIF	=	0x00c0
                           0000D7   740 _CY	=	0x00d7
                           0000D6   741 _AC	=	0x00d6
                           0000D5   742 _F0	=	0x00d5
                           0000D4   743 _RS1	=	0x00d4
                           0000D3   744 _RS0	=	0x00d3
                           0000D2   745 _OV	=	0x00d2
                           0000D1   746 _F1	=	0x00d1
                           0000D0   747 _P	=	0x00d0
                           0000E7   748 _ACC_7	=	0x00e7
                           0000E6   749 _ACC_6	=	0x00e6
                           0000E5   750 _ACC_5	=	0x00e5
                           0000E4   751 _ACC_4	=	0x00e4
                           0000E3   752 _ACC_3	=	0x00e3
                           0000E2   753 _ACC_2	=	0x00e2
                           0000E1   754 _ACC_1	=	0x00e1
                           0000E0   755 _ACC_0	=	0x00e0
                           0000EC   756 _WDTIF	=	0x00ec
                           0000EB   757 _P1IF	=	0x00eb
                           0000EA   758 _UTX1IF	=	0x00ea
                           0000E9   759 _UTX0IF	=	0x00e9
                           0000E8   760 _P2IF	=	0x00e8
                           0000F7   761 _B_7	=	0x00f7
                           0000F6   762 _B_6	=	0x00f6
                           0000F5   763 _B_5	=	0x00f5
                           0000F4   764 _B_4	=	0x00f4
                           0000F3   765 _B_3	=	0x00f3
                           0000F2   766 _B_2	=	0x00f2
                           0000F1   767 _B_1	=	0x00f1
                           0000F0   768 _B_0	=	0x00f0
                           0000DE   769 _OVFIM	=	0x00de
                           0000DD   770 _T4CH1IF	=	0x00dd
                           0000DC   771 _T4CH0IF	=	0x00dc
                           0000DB   772 _T4OVFIF	=	0x00db
                           0000DA   773 _T3CH1IF	=	0x00da
                           0000D9   774 _T3CH0IF	=	0x00d9
                           0000D8   775 _T3OVFIF	=	0x00d8
                           0000FF   776 _MODE	=	0x00ff
                           0000FE   777 _RE	=	0x00fe
                           0000FD   778 _SLAVE	=	0x00fd
                           0000FC   779 _FE	=	0x00fc
                           0000FB   780 _ERR	=	0x00fb
                           0000FA   781 _RX_BYTE	=	0x00fa
                           0000F9   782 _TX_BYTE	=	0x00f9
                           0000F8   783 _ACTIVE	=	0x00f8
                                    784 ;--------------------------------------------------------
                                    785 ; overlayable register banks
                                    786 ;--------------------------------------------------------
                                    787 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        788 	.ds 8
                                    789 ;--------------------------------------------------------
                                    790 ; internal ram data
                                    791 ;--------------------------------------------------------
                                    792 	.area DSEG    (DATA)
                                    793 ;--------------------------------------------------------
                                    794 ; overlayable items in internal ram 
                                    795 ;--------------------------------------------------------
                                    796 ;--------------------------------------------------------
                                    797 ; indirectly addressable internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area ISEG    (DATA)
                                    800 ;--------------------------------------------------------
                                    801 ; absolute internal ram data
                                    802 ;--------------------------------------------------------
                                    803 	.area IABS    (ABS,DATA)
                                    804 	.area IABS    (ABS,DATA)
                                    805 ;--------------------------------------------------------
                                    806 ; bit data
                                    807 ;--------------------------------------------------------
                                    808 	.area BSEG    (BIT)
                                    809 ;--------------------------------------------------------
                                    810 ; paged external ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area PSEG    (PAG,XDATA)
                                    813 ;--------------------------------------------------------
                                    814 ; external ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area XSEG    (XDATA)
                           0061A6   817 _MONMUX	=	0x61a6
                           0061A6   818 _OPAMPMC	=	0x61a6
                           006230   819 _I2CCFG	=	0x6230
                           006231   820 _I2CSTAT	=	0x6231
                           006232   821 _I2CDATA	=	0x6232
                           006233   822 _I2CADDR	=	0x6233
                           006234   823 _I2CWC	=	0x6234
                           006235   824 _I2CIO	=	0x6235
                           006243   825 _OBSSEL0	=	0x6243
                           006244   826 _OBSSEL1	=	0x6244
                           006245   827 _OBSSEL2	=	0x6245
                           006246   828 _OBSSEL3	=	0x6246
                           006247   829 _OBSSEL4	=	0x6247
                           006248   830 _OBSSEL5	=	0x6248
                           006249   831 _CHVER	=	0x6249
                           00624A   832 _CHIPID	=	0x624a
                           00624B   833 _TESTREG0	=	0x624b
                           006260   834 _DBGDATA	=	0x6260
                           006262   835 _SRCRC	=	0x6262
                           006264   836 _BATTMON	=	0x6264
                           006265   837 _IVCTRL	=	0x6265
                           006270   838 _FCTL	=	0x6270
                           006271   839 _FADDRL	=	0x6271
                           006272   840 _FADDRH	=	0x6272
                           006273   841 _FWDATA	=	0x6273
                           006276   842 _CHIPINFO0	=	0x6276
                           006277   843 _CHIPINFO1	=	0x6277
                           006281   844 _IRCTL	=	0x6281
                           006290   845 _CLD	=	0x6290
                           0062A0   846 _XX_T1CCTL0	=	0x62a0
                           0062A1   847 _XX_T1CCTL1	=	0x62a1
                           0062A2   848 _XX_T1CCTL2	=	0x62a2
                           0062A3   849 _T1CCTL3	=	0x62a3
                           0062A4   850 _T1CCTL4	=	0x62a4
                           0062A6   851 _XX_T1CC0L	=	0x62a6
                           0062A7   852 _XX_T1CC0H	=	0x62a7
                           0062A8   853 _XX_T1CC1L	=	0x62a8
                           0062A9   854 _XX_T1CC1H	=	0x62a9
                           0062AA   855 _XX_T1CC2L	=	0x62aa
                           0062AB   856 _XX_T1CC2H	=	0x62ab
                           0062AC   857 _T1CC3L	=	0x62ac
                           0062AD   858 _T1CC3H	=	0x62ad
                           0062AE   859 _T1CC4L	=	0x62ae
                           0062AF   860 _T1CC4H	=	0x62af
                           0062B0   861 _STCC	=	0x62b0
                           0062B1   862 _STCS	=	0x62b1
                           0062B2   863 _STCV0	=	0x62b2
                           0062B3   864 _STCV1	=	0x62b3
                           0062B4   865 _STCV2	=	0x62b4
                           0062C0   866 _OPAMPC	=	0x62c0
                           0062C1   867 _OPAMPS	=	0x62c1
                           0062D0   868 _CMPCTL	=	0x62d0
                           006000   869 _RFCORE_RAM	=	0x6000
                           006000   870 _RXFIFO	=	0x6000
                           006080   871 _TXFIFO	=	0x6080
                           006100   872 _SRC_ADDR_TABLE	=	0x6100
                           006160   873 _SRCRESMASK0	=	0x6160
                           006161   874 _SRCRESMASK1	=	0x6161
                           006162   875 _SRCRESMASK2	=	0x6162
                           006163   876 _SRCRESINDEX	=	0x6163
                           006164   877 _SRCEXTPENDEN0	=	0x6164
                           006165   878 _SRCEXTPENDEN1	=	0x6165
                           006166   879 _SRCEXTPENDEN2	=	0x6166
                           006167   880 _SRCSHORTPENDEN0	=	0x6167
                           006168   881 _SRCSHORTPENDEN1	=	0x6168
                           006169   882 _SRCSHORTPENDEN2	=	0x6169
                           00616A   883 _EXT_ADDR0	=	0x616a
                           00616B   884 _EXT_ADDR1	=	0x616b
                           00616C   885 _EXT_ADDR2	=	0x616c
                           00616D   886 _EXT_ADDR3	=	0x616d
                           00616E   887 _EXT_ADDR4	=	0x616e
                           00616F   888 _EXT_ADDR5	=	0x616f
                           006170   889 _EXT_ADDR6	=	0x6170
                           006171   890 _EXT_ADDR7	=	0x6171
                           006172   891 _PAN_ID0	=	0x6172
                           006173   892 _PAN_ID1	=	0x6173
                           006174   893 _SHORT_ADDR0	=	0x6174
                           006175   894 _SHORT_ADDR1	=	0x6175
                           006180   895 _FRMFILT0	=	0x6180
                           006181   896 _FRMFILT1	=	0x6181
                           006182   897 _SRCMATCH	=	0x6182
                           006183   898 _SRCSHORTEN0	=	0x6183
                           006184   899 _SRCSHORTEN1	=	0x6184
                           006185   900 _SRCSHORTEN2	=	0x6185
                           006186   901 _SRCEXTEN0	=	0x6186
                           006187   902 _SRCEXTEN1	=	0x6187
                           006188   903 _SRCEXTEN2	=	0x6188
                           006189   904 _FRMCTRL0	=	0x6189
                           00618A   905 _FRMCTRL1	=	0x618a
                           00618B   906 _RXENABLE	=	0x618b
                           00618C   907 _RXMASKSET	=	0x618c
                           00618D   908 _RXMASKCLR	=	0x618d
                           00618E   909 _FREQTUNE	=	0x618e
                           00618F   910 _FREQCTRL	=	0x618f
                           006190   911 _TXPOWER	=	0x6190
                           006191   912 _TXCTRL	=	0x6191
                           006192   913 _FSMSTAT0	=	0x6192
                           006193   914 _FSMSTAT1	=	0x6193
                           006194   915 _FIFOPCTRL	=	0x6194
                           006195   916 _FSMCTRL	=	0x6195
                           006196   917 _CCACTRL0	=	0x6196
                           006197   918 _CCACTRL1	=	0x6197
                           006198   919 _RSSI	=	0x6198
                           006199   920 _RSSISTAT	=	0x6199
                           00619A   921 _RXFIRST	=	0x619a
                           00619B   922 _RXFIFOCNT	=	0x619b
                           00619C   923 _TXFIFOCNT	=	0x619c
                           00619D   924 _RXFIRST_PTR	=	0x619d
                           00619E   925 _RXLAST_PTR	=	0x619e
                           00619F   926 _RXP1_PTR	=	0x619f
                           0061A1   927 _TXFIRST_PTR	=	0x61a1
                           0061A2   928 _TXLAST_PTR	=	0x61a2
                           0061A3   929 _RFIRQM0	=	0x61a3
                           0061A4   930 _RFIRQM1	=	0x61a4
                           0061A5   931 _RFERRM	=	0x61a5
                           0061A7   932 _RFRND	=	0x61a7
                           0061A8   933 _MDMCTRL0	=	0x61a8
                           0061A9   934 _MDMCTRL1	=	0x61a9
                           0061AA   935 _FREQEST	=	0x61aa
                           0061AB   936 _RXCTRL	=	0x61ab
                           0061AC   937 _FSCTRL	=	0x61ac
                           0061AD   938 _FSCAL0	=	0x61ad
                           0061AE   939 _FSCAL1	=	0x61ae
                           0061AF   940 _FSCAL2	=	0x61af
                           0061B0   941 _FSCAL3	=	0x61b0
                           0061B1   942 _AGCCTRL0	=	0x61b1
                           0061B2   943 _AGCCTRL1	=	0x61b2
                           0061B3   944 _AGCCTRL2	=	0x61b3
                           0061B4   945 _AGCCTRL3	=	0x61b4
                           0061B5   946 _ADCTEST0	=	0x61b5
                           0061B6   947 _ADCTEST1	=	0x61b6
                           0061B7   948 _ADCTEST2	=	0x61b7
                           0061B8   949 _MDMTEST0	=	0x61b8
                           0061B9   950 _MDMTEST1	=	0x61b9
                           0061BA   951 _DACTEST0	=	0x61ba
                           0061BB   952 _DACTEST1	=	0x61bb
                           0061BC   953 _DACTEST2	=	0x61bc
                           0061BD   954 _ATEST	=	0x61bd
                           0061BE   955 _PTEST0	=	0x61be
                           0061BF   956 _PTEST1	=	0x61bf
                           0061FA   957 _TXFILTCFG	=	0x61fa
                           0061EB   958 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   959 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   960 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   961 _CSPPROG0	=	0x61c0
                           0061C1   962 _CSPPROG1	=	0x61c1
                           0061C2   963 _CSPPROG2	=	0x61c2
                           0061C3   964 _CSPPROG3	=	0x61c3
                           0061C4   965 _CSPPROG4	=	0x61c4
                           0061C5   966 _CSPPROG5	=	0x61c5
                           0061C6   967 _CSPPROG6	=	0x61c6
                           0061C7   968 _CSPPROG7	=	0x61c7
                           0061C8   969 _CSPPROG8	=	0x61c8
                           0061C9   970 _CSPPROG9	=	0x61c9
                           0061CA   971 _CSPPROG10	=	0x61ca
                           0061CB   972 _CSPPROG11	=	0x61cb
                           0061CC   973 _CSPPROG12	=	0x61cc
                           0061CD   974 _CSPPROG13	=	0x61cd
                           0061CE   975 _CSPPROG14	=	0x61ce
                           0061CF   976 _CSPPROG15	=	0x61cf
                           0061D0   977 _CSPPROG16	=	0x61d0
                           0061D1   978 _CSPPROG17	=	0x61d1
                           0061D2   979 _CSPPROG18	=	0x61d2
                           0061D3   980 _CSPPROG19	=	0x61d3
                           0061D4   981 _CSPPROG20	=	0x61d4
                           0061D5   982 _CSPPROG21	=	0x61d5
                           0061D6   983 _CSPPROG22	=	0x61d6
                           0061D7   984 _CSPPROG23	=	0x61d7
                           0061E0   985 _CSPCTRL	=	0x61e0
                           0061E1   986 _CSPSTAT	=	0x61e1
                           0061E2   987 _CSPX	=	0x61e2
                           0061E3   988 _CSPY	=	0x61e3
                           0061E4   989 _CSPZ	=	0x61e4
                           0061E5   990 _CSPT	=	0x61e5
                           006200   991 _USBADDR	=	0x6200
                           006201   992 _USBPOW	=	0x6201
                           006202   993 _USBIIF	=	0x6202
                           006204   994 _USBOIF	=	0x6204
                           006206   995 _USBCIF	=	0x6206
                           006207   996 _USBIIE	=	0x6207
                           006209   997 _USBOIE	=	0x6209
                           00620B   998 _USBCIE	=	0x620b
                           00620C   999 _USBFRML	=	0x620c
                           00620D  1000 _USBFRMH	=	0x620d
                           00620E  1001 _USBINDEX	=	0x620e
                           00620F  1002 _USBCTRL	=	0x620f
                           006210  1003 _USBMAXI	=	0x6210
                           006211  1004 _USBCS0	=	0x6211
                           006211  1005 _USBCSIL	=	0x6211
                           006212  1006 _USBCSIH	=	0x6212
                           006213  1007 _USBMAXO	=	0x6213
                           006214  1008 _USBCSOL	=	0x6214
                           006215  1009 _USBCSOH	=	0x6215
                           006216  1010 _USBCNT0	=	0x6216
                           006216  1011 _USBCNTL	=	0x6216
                           006217  1012 _USBCNTH	=	0x6217
                           006220  1013 _USBF0	=	0x6220
                           006222  1014 _USBF1	=	0x6222
                           006224  1015 _USBF2	=	0x6224
                           006226  1016 _USBF3	=	0x6226
                           006228  1017 _USBF4	=	0x6228
                           00622A  1018 _USBF5	=	0x622a
                           007080  1019 _X_P0	=	0x7080
                           007086  1020 _X_U0CSR	=	0x7086
                           007089  1021 _X_P0IFG	=	0x7089
                           00708A  1022 _X_P1IFG	=	0x708a
                           00708B  1023 _X_P2IFG	=	0x708b
                           00708C  1024 _X_PICTL	=	0x708c
                           00708D  1025 _X_P1IEN	=	0x708d
                           00708F  1026 _X_P0INP	=	0x708f
                           007090  1027 _X_P1	=	0x7090
                           007091  1028 _X_RFIRQF1	=	0x7091
                           007093  1029 _X_MPAGE	=	0x7093
                           007093  1030 _X__XPAGE	=	0x7093
                           007094  1031 _X_T2CTRL	=	0x7094
                           007095  1032 _X_ST0	=	0x7095
                           007096  1033 _X_ST1	=	0x7096
                           007097  1034 _X_ST2	=	0x7097
                           00709C  1035 _X_T2EVTCFG	=	0x709c
                           00709D  1036 _X_SLEEPSTA	=	0x709d
                           00709E  1037 _X_CLKCONSTA	=	0x709e
                           00709F  1038 _X_FMAP	=	0x709f
                           00709F  1039 _X_PSBANK	=	0x709f
                           0070A0  1040 _X_P2	=	0x70a0
                           0070A1  1041 _X_T2IRQF	=	0x70a1
                           0070A2  1042 _X_T2M0	=	0x70a2
                           0070A3  1043 _X_T2M1	=	0x70a3
                           0070A4  1044 _X_T2MOVF0	=	0x70a4
                           0070A5  1045 _X_T2MOVF1	=	0x70a5
                           0070A6  1046 _X_T2MOVF2	=	0x70a6
                           0070A7  1047 _X_T2IRQM	=	0x70a7
                           0070AB  1048 _X_P0IEN	=	0x70ab
                           0070AC  1049 _X_P2IEN	=	0x70ac
                           0070AD  1050 _X_STLOAD	=	0x70ad
                           0070AE  1051 _X_PMUX	=	0x70ae
                           0070AF  1052 _X_T1STAT	=	0x70af
                           0070B1  1053 _X_ENCDI	=	0x70b1
                           0070B2  1054 _X_ENCDO	=	0x70b2
                           0070B3  1055 _X_ENCCS	=	0x70b3
                           0070B4  1056 _X_ADCCON1	=	0x70b4
                           0070B5  1057 _X_ADCCON2	=	0x70b5
                           0070B6  1058 _X_ADCCON3	=	0x70b6
                           0070BA  1059 _X_ADCL	=	0x70ba
                           0070BB  1060 _X_ADCH	=	0x70bb
                           0070BC  1061 _X_RNDL	=	0x70bc
                           0070BD  1062 _X_RNDH	=	0x70bd
                           0070BE  1063 _X_SLEEPCMD	=	0x70be
                           0070BF  1064 _X_RFERRF	=	0x70bf
                           0070C1  1065 _X_U0DBUF	=	0x70c1
                           0070C2  1066 _X_U0BAUD	=	0x70c2
                           0070C3  1067 _X_T2MSEL	=	0x70c3
                           0070C4  1068 _X_U0UCR	=	0x70c4
                           0070C5  1069 _X_U0GCR	=	0x70c5
                           0070C6  1070 _X_CLKCONCMD	=	0x70c6
                           0070C7  1071 _X_MEMCTR	=	0x70c7
                           0070C9  1072 _X_WDCTL	=	0x70c9
                           0070CA  1073 _X_T3CNT	=	0x70ca
                           0070CB  1074 _X_T3CTL	=	0x70cb
                           0070CC  1075 _X_T3CCTL0	=	0x70cc
                           0070CD  1076 _X_T3CC0	=	0x70cd
                           0070CE  1077 _X_T3CCTL1	=	0x70ce
                           0070CF  1078 _X_T3CC1	=	0x70cf
                           0070D1  1079 _X_DMAIRQ	=	0x70d1
                           0070D2  1080 _X_DMA1CFGL	=	0x70d2
                           0070D3  1081 _X_DMA1CFGH	=	0x70d3
                           0070D4  1082 _X_DMA0CFGL	=	0x70d4
                           0070D5  1083 _X_DMA0CFGH	=	0x70d5
                           0070D6  1084 _X_DMAARM	=	0x70d6
                           0070D7  1085 _X_DMAREQ	=	0x70d7
                           0070D8  1086 _X_TIMIF	=	0x70d8
                           0070D9  1087 _X_RFD	=	0x70d9
                           0070DA  1088 _X_T1CC0L	=	0x70da
                           0070DB  1089 _X_T1CC0H	=	0x70db
                           0070DC  1090 _X_T1CC1L	=	0x70dc
                           0070DD  1091 _X_T1CC1H	=	0x70dd
                           0070DE  1092 _X_T1CC2L	=	0x70de
                           0070DF  1093 _X_T1CC2H	=	0x70df
                           0070E1  1094 _X_RFST	=	0x70e1
                           0070E2  1095 _X_T1CNTL	=	0x70e2
                           0070E3  1096 _X_T1CNTH	=	0x70e3
                           0070E4  1097 _X_T1CTL	=	0x70e4
                           0070E5  1098 _X_T1CCTL0	=	0x70e5
                           0070E6  1099 _X_T1CCTL1	=	0x70e6
                           0070E7  1100 _X_T1CCTL2	=	0x70e7
                           0070E9  1101 _X_RFIRQF0	=	0x70e9
                           0070EA  1102 _X_T4CNT	=	0x70ea
                           0070EB  1103 _X_T4CTL	=	0x70eb
                           0070EC  1104 _X_T4CCTL0	=	0x70ec
                           0070ED  1105 _X_T4CC0	=	0x70ed
                           0070EE  1106 _X_T4CCTL1	=	0x70ee
                           0070EF  1107 _X_T4CC1	=	0x70ef
                           0070F1  1108 _X_PERCFG	=	0x70f1
                           0070F2  1109 _X_APCFG	=	0x70f2
                           0070F3  1110 _X_P0SEL	=	0x70f3
                           0070F4  1111 _X_P1SEL	=	0x70f4
                           0070F5  1112 _X_P2SEL	=	0x70f5
                           0070F6  1113 _X_P1INP	=	0x70f6
                           0070F7  1114 _X_P2INP	=	0x70f7
                           0070F8  1115 _X_U1CSR	=	0x70f8
                           0070F9  1116 _X_U1DBUF	=	0x70f9
                           0070FA  1117 _X_U1BAUD	=	0x70fa
                           0070FB  1118 _X_U1UCR	=	0x70fb
                           0070FC  1119 _X_U1GCR	=	0x70fc
                           0070FD  1120 _X_P0DIR	=	0x70fd
                           0070FE  1121 _X_P1DIR	=	0x70fe
                           0070FF  1122 _X_P2DIR	=	0x70ff
                           007800  1123 _X_INFOPAGE	=	0x7800
                           00780C  1124 _X_IEEE_ADDR	=	0x780c
                                   1125 ;--------------------------------------------------------
                                   1126 ; absolute external ram data
                                   1127 ;--------------------------------------------------------
                                   1128 	.area XABS    (ABS,XDATA)
                                   1129 ;--------------------------------------------------------
                                   1130 ; external initialized ram data
                                   1131 ;--------------------------------------------------------
                                   1132 	.area XISEG   (XDATA)
                                   1133 	.area HOME    (CODE)
                                   1134 	.area GSINIT0 (CODE)
                                   1135 	.area GSINIT1 (CODE)
                                   1136 	.area GSINIT2 (CODE)
                                   1137 	.area GSINIT3 (CODE)
                                   1138 	.area GSINIT4 (CODE)
                                   1139 	.area GSINIT5 (CODE)
                                   1140 	.area GSINIT  (CODE)
                                   1141 	.area GSFINAL (CODE)
                                   1142 	.area CSEG    (CODE)
                                   1143 ;--------------------------------------------------------
                                   1144 ; global & static initialisations
                                   1145 ;--------------------------------------------------------
                                   1146 	.area HOME    (CODE)
                                   1147 	.area GSINIT  (CODE)
                                   1148 	.area GSFINAL (CODE)
                                   1149 	.area GSINIT  (CODE)
                                   1150 ;--------------------------------------------------------
                                   1151 ; Home
                                   1152 ;--------------------------------------------------------
                                   1153 	.area HOME    (CODE)
                                   1154 	.area HOME    (CODE)
                                   1155 ;--------------------------------------------------------
                                   1156 ; code
                                   1157 ;--------------------------------------------------------
                                   1158 	.area BANK1   (CODE)
                                   1159 ;------------------------------------------------------------
                                   1160 ;Allocation info for local variables in function 'send_one_packet'
                                   1161 ;------------------------------------------------------------
                                   1162 ;ptr                       Allocated to stack - sp -16
                                   1163 ;sent                      Allocated to registers r5 r6 r7 
                                   1164 ;ret                       Allocated to registers r3 r4 
                                   1165 ;last_sent_ok              Allocated to stack - sp -5
                                   1166 ;is_broadcast              Allocated to registers r4 r3 
                                   1167 ;dsn                       Allocated to stack - sp -3
                                   1168 ;wt                        Allocated to registers r2 r7 
                                   1169 ;len                       Allocated to registers r6 r7 
                                   1170 ;ackbuf                    Allocated to stack - sp -2
                                   1171 ;sloc0                     Allocated to stack - sp -10
                                   1172 ;sloc1                     Allocated to stack - sp -7
                                   1173 ;------------------------------------------------------------
                                   1174 ;	../../core/net/mac/nullrdc.c:113: send_one_packet(mac_callback_t sent, void *ptr)
                                   1175 ;	-----------------------------------------
                                   1176 ;	 function send_one_packet
                                   1177 ;	-----------------------------------------
      000000                       1178 _send_one_packet:
                           000007  1179 	ar7 = 0x07
                           000006  1180 	ar6 = 0x06
                           000005  1181 	ar5 = 0x05
                           000004  1182 	ar4 = 0x04
                           000003  1183 	ar3 = 0x03
                           000002  1184 	ar2 = 0x02
                           000001  1185 	ar1 = 0x01
                           000000  1186 	ar0 = 0x00
      000000 E5 81            [12] 1187 	mov	a,sp
      000002 24 0B            [12] 1188 	add	a,#0x0B
      000004 F5 81            [12] 1189 	mov	sp,a
      000006 AD 82            [24] 1190 	mov	r5,dpl
      000008 AE 83            [24] 1191 	mov	r6,dph
      00000A AF F0            [24] 1192 	mov	r7,b
                                   1193 ;	../../core/net/mac/nullrdc.c:116: int last_sent_ok = 0;
      00000C E5 81            [12] 1194 	mov	a,sp
      00000E 24 FB            [12] 1195 	add	a,#0xfb
      000010 F8               [12] 1196 	mov	r0,a
      000011 E4               [12] 1197 	clr	a
      000012 F6               [12] 1198 	mov	@r0,a
      000013 08               [12] 1199 	inc	r0
      000014 F6               [12] 1200 	mov	@r0,a
                                   1201 ;	../../core/net/mac/nullrdc.c:118: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &linkaddr_node_addr);
      000015 C0 07            [24] 1202 	push	ar7
      000017 C0 06            [24] 1203 	push	ar6
      000019 C0 05            [24] 1204 	push	ar5
      00001B 74r00            [12] 1205 	mov	a,#_linkaddr_node_addr
      00001D C0 E0            [24] 1206 	push	acc
      00001F 74s00            [12] 1207 	mov	a,#(_linkaddr_node_addr >> 8)
      000021 C0 E0            [24] 1208 	push	acc
      000023 E4               [12] 1209 	clr	a
      000024 C0 E0            [24] 1210 	push	acc
      000026 75 82 0F         [24] 1211 	mov	dpl,#0x0F
      000029 78r00            [12] 1212 	mov	r0,#_packetbuf_set_addr
      00002B 79s00            [12] 1213 	mov	r1,#(_packetbuf_set_addr >> 8)
      00002D 7As00            [12] 1214 	mov	r2,#(_packetbuf_set_addr >> 16)
      00002F 12r00r00         [24] 1215 	lcall	__sdcc_banked_call
      000032 15 81            [12] 1216 	dec	sp
      000034 15 81            [12] 1217 	dec	sp
      000036 15 81            [12] 1218 	dec	sp
                                   1219 ;	../../core/net/mac/nullrdc.c:120: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000038 74 01            [12] 1220 	mov	a,#0x01
      00003A C0 E0            [24] 1221 	push	acc
      00003C E4               [12] 1222 	clr	a
      00003D C0 E0            [24] 1223 	push	acc
      00003F 75 82 0B         [24] 1224 	mov	dpl,#0x0B
      000042 78r00            [12] 1225 	mov	r0,#_packetbuf_set_attr
      000044 79s00            [12] 1226 	mov	r1,#(_packetbuf_set_attr >> 8)
      000046 7As00            [12] 1227 	mov	r2,#(_packetbuf_set_attr >> 16)
      000048 12r00r00         [24] 1228 	lcall	__sdcc_banked_call
      00004B 15 81            [12] 1229 	dec	sp
      00004D 15 81            [12] 1230 	dec	sp
                                   1231 ;	../../core/net/mac/nullrdc.c:123: if(NETSTACK_FRAMER.create_and_secure() < 0) {
      00004F 90r00r06         [24] 1232 	mov	dptr,#(_framer_802154 + 0x0006)
      000052 E4               [12] 1233 	clr	a
      000053 93               [24] 1234 	movc	a,@a+dptr
      000054 FA               [12] 1235 	mov	r2,a
      000055 A3               [24] 1236 	inc	dptr
      000056 E4               [12] 1237 	clr	a
      000057 93               [24] 1238 	movc	a,@a+dptr
      000058 FB               [12] 1239 	mov	r3,a
      000059 A3               [24] 1240 	inc	dptr
      00005A E4               [12] 1241 	clr	a
      00005B 93               [24] 1242 	movc	a,@a+dptr
      00005C FC               [12] 1243 	mov	r4,a
      00005D C0 04            [24] 1244 	push	ar4
      00005F C0 02            [24] 1245 	push	ar2
      000061 C0 03            [24] 1246 	push	ar3
      000063 C0 04            [24] 1247 	push	ar4
      000065 D0 02            [24] 1248 	pop	ar2
      000067 D0 01            [24] 1249 	pop	ar1
      000069 D0 00            [24] 1250 	pop	ar0
      00006B 12r00r00         [24] 1251 	lcall	__sdcc_banked_call
      00006E AA 82            [24] 1252 	mov	r2,dpl
      000070 AB 83            [24] 1253 	mov	r3,dph
      000072 D0 04            [24] 1254 	pop	ar4
      000074 D0 05            [24] 1255 	pop	ar5
      000076 D0 06            [24] 1256 	pop	ar6
      000078 D0 07            [24] 1257 	pop	ar7
      00007A EB               [12] 1258 	mov	a,r3
      00007B 30 E7 07         [24] 1259 	jnb	acc.7,00132$
                                   1260 ;	../../core/net/mac/nullrdc.c:126: ret = MAC_TX_ERR_FATAL;
      00007E 7B 05            [12] 1261 	mov	r3,#0x05
      000080 7C 00            [12] 1262 	mov	r4,#0x00
      000082 02r05r03         [24] 1263 	ljmp	00133$
      000085                       1264 00132$:
                                   1265 ;	../../core/net/mac/nullrdc.c:131: dsn = ((uint8_t *)packetbuf_hdrptr())[2] & 0xff;
      000085 C0 05            [24] 1266 	push	ar5
      000087 C0 06            [24] 1267 	push	ar6
      000089 C0 07            [24] 1268 	push	ar7
      00008B C0 05            [24] 1269 	push	ar5
      00008D 78r00            [12] 1270 	mov	r0,#_packetbuf_hdrptr
      00008F 79s00            [12] 1271 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000091 7As00            [12] 1272 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000093 12r00r00         [24] 1273 	lcall	__sdcc_banked_call
      000096 AA 82            [24] 1274 	mov	r2,dpl
      000098 AE 83            [24] 1275 	mov	r6,dph
      00009A AF F0            [24] 1276 	mov	r7,b
      00009C D0 05            [24] 1277 	pop	ar5
      00009E 74 02            [12] 1278 	mov	a,#0x02
      0000A0 2A               [12] 1279 	add	a,r2
      0000A1 FA               [12] 1280 	mov	r2,a
      0000A2 E4               [12] 1281 	clr	a
      0000A3 3E               [12] 1282 	addc	a,r6
      0000A4 FE               [12] 1283 	mov	r6,a
      0000A5 8A 82            [24] 1284 	mov	dpl,r2
      0000A7 8E 83            [24] 1285 	mov	dph,r6
      0000A9 8F F0            [24] 1286 	mov	b,r7
      0000AB E5 81            [12] 1287 	mov	a,sp
      0000AD 24 FA            [12] 1288 	add	a,#0xfa
      0000AF F8               [12] 1289 	mov	r0,a
      0000B0 12r00r00         [24] 1290 	lcall	__gptrget
      0000B3 F6               [12] 1291 	mov	@r0,a
                                   1292 ;	../../core/net/mac/nullrdc.c:133: NETSTACK_RADIO.prepare(packetbuf_hdrptr(), packetbuf_totlen());
      0000B4 90r00r03         [24] 1293 	mov	dptr,#(_cc2530_rf_driver + 0x0003)
      0000B7 E4               [12] 1294 	clr	a
      0000B8 93               [24] 1295 	movc	a,@a+dptr
      0000B9 FC               [12] 1296 	mov	r4,a
      0000BA A3               [24] 1297 	inc	dptr
      0000BB E4               [12] 1298 	clr	a
      0000BC 93               [24] 1299 	movc	a,@a+dptr
      0000BD FB               [12] 1300 	mov	r3,a
      0000BE A3               [24] 1301 	inc	dptr
      0000BF E4               [12] 1302 	clr	a
      0000C0 93               [24] 1303 	movc	a,@a+dptr
      0000C1 FA               [12] 1304 	mov	r2,a
      0000C2 C0 07            [24] 1305 	push	ar7
      0000C4 C0 06            [24] 1306 	push	ar6
      0000C6 C0 05            [24] 1307 	push	ar5
      0000C8 C0 04            [24] 1308 	push	ar4
      0000CA C0 03            [24] 1309 	push	ar3
      0000CC C0 02            [24] 1310 	push	ar2
      0000CE 78r00            [12] 1311 	mov	r0,#_packetbuf_totlen
      0000D0 79s00            [12] 1312 	mov	r1,#(_packetbuf_totlen >> 8)
      0000D2 7As00            [12] 1313 	mov	r2,#(_packetbuf_totlen >> 16)
      0000D4 12r00r00         [24] 1314 	lcall	__sdcc_banked_call
      0000D7 C8               [12] 1315 	xch	a,r0
      0000D8 E5 81            [12] 1316 	mov	a,sp
      0000DA 24 F0            [12] 1317 	add	a,#0xf0
      0000DC C8               [12] 1318 	xch	a,r0
      0000DD A6 82            [24] 1319 	mov	@r0,dpl
      0000DF 08               [12] 1320 	inc	r0
      0000E0 A6 83            [24] 1321 	mov	@r0,dph
      0000E2 D0 02            [24] 1322 	pop	ar2
      0000E4 D0 03            [24] 1323 	pop	ar3
      0000E6 D0 04            [24] 1324 	pop	ar4
      0000E8 D0 05            [24] 1325 	pop	ar5
      0000EA D0 06            [24] 1326 	pop	ar6
      0000EC D0 07            [24] 1327 	pop	ar7
      0000EE C0 04            [24] 1328 	push	ar4
      0000F0 C0 03            [24] 1329 	push	ar3
      0000F2 C0 02            [24] 1330 	push	ar2
      0000F4 78r00            [12] 1331 	mov	r0,#_packetbuf_hdrptr
      0000F6 79s00            [12] 1332 	mov	r1,#(_packetbuf_hdrptr >> 8)
      0000F8 7As00            [12] 1333 	mov	r2,#(_packetbuf_hdrptr >> 16)
      0000FA 12r00r00         [24] 1334 	lcall	__sdcc_banked_call
      0000FD AD 82            [24] 1335 	mov	r5,dpl
      0000FF AE 83            [24] 1336 	mov	r6,dph
      000101 AF F0            [24] 1337 	mov	r7,b
      000103 D0 02            [24] 1338 	pop	ar2
      000105 D0 03            [24] 1339 	pop	ar3
      000107 D0 04            [24] 1340 	pop	ar4
      000109 C0 07            [24] 1341 	push	ar7
      00010B C0 06            [24] 1342 	push	ar6
      00010D C0 05            [24] 1343 	push	ar5
      00010F C0 04            [24] 1344 	push	ar4
      000111 C0 03            [24] 1345 	push	ar3
      000113 C0 02            [24] 1346 	push	ar2
      000115 E5 81            [12] 1347 	mov	a,sp
      000117 24 F0            [12] 1348 	add	a,#0xf0
      000119 F8               [12] 1349 	mov	r0,a
      00011A E6               [12] 1350 	mov	a,@r0
      00011B C0 E0            [24] 1351 	push	acc
      00011D 08               [12] 1352 	inc	r0
      00011E E6               [12] 1353 	mov	a,@r0
      00011F C0 E0            [24] 1354 	push	acc
      000121 C0 04            [24] 1355 	push	ar4
      000123 C0 03            [24] 1356 	push	ar3
      000125 C0 02            [24] 1357 	push	ar2
      000127 8D 82            [24] 1358 	mov	dpl,r5
      000129 8E 83            [24] 1359 	mov	dph,r6
      00012B 8F F0            [24] 1360 	mov	b,r7
      00012D D0 02            [24] 1361 	pop	ar2
      00012F D0 01            [24] 1362 	pop	ar1
      000131 D0 00            [24] 1363 	pop	ar0
      000133 12r00r00         [24] 1364 	lcall	__sdcc_banked_call
      000136 15 81            [12] 1365 	dec	sp
      000138 15 81            [12] 1366 	dec	sp
      00013A D0 02            [24] 1367 	pop	ar2
      00013C D0 03            [24] 1368 	pop	ar3
      00013E D0 04            [24] 1369 	pop	ar4
      000140 D0 05            [24] 1370 	pop	ar5
      000142 D0 06            [24] 1371 	pop	ar6
      000144 D0 07            [24] 1372 	pop	ar7
                                   1373 ;	../../core/net/mac/nullrdc.c:135: is_broadcast = packetbuf_holds_broadcast();
      000146 C0 05            [24] 1374 	push	ar5
      000148 78r00            [12] 1375 	mov	r0,#_packetbuf_holds_broadcast
      00014A 79s00            [12] 1376 	mov	r1,#(_packetbuf_holds_broadcast >> 8)
      00014C 7As00            [12] 1377 	mov	r2,#(_packetbuf_holds_broadcast >> 16)
      00014E 12r00r00         [24] 1378 	lcall	__sdcc_banked_call
      000151 AE 82            [24] 1379 	mov	r6,dpl
      000153 AF 83            [24] 1380 	mov	r7,dph
      000155 D0 05            [24] 1381 	pop	ar5
      000157 8E 04            [24] 1382 	mov	ar4,r6
      000159 8F 03            [24] 1383 	mov	ar3,r7
                                   1384 ;	../../core/net/mac/nullrdc.c:137: if(NETSTACK_RADIO.receiving_packet() ||
      00015B 90r00r12         [24] 1385 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      00015E E4               [12] 1386 	clr	a
      00015F 93               [24] 1387 	movc	a,@a+dptr
      000160 FD               [12] 1388 	mov	r5,a
      000161 A3               [24] 1389 	inc	dptr
      000162 E4               [12] 1390 	clr	a
      000163 93               [24] 1391 	movc	a,@a+dptr
      000164 FE               [12] 1392 	mov	r6,a
      000165 A3               [24] 1393 	inc	dptr
      000166 E4               [12] 1394 	clr	a
      000167 93               [24] 1395 	movc	a,@a+dptr
      000168 FF               [12] 1396 	mov	r7,a
      000169 C0 07            [24] 1397 	push	ar7
      00016B C0 04            [24] 1398 	push	ar4
      00016D C0 03            [24] 1399 	push	ar3
      00016F C0 05            [24] 1400 	push	ar5
      000171 C0 06            [24] 1401 	push	ar6
      000173 C0 07            [24] 1402 	push	ar7
      000175 D0 02            [24] 1403 	pop	ar2
      000177 D0 01            [24] 1404 	pop	ar1
      000179 D0 00            [24] 1405 	pop	ar0
      00017B 12r00r00         [24] 1406 	lcall	__sdcc_banked_call
      00017E AD 82            [24] 1407 	mov	r5,dpl
      000180 AE 83            [24] 1408 	mov	r6,dph
      000182 D0 03            [24] 1409 	pop	ar3
      000184 D0 04            [24] 1410 	pop	ar4
      000186 D0 07            [24] 1411 	pop	ar7
      000188 ED               [12] 1412 	mov	a,r5
      000189 4E               [12] 1413 	orl	a,r6
      00018A D0 07            [24] 1414 	pop	ar7
      00018C D0 06            [24] 1415 	pop	ar6
      00018E D0 05            [24] 1416 	pop	ar5
      000190 70 45            [24] 1417 	jnz	00126$
                                   1418 ;	../../core/net/mac/nullrdc.c:138: (!is_broadcast && NETSTACK_RADIO.pending_packet())) {
      000192 EC               [12] 1419 	mov	a,r4
      000193 4B               [12] 1420 	orl	a,r3
      000194 70 48            [24] 1421 	jnz	00127$
      000196 C0 05            [24] 1422 	push	ar5
      000198 C0 06            [24] 1423 	push	ar6
      00019A C0 07            [24] 1424 	push	ar7
      00019C 90r00r15         [24] 1425 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      00019F E4               [12] 1426 	clr	a
      0001A0 93               [24] 1427 	movc	a,@a+dptr
      0001A1 FA               [12] 1428 	mov	r2,a
      0001A2 A3               [24] 1429 	inc	dptr
      0001A3 E4               [12] 1430 	clr	a
      0001A4 93               [24] 1431 	movc	a,@a+dptr
      0001A5 FE               [12] 1432 	mov	r6,a
      0001A6 A3               [24] 1433 	inc	dptr
      0001A7 E4               [12] 1434 	clr	a
      0001A8 93               [24] 1435 	movc	a,@a+dptr
      0001A9 FF               [12] 1436 	mov	r7,a
      0001AA C0 07            [24] 1437 	push	ar7
      0001AC C0 05            [24] 1438 	push	ar5
      0001AE C0 04            [24] 1439 	push	ar4
      0001B0 C0 03            [24] 1440 	push	ar3
      0001B2 C0 02            [24] 1441 	push	ar2
      0001B4 C0 06            [24] 1442 	push	ar6
      0001B6 C0 07            [24] 1443 	push	ar7
      0001B8 D0 02            [24] 1444 	pop	ar2
      0001BA D0 01            [24] 1445 	pop	ar1
      0001BC D0 00            [24] 1446 	pop	ar0
      0001BE 12r00r00         [24] 1447 	lcall	__sdcc_banked_call
      0001C1 AA 82            [24] 1448 	mov	r2,dpl
      0001C3 AE 83            [24] 1449 	mov	r6,dph
      0001C5 D0 03            [24] 1450 	pop	ar3
      0001C7 D0 04            [24] 1451 	pop	ar4
      0001C9 D0 05            [24] 1452 	pop	ar5
      0001CB D0 07            [24] 1453 	pop	ar7
      0001CD EA               [12] 1454 	mov	a,r2
      0001CE 4E               [12] 1455 	orl	a,r6
      0001CF D0 07            [24] 1456 	pop	ar7
      0001D1 D0 06            [24] 1457 	pop	ar6
      0001D3 D0 05            [24] 1458 	pop	ar5
      0001D5 60 07            [24] 1459 	jz	00127$
      0001D7                       1460 00126$:
                                   1461 ;	../../core/net/mac/nullrdc.c:143: ret = MAC_TX_COLLISION;
      0001D7 7B 01            [12] 1462 	mov	r3,#0x01
      0001D9 7C 00            [12] 1463 	mov	r4,#0x00
      0001DB 02r05r03         [24] 1464 	ljmp	00133$
      0001DE                       1465 00127$:
                                   1466 ;	../../core/net/mac/nullrdc.c:149: switch(NETSTACK_RADIO.transmit(packetbuf_totlen())) {
      0001DE C0 05            [24] 1467 	push	ar5
      0001E0 C0 06            [24] 1468 	push	ar6
      0001E2 C0 07            [24] 1469 	push	ar7
      0001E4 90r00r06         [24] 1470 	mov	dptr,#(_cc2530_rf_driver + 0x0006)
      0001E7 E5 81            [12] 1471 	mov	a,sp
      0001E9 24 F3            [12] 1472 	add	a,#0xf3
      0001EB F8               [12] 1473 	mov	r0,a
      0001EC E4               [12] 1474 	clr	a
      0001ED 93               [24] 1475 	movc	a,@a+dptr
      0001EE F6               [12] 1476 	mov	@r0,a
      0001EF A3               [24] 1477 	inc	dptr
      0001F0 E4               [12] 1478 	clr	a
      0001F1 93               [24] 1479 	movc	a,@a+dptr
      0001F2 08               [12] 1480 	inc	r0
      0001F3 F6               [12] 1481 	mov	@r0,a
      0001F4 A3               [24] 1482 	inc	dptr
      0001F5 E4               [12] 1483 	clr	a
      0001F6 93               [24] 1484 	movc	a,@a+dptr
      0001F7 08               [12] 1485 	inc	r0
      0001F8 F6               [12] 1486 	mov	@r0,a
      0001F9 C0 06            [24] 1487 	push	ar6
      0001FB C0 04            [24] 1488 	push	ar4
      0001FD C0 03            [24] 1489 	push	ar3
      0001FF 78r00            [12] 1490 	mov	r0,#_packetbuf_totlen
      000201 79s00            [12] 1491 	mov	r1,#(_packetbuf_totlen >> 8)
      000203 7As00            [12] 1492 	mov	r2,#(_packetbuf_totlen >> 16)
      000205 12r00r00         [24] 1493 	lcall	__sdcc_banked_call
      000208 AD 82            [24] 1494 	mov	r5,dpl
      00020A AF 83            [24] 1495 	mov	r7,dph
      00020C D0 03            [24] 1496 	pop	ar3
      00020E D0 04            [24] 1497 	pop	ar4
      000210 D0 06            [24] 1498 	pop	ar6
      000212 C0 07            [24] 1499 	push	ar7
      000214 C0 06            [24] 1500 	push	ar6
      000216 C0 05            [24] 1501 	push	ar5
      000218 C0 04            [24] 1502 	push	ar4
      00021A C0 03            [24] 1503 	push	ar3
      00021C E5 81            [12] 1504 	mov	a,sp
      00021E 24 EE            [12] 1505 	add	a,#0xee
      000220 F8               [12] 1506 	mov	r0,a
      000221 E6               [12] 1507 	mov	a,@r0
      000222 C0 E0            [24] 1508 	push	acc
      000224 08               [12] 1509 	inc	r0
      000225 E6               [12] 1510 	mov	a,@r0
      000226 C0 E0            [24] 1511 	push	acc
      000228 08               [12] 1512 	inc	r0
      000229 E6               [12] 1513 	mov	a,@r0
      00022A C0 E0            [24] 1514 	push	acc
      00022C 8D 82            [24] 1515 	mov	dpl,r5
      00022E 8F 83            [24] 1516 	mov	dph,r7
      000230 D0 02            [24] 1517 	pop	ar2
      000232 D0 01            [24] 1518 	pop	ar1
      000234 D0 00            [24] 1519 	pop	ar0
      000236 12r00r00         [24] 1520 	lcall	__sdcc_banked_call
      000239 C8               [12] 1521 	xch	a,r0
      00023A E5 81            [12] 1522 	mov	a,sp
      00023C 24 F1            [12] 1523 	add	a,#0xf1
      00023E C8               [12] 1524 	xch	a,r0
      00023F A6 82            [24] 1525 	mov	@r0,dpl
      000241 08               [12] 1526 	inc	r0
      000242 A6 83            [24] 1527 	mov	@r0,dph
      000244 D0 03            [24] 1528 	pop	ar3
      000246 D0 04            [24] 1529 	pop	ar4
      000248 D0 05            [24] 1530 	pop	ar5
      00024A D0 06            [24] 1531 	pop	ar6
      00024C D0 07            [24] 1532 	pop	ar7
      00024E E5 81            [12] 1533 	mov	a,sp
      000250 24 F6            [12] 1534 	add	a,#0xf6
      000252 F8               [12] 1535 	mov	r0,a
      000253 B6 00 0C         [24] 1536 	cjne	@r0,#0x00,00190$
      000256 08               [12] 1537 	inc	r0
      000257 B6 00 08         [24] 1538 	cjne	@r0,#0x00,00190$
      00025A D0 07            [24] 1539 	pop	ar7
      00025C D0 06            [24] 1540 	pop	ar6
      00025E D0 05            [24] 1541 	pop	ar5
      000260 80 18            [24] 1542 	sjmp	00101$
      000262                       1543 00190$:
      000262 D0 07            [24] 1544 	pop	ar7
      000264 D0 06            [24] 1545 	pop	ar6
      000266 D0 05            [24] 1546 	pop	ar5
      000268 E5 81            [12] 1547 	mov	a,sp
      00026A 24 F9            [12] 1548 	add	a,#0xf9
      00026C F8               [12] 1549 	mov	r0,a
      00026D B6 02 07         [24] 1550 	cjne	@r0,#0x02,00191$
      000270 08               [12] 1551 	inc	r0
      000271 B6 00 03         [24] 1552 	cjne	@r0,#0x00,00191$
      000274 02r04rF9         [24] 1553 	ljmp	00123$
      000277                       1554 00191$:
      000277 02r04rFF         [24] 1555 	ljmp	00124$
                                   1556 ;	../../core/net/mac/nullrdc.c:150: case RADIO_TX_OK:
      00027A                       1557 00101$:
                                   1558 ;	../../core/net/mac/nullrdc.c:151: if(is_broadcast) {
      00027A EC               [12] 1559 	mov	a,r4
      00027B 4B               [12] 1560 	orl	a,r3
      00027C 60 07            [24] 1561 	jz	00121$
                                   1562 ;	../../core/net/mac/nullrdc.c:152: ret = MAC_TX_OK;
      00027E 7B 00            [12] 1563 	mov	r3,#0x00
      000280 7C 00            [12] 1564 	mov	r4,#0x00
      000282 02r05r03         [24] 1565 	ljmp	00133$
      000285                       1566 00121$:
                                   1567 ;	../../core/net/mac/nullrdc.c:157: wt = RTIMER_NOW();
      000285 C0 05            [24] 1568 	push	ar5
      000287 C0 06            [24] 1569 	push	ar6
      000289 C0 07            [24] 1570 	push	ar7
      00028B AA E2            [24] 1571 	mov	r2,_T1CNTL
      00028D 7F 00            [12] 1572 	mov	r7,#0x00
      00028F AD E3            [24] 1573 	mov	r5,_T1CNTH
      000291 8D 06            [24] 1574 	mov	ar6,r5
      000293 E4               [12] 1575 	clr	a
      000294 FD               [12] 1576 	mov	r5,a
      000295 2A               [12] 1577 	add	a,r2
      000296 FA               [12] 1578 	mov	r2,a
      000297 EE               [12] 1579 	mov	a,r6
      000298 3F               [12] 1580 	addc	a,r7
      000299 FF               [12] 1581 	mov	r7,a
                                   1582 ;	../../core/net/mac/nullrdc.c:158: watchdog_periodic();
      00029A C0 07            [24] 1583 	push	ar7
      00029C C0 06            [24] 1584 	push	ar6
      00029E C0 05            [24] 1585 	push	ar5
      0002A0 C0 02            [24] 1586 	push	ar2
      0002A2 78r00            [12] 1587 	mov	r0,#_watchdog_periodic
      0002A4 79s00            [12] 1588 	mov	r1,#(_watchdog_periodic >> 8)
      0002A6 7As00            [12] 1589 	mov	r2,#(_watchdog_periodic >> 16)
      0002A8 12r00r00         [24] 1590 	lcall	__sdcc_banked_call
      0002AB D0 02            [24] 1591 	pop	ar2
      0002AD D0 05            [24] 1592 	pop	ar5
      0002AF D0 06            [24] 1593 	pop	ar6
      0002B1 D0 07            [24] 1594 	pop	ar7
                                   1595 ;	../../core/net/mac/nullrdc.c:159: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + ACK_WAIT_TIME)) {
      0002B3 74 06            [12] 1596 	mov	a,#0x06
      0002B5 2A               [12] 1597 	add	a,r2
      0002B6 FC               [12] 1598 	mov	r4,a
      0002B7 E4               [12] 1599 	clr	a
      0002B8 3F               [12] 1600 	addc	a,r7
      0002B9 FB               [12] 1601 	mov	r3,a
                                   1602 ;	../../core/net/mac/nullrdc.c:233: return last_sent_ok;
      0002BA D0 07            [24] 1603 	pop	ar7
      0002BC D0 06            [24] 1604 	pop	ar6
      0002BE D0 05            [24] 1605 	pop	ar5
                                   1606 ;	../../core/net/mac/nullrdc.c:159: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + ACK_WAIT_TIME)) {
      0002C0                       1607 00102$:
      0002C0 C0 05            [24] 1608 	push	ar5
      0002C2 C0 06            [24] 1609 	push	ar6
      0002C4 C0 07            [24] 1610 	push	ar7
      0002C6 AA E2            [24] 1611 	mov	r2,_T1CNTL
      0002C8 7F 00            [12] 1612 	mov	r7,#0x00
      0002CA AD E3            [24] 1613 	mov	r5,_T1CNTH
      0002CC 8D 06            [24] 1614 	mov	ar6,r5
      0002CE E4               [12] 1615 	clr	a
      0002CF 2A               [12] 1616 	add	a,r2
      0002D0 FA               [12] 1617 	mov	r2,a
      0002D1 EE               [12] 1618 	mov	a,r6
      0002D2 3F               [12] 1619 	addc	a,r7
      0002D3 FF               [12] 1620 	mov	r7,a
      0002D4 EA               [12] 1621 	mov	a,r2
      0002D5 C3               [12] 1622 	clr	c
      0002D6 9C               [12] 1623 	subb	a,r4
      0002D7 FA               [12] 1624 	mov	r2,a
      0002D8 EF               [12] 1625 	mov	a,r7
      0002D9 9B               [12] 1626 	subb	a,r3
      0002DA D0 07            [24] 1627 	pop	ar7
      0002DC D0 06            [24] 1628 	pop	ar6
      0002DE D0 05            [24] 1629 	pop	ar5
      0002E0 20 E7 DD         [24] 1630 	jb	acc.7,00102$
                                   1631 ;	../../core/net/mac/nullrdc.c:166: ret = MAC_TX_NOACK;
      0002E3 C0 05            [24] 1632 	push	ar5
      0002E5 C0 06            [24] 1633 	push	ar6
      0002E7 C0 07            [24] 1634 	push	ar7
      0002E9 7B 02            [12] 1635 	mov	r3,#0x02
      0002EB 7C 00            [12] 1636 	mov	r4,#0x00
                                   1637 ;	../../core/net/mac/nullrdc.c:167: if(NETSTACK_RADIO.receiving_packet() ||
      0002ED 90r00r12         [24] 1638 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      0002F0 E4               [12] 1639 	clr	a
      0002F1 93               [24] 1640 	movc	a,@a+dptr
      0002F2 FA               [12] 1641 	mov	r2,a
      0002F3 A3               [24] 1642 	inc	dptr
      0002F4 E4               [12] 1643 	clr	a
      0002F5 93               [24] 1644 	movc	a,@a+dptr
      0002F6 FE               [12] 1645 	mov	r6,a
      0002F7 A3               [24] 1646 	inc	dptr
      0002F8 E4               [12] 1647 	clr	a
      0002F9 93               [24] 1648 	movc	a,@a+dptr
      0002FA FF               [12] 1649 	mov	r7,a
      0002FB C0 07            [24] 1650 	push	ar7
      0002FD C0 05            [24] 1651 	push	ar5
      0002FF C0 04            [24] 1652 	push	ar4
      000301 C0 03            [24] 1653 	push	ar3
      000303 C0 02            [24] 1654 	push	ar2
      000305 C0 06            [24] 1655 	push	ar6
      000307 C0 07            [24] 1656 	push	ar7
      000309 D0 02            [24] 1657 	pop	ar2
      00030B D0 01            [24] 1658 	pop	ar1
      00030D D0 00            [24] 1659 	pop	ar0
      00030F 12r00r00         [24] 1660 	lcall	__sdcc_banked_call
      000312 AA 82            [24] 1661 	mov	r2,dpl
      000314 AE 83            [24] 1662 	mov	r6,dph
      000316 D0 03            [24] 1663 	pop	ar3
      000318 D0 04            [24] 1664 	pop	ar4
      00031A D0 05            [24] 1665 	pop	ar5
      00031C D0 07            [24] 1666 	pop	ar7
      00031E EA               [12] 1667 	mov	a,r2
      00031F 4E               [12] 1668 	orl	a,r6
      000320 D0 07            [24] 1669 	pop	ar7
      000322 D0 06            [24] 1670 	pop	ar6
      000324 D0 05            [24] 1671 	pop	ar5
      000326 60 03            [24] 1672 	jz	00194$
      000328 02r03rB0         [24] 1673 	ljmp	00108$
      00032B                       1674 00194$:
                                   1675 ;	../../core/net/mac/nullrdc.c:168: NETSTACK_RADIO.pending_packet() ||
      00032B C0 05            [24] 1676 	push	ar5
      00032D C0 06            [24] 1677 	push	ar6
      00032F C0 07            [24] 1678 	push	ar7
      000331 90r00r15         [24] 1679 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      000334 E4               [12] 1680 	clr	a
      000335 93               [24] 1681 	movc	a,@a+dptr
      000336 FA               [12] 1682 	mov	r2,a
      000337 A3               [24] 1683 	inc	dptr
      000338 E4               [12] 1684 	clr	a
      000339 93               [24] 1685 	movc	a,@a+dptr
      00033A FE               [12] 1686 	mov	r6,a
      00033B A3               [24] 1687 	inc	dptr
      00033C E4               [12] 1688 	clr	a
      00033D 93               [24] 1689 	movc	a,@a+dptr
      00033E FF               [12] 1690 	mov	r7,a
      00033F C0 07            [24] 1691 	push	ar7
      000341 C0 05            [24] 1692 	push	ar5
      000343 C0 04            [24] 1693 	push	ar4
      000345 C0 03            [24] 1694 	push	ar3
      000347 C0 02            [24] 1695 	push	ar2
      000349 C0 06            [24] 1696 	push	ar6
      00034B C0 07            [24] 1697 	push	ar7
      00034D D0 02            [24] 1698 	pop	ar2
      00034F D0 01            [24] 1699 	pop	ar1
      000351 D0 00            [24] 1700 	pop	ar0
      000353 12r00r00         [24] 1701 	lcall	__sdcc_banked_call
      000356 AA 82            [24] 1702 	mov	r2,dpl
      000358 AE 83            [24] 1703 	mov	r6,dph
      00035A D0 03            [24] 1704 	pop	ar3
      00035C D0 04            [24] 1705 	pop	ar4
      00035E D0 05            [24] 1706 	pop	ar5
      000360 D0 07            [24] 1707 	pop	ar7
      000362 EA               [12] 1708 	mov	a,r2
      000363 4E               [12] 1709 	orl	a,r6
      000364 D0 07            [24] 1710 	pop	ar7
      000366 D0 06            [24] 1711 	pop	ar6
      000368 D0 05            [24] 1712 	pop	ar5
      00036A 70 44            [24] 1713 	jnz	00108$
                                   1714 ;	../../core/net/mac/nullrdc.c:169: NETSTACK_RADIO.channel_clear() == 0) {
      00036C C0 05            [24] 1715 	push	ar5
      00036E C0 06            [24] 1716 	push	ar6
      000370 C0 07            [24] 1717 	push	ar7
      000372 90r00r0F         [24] 1718 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      000375 E4               [12] 1719 	clr	a
      000376 93               [24] 1720 	movc	a,@a+dptr
      000377 FA               [12] 1721 	mov	r2,a
      000378 A3               [24] 1722 	inc	dptr
      000379 E4               [12] 1723 	clr	a
      00037A 93               [24] 1724 	movc	a,@a+dptr
      00037B FE               [12] 1725 	mov	r6,a
      00037C A3               [24] 1726 	inc	dptr
      00037D E4               [12] 1727 	clr	a
      00037E 93               [24] 1728 	movc	a,@a+dptr
      00037F FF               [12] 1729 	mov	r7,a
      000380 C0 07            [24] 1730 	push	ar7
      000382 C0 05            [24] 1731 	push	ar5
      000384 C0 04            [24] 1732 	push	ar4
      000386 C0 03            [24] 1733 	push	ar3
      000388 C0 02            [24] 1734 	push	ar2
      00038A C0 06            [24] 1735 	push	ar6
      00038C C0 07            [24] 1736 	push	ar7
      00038E D0 02            [24] 1737 	pop	ar2
      000390 D0 01            [24] 1738 	pop	ar1
      000392 D0 00            [24] 1739 	pop	ar0
      000394 12r00r00         [24] 1740 	lcall	__sdcc_banked_call
      000397 AA 82            [24] 1741 	mov	r2,dpl
      000399 AE 83            [24] 1742 	mov	r6,dph
      00039B D0 03            [24] 1743 	pop	ar3
      00039D D0 04            [24] 1744 	pop	ar4
      00039F D0 05            [24] 1745 	pop	ar5
      0003A1 D0 07            [24] 1746 	pop	ar7
      0003A3 EA               [12] 1747 	mov	a,r2
      0003A4 4E               [12] 1748 	orl	a,r6
      0003A5 D0 07            [24] 1749 	pop	ar7
      0003A7 D0 06            [24] 1750 	pop	ar6
      0003A9 D0 05            [24] 1751 	pop	ar5
      0003AB 60 03            [24] 1752 	jz	00196$
      0003AD 02r05r03         [24] 1753 	ljmp	00133$
      0003B0                       1754 00196$:
                                   1755 ;	../../core/net/mac/nullrdc.c:173: if(AFTER_ACK_DETECTED_WAIT_TIME > 0) {
      0003B0                       1756 00108$:
                                   1757 ;	../../core/net/mac/nullrdc.c:174: wt = RTIMER_NOW();
      0003B0 C0 05            [24] 1758 	push	ar5
      0003B2 C0 06            [24] 1759 	push	ar6
      0003B4 C0 07            [24] 1760 	push	ar7
      0003B6 AA E2            [24] 1761 	mov	r2,_T1CNTL
      0003B8 7F 00            [12] 1762 	mov	r7,#0x00
      0003BA AD E3            [24] 1763 	mov	r5,_T1CNTH
      0003BC 8D 06            [24] 1764 	mov	ar6,r5
      0003BE E4               [12] 1765 	clr	a
      0003BF FD               [12] 1766 	mov	r5,a
      0003C0 2A               [12] 1767 	add	a,r2
      0003C1 FA               [12] 1768 	mov	r2,a
      0003C2 EE               [12] 1769 	mov	a,r6
      0003C3 3F               [12] 1770 	addc	a,r7
      0003C4 FF               [12] 1771 	mov	r7,a
                                   1772 ;	../../core/net/mac/nullrdc.c:175: watchdog_periodic();
      0003C5 C0 07            [24] 1773 	push	ar7
      0003C7 C0 06            [24] 1774 	push	ar6
      0003C9 C0 05            [24] 1775 	push	ar5
      0003CB C0 04            [24] 1776 	push	ar4
      0003CD C0 03            [24] 1777 	push	ar3
      0003CF C0 02            [24] 1778 	push	ar2
      0003D1 78r00            [12] 1779 	mov	r0,#_watchdog_periodic
      0003D3 79s00            [12] 1780 	mov	r1,#(_watchdog_periodic >> 8)
      0003D5 7As00            [12] 1781 	mov	r2,#(_watchdog_periodic >> 16)
      0003D7 12r00r00         [24] 1782 	lcall	__sdcc_banked_call
      0003DA D0 02            [24] 1783 	pop	ar2
      0003DC D0 03            [24] 1784 	pop	ar3
      0003DE D0 04            [24] 1785 	pop	ar4
      0003E0 D0 05            [24] 1786 	pop	ar5
      0003E2 D0 06            [24] 1787 	pop	ar6
      0003E4 D0 07            [24] 1788 	pop	ar7
                                   1789 ;	../../core/net/mac/nullrdc.c:176: while(RTIMER_CLOCK_LT(RTIMER_NOW(),
      0003E6 E5 81            [12] 1790 	mov	a,sp
      0003E8 24 F6            [12] 1791 	add	a,#0xf6
      0003EA F8               [12] 1792 	mov	r0,a
      0003EB 74 0A            [12] 1793 	mov	a,#0x0A
      0003ED 2A               [12] 1794 	add	a,r2
      0003EE F6               [12] 1795 	mov	@r0,a
      0003EF E4               [12] 1796 	clr	a
      0003F0 3F               [12] 1797 	addc	a,r7
      0003F1 08               [12] 1798 	inc	r0
      0003F2 F6               [12] 1799 	mov	@r0,a
                                   1800 ;	../../core/net/mac/nullrdc.c:233: return last_sent_ok;
      0003F3 D0 07            [24] 1801 	pop	ar7
      0003F5 D0 06            [24] 1802 	pop	ar6
      0003F7 D0 05            [24] 1803 	pop	ar5
                                   1804 ;	../../core/net/mac/nullrdc.c:176: while(RTIMER_CLOCK_LT(RTIMER_NOW(),
      0003F9                       1805 00105$:
      0003F9 C0 05            [24] 1806 	push	ar5
      0003FB C0 06            [24] 1807 	push	ar6
      0003FD C0 07            [24] 1808 	push	ar7
      0003FF AA E2            [24] 1809 	mov	r2,_T1CNTL
      000401 7F 00            [12] 1810 	mov	r7,#0x00
      000403 AD E3            [24] 1811 	mov	r5,_T1CNTH
      000405 8D 06            [24] 1812 	mov	ar6,r5
      000407 E4               [12] 1813 	clr	a
      000408 2A               [12] 1814 	add	a,r2
      000409 FA               [12] 1815 	mov	r2,a
      00040A EE               [12] 1816 	mov	a,r6
      00040B 3F               [12] 1817 	addc	a,r7
      00040C FF               [12] 1818 	mov	r7,a
      00040D E5 81            [12] 1819 	mov	a,sp
      00040F 24 F6            [12] 1820 	add	a,#0xf6
      000411 F8               [12] 1821 	mov	r0,a
      000412 EA               [12] 1822 	mov	a,r2
      000413 C3               [12] 1823 	clr	c
      000414 96               [12] 1824 	subb	a,@r0
      000415 FA               [12] 1825 	mov	r2,a
      000416 EF               [12] 1826 	mov	a,r7
      000417 08               [12] 1827 	inc	r0
      000418 96               [12] 1828 	subb	a,@r0
      000419 D0 07            [24] 1829 	pop	ar7
      00041B D0 06            [24] 1830 	pop	ar6
      00041D D0 05            [24] 1831 	pop	ar5
      00041F 20 E7 D7         [24] 1832 	jb	acc.7,00105$
                                   1833 ;	../../core/net/mac/nullrdc.c:185: if(NETSTACK_RADIO.pending_packet()) {
      000422 C0 05            [24] 1834 	push	ar5
      000424 C0 06            [24] 1835 	push	ar6
      000426 C0 07            [24] 1836 	push	ar7
      000428 90r00r15         [24] 1837 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      00042B E4               [12] 1838 	clr	a
      00042C 93               [24] 1839 	movc	a,@a+dptr
      00042D FA               [12] 1840 	mov	r2,a
      00042E A3               [24] 1841 	inc	dptr
      00042F E4               [12] 1842 	clr	a
      000430 93               [24] 1843 	movc	a,@a+dptr
      000431 FE               [12] 1844 	mov	r6,a
      000432 A3               [24] 1845 	inc	dptr
      000433 E4               [12] 1846 	clr	a
      000434 93               [24] 1847 	movc	a,@a+dptr
      000435 FF               [12] 1848 	mov	r7,a
      000436 C0 07            [24] 1849 	push	ar7
      000438 C0 05            [24] 1850 	push	ar5
      00043A C0 04            [24] 1851 	push	ar4
      00043C C0 03            [24] 1852 	push	ar3
      00043E C0 02            [24] 1853 	push	ar2
      000440 C0 06            [24] 1854 	push	ar6
      000442 C0 07            [24] 1855 	push	ar7
      000444 D0 02            [24] 1856 	pop	ar2
      000446 D0 01            [24] 1857 	pop	ar1
      000448 D0 00            [24] 1858 	pop	ar0
      00044A 12r00r00         [24] 1859 	lcall	__sdcc_banked_call
      00044D AA 82            [24] 1860 	mov	r2,dpl
      00044F AE 83            [24] 1861 	mov	r6,dph
      000451 D0 03            [24] 1862 	pop	ar3
      000453 D0 04            [24] 1863 	pop	ar4
      000455 D0 05            [24] 1864 	pop	ar5
      000457 D0 07            [24] 1865 	pop	ar7
      000459 EA               [12] 1866 	mov	a,r2
      00045A 4E               [12] 1867 	orl	a,r6
      00045B D0 07            [24] 1868 	pop	ar7
      00045D D0 06            [24] 1869 	pop	ar6
      00045F D0 05            [24] 1870 	pop	ar5
      000461 70 03            [24] 1871 	jnz	00198$
      000463 02r05r03         [24] 1872 	ljmp	00133$
      000466                       1873 00198$:
                                   1874 ;	../../core/net/mac/nullrdc.c:186: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      000466 C0 05            [24] 1875 	push	ar5
      000468 C0 06            [24] 1876 	push	ar6
      00046A C0 07            [24] 1877 	push	ar7
      00046C 90r00r0C         [24] 1878 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      00046F E4               [12] 1879 	clr	a
      000470 93               [24] 1880 	movc	a,@a+dptr
      000471 FC               [12] 1881 	mov	r4,a
      000472 A3               [24] 1882 	inc	dptr
      000473 E4               [12] 1883 	clr	a
      000474 93               [24] 1884 	movc	a,@a+dptr
      000475 FB               [12] 1885 	mov	r3,a
      000476 A3               [24] 1886 	inc	dptr
      000477 E4               [12] 1887 	clr	a
      000478 93               [24] 1888 	movc	a,@a+dptr
      000479 FA               [12] 1889 	mov	r2,a
      00047A E5 81            [12] 1890 	mov	a,sp
      00047C 24 F6            [12] 1891 	add	a,#0xf6
      00047E F8               [12] 1892 	mov	r0,a
      00047F E5 81            [12] 1893 	mov	a,sp
      000481 24 FB            [12] 1894 	add	a,#0xFB
      000483 F6               [12] 1895 	mov	@r0,a
      000484 E5 81            [12] 1896 	mov	a,sp
      000486 24 F6            [12] 1897 	add	a,#0xf6
      000488 F8               [12] 1898 	mov	r0,a
      000489 86 05            [24] 1899 	mov	ar5,@r0
      00048B 7E 00            [12] 1900 	mov	r6,#0x00
      00048D 7F 40            [12] 1901 	mov	r7,#0x40
      00048F C0 05            [24] 1902 	push	ar5
      000491 C0 04            [24] 1903 	push	ar4
      000493 C0 03            [24] 1904 	push	ar3
      000495 C0 02            [24] 1905 	push	ar2
      000497 74 03            [12] 1906 	mov	a,#0x03
      000499 C0 E0            [24] 1907 	push	acc
      00049B E4               [12] 1908 	clr	a
      00049C C0 E0            [24] 1909 	push	acc
      00049E C0 04            [24] 1910 	push	ar4
      0004A0 C0 03            [24] 1911 	push	ar3
      0004A2 C0 02            [24] 1912 	push	ar2
      0004A4 8D 82            [24] 1913 	mov	dpl,r5
      0004A6 8E 83            [24] 1914 	mov	dph,r6
      0004A8 8F F0            [24] 1915 	mov	b,r7
      0004AA D0 02            [24] 1916 	pop	ar2
      0004AC D0 01            [24] 1917 	pop	ar1
      0004AE D0 00            [24] 1918 	pop	ar0
      0004B0 12r00r00         [24] 1919 	lcall	__sdcc_banked_call
      0004B3 AE 82            [24] 1920 	mov	r6,dpl
      0004B5 AF 83            [24] 1921 	mov	r7,dph
      0004B7 15 81            [12] 1922 	dec	sp
      0004B9 15 81            [12] 1923 	dec	sp
      0004BB D0 02            [24] 1924 	pop	ar2
      0004BD D0 03            [24] 1925 	pop	ar3
      0004BF D0 04            [24] 1926 	pop	ar4
      0004C1 D0 05            [24] 1927 	pop	ar5
                                   1928 ;	../../core/net/mac/nullrdc.c:187: if(len == ACK_LEN && ackbuf[2] == dsn) {
      0004C3 BE 03 05         [24] 1929 	cjne	r6,#0x03,00199$
      0004C6 BF 00 02         [24] 1930 	cjne	r7,#0x00,00199$
      0004C9 80 08            [24] 1931 	sjmp	00200$
      0004CB                       1932 00199$:
      0004CB D0 07            [24] 1933 	pop	ar7
      0004CD D0 06            [24] 1934 	pop	ar6
      0004CF D0 05            [24] 1935 	pop	ar5
      0004D1 80 20            [24] 1936 	sjmp	00111$
      0004D3                       1937 00200$:
      0004D3 D0 07            [24] 1938 	pop	ar7
      0004D5 D0 06            [24] 1939 	pop	ar6
      0004D7 D0 05            [24] 1940 	pop	ar5
      0004D9 E5 81            [12] 1941 	mov	a,sp
      0004DB 24 F9            [12] 1942 	add	a,#0xf9
      0004DD F8               [12] 1943 	mov	r0,a
      0004DE 74 02            [12] 1944 	mov	a,#0x02
      0004E0 26               [12] 1945 	add	a,@r0
      0004E1 F9               [12] 1946 	mov	r1,a
      0004E2 87 02            [24] 1947 	mov	ar2,@r1
      0004E4 E5 81            [12] 1948 	mov	a,sp
      0004E6 24 FD            [12] 1949 	add	a,#0xfd
      0004E8 F8               [12] 1950 	mov	r0,a
      0004E9 E6               [12] 1951 	mov	a,@r0
      0004EA B5 02 06         [24] 1952 	cjne	a,ar2,00111$
                                   1953 ;	../../core/net/mac/nullrdc.c:190: ret = MAC_TX_OK;
      0004ED 7B 00            [12] 1954 	mov	r3,#0x00
      0004EF 7C 00            [12] 1955 	mov	r4,#0x00
      0004F1 80 10            [24] 1956 	sjmp	00133$
      0004F3                       1957 00111$:
                                   1958 ;	../../core/net/mac/nullrdc.c:193: ret = MAC_TX_COLLISION;
      0004F3 7B 01            [12] 1959 	mov	r3,#0x01
      0004F5 7C 00            [12] 1960 	mov	r4,#0x00
                                   1961 ;	../../core/net/mac/nullrdc.c:200: break;
                                   1962 ;	../../core/net/mac/nullrdc.c:201: case RADIO_TX_COLLISION:
      0004F7 80 0A            [24] 1963 	sjmp	00133$
      0004F9                       1964 00123$:
                                   1965 ;	../../core/net/mac/nullrdc.c:202: ret = MAC_TX_COLLISION;
      0004F9 7B 01            [12] 1966 	mov	r3,#0x01
      0004FB 7C 00            [12] 1967 	mov	r4,#0x00
                                   1968 ;	../../core/net/mac/nullrdc.c:203: break;
                                   1969 ;	../../core/net/mac/nullrdc.c:204: default:
      0004FD 80 04            [24] 1970 	sjmp	00133$
      0004FF                       1971 00124$:
                                   1972 ;	../../core/net/mac/nullrdc.c:205: ret = MAC_TX_ERR;
      0004FF 7B 04            [12] 1973 	mov	r3,#0x04
      000501 7C 00            [12] 1974 	mov	r4,#0x00
                                   1975 ;	../../core/net/mac/nullrdc.c:207: }
      000503                       1976 00133$:
                                   1977 ;	../../core/net/mac/nullrdc.c:229: if(ret == MAC_TX_OK) {
      000503 EB               [12] 1978 	mov	a,r3
      000504 4C               [12] 1979 	orl	a,r4
      000505 70 0A            [24] 1980 	jnz	00135$
                                   1981 ;	../../core/net/mac/nullrdc.c:230: last_sent_ok = 1;
      000507 E5 81            [12] 1982 	mov	a,sp
      000509 24 FB            [12] 1983 	add	a,#0xfb
      00050B F8               [12] 1984 	mov	r0,a
      00050C 76 01            [12] 1985 	mov	@r0,#0x01
      00050E 08               [12] 1986 	inc	r0
      00050F 76 00            [12] 1987 	mov	@r0,#0x00
      000511                       1988 00135$:
                                   1989 ;	../../core/net/mac/nullrdc.c:232: mac_call_sent_callback(sent, ptr, ret, 1);
      000511 74 01            [12] 1990 	mov	a,#0x01
      000513 C0 E0            [24] 1991 	push	acc
      000515 E4               [12] 1992 	clr	a
      000516 C0 E0            [24] 1993 	push	acc
      000518 C0 03            [24] 1994 	push	ar3
      00051A C0 04            [24] 1995 	push	ar4
      00051C E5 81            [12] 1996 	mov	a,sp
      00051E 24 EC            [12] 1997 	add	a,#0xec
      000520 F8               [12] 1998 	mov	r0,a
      000521 E6               [12] 1999 	mov	a,@r0
      000522 C0 E0            [24] 2000 	push	acc
      000524 08               [12] 2001 	inc	r0
      000525 E6               [12] 2002 	mov	a,@r0
      000526 C0 E0            [24] 2003 	push	acc
      000528 08               [12] 2004 	inc	r0
      000529 E6               [12] 2005 	mov	a,@r0
      00052A C0 E0            [24] 2006 	push	acc
      00052C 8D 82            [24] 2007 	mov	dpl,r5
      00052E 8E 83            [24] 2008 	mov	dph,r6
      000530 8F F0            [24] 2009 	mov	b,r7
      000532 78r00            [12] 2010 	mov	r0,#_mac_call_sent_callback
      000534 79s00            [12] 2011 	mov	r1,#(_mac_call_sent_callback >> 8)
      000536 7As00            [12] 2012 	mov	r2,#(_mac_call_sent_callback >> 16)
      000538 12r00r00         [24] 2013 	lcall	__sdcc_banked_call
      00053B E5 81            [12] 2014 	mov	a,sp
      00053D 24 F9            [12] 2015 	add	a,#0xf9
                                   2016 ;	../../core/net/mac/nullrdc.c:233: return last_sent_ok;
      00053F F5 81            [12] 2017 	mov	sp,a
      000541 24 FB            [12] 2018 	add	a,#0xfb
      000543 F8               [12] 2019 	mov	r0,a
      000544 86 82            [24] 2020 	mov	dpl,@r0
      000546 08               [12] 2021 	inc	r0
      000547 86 83            [24] 2022 	mov	dph,@r0
      000549 E5 81            [12] 2023 	mov	a,sp
      00054B 24 F5            [12] 2024 	add	a,#0xF5
      00054D F5 81            [12] 2025 	mov	sp,a
      00054F 02r00r00         [24] 2026 	ljmp	__sdcc_banked_ret
                                   2027 ;------------------------------------------------------------
                                   2028 ;Allocation info for local variables in function 'send_packet'
                                   2029 ;------------------------------------------------------------
                                   2030 ;ptr                       Allocated to stack - sp -5
                                   2031 ;sent                      Allocated to registers r5 r6 r7 
                                   2032 ;------------------------------------------------------------
                                   2033 ;	../../core/net/mac/nullrdc.c:237: send_packet(mac_callback_t sent, void *ptr)
                                   2034 ;	-----------------------------------------
                                   2035 ;	 function send_packet
                                   2036 ;	-----------------------------------------
      000552                       2037 _send_packet:
      000552 AD 82            [24] 2038 	mov	r5,dpl
      000554 AE 83            [24] 2039 	mov	r6,dph
      000556 AF F0            [24] 2040 	mov	r7,b
                                   2041 ;	../../core/net/mac/nullrdc.c:239: send_one_packet(sent, ptr);
      000558 E5 81            [12] 2042 	mov	a,sp
      00055A 24 FB            [12] 2043 	add	a,#0xfb
      00055C F8               [12] 2044 	mov	r0,a
      00055D E6               [12] 2045 	mov	a,@r0
      00055E C0 E0            [24] 2046 	push	acc
      000560 08               [12] 2047 	inc	r0
      000561 E6               [12] 2048 	mov	a,@r0
      000562 C0 E0            [24] 2049 	push	acc
      000564 08               [12] 2050 	inc	r0
      000565 E6               [12] 2051 	mov	a,@r0
      000566 C0 E0            [24] 2052 	push	acc
      000568 8D 82            [24] 2053 	mov	dpl,r5
      00056A 8E 83            [24] 2054 	mov	dph,r6
      00056C 8F F0            [24] 2055 	mov	b,r7
      00056E 78r00            [12] 2056 	mov	r0,#_send_one_packet
      000570 79s00            [12] 2057 	mov	r1,#(_send_one_packet >> 8)
      000572 7As00            [12] 2058 	mov	r2,#(_send_one_packet >> 16)
      000574 12r00r00         [24] 2059 	lcall	__sdcc_banked_call
      000577 15 81            [12] 2060 	dec	sp
      000579 15 81            [12] 2061 	dec	sp
      00057B 15 81            [12] 2062 	dec	sp
      00057D 02r00r00         [24] 2063 	ljmp	__sdcc_banked_ret
                                   2064 ;------------------------------------------------------------
                                   2065 ;Allocation info for local variables in function 'send_list'
                                   2066 ;------------------------------------------------------------
                                   2067 ;ptr                       Allocated to stack - sp -8
                                   2068 ;buf_list                  Allocated to stack - sp -11
                                   2069 ;sent                      Allocated to stack - sp -2
                                   2070 ;next                      Allocated to registers r5 r6 r7 
                                   2071 ;last_sent_ok              Allocated to registers r3 r4 
                                   2072 ;------------------------------------------------------------
                                   2073 ;	../../core/net/mac/nullrdc.c:243: send_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   2074 ;	-----------------------------------------
                                   2075 ;	 function send_list
                                   2076 ;	-----------------------------------------
      000580                       2077 _send_list:
      000580 C0 82            [24] 2078 	push	dpl
      000582 C0 83            [24] 2079 	push	dph
      000584 C0 F0            [24] 2080 	push	b
                                   2081 ;	../../core/net/mac/nullrdc.c:245: while(buf_list != NULL) {
      000586                       2082 00103$:
      000586 E5 81            [12] 2083 	mov	a,sp
      000588 24 F5            [12] 2084 	add	a,#0xf5
      00058A F8               [12] 2085 	mov	r0,a
      00058B E6               [12] 2086 	mov	a,@r0
      00058C 08               [12] 2087 	inc	r0
      00058D 46               [12] 2088 	orl	a,@r0
      00058E 70 03            [24] 2089 	jnz	00117$
      000590 02r06r2E         [24] 2090 	ljmp	00106$
      000593                       2091 00117$:
                                   2092 ;	../../core/net/mac/nullrdc.c:248: struct rdc_buf_list *next = buf_list->next;
      000593 E5 81            [12] 2093 	mov	a,sp
      000595 24 F5            [12] 2094 	add	a,#0xf5
      000597 F8               [12] 2095 	mov	r0,a
      000598 86 02            [24] 2096 	mov	ar2,@r0
      00059A 08               [12] 2097 	inc	r0
      00059B 86 03            [24] 2098 	mov	ar3,@r0
      00059D 08               [12] 2099 	inc	r0
      00059E 86 04            [24] 2100 	mov	ar4,@r0
      0005A0 8A 82            [24] 2101 	mov	dpl,r2
      0005A2 8B 83            [24] 2102 	mov	dph,r3
      0005A4 8C F0            [24] 2103 	mov	b,r4
      0005A6 12r00r00         [24] 2104 	lcall	__gptrget
      0005A9 FD               [12] 2105 	mov	r5,a
      0005AA A3               [24] 2106 	inc	dptr
      0005AB 12r00r00         [24] 2107 	lcall	__gptrget
      0005AE FE               [12] 2108 	mov	r6,a
      0005AF A3               [24] 2109 	inc	dptr
      0005B0 12r00r00         [24] 2110 	lcall	__gptrget
      0005B3 FF               [12] 2111 	mov	r7,a
                                   2112 ;	../../core/net/mac/nullrdc.c:251: queuebuf_to_packetbuf(buf_list->buf);
      0005B4 74 03            [12] 2113 	mov	a,#0x03
      0005B6 2A               [12] 2114 	add	a,r2
      0005B7 FA               [12] 2115 	mov	r2,a
      0005B8 E4               [12] 2116 	clr	a
      0005B9 3B               [12] 2117 	addc	a,r3
      0005BA FB               [12] 2118 	mov	r3,a
      0005BB 8A 82            [24] 2119 	mov	dpl,r2
      0005BD 8B 83            [24] 2120 	mov	dph,r3
      0005BF 8C F0            [24] 2121 	mov	b,r4
      0005C1 12r00r00         [24] 2122 	lcall	__gptrget
      0005C4 FA               [12] 2123 	mov	r2,a
      0005C5 A3               [24] 2124 	inc	dptr
      0005C6 12r00r00         [24] 2125 	lcall	__gptrget
      0005C9 FB               [12] 2126 	mov	r3,a
      0005CA A3               [24] 2127 	inc	dptr
      0005CB 12r00r00         [24] 2128 	lcall	__gptrget
      0005CE FC               [12] 2129 	mov	r4,a
      0005CF 8A 82            [24] 2130 	mov	dpl,r2
      0005D1 8B 83            [24] 2131 	mov	dph,r3
      0005D3 8C F0            [24] 2132 	mov	b,r4
      0005D5 C0 07            [24] 2133 	push	ar7
      0005D7 C0 06            [24] 2134 	push	ar6
      0005D9 C0 05            [24] 2135 	push	ar5
      0005DB 78r00            [12] 2136 	mov	r0,#_queuebuf_to_packetbuf
      0005DD 79s00            [12] 2137 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0005DF 7As00            [12] 2138 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0005E1 12r00r00         [24] 2139 	lcall	__sdcc_banked_call
                                   2140 ;	../../core/net/mac/nullrdc.c:252: last_sent_ok = send_one_packet(sent, ptr);
      0005E4 E5 81            [12] 2141 	mov	a,sp
      0005E6 24 F5            [12] 2142 	add	a,#0xf5
      0005E8 F8               [12] 2143 	mov	r0,a
      0005E9 E6               [12] 2144 	mov	a,@r0
      0005EA C0 E0            [24] 2145 	push	acc
      0005EC 08               [12] 2146 	inc	r0
      0005ED E6               [12] 2147 	mov	a,@r0
      0005EE C0 E0            [24] 2148 	push	acc
      0005F0 08               [12] 2149 	inc	r0
      0005F1 E6               [12] 2150 	mov	a,@r0
      0005F2 C0 E0            [24] 2151 	push	acc
      0005F4 E5 81            [12] 2152 	mov	a,sp
      0005F6 24 F8            [12] 2153 	add	a,#0xf8
      0005F8 F8               [12] 2154 	mov	r0,a
      0005F9 86 82            [24] 2155 	mov	dpl,@r0
      0005FB 08               [12] 2156 	inc	r0
      0005FC 86 83            [24] 2157 	mov	dph,@r0
      0005FE 08               [12] 2158 	inc	r0
      0005FF 86 F0            [24] 2159 	mov	b,@r0
      000601 78r00            [12] 2160 	mov	r0,#_send_one_packet
      000603 79s00            [12] 2161 	mov	r1,#(_send_one_packet >> 8)
      000605 7As00            [12] 2162 	mov	r2,#(_send_one_packet >> 16)
      000607 12r00r00         [24] 2163 	lcall	__sdcc_banked_call
      00060A AB 82            [24] 2164 	mov	r3,dpl
      00060C AC 83            [24] 2165 	mov	r4,dph
      00060E 15 81            [12] 2166 	dec	sp
      000610 15 81            [12] 2167 	dec	sp
      000612 15 81            [12] 2168 	dec	sp
      000614 D0 05            [24] 2169 	pop	ar5
      000616 D0 06            [24] 2170 	pop	ar6
      000618 D0 07            [24] 2171 	pop	ar7
                                   2172 ;	../../core/net/mac/nullrdc.c:257: if(!last_sent_ok) {
      00061A EB               [12] 2173 	mov	a,r3
      00061B 4C               [12] 2174 	orl	a,r4
                                   2175 ;	../../core/net/mac/nullrdc.c:258: return;
      00061C 60 10            [24] 2176 	jz	00106$
                                   2177 ;	../../core/net/mac/nullrdc.c:260: buf_list = next;
      00061E E5 81            [12] 2178 	mov	a,sp
      000620 24 F5            [12] 2179 	add	a,#0xf5
      000622 F8               [12] 2180 	mov	r0,a
      000623 A6 05            [24] 2181 	mov	@r0,ar5
      000625 08               [12] 2182 	inc	r0
      000626 A6 06            [24] 2183 	mov	@r0,ar6
      000628 08               [12] 2184 	inc	r0
      000629 A6 07            [24] 2185 	mov	@r0,ar7
      00062B 02r05r86         [24] 2186 	ljmp	00103$
      00062E                       2187 00106$:
      00062E 15 81            [12] 2188 	dec	sp
      000630 15 81            [12] 2189 	dec	sp
      000632 15 81            [12] 2190 	dec	sp
      000634 02r00r00         [24] 2191 	ljmp	__sdcc_banked_ret
                                   2192 ;------------------------------------------------------------
                                   2193 ;Allocation info for local variables in function 'packet_input'
                                   2194 ;------------------------------------------------------------
                                   2195 ;duplicate                 Allocated to registers r6 r7 
                                   2196 ;------------------------------------------------------------
                                   2197 ;	../../core/net/mac/nullrdc.c:265: packet_input(void)
                                   2198 ;	-----------------------------------------
                                   2199 ;	 function packet_input
                                   2200 ;	-----------------------------------------
      000637                       2201 _packet_input:
                                   2202 ;	../../core/net/mac/nullrdc.c:276: if(packetbuf_datalen() == ACK_LEN) {
      000637 78r00            [12] 2203 	mov	r0,#_packetbuf_datalen
      000639 79s00            [12] 2204 	mov	r1,#(_packetbuf_datalen >> 8)
      00063B 7As00            [12] 2205 	mov	r2,#(_packetbuf_datalen >> 16)
      00063D 12r00r00         [24] 2206 	lcall	__sdcc_banked_call
      000640 AE 82            [24] 2207 	mov	r6,dpl
      000642 AF 83            [24] 2208 	mov	r7,dph
      000644 BE 03 06         [24] 2209 	cjne	r6,#0x03,00133$
      000647 BF 00 03         [24] 2210 	cjne	r7,#0x00,00133$
      00064A 02r07r14         [24] 2211 	ljmp	00116$
      00064D                       2212 00133$:
                                   2213 ;	../../core/net/mac/nullrdc.c:281: if(NETSTACK_FRAMER.parse() < 0) {
      00064D 90r00r09         [24] 2214 	mov	dptr,#(_framer_802154 + 0x0009)
      000650 E4               [12] 2215 	clr	a
      000651 93               [24] 2216 	movc	a,@a+dptr
      000652 FD               [12] 2217 	mov	r5,a
      000653 A3               [24] 2218 	inc	dptr
      000654 E4               [12] 2219 	clr	a
      000655 93               [24] 2220 	movc	a,@a+dptr
      000656 FE               [12] 2221 	mov	r6,a
      000657 A3               [24] 2222 	inc	dptr
      000658 E4               [12] 2223 	clr	a
      000659 93               [24] 2224 	movc	a,@a+dptr
      00065A FF               [12] 2225 	mov	r7,a
      00065B C0 07            [24] 2226 	push	ar7
      00065D C0 05            [24] 2227 	push	ar5
      00065F C0 06            [24] 2228 	push	ar6
      000661 C0 07            [24] 2229 	push	ar7
      000663 D0 02            [24] 2230 	pop	ar2
      000665 D0 01            [24] 2231 	pop	ar1
      000667 D0 00            [24] 2232 	pop	ar0
      000669 12r00r00         [24] 2233 	lcall	__sdcc_banked_call
      00066C AD 82            [24] 2234 	mov	r5,dpl
      00066E AE 83            [24] 2235 	mov	r6,dph
      000670 D0 07            [24] 2236 	pop	ar7
      000672 EE               [12] 2237 	mov	a,r6
      000673 30 E7 03         [24] 2238 	jnb	acc.7,00134$
      000676 02r07r14         [24] 2239 	ljmp	00116$
      000679                       2240 00134$:
                                   2241 ;	../../core/net/mac/nullrdc.c:285: &linkaddr_node_addr) &&
                                   2242 ;	../../core/net/mac/nullrdc.c:284: } else if(!linkaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000679 75 82 10         [24] 2243 	mov	dpl,#0x10
      00067C 78r00            [12] 2244 	mov	r0,#_packetbuf_addr
      00067E 79s00            [12] 2245 	mov	r1,#(_packetbuf_addr >> 8)
      000680 7As00            [12] 2246 	mov	r2,#(_packetbuf_addr >> 16)
      000682 12r00r00         [24] 2247 	lcall	__sdcc_banked_call
      000685 AD 82            [24] 2248 	mov	r5,dpl
      000687 AE 83            [24] 2249 	mov	r6,dph
      000689 AF F0            [24] 2250 	mov	r7,b
      00068B 74r00            [12] 2251 	mov	a,#_linkaddr_node_addr
      00068D C0 E0            [24] 2252 	push	acc
      00068F 74s00            [12] 2253 	mov	a,#(_linkaddr_node_addr >> 8)
      000691 C0 E0            [24] 2254 	push	acc
      000693 E4               [12] 2255 	clr	a
      000694 C0 E0            [24] 2256 	push	acc
      000696 8D 82            [24] 2257 	mov	dpl,r5
      000698 8E 83            [24] 2258 	mov	dph,r6
      00069A 8F F0            [24] 2259 	mov	b,r7
      00069C 78r00            [12] 2260 	mov	r0,#_linkaddr_cmp
      00069E 79s00            [12] 2261 	mov	r1,#(_linkaddr_cmp >> 8)
      0006A0 7As00            [12] 2262 	mov	r2,#(_linkaddr_cmp >> 16)
      0006A2 12r00r00         [24] 2263 	lcall	__sdcc_banked_call
      0006A5 AE 82            [24] 2264 	mov	r6,dpl
      0006A7 AF 83            [24] 2265 	mov	r7,dph
      0006A9 15 81            [12] 2266 	dec	sp
      0006AB 15 81            [12] 2267 	dec	sp
      0006AD 15 81            [12] 2268 	dec	sp
      0006AF EE               [12] 2269 	mov	a,r6
      0006B0 4F               [12] 2270 	orl	a,r7
      0006B1 70 12            [24] 2271 	jnz	00107$
                                   2272 ;	../../core/net/mac/nullrdc.c:286: !packetbuf_holds_broadcast()) {
      0006B3 78r00            [12] 2273 	mov	r0,#_packetbuf_holds_broadcast
      0006B5 79s00            [12] 2274 	mov	r1,#(_packetbuf_holds_broadcast >> 8)
      0006B7 7As00            [12] 2275 	mov	r2,#(_packetbuf_holds_broadcast >> 16)
      0006B9 12r00r00         [24] 2276 	lcall	__sdcc_banked_call
      0006BC E5 82            [12] 2277 	mov	a,dpl
      0006BE 85 83 F0         [24] 2278 	mov	b,dph
      0006C1 45 F0            [12] 2279 	orl	a,b
      0006C3 60 4F            [24] 2280 	jz	00116$
      0006C5                       2281 00107$:
                                   2282 ;	../../core/net/mac/nullrdc.c:295: duplicate = mac_sequence_is_duplicate();
      0006C5 78r00            [12] 2283 	mov	r0,#_mac_sequence_is_duplicate
      0006C7 79s00            [12] 2284 	mov	r1,#(_mac_sequence_is_duplicate >> 8)
      0006C9 7As00            [12] 2285 	mov	r2,#(_mac_sequence_is_duplicate >> 16)
      0006CB 12r00r00         [24] 2286 	lcall	__sdcc_banked_call
      0006CE AE 82            [24] 2287 	mov	r6,dpl
      0006D0 AF 83            [24] 2288 	mov	r7,dph
                                   2289 ;	../../core/net/mac/nullrdc.c:296: if(duplicate) {
      0006D2 EE               [12] 2290 	mov	a,r6
      0006D3 4F               [12] 2291 	orl	a,r7
      0006D4 70 11            [24] 2292 	jnz	00103$
                                   2293 ;	../../core/net/mac/nullrdc.c:301: mac_sequence_register_seqno();
      0006D6 C0 07            [24] 2294 	push	ar7
      0006D8 C0 06            [24] 2295 	push	ar6
      0006DA 78r00            [12] 2296 	mov	r0,#_mac_sequence_register_seqno
      0006DC 79s00            [12] 2297 	mov	r1,#(_mac_sequence_register_seqno >> 8)
      0006DE 7As00            [12] 2298 	mov	r2,#(_mac_sequence_register_seqno >> 16)
      0006E0 12r00r00         [24] 2299 	lcall	__sdcc_banked_call
      0006E3 D0 06            [24] 2300 	pop	ar6
      0006E5 D0 07            [24] 2301 	pop	ar7
      0006E7                       2302 00103$:
                                   2303 ;	../../core/net/mac/nullrdc.c:324: if(!duplicate) {
      0006E7 EE               [12] 2304 	mov	a,r6
      0006E8 4F               [12] 2305 	orl	a,r7
      0006E9 70 29            [24] 2306 	jnz	00116$
                                   2307 ;	../../core/net/mac/nullrdc.c:325: NETSTACK_MAC.input();
      0006EB 90r00r09         [24] 2308 	mov	dptr,#(_csma_driver + 0x0009)
      0006EE E4               [12] 2309 	clr	a
      0006EF 93               [24] 2310 	movc	a,@a+dptr
      0006F0 FD               [12] 2311 	mov	r5,a
      0006F1 A3               [24] 2312 	inc	dptr
      0006F2 E4               [12] 2313 	clr	a
      0006F3 93               [24] 2314 	movc	a,@a+dptr
      0006F4 FE               [12] 2315 	mov	r6,a
      0006F5 A3               [24] 2316 	inc	dptr
      0006F6 E4               [12] 2317 	clr	a
      0006F7 93               [24] 2318 	movc	a,@a+dptr
      0006F8 FF               [12] 2319 	mov	r7,a
      0006F9 C0 07            [24] 2320 	push	ar7
      0006FB C0 06            [24] 2321 	push	ar6
      0006FD C0 05            [24] 2322 	push	ar5
      0006FF C0 05            [24] 2323 	push	ar5
      000701 C0 06            [24] 2324 	push	ar6
      000703 C0 07            [24] 2325 	push	ar7
      000705 D0 02            [24] 2326 	pop	ar2
      000707 D0 01            [24] 2327 	pop	ar1
      000709 D0 00            [24] 2328 	pop	ar0
      00070B 12r00r00         [24] 2329 	lcall	__sdcc_banked_call
      00070E D0 05            [24] 2330 	pop	ar5
      000710 D0 06            [24] 2331 	pop	ar6
      000712 D0 07            [24] 2332 	pop	ar7
      000714                       2333 00116$:
      000714 02r00r00         [24] 2334 	ljmp	__sdcc_banked_ret
                                   2335 ;------------------------------------------------------------
                                   2336 ;Allocation info for local variables in function 'on'
                                   2337 ;------------------------------------------------------------
                                   2338 ;	../../core/net/mac/nullrdc.c:331: on(void)
                                   2339 ;	-----------------------------------------
                                   2340 ;	 function on
                                   2341 ;	-----------------------------------------
      000717                       2342 _on:
                                   2343 ;	../../core/net/mac/nullrdc.c:333: return NETSTACK_RADIO.on();
      000717 90r00r18         [24] 2344 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      00071A E4               [12] 2345 	clr	a
      00071B 93               [24] 2346 	movc	a,@a+dptr
      00071C FD               [12] 2347 	mov	r5,a
      00071D A3               [24] 2348 	inc	dptr
      00071E E4               [12] 2349 	clr	a
      00071F 93               [24] 2350 	movc	a,@a+dptr
      000720 FE               [12] 2351 	mov	r6,a
      000721 A3               [24] 2352 	inc	dptr
      000722 E4               [12] 2353 	clr	a
      000723 93               [24] 2354 	movc	a,@a+dptr
      000724 FF               [12] 2355 	mov	r7,a
      000725 C0 07            [24] 2356 	push	ar7
      000727 C0 05            [24] 2357 	push	ar5
      000729 C0 06            [24] 2358 	push	ar6
      00072B C0 07            [24] 2359 	push	ar7
      00072D D0 02            [24] 2360 	pop	ar2
      00072F D0 01            [24] 2361 	pop	ar1
      000731 D0 00            [24] 2362 	pop	ar0
      000733 12r00r00         [24] 2363 	lcall	__sdcc_banked_call
      000736 AD 82            [24] 2364 	mov	r5,dpl
      000738 AE 83            [24] 2365 	mov	r6,dph
      00073A D0 07            [24] 2366 	pop	ar7
      00073C 8D 82            [24] 2367 	mov	dpl,r5
      00073E 8E 83            [24] 2368 	mov	dph,r6
      000740 02r00r00         [24] 2369 	ljmp	__sdcc_banked_ret
                                   2370 ;------------------------------------------------------------
                                   2371 ;Allocation info for local variables in function 'off'
                                   2372 ;------------------------------------------------------------
                                   2373 ;keep_radio_on             Allocated to registers r6 r7 
                                   2374 ;------------------------------------------------------------
                                   2375 ;	../../core/net/mac/nullrdc.c:337: off(int keep_radio_on)
                                   2376 ;	-----------------------------------------
                                   2377 ;	 function off
                                   2378 ;	-----------------------------------------
      000743                       2379 _off:
      000743 AE 82            [24] 2380 	mov	r6,dpl
      000745 AF 83            [24] 2381 	mov	r7,dph
                                   2382 ;	../../core/net/mac/nullrdc.c:339: if(keep_radio_on) {
      000747 EE               [12] 2383 	mov	a,r6
      000748 4F               [12] 2384 	orl	a,r7
      000749 60 2B            [24] 2385 	jz	00102$
                                   2386 ;	../../core/net/mac/nullrdc.c:340: return NETSTACK_RADIO.on();
      00074B 90r00r18         [24] 2387 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      00074E E4               [12] 2388 	clr	a
      00074F 93               [24] 2389 	movc	a,@a+dptr
      000750 FD               [12] 2390 	mov	r5,a
      000751 A3               [24] 2391 	inc	dptr
      000752 E4               [12] 2392 	clr	a
      000753 93               [24] 2393 	movc	a,@a+dptr
      000754 FE               [12] 2394 	mov	r6,a
      000755 A3               [24] 2395 	inc	dptr
      000756 E4               [12] 2396 	clr	a
      000757 93               [24] 2397 	movc	a,@a+dptr
      000758 FF               [12] 2398 	mov	r7,a
      000759 C0 07            [24] 2399 	push	ar7
      00075B C0 05            [24] 2400 	push	ar5
      00075D C0 06            [24] 2401 	push	ar6
      00075F C0 07            [24] 2402 	push	ar7
      000761 D0 02            [24] 2403 	pop	ar2
      000763 D0 01            [24] 2404 	pop	ar1
      000765 D0 00            [24] 2405 	pop	ar0
      000767 12r00r00         [24] 2406 	lcall	__sdcc_banked_call
      00076A AD 82            [24] 2407 	mov	r5,dpl
      00076C AE 83            [24] 2408 	mov	r6,dph
      00076E D0 07            [24] 2409 	pop	ar7
      000770 8D 82            [24] 2410 	mov	dpl,r5
      000772 8E 83            [24] 2411 	mov	dph,r6
      000774 80 29            [24] 2412 	sjmp	00104$
      000776                       2413 00102$:
                                   2414 ;	../../core/net/mac/nullrdc.c:342: return NETSTACK_RADIO.off();
      000776 90r00r1B         [24] 2415 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      000779 E4               [12] 2416 	clr	a
      00077A 93               [24] 2417 	movc	a,@a+dptr
      00077B FD               [12] 2418 	mov	r5,a
      00077C A3               [24] 2419 	inc	dptr
      00077D E4               [12] 2420 	clr	a
      00077E 93               [24] 2421 	movc	a,@a+dptr
      00077F FE               [12] 2422 	mov	r6,a
      000780 A3               [24] 2423 	inc	dptr
      000781 E4               [12] 2424 	clr	a
      000782 93               [24] 2425 	movc	a,@a+dptr
      000783 FF               [12] 2426 	mov	r7,a
      000784 C0 07            [24] 2427 	push	ar7
      000786 C0 05            [24] 2428 	push	ar5
      000788 C0 06            [24] 2429 	push	ar6
      00078A C0 07            [24] 2430 	push	ar7
      00078C D0 02            [24] 2431 	pop	ar2
      00078E D0 01            [24] 2432 	pop	ar1
      000790 D0 00            [24] 2433 	pop	ar0
      000792 12r00r00         [24] 2434 	lcall	__sdcc_banked_call
      000795 AD 82            [24] 2435 	mov	r5,dpl
      000797 AE 83            [24] 2436 	mov	r6,dph
      000799 D0 07            [24] 2437 	pop	ar7
      00079B 8D 82            [24] 2438 	mov	dpl,r5
      00079D 8E 83            [24] 2439 	mov	dph,r6
      00079F                       2440 00104$:
      00079F 02r00r00         [24] 2441 	ljmp	__sdcc_banked_ret
                                   2442 ;------------------------------------------------------------
                                   2443 ;Allocation info for local variables in function 'channel_check_interval'
                                   2444 ;------------------------------------------------------------
                                   2445 ;	../../core/net/mac/nullrdc.c:347: channel_check_interval(void)
                                   2446 ;	-----------------------------------------
                                   2447 ;	 function channel_check_interval
                                   2448 ;	-----------------------------------------
      0007A2                       2449 _channel_check_interval:
                                   2450 ;	../../core/net/mac/nullrdc.c:349: return 0;
      0007A2 90 00 00         [24] 2451 	mov	dptr,#0x0000
      0007A5 02r00r00         [24] 2452 	ljmp	__sdcc_banked_ret
                                   2453 ;------------------------------------------------------------
                                   2454 ;Allocation info for local variables in function 'init'
                                   2455 ;------------------------------------------------------------
                                   2456 ;	../../core/net/mac/nullrdc.c:353: init(void)
                                   2457 ;	-----------------------------------------
                                   2458 ;	 function init
                                   2459 ;	-----------------------------------------
      0007A8                       2460 _init:
                                   2461 ;	../../core/net/mac/nullrdc.c:355: on();
      0007A8 78r17            [12] 2462 	mov	r0,#_on
      0007AA 79s07            [12] 2463 	mov	r1,#(_on >> 8)
      0007AC 7As00            [12] 2464 	mov	r2,#(_on >> 16)
      0007AE 12r00r00         [24] 2465 	lcall	__sdcc_banked_call
      0007B1 02r00r00         [24] 2466 	ljmp	__sdcc_banked_ret
                                   2467 	.area CSEG    (CODE)
                                   2468 	.area CONST   (CODE)
      000000                       2469 _nullrdc_driver:
      000000r18s00 80              2470 	.byte _str_0,(_str_0 >> 8),#0x80
      000003rA8s07s00              2471 	.byte _init,(_init >> 8),(_init >> 16)
      000006r52s05s00              2472 	.byte _send_packet,(_send_packet >> 8),(_send_packet >> 16)
      000009r80s05s00              2473 	.byte _send_list,(_send_list >> 8),(_send_list >> 16)
      00000Cr37s06s00              2474 	.byte _packet_input,(_packet_input >> 8),(_packet_input >> 16)
      00000Fr17s07s00              2475 	.byte _on,(_on >> 8),(_on >> 16)
      000012r43s07s00              2476 	.byte _off,(_off >> 8),(_off >> 16)
      000015rA2s07s00              2477 	.byte _channel_check_interval,(_channel_check_interval >> 8),(_channel_check_interval >> 16)
      000018                       2478 _str_0:
      000018 6E 75 6C 6C 72 64 63  2479 	.ascii "nullrdc"
      00001F 00                    2480 	.db 0x00
                                   2481 	.area XINIT   (CODE)
                                   2482 	.area CABS    (ABS,CODE)
