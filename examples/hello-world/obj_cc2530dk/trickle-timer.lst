                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:44:51 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module trickle_timer
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _ctimer_set
                                     14 	.globl _clock_time
                                     15 	.globl _trickle_timer_consistency
                                     16 	.globl _trickle_timer_inconsistency
                                     17 	.globl _trickle_timer_config
                                     18 	.globl _trickle_timer_set
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; special function bits
                                     26 ;--------------------------------------------------------
                                     27 	.area RSEG    (ABS,DATA)
      000000                         28 	.org 0x0000
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable register banks
                                     31 ;--------------------------------------------------------
                                     32 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         33 	.ds 8
                                     34 ;--------------------------------------------------------
                                     35 ; internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area DSEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
      000000                         62 _loctt:
      000000                         63 	.ds 3
      000003                         64 _loc_clock:
      000003                         65 	.ds 2
                                     66 ;--------------------------------------------------------
                                     67 ; absolute external ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XABS    (ABS,XDATA)
                                     70 ;--------------------------------------------------------
                                     71 ; external initialized ram data
                                     72 ;--------------------------------------------------------
                                     73 	.area XISEG   (XDATA)
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area BANK1   (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'wide_rand'
                                    102 ;------------------------------------------------------------
                                    103 ;	../../core/lib/trickle-timer.c:82: wide_rand()
                                    104 ;	-----------------------------------------
                                    105 ;	 function wide_rand
                                    106 ;	-----------------------------------------
      000000                        107 _wide_rand:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
                                    116 ;	../../core/lib/trickle-timer.c:84: return ((uint32_t)random_rand() << 16 | random_rand());
      000000 78r00            [12]  117 	mov	r0,#_random_rand
      000002 79s00            [12]  118 	mov	r1,#(_random_rand >> 8)
      000004 7As00            [12]  119 	mov	r2,#(_random_rand >> 16)
      000006 12r00r00         [24]  120 	lcall	__sdcc_banked_call
      000009 AE 82            [24]  121 	mov	r6,dpl
      00000B AF 83            [24]  122 	mov	r7,dph
      00000D 8F 04            [24]  123 	mov	ar4,r7
      00000F 8E 05            [24]  124 	mov	ar5,r6
      000011 7F 00            [12]  125 	mov	r7,#0x00
      000013 7E 00            [12]  126 	mov	r6,#0x00
      000015 C0 07            [24]  127 	push	ar7
      000017 C0 06            [24]  128 	push	ar6
      000019 C0 05            [24]  129 	push	ar5
      00001B C0 04            [24]  130 	push	ar4
      00001D 78r00            [12]  131 	mov	r0,#_random_rand
      00001F 79s00            [12]  132 	mov	r1,#(_random_rand >> 8)
      000021 7As00            [12]  133 	mov	r2,#(_random_rand >> 16)
      000023 12r00r00         [24]  134 	lcall	__sdcc_banked_call
      000026 AA 82            [24]  135 	mov	r2,dpl
      000028 AB 83            [24]  136 	mov	r3,dph
      00002A D0 04            [24]  137 	pop	ar4
      00002C D0 05            [24]  138 	pop	ar5
      00002E D0 06            [24]  139 	pop	ar6
      000030 D0 07            [24]  140 	pop	ar7
      000032 8A 00            [24]  141 	mov	ar0,r2
      000034 8B 01            [24]  142 	mov	ar1,r3
      000036 E4               [12]  143 	clr	a
      000037 FA               [12]  144 	mov	r2,a
      000038 FB               [12]  145 	mov	r3,a
      000039 E8               [12]  146 	mov	a,r0
      00003A 42 06            [12]  147 	orl	ar6,a
      00003C E9               [12]  148 	mov	a,r1
      00003D 42 07            [12]  149 	orl	ar7,a
      00003F EA               [12]  150 	mov	a,r2
      000040 42 05            [12]  151 	orl	ar5,a
      000042 EB               [12]  152 	mov	a,r3
      000043 42 04            [12]  153 	orl	ar4,a
      000045 8E 82            [24]  154 	mov	dpl,r6
      000047 8F 83            [24]  155 	mov	dph,r7
      000049 8D F0            [24]  156 	mov	b,r5
      00004B EC               [12]  157 	mov	a,r4
      00004C 02r00r00         [24]  158 	ljmp	__sdcc_banked_ret
                                    159 ;------------------------------------------------------------
                                    160 ;Allocation info for local variables in function 'max_imax'
                                    161 ;------------------------------------------------------------
                                    162 ;value                     Allocated to registers r6 r7 
                                    163 ;zeros                     Allocated to registers r5 
                                    164 ;i                         Allocated to registers r2 
                                    165 ;mask                      Allocated to stack - sp -1
                                    166 ;------------------------------------------------------------
                                    167 ;	../../core/lib/trickle-timer.c:98: max_imax(clock_time_t value)
                                    168 ;	-----------------------------------------
                                    169 ;	 function max_imax
                                    170 ;	-----------------------------------------
      00004F                        171 _max_imax:
      00004F 05 81            [12]  172 	inc	sp
      000051 05 81            [12]  173 	inc	sp
      000053 AE 82            [24]  174 	mov	r6,dpl
      000055 AF 83            [24]  175 	mov	r7,dph
                                    176 ;	../../core/lib/trickle-timer.c:100: uint8_t zeros = 0;
      000057 7D 00            [12]  177 	mov	r5,#0x00
                                    178 ;	../../core/lib/trickle-timer.c:103: clock_time_t mask = 0xFFFF;
      000059 A8 81            [24]  179 	mov	r0,sp
      00005B 18               [12]  180 	dec	r0
      00005C 76 FF            [12]  181 	mov	@r0,#0xFF
      00005E 08               [12]  182 	inc	r0
      00005F 76 FF            [12]  183 	mov	@r0,#0xFF
                                    184 ;	../../core/lib/trickle-timer.c:105: value--;
      000061 1E               [12]  185 	dec	r6
      000062 BE FF 01         [24]  186 	cjne	r6,#0xFF,00119$
      000065 1F               [12]  187 	dec	r7
      000066                        188 00119$:
                                    189 ;	../../core/lib/trickle-timer.c:107: for(i = sizeof(clock_time_t) << 2; i > 0; i >>= 1) {
      000066 7A 08            [12]  190 	mov	r2,#0x08
      000068                        191 00104$:
                                    192 ;	../../core/lib/trickle-timer.c:108: if((value & (mask <<= i)) == 0) {
      000068 C0 05            [24]  193 	push	ar5
      00006A 8A F0            [24]  194 	mov	b,r2
      00006C 05 F0            [12]  195 	inc	b
      00006E A8 81            [24]  196 	mov	r0,sp
      000070 18               [12]  197 	dec	r0
      000071 18               [12]  198 	dec	r0
      000072 86 04            [24]  199 	mov	ar4,@r0
      000074 08               [12]  200 	inc	r0
      000075 86 05            [24]  201 	mov	ar5,@r0
      000077 80 06            [24]  202 	sjmp	00121$
      000079                        203 00120$:
      000079 EC               [12]  204 	mov	a,r4
      00007A 2C               [12]  205 	add	a,r4
      00007B FC               [12]  206 	mov	r4,a
      00007C ED               [12]  207 	mov	a,r5
      00007D 33               [12]  208 	rlc	a
      00007E FD               [12]  209 	mov	r5,a
      00007F                        210 00121$:
      00007F D5 F0 F7         [24]  211 	djnz	b,00120$
      000082 A8 81            [24]  212 	mov	r0,sp
      000084 18               [12]  213 	dec	r0
      000085 18               [12]  214 	dec	r0
      000086 A6 04            [24]  215 	mov	@r0,ar4
      000088 08               [12]  216 	inc	r0
      000089 A6 05            [24]  217 	mov	@r0,ar5
      00008B EE               [12]  218 	mov	a,r6
      00008C 52 04            [12]  219 	anl	ar4,a
      00008E EF               [12]  220 	mov	a,r7
      00008F 52 05            [12]  221 	anl	ar5,a
      000091 EC               [12]  222 	mov	a,r4
      000092 4D               [12]  223 	orl	a,r5
      000093 D0 05            [24]  224 	pop	ar5
      000095 70 12            [24]  225 	jnz	00105$
                                    226 ;	../../core/lib/trickle-timer.c:109: zeros += i;
      000097 EA               [12]  227 	mov	a,r2
      000098 2D               [12]  228 	add	a,r5
      000099 FD               [12]  229 	mov	r5,a
                                    230 ;	../../core/lib/trickle-timer.c:110: value <<= i;
      00009A 8A F0            [24]  231 	mov	b,r2
      00009C 05 F0            [12]  232 	inc	b
      00009E 80 06            [24]  233 	sjmp	00124$
      0000A0                        234 00123$:
      0000A0 EE               [12]  235 	mov	a,r6
      0000A1 2E               [12]  236 	add	a,r6
      0000A2 FE               [12]  237 	mov	r6,a
      0000A3 EF               [12]  238 	mov	a,r7
      0000A4 33               [12]  239 	rlc	a
      0000A5 FF               [12]  240 	mov	r7,a
      0000A6                        241 00124$:
      0000A6 D5 F0 F7         [24]  242 	djnz	b,00123$
      0000A9                        243 00105$:
                                    244 ;	../../core/lib/trickle-timer.c:107: for(i = sizeof(clock_time_t) << 2; i > 0; i >>= 1) {
      0000A9 EA               [12]  245 	mov	a,r2
      0000AA C3               [12]  246 	clr	c
      0000AB 13               [12]  247 	rrc	a
      0000AC FA               [12]  248 	mov	r2,a
      0000AD 70 B9            [24]  249 	jnz	00104$
                                    250 ;	../../core/lib/trickle-timer.c:152: return zeros - 1; /* Always non-negative due to the range of 'value' */
      0000AF 1D               [12]  251 	dec	r5
      0000B0 8D 82            [24]  252 	mov	dpl,r5
      0000B2 15 81            [12]  253 	dec	sp
      0000B4 15 81            [12]  254 	dec	sp
      0000B6 02r00r00         [24]  255 	ljmp	__sdcc_banked_ret
                                    256 ;------------------------------------------------------------
                                    257 ;Allocation info for local variables in function 'get_t'
                                    258 ;------------------------------------------------------------
                                    259 ;i_cur                     Allocated to registers r6 r7 
                                    260 ;------------------------------------------------------------
                                    261 ;	../../core/lib/trickle-timer.c:158: get_t(clock_time_t i_cur)
                                    262 ;	-----------------------------------------
                                    263 ;	 function get_t
                                    264 ;	-----------------------------------------
      0000B9                        265 _get_t:
      0000B9 AE 82            [24]  266 	mov	r6,dpl
                                    267 ;	../../core/lib/trickle-timer.c:160: i_cur >>= 1;
      0000BB E5 83            [12]  268 	mov	a,dph
      0000BD C3               [12]  269 	clr	c
      0000BE 13               [12]  270 	rrc	a
      0000BF CE               [12]  271 	xch	a,r6
      0000C0 13               [12]  272 	rrc	a
      0000C1 CE               [12]  273 	xch	a,r6
      0000C2 FF               [12]  274 	mov	r7,a
                                    275 ;	../../core/lib/trickle-timer.c:165: return i_cur + (tt_rand() % i_cur);
      0000C3 C0 07            [24]  276 	push	ar7
      0000C5 C0 06            [24]  277 	push	ar6
      0000C7 78r00            [12]  278 	mov	r0,#_wide_rand
      0000C9 79s00            [12]  279 	mov	r1,#(_wide_rand >> 8)
      0000CB 7As00            [12]  280 	mov	r2,#(_wide_rand >> 16)
      0000CD 12r00r00         [24]  281 	lcall	__sdcc_banked_call
      0000D0 AA 82            [24]  282 	mov	r2,dpl
      0000D2 AB 83            [24]  283 	mov	r3,dph
      0000D4 AC F0            [24]  284 	mov	r4,b
      0000D6 FD               [12]  285 	mov	r5,a
      0000D7 D0 06            [24]  286 	pop	ar6
      0000D9 D0 07            [24]  287 	pop	ar7
      0000DB 8E 00            [24]  288 	mov	ar0,r6
      0000DD 8F 01            [24]  289 	mov	ar1,r7
      0000DF 7E 00            [12]  290 	mov	r6,#0x00
      0000E1 7F 00            [12]  291 	mov	r7,#0x00
      0000E3 C0 07            [24]  292 	push	ar7
      0000E5 C0 06            [24]  293 	push	ar6
      0000E7 C0 01            [24]  294 	push	ar1
      0000E9 C0 00            [24]  295 	push	ar0
      0000EB C0 00            [24]  296 	push	ar0
      0000ED C0 01            [24]  297 	push	ar1
      0000EF C0 06            [24]  298 	push	ar6
      0000F1 C0 07            [24]  299 	push	ar7
      0000F3 8A 82            [24]  300 	mov	dpl,r2
      0000F5 8B 83            [24]  301 	mov	dph,r3
      0000F7 8C F0            [24]  302 	mov	b,r4
      0000F9 ED               [12]  303 	mov	a,r5
      0000FA 12r00r00         [24]  304 	lcall	__modulong
      0000FD AA 82            [24]  305 	mov	r2,dpl
      0000FF AB 83            [24]  306 	mov	r3,dph
      000101 AC F0            [24]  307 	mov	r4,b
      000103 FD               [12]  308 	mov	r5,a
      000104 E5 81            [12]  309 	mov	a,sp
      000106 24 FC            [12]  310 	add	a,#0xfc
      000108 F5 81            [12]  311 	mov	sp,a
      00010A D0 00            [24]  312 	pop	ar0
      00010C D0 01            [24]  313 	pop	ar1
      00010E D0 06            [24]  314 	pop	ar6
      000110 D0 07            [24]  315 	pop	ar7
      000112 EA               [12]  316 	mov	a,r2
      000113 28               [12]  317 	add	a,r0
      000114 F8               [12]  318 	mov	r0,a
      000115 EB               [12]  319 	mov	a,r3
      000116 39               [12]  320 	addc	a,r1
      000117 F9               [12]  321 	mov	r1,a
      000118 EC               [12]  322 	mov	a,r4
      000119 3E               [12]  323 	addc	a,r6
      00011A FE               [12]  324 	mov	r6,a
      00011B ED               [12]  325 	mov	a,r5
      00011C 3F               [12]  326 	addc	a,r7
      00011D FF               [12]  327 	mov	r7,a
      00011E 88 82            [24]  328 	mov	dpl,r0
      000120 89 83            [24]  329 	mov	dph,r1
      000122 02r00r00         [24]  330 	ljmp	__sdcc_banked_ret
                                    331 ;------------------------------------------------------------
                                    332 ;Allocation info for local variables in function 'schedule_for_end'
                                    333 ;------------------------------------------------------------
                                    334 ;tt                        Allocated to stack - sp -4
                                    335 ;now                       Allocated to stack - sp -1
                                    336 ;------------------------------------------------------------
                                    337 ;	../../core/lib/trickle-timer.c:169: schedule_for_end(struct trickle_timer *tt)
                                    338 ;	-----------------------------------------
                                    339 ;	 function schedule_for_end
                                    340 ;	-----------------------------------------
      000125                        341 _schedule_for_end:
      000125 C0 82            [24]  342 	push	dpl
      000127 C0 83            [24]  343 	push	dph
      000129 C0 F0            [24]  344 	push	b
      00012B 05 81            [12]  345 	inc	sp
      00012D 05 81            [12]  346 	inc	sp
                                    347 ;	../../core/lib/trickle-timer.c:172: clock_time_t now = clock_time();
      00012F 78r00            [12]  348 	mov	r0,#_clock_time
      000131 79s00            [12]  349 	mov	r1,#(_clock_time >> 8)
      000133 7As00            [12]  350 	mov	r2,#(_clock_time >> 16)
      000135 12r00r00         [24]  351 	lcall	__sdcc_banked_call
      000138 A8 81            [24]  352 	mov	r0,sp
      00013A 18               [12]  353 	dec	r0
      00013B A6 82            [24]  354 	mov	@r0,dpl
      00013D 08               [12]  355 	inc	r0
      00013E A6 83            [24]  356 	mov	@r0,dph
                                    357 ;	../../core/lib/trickle-timer.c:174: loc_clock = TRICKLE_TIMER_INTERVAL_END(tt) - now;
      000140 E5 81            [12]  358 	mov	a,sp
      000142 24 FC            [12]  359 	add	a,#0xfc
      000144 F8               [12]  360 	mov	r0,a
      000145 74 04            [12]  361 	mov	a,#0x04
      000147 26               [12]  362 	add	a,@r0
      000148 FA               [12]  363 	mov	r2,a
      000149 E4               [12]  364 	clr	a
      00014A 08               [12]  365 	inc	r0
      00014B 36               [12]  366 	addc	a,@r0
      00014C FB               [12]  367 	mov	r3,a
      00014D 08               [12]  368 	inc	r0
      00014E 86 04            [24]  369 	mov	ar4,@r0
      000150 8A 82            [24]  370 	mov	dpl,r2
      000152 8B 83            [24]  371 	mov	dph,r3
      000154 8C F0            [24]  372 	mov	b,r4
      000156 12r00r00         [24]  373 	lcall	__gptrget
      000159 FA               [12]  374 	mov	r2,a
      00015A A3               [24]  375 	inc	dptr
      00015B 12r00r00         [24]  376 	lcall	__gptrget
      00015E FB               [12]  377 	mov	r3,a
      00015F E5 81            [12]  378 	mov	a,sp
      000161 24 FC            [12]  379 	add	a,#0xfc
      000163 F8               [12]  380 	mov	r0,a
      000164 74 02            [12]  381 	mov	a,#0x02
      000166 26               [12]  382 	add	a,@r0
      000167 FC               [12]  383 	mov	r4,a
      000168 E4               [12]  384 	clr	a
      000169 08               [12]  385 	inc	r0
      00016A 36               [12]  386 	addc	a,@r0
      00016B FE               [12]  387 	mov	r6,a
      00016C 08               [12]  388 	inc	r0
      00016D 86 07            [24]  389 	mov	ar7,@r0
      00016F 8C 82            [24]  390 	mov	dpl,r4
      000171 8E 83            [24]  391 	mov	dph,r6
      000173 8F F0            [24]  392 	mov	b,r7
      000175 12r00r00         [24]  393 	lcall	__gptrget
      000178 FC               [12]  394 	mov	r4,a
      000179 A3               [24]  395 	inc	dptr
      00017A 12r00r00         [24]  396 	lcall	__gptrget
      00017D FE               [12]  397 	mov	r6,a
      00017E EC               [12]  398 	mov	a,r4
      00017F 2A               [12]  399 	add	a,r2
      000180 FA               [12]  400 	mov	r2,a
      000181 EE               [12]  401 	mov	a,r6
      000182 3B               [12]  402 	addc	a,r3
      000183 FB               [12]  403 	mov	r3,a
      000184 A8 81            [24]  404 	mov	r0,sp
      000186 18               [12]  405 	dec	r0
      000187 EA               [12]  406 	mov	a,r2
      000188 C3               [12]  407 	clr	c
      000189 96               [12]  408 	subb	a,@r0
      00018A FA               [12]  409 	mov	r2,a
      00018B EB               [12]  410 	mov	a,r3
      00018C 08               [12]  411 	inc	r0
      00018D 96               [12]  412 	subb	a,@r0
      00018E FB               [12]  413 	mov	r3,a
      00018F 90r00r03         [24]  414 	mov	dptr,#_loc_clock
      000192 EA               [12]  415 	mov	a,r2
      000193 F0               [24]  416 	movx	@dptr,a
      000194 EB               [12]  417 	mov	a,r3
      000195 A3               [24]  418 	inc	dptr
      000196 F0               [24]  419 	movx	@dptr,a
                                    420 ;	../../core/lib/trickle-timer.c:181: if(loc_clock > (TRICKLE_TIMER_CLOCK_MAX >> 1)) {
      000197 C3               [12]  421 	clr	c
      000198 74 FF            [12]  422 	mov	a,#0xFF
      00019A 9A               [12]  423 	subb	a,r2
      00019B 74 7F            [12]  424 	mov	a,#0x7F
      00019D 9B               [12]  425 	subb	a,r3
      00019E 50 08            [24]  426 	jnc	00102$
                                    427 ;	../../core/lib/trickle-timer.c:182: loc_clock = 0; /* Interval ended in the past, schedule for in 0 */
      0001A0 90r00r03         [24]  428 	mov	dptr,#_loc_clock
      0001A3 E4               [12]  429 	clr	a
      0001A4 F0               [24]  430 	movx	@dptr,a
      0001A5 E4               [12]  431 	clr	a
      0001A6 A3               [24]  432 	inc	dptr
      0001A7 F0               [24]  433 	movx	@dptr,a
      0001A8                        434 00102$:
                                    435 ;	../../core/lib/trickle-timer.c:186: ctimer_set(&tt->ct, loc_clock, double_interval, tt);
      0001A8 E5 81            [12]  436 	mov	a,sp
      0001AA 24 FC            [12]  437 	add	a,#0xfc
      0001AC F8               [12]  438 	mov	r0,a
      0001AD 86 05            [24]  439 	mov	ar5,@r0
      0001AF 08               [12]  440 	inc	r0
      0001B0 86 06            [24]  441 	mov	ar6,@r0
      0001B2 08               [12]  442 	inc	r0
      0001B3 86 07            [24]  443 	mov	ar7,@r0
      0001B5 E5 81            [12]  444 	mov	a,sp
      0001B7 24 FC            [12]  445 	add	a,#0xfc
      0001B9 F8               [12]  446 	mov	r0,a
      0001BA 74 08            [12]  447 	mov	a,#0x08
      0001BC 26               [12]  448 	add	a,@r0
      0001BD FA               [12]  449 	mov	r2,a
      0001BE E4               [12]  450 	clr	a
      0001BF 08               [12]  451 	inc	r0
      0001C0 36               [12]  452 	addc	a,@r0
      0001C1 FB               [12]  453 	mov	r3,a
      0001C2 08               [12]  454 	inc	r0
      0001C3 86 04            [24]  455 	mov	ar4,@r0
      0001C5 C0 05            [24]  456 	push	ar5
      0001C7 C0 06            [24]  457 	push	ar6
      0001C9 C0 07            [24]  458 	push	ar7
      0001CB 74rFF            [12]  459 	mov	a,#_double_interval
      0001CD C0 E0            [24]  460 	push	acc
      0001CF 74s01            [12]  461 	mov	a,#(_double_interval >> 8)
      0001D1 C0 E0            [24]  462 	push	acc
      0001D3 74s00            [12]  463 	mov	a,#(_double_interval >> 16)
      0001D5 C0 E0            [24]  464 	push	acc
      0001D7 90r00r03         [24]  465 	mov	dptr,#_loc_clock
      0001DA E0               [24]  466 	movx	a,@dptr
      0001DB C0 E0            [24]  467 	push	acc
      0001DD A3               [24]  468 	inc	dptr
      0001DE E0               [24]  469 	movx	a,@dptr
      0001DF C0 E0            [24]  470 	push	acc
      0001E1 8A 82            [24]  471 	mov	dpl,r2
      0001E3 8B 83            [24]  472 	mov	dph,r3
      0001E5 8C F0            [24]  473 	mov	b,r4
      0001E7 78r00            [12]  474 	mov	r0,#_ctimer_set
      0001E9 79s00            [12]  475 	mov	r1,#(_ctimer_set >> 8)
      0001EB 7As00            [12]  476 	mov	r2,#(_ctimer_set >> 16)
      0001ED 12r00r00         [24]  477 	lcall	__sdcc_banked_call
      0001F0 E5 81            [12]  478 	mov	a,sp
      0001F2 24 F8            [12]  479 	add	a,#0xf8
      0001F4 F5 81            [12]  480 	mov	sp,a
      0001F6 E5 81            [12]  481 	mov	a,sp
      0001F8 24 FB            [12]  482 	add	a,#0xFB
      0001FA F5 81            [12]  483 	mov	sp,a
      0001FC 02r00r00         [24]  484 	ljmp	__sdcc_banked_ret
                                    485 ;------------------------------------------------------------
                                    486 ;Allocation info for local variables in function 'double_interval'
                                    487 ;------------------------------------------------------------
                                    488 ;ptr                       Allocated to registers r5 r6 r7 
                                    489 ;last_end                  Allocated to stack - sp -1
                                    490 ;sloc0                     Allocated to stack - sp -6
                                    491 ;sloc1                     Allocated to stack - sp -3
                                    492 ;------------------------------------------------------------
                                    493 ;	../../core/lib/trickle-timer.c:192: double_interval(void *ptr)
                                    494 ;	-----------------------------------------
                                    495 ;	 function double_interval
                                    496 ;	-----------------------------------------
      0001FF                        497 _double_interval:
      0001FF E5 81            [12]  498 	mov	a,sp
      000201 24 07            [12]  499 	add	a,#0x07
      000203 F5 81            [12]  500 	mov	sp,a
      000205 AD 82            [24]  501 	mov	r5,dpl
      000207 AE 83            [24]  502 	mov	r6,dph
      000209 AF F0            [24]  503 	mov	r7,b
                                    504 ;	../../core/lib/trickle-timer.c:197: loctt = (struct trickle_timer *)ptr;
      00020B 90r00r00         [24]  505 	mov	dptr,#_loctt
      00020E ED               [12]  506 	mov	a,r5
      00020F F0               [24]  507 	movx	@dptr,a
      000210 EE               [12]  508 	mov	a,r6
      000211 A3               [24]  509 	inc	dptr
      000212 F0               [24]  510 	movx	@dptr,a
      000213 EF               [12]  511 	mov	a,r7
      000214 A3               [24]  512 	inc	dptr
      000215 F0               [24]  513 	movx	@dptr,a
                                    514 ;	../../core/lib/trickle-timer.c:199: loctt->c = 0;
      000216 74 26            [12]  515 	mov	a,#0x26
      000218 2D               [12]  516 	add	a,r5
      000219 FA               [12]  517 	mov	r2,a
      00021A E4               [12]  518 	clr	a
      00021B 3E               [12]  519 	addc	a,r6
      00021C FB               [12]  520 	mov	r3,a
      00021D 8F 04            [24]  521 	mov	ar4,r7
      00021F 8A 82            [24]  522 	mov	dpl,r2
      000221 8B 83            [24]  523 	mov	dph,r3
      000223 8C F0            [24]  524 	mov	b,r4
      000225 E4               [12]  525 	clr	a
      000226 12r00r00         [24]  526 	lcall	__gptrput
                                    527 ;	../../core/lib/trickle-timer.c:206: last_end = TRICKLE_TIMER_INTERVAL_END(loctt);
      000229 74 04            [12]  528 	mov	a,#0x04
      00022B 2D               [12]  529 	add	a,r5
      00022C FA               [12]  530 	mov	r2,a
      00022D E4               [12]  531 	clr	a
      00022E 3E               [12]  532 	addc	a,r6
      00022F FB               [12]  533 	mov	r3,a
      000230 8F 04            [24]  534 	mov	ar4,r7
      000232 8A 82            [24]  535 	mov	dpl,r2
      000234 8B 83            [24]  536 	mov	dph,r3
      000236 8C F0            [24]  537 	mov	b,r4
      000238 12r00r00         [24]  538 	lcall	__gptrget
      00023B FA               [12]  539 	mov	r2,a
      00023C A3               [24]  540 	inc	dptr
      00023D 12r00r00         [24]  541 	lcall	__gptrget
      000240 FB               [12]  542 	mov	r3,a
      000241 E5 81            [12]  543 	mov	a,sp
      000243 24 FA            [12]  544 	add	a,#0xfa
      000245 F8               [12]  545 	mov	r0,a
      000246 74 02            [12]  546 	mov	a,#0x02
      000248 2D               [12]  547 	add	a,r5
      000249 F6               [12]  548 	mov	@r0,a
      00024A E4               [12]  549 	clr	a
      00024B 3E               [12]  550 	addc	a,r6
      00024C 08               [12]  551 	inc	r0
      00024D F6               [12]  552 	mov	@r0,a
      00024E 08               [12]  553 	inc	r0
      00024F A6 07            [24]  554 	mov	@r0,ar7
      000251 E5 81            [12]  555 	mov	a,sp
      000253 24 FA            [12]  556 	add	a,#0xfa
      000255 F8               [12]  557 	mov	r0,a
      000256 86 82            [24]  558 	mov	dpl,@r0
      000258 08               [12]  559 	inc	r0
      000259 86 83            [24]  560 	mov	dph,@r0
      00025B 08               [12]  561 	inc	r0
      00025C 86 F0            [24]  562 	mov	b,@r0
      00025E E5 81            [12]  563 	mov	a,sp
      000260 24 FD            [12]  564 	add	a,#0xfd
      000262 F9               [12]  565 	mov	r1,a
      000263 12r00r00         [24]  566 	lcall	__gptrget
      000266 F7               [12]  567 	mov	@r1,a
      000267 A3               [24]  568 	inc	dptr
      000268 12r00r00         [24]  569 	lcall	__gptrget
      00026B 09               [12]  570 	inc	r1
      00026C F7               [12]  571 	mov	@r1,a
      00026D E5 81            [12]  572 	mov	a,sp
      00026F 24 FD            [12]  573 	add	a,#0xfd
      000271 F8               [12]  574 	mov	r0,a
      000272 E6               [12]  575 	mov	a,@r0
      000273 2A               [12]  576 	add	a,r2
      000274 FA               [12]  577 	mov	r2,a
      000275 08               [12]  578 	inc	r0
      000276 E6               [12]  579 	mov	a,@r0
      000277 3B               [12]  580 	addc	a,r3
      000278 FB               [12]  581 	mov	r3,a
      000279 A8 81            [24]  582 	mov	r0,sp
      00027B 18               [12]  583 	dec	r0
      00027C A6 02            [24]  584 	mov	@r0,ar2
      00027E 08               [12]  585 	inc	r0
      00027F A6 03            [24]  586 	mov	@r0,ar3
                                    587 ;	../../core/lib/trickle-timer.c:209: if(loctt->i_cur <= TRICKLE_TIMER_INTERVAL_MAX(loctt) >> 1) {
      000281 74 06            [12]  588 	mov	a,#0x06
      000283 2D               [12]  589 	add	a,r5
      000284 FD               [12]  590 	mov	r5,a
      000285 E4               [12]  591 	clr	a
      000286 3E               [12]  592 	addc	a,r6
      000287 FE               [12]  593 	mov	r6,a
      000288 8D 82            [24]  594 	mov	dpl,r5
      00028A 8E 83            [24]  595 	mov	dph,r6
      00028C 8F F0            [24]  596 	mov	b,r7
      00028E 12r00r00         [24]  597 	lcall	__gptrget
      000291 FE               [12]  598 	mov	r6,a
      000292 A3               [24]  599 	inc	dptr
      000293 12r00r00         [24]  600 	lcall	__gptrget
      000296 FF               [12]  601 	mov	r7,a
      000297 8E 02            [24]  602 	mov	ar2,r6
      000299 C3               [12]  603 	clr	c
      00029A 13               [12]  604 	rrc	a
      00029B CA               [12]  605 	xch	a,r2
      00029C 13               [12]  606 	rrc	a
      00029D CA               [12]  607 	xch	a,r2
      00029E FD               [12]  608 	mov	r5,a
      00029F E5 81            [12]  609 	mov	a,sp
      0002A1 24 FD            [12]  610 	add	a,#0xfd
      0002A3 F8               [12]  611 	mov	r0,a
      0002A4 C3               [12]  612 	clr	c
      0002A5 EA               [12]  613 	mov	a,r2
      0002A6 96               [12]  614 	subb	a,@r0
      0002A7 ED               [12]  615 	mov	a,r5
      0002A8 08               [12]  616 	inc	r0
      0002A9 96               [12]  617 	subb	a,@r0
      0002AA 40 27            [24]  618 	jc	00102$
                                    619 ;	../../core/lib/trickle-timer.c:211: loctt->i_cur <<= 1;
      0002AC E5 81            [12]  620 	mov	a,sp
      0002AE 24 FD            [12]  621 	add	a,#0xfd
      0002B0 F8               [12]  622 	mov	r0,a
      0002B1 86 02            [24]  623 	mov	ar2,@r0
      0002B3 08               [12]  624 	inc	r0
      0002B4 E6               [12]  625 	mov	a,@r0
      0002B5 CA               [12]  626 	xch	a,r2
      0002B6 25 E0            [12]  627 	add	a,acc
      0002B8 CA               [12]  628 	xch	a,r2
      0002B9 33               [12]  629 	rlc	a
      0002BA FD               [12]  630 	mov	r5,a
      0002BB E5 81            [12]  631 	mov	a,sp
      0002BD 24 FA            [12]  632 	add	a,#0xfa
      0002BF F8               [12]  633 	mov	r0,a
      0002C0 86 82            [24]  634 	mov	dpl,@r0
      0002C2 08               [12]  635 	inc	r0
      0002C3 86 83            [24]  636 	mov	dph,@r0
      0002C5 08               [12]  637 	inc	r0
      0002C6 86 F0            [24]  638 	mov	b,@r0
      0002C8 EA               [12]  639 	mov	a,r2
      0002C9 12r00r00         [24]  640 	lcall	__gptrput
      0002CC A3               [24]  641 	inc	dptr
      0002CD ED               [12]  642 	mov	a,r5
      0002CE 12r00r00         [24]  643 	lcall	__gptrput
      0002D1 80 16            [24]  644 	sjmp	00103$
      0002D3                        645 00102$:
                                    646 ;	../../core/lib/trickle-timer.c:216: loctt->i_cur = TRICKLE_TIMER_INTERVAL_MAX(loctt);
      0002D3 E5 81            [12]  647 	mov	a,sp
      0002D5 24 FA            [12]  648 	add	a,#0xfa
      0002D7 F8               [12]  649 	mov	r0,a
      0002D8 86 82            [24]  650 	mov	dpl,@r0
      0002DA 08               [12]  651 	inc	r0
      0002DB 86 83            [24]  652 	mov	dph,@r0
      0002DD 08               [12]  653 	inc	r0
      0002DE 86 F0            [24]  654 	mov	b,@r0
      0002E0 EE               [12]  655 	mov	a,r6
      0002E1 12r00r00         [24]  656 	lcall	__gptrput
      0002E4 A3               [24]  657 	inc	dptr
      0002E5 EF               [12]  658 	mov	a,r7
      0002E6 12r00r00         [24]  659 	lcall	__gptrput
      0002E9                        660 00103$:
                                    661 ;	../../core/lib/trickle-timer.c:221: loc_clock = get_t(loctt->i_cur);
      0002E9 E5 81            [12]  662 	mov	a,sp
      0002EB 24 FA            [12]  663 	add	a,#0xfa
      0002ED F8               [12]  664 	mov	r0,a
      0002EE 86 82            [24]  665 	mov	dpl,@r0
      0002F0 08               [12]  666 	inc	r0
      0002F1 86 83            [24]  667 	mov	dph,@r0
      0002F3 08               [12]  668 	inc	r0
      0002F4 86 F0            [24]  669 	mov	b,@r0
      0002F6 12r00r00         [24]  670 	lcall	__gptrget
      0002F9 FE               [12]  671 	mov	r6,a
      0002FA A3               [24]  672 	inc	dptr
      0002FB 12r00r00         [24]  673 	lcall	__gptrget
      0002FE FF               [12]  674 	mov	r7,a
      0002FF 8E 82            [24]  675 	mov	dpl,r6
      000301 8F 83            [24]  676 	mov	dph,r7
      000303 78rB9            [12]  677 	mov	r0,#_get_t
      000305 79s00            [12]  678 	mov	r1,#(_get_t >> 8)
      000307 7As00            [12]  679 	mov	r2,#(_get_t >> 16)
      000309 12r00r00         [24]  680 	lcall	__sdcc_banked_call
      00030C AE 82            [24]  681 	mov	r6,dpl
      00030E AF 83            [24]  682 	mov	r7,dph
      000310 90r00r03         [24]  683 	mov	dptr,#_loc_clock
      000313 EE               [12]  684 	mov	a,r6
      000314 F0               [24]  685 	movx	@dptr,a
      000315 EF               [12]  686 	mov	a,r7
      000316 A3               [24]  687 	inc	dptr
      000317 F0               [24]  688 	movx	@dptr,a
                                    689 ;	../../core/lib/trickle-timer.c:228: loc_clock = (last_end + loc_clock) - clock_time();
      000318 A8 81            [24]  690 	mov	r0,sp
      00031A 18               [12]  691 	dec	r0
      00031B EE               [12]  692 	mov	a,r6
      00031C 26               [12]  693 	add	a,@r0
      00031D FE               [12]  694 	mov	r6,a
      00031E EF               [12]  695 	mov	a,r7
      00031F 08               [12]  696 	inc	r0
      000320 36               [12]  697 	addc	a,@r0
      000321 FF               [12]  698 	mov	r7,a
      000322 C0 07            [24]  699 	push	ar7
      000324 C0 06            [24]  700 	push	ar6
      000326 78r00            [12]  701 	mov	r0,#_clock_time
      000328 79s00            [12]  702 	mov	r1,#(_clock_time >> 8)
      00032A 7As00            [12]  703 	mov	r2,#(_clock_time >> 16)
      00032C 12r00r00         [24]  704 	lcall	__sdcc_banked_call
      00032F AA 82            [24]  705 	mov	r2,dpl
      000331 AD 83            [24]  706 	mov	r5,dph
      000333 D0 06            [24]  707 	pop	ar6
      000335 D0 07            [24]  708 	pop	ar7
      000337 EE               [12]  709 	mov	a,r6
      000338 C3               [12]  710 	clr	c
      000339 9A               [12]  711 	subb	a,r2
      00033A FE               [12]  712 	mov	r6,a
      00033B EF               [12]  713 	mov	a,r7
      00033C 9D               [12]  714 	subb	a,r5
      00033D FF               [12]  715 	mov	r7,a
      00033E 90r00r03         [24]  716 	mov	dptr,#_loc_clock
      000341 EE               [12]  717 	mov	a,r6
      000342 F0               [24]  718 	movx	@dptr,a
      000343 EF               [12]  719 	mov	a,r7
      000344 A3               [24]  720 	inc	dptr
      000345 F0               [24]  721 	movx	@dptr,a
                                    722 ;	../../core/lib/trickle-timer.c:231: if(loc_clock > (TRICKLE_TIMER_CLOCK_MAX >> 1)) {
      000346 C3               [12]  723 	clr	c
      000347 74 FF            [12]  724 	mov	a,#0xFF
      000349 9E               [12]  725 	subb	a,r6
      00034A 74 7F            [12]  726 	mov	a,#0x7F
      00034C 9F               [12]  727 	subb	a,r7
      00034D 50 08            [24]  728 	jnc	00105$
                                    729 ;	../../core/lib/trickle-timer.c:233: loc_clock = 0;
      00034F 90r00r03         [24]  730 	mov	dptr,#_loc_clock
      000352 E4               [12]  731 	clr	a
      000353 F0               [24]  732 	movx	@dptr,a
      000354 E4               [12]  733 	clr	a
      000355 A3               [24]  734 	inc	dptr
      000356 F0               [24]  735 	movx	@dptr,a
      000357                        736 00105$:
                                    737 ;	../../core/lib/trickle-timer.c:236: ctimer_set(&loctt->ct, loc_clock, fire, loctt);
      000357 90r00r00         [24]  738 	mov	dptr,#_loctt
      00035A E0               [24]  739 	movx	a,@dptr
      00035B FD               [12]  740 	mov	r5,a
      00035C A3               [24]  741 	inc	dptr
      00035D E0               [24]  742 	movx	a,@dptr
      00035E FE               [12]  743 	mov	r6,a
      00035F A3               [24]  744 	inc	dptr
      000360 E0               [24]  745 	movx	a,@dptr
      000361 FF               [12]  746 	mov	r7,a
      000362 8D 02            [24]  747 	mov	ar2,r5
      000364 8E 03            [24]  748 	mov	ar3,r6
      000366 8F 04            [24]  749 	mov	ar4,r7
      000368 74 08            [12]  750 	mov	a,#0x08
      00036A 2D               [12]  751 	add	a,r5
      00036B FD               [12]  752 	mov	r5,a
      00036C E4               [12]  753 	clr	a
      00036D 3E               [12]  754 	addc	a,r6
      00036E FE               [12]  755 	mov	r6,a
      00036F C0 02            [24]  756 	push	ar2
      000371 C0 03            [24]  757 	push	ar3
      000373 C0 04            [24]  758 	push	ar4
      000375 74rCE            [12]  759 	mov	a,#_fire
      000377 C0 E0            [24]  760 	push	acc
      000379 74s03            [12]  761 	mov	a,#(_fire >> 8)
      00037B C0 E0            [24]  762 	push	acc
      00037D 74s00            [12]  763 	mov	a,#(_fire >> 16)
      00037F C0 E0            [24]  764 	push	acc
      000381 90r00r03         [24]  765 	mov	dptr,#_loc_clock
      000384 E0               [24]  766 	movx	a,@dptr
      000385 C0 E0            [24]  767 	push	acc
      000387 A3               [24]  768 	inc	dptr
      000388 E0               [24]  769 	movx	a,@dptr
      000389 C0 E0            [24]  770 	push	acc
      00038B 8D 82            [24]  771 	mov	dpl,r5
      00038D 8E 83            [24]  772 	mov	dph,r6
      00038F 8F F0            [24]  773 	mov	b,r7
      000391 78r00            [12]  774 	mov	r0,#_ctimer_set
      000393 79s00            [12]  775 	mov	r1,#(_ctimer_set >> 8)
      000395 7As00            [12]  776 	mov	r2,#(_ctimer_set >> 16)
      000397 12r00r00         [24]  777 	lcall	__sdcc_banked_call
      00039A E5 81            [12]  778 	mov	a,sp
      00039C 24 F8            [12]  779 	add	a,#0xf8
      00039E F5 81            [12]  780 	mov	sp,a
                                    781 ;	../../core/lib/trickle-timer.c:240: loctt->i_start = last_end;
      0003A0 90r00r00         [24]  782 	mov	dptr,#_loctt
      0003A3 E0               [24]  783 	movx	a,@dptr
      0003A4 FD               [12]  784 	mov	r5,a
      0003A5 A3               [24]  785 	inc	dptr
      0003A6 E0               [24]  786 	movx	a,@dptr
      0003A7 FE               [12]  787 	mov	r6,a
      0003A8 A3               [24]  788 	inc	dptr
      0003A9 E0               [24]  789 	movx	a,@dptr
      0003AA FF               [12]  790 	mov	r7,a
      0003AB 74 04            [12]  791 	mov	a,#0x04
      0003AD 2D               [12]  792 	add	a,r5
      0003AE FD               [12]  793 	mov	r5,a
      0003AF E4               [12]  794 	clr	a
      0003B0 3E               [12]  795 	addc	a,r6
      0003B1 FE               [12]  796 	mov	r6,a
      0003B2 8D 82            [24]  797 	mov	dpl,r5
      0003B4 8E 83            [24]  798 	mov	dph,r6
      0003B6 8F F0            [24]  799 	mov	b,r7
      0003B8 A8 81            [24]  800 	mov	r0,sp
      0003BA 18               [12]  801 	dec	r0
      0003BB E6               [12]  802 	mov	a,@r0
      0003BC 12r00r00         [24]  803 	lcall	__gptrput
      0003BF A3               [24]  804 	inc	dptr
      0003C0 08               [12]  805 	inc	r0
      0003C1 E6               [12]  806 	mov	a,@r0
      0003C2 12r00r00         [24]  807 	lcall	__gptrput
      0003C5 E5 81            [12]  808 	mov	a,sp
      0003C7 24 F9            [12]  809 	add	a,#0xF9
      0003C9 F5 81            [12]  810 	mov	sp,a
      0003CB 02r00r00         [24]  811 	ljmp	__sdcc_banked_ret
                                    812 ;------------------------------------------------------------
                                    813 ;Allocation info for local variables in function 'fire'
                                    814 ;------------------------------------------------------------
                                    815 ;ptr                       Allocated to registers r5 r6 r7 
                                    816 ;sloc0                     Allocated to stack - sp -5
                                    817 ;sloc1                     Allocated to stack - sp +1
                                    818 ;sloc2                     Allocated to stack - sp -2
                                    819 ;------------------------------------------------------------
                                    820 ;	../../core/lib/trickle-timer.c:260: fire(void *ptr)
                                    821 ;	-----------------------------------------
                                    822 ;	 function fire
                                    823 ;	-----------------------------------------
      0003CE                        824 _fire:
      0003CE E5 81            [12]  825 	mov	a,sp
      0003D0 24 06            [12]  826 	add	a,#0x06
      0003D2 F5 81            [12]  827 	mov	sp,a
      0003D4 AD 82            [24]  828 	mov	r5,dpl
      0003D6 AE 83            [24]  829 	mov	r6,dph
      0003D8 AF F0            [24]  830 	mov	r7,b
                                    831 ;	../../core/lib/trickle-timer.c:263: loctt = (struct trickle_timer *)ptr;
      0003DA A8 81            [24]  832 	mov	r0,sp
      0003DC 18               [12]  833 	dec	r0
      0003DD 18               [12]  834 	dec	r0
      0003DE A6 05            [24]  835 	mov	@r0,ar5
      0003E0 08               [12]  836 	inc	r0
      0003E1 A6 06            [24]  837 	mov	@r0,ar6
      0003E3 08               [12]  838 	inc	r0
      0003E4 A6 07            [24]  839 	mov	@r0,ar7
      0003E6 A8 81            [24]  840 	mov	r0,sp
      0003E8 18               [12]  841 	dec	r0
      0003E9 18               [12]  842 	dec	r0
      0003EA 90r00r00         [24]  843 	mov	dptr,#_loctt
      0003ED E6               [12]  844 	mov	a,@r0
      0003EE F0               [24]  845 	movx	@dptr,a
      0003EF 08               [12]  846 	inc	r0
      0003F0 E6               [12]  847 	mov	a,@r0
      0003F1 A3               [24]  848 	inc	dptr
      0003F2 F0               [24]  849 	movx	@dptr,a
      0003F3 08               [12]  850 	inc	r0
      0003F4 E6               [12]  851 	mov	a,@r0
      0003F5 A3               [24]  852 	inc	dptr
      0003F6 F0               [24]  853 	movx	@dptr,a
                                    854 ;	../../core/lib/trickle-timer.c:270: if(loctt->cb) {
      0003F7 A8 81            [24]  855 	mov	r0,sp
      0003F9 18               [12]  856 	dec	r0
      0003FA 18               [12]  857 	dec	r0
      0003FB 74 1E            [12]  858 	mov	a,#0x1E
      0003FD 26               [12]  859 	add	a,@r0
      0003FE FA               [12]  860 	mov	r2,a
      0003FF E4               [12]  861 	clr	a
      000400 08               [12]  862 	inc	r0
      000401 36               [12]  863 	addc	a,@r0
      000402 FB               [12]  864 	mov	r3,a
      000403 08               [12]  865 	inc	r0
      000404 86 04            [24]  866 	mov	ar4,@r0
      000406 8A 82            [24]  867 	mov	dpl,r2
      000408 8B 83            [24]  868 	mov	dph,r3
      00040A 8C F0            [24]  869 	mov	b,r4
      00040C 12r00r00         [24]  870 	lcall	__gptrget
      00040F FA               [12]  871 	mov	r2,a
      000410 A3               [24]  872 	inc	dptr
      000411 12r00r00         [24]  873 	lcall	__gptrget
      000414 FB               [12]  874 	mov	r3,a
      000415 A3               [24]  875 	inc	dptr
      000416 12r00r00         [24]  876 	lcall	__gptrget
      000419 FC               [12]  877 	mov	r4,a
      00041A EA               [12]  878 	mov	a,r2
      00041B 4B               [12]  879 	orl	a,r3
      00041C 70 03            [24]  880 	jnz	00122$
      00041E 02r04rB2         [24]  881 	ljmp	00102$
      000421                        882 00122$:
                                    883 ;	../../core/lib/trickle-timer.c:277: loctt->cb(loctt->cb_arg, TRICKLE_TIMER_PROTO_TX_ALLOW(loctt));
      000421 E5 81            [12]  884 	mov	a,sp
      000423 24 FB            [12]  885 	add	a,#0xfb
      000425 F8               [12]  886 	mov	r0,a
      000426 A6 02            [24]  887 	mov	@r0,ar2
      000428 08               [12]  888 	inc	r0
      000429 A6 03            [24]  889 	mov	@r0,ar3
      00042B 08               [12]  890 	inc	r0
      00042C A6 04            [24]  891 	mov	@r0,ar4
      00042E A8 81            [24]  892 	mov	r0,sp
      000430 18               [12]  893 	dec	r0
      000431 18               [12]  894 	dec	r0
      000432 74 25            [12]  895 	mov	a,#0x25
      000434 26               [12]  896 	add	a,@r0
      000435 FF               [12]  897 	mov	r7,a
      000436 E4               [12]  898 	clr	a
      000437 08               [12]  899 	inc	r0
      000438 36               [12]  900 	addc	a,@r0
      000439 FE               [12]  901 	mov	r6,a
      00043A 08               [12]  902 	inc	r0
      00043B 86 05            [24]  903 	mov	ar5,@r0
      00043D 8F 82            [24]  904 	mov	dpl,r7
      00043F 8E 83            [24]  905 	mov	dph,r6
      000441 8D F0            [24]  906 	mov	b,r5
      000443 12r00r00         [24]  907 	lcall	__gptrget
      000446 FE               [12]  908 	mov	r6,a
      000447 60 21            [24]  909 	jz	00108$
      000449 A8 81            [24]  910 	mov	r0,sp
      00044B 18               [12]  911 	dec	r0
      00044C 18               [12]  912 	dec	r0
      00044D 74 26            [12]  913 	mov	a,#0x26
      00044F 26               [12]  914 	add	a,@r0
      000450 FA               [12]  915 	mov	r2,a
      000451 E4               [12]  916 	clr	a
      000452 08               [12]  917 	inc	r0
      000453 36               [12]  918 	addc	a,@r0
      000454 FB               [12]  919 	mov	r3,a
      000455 08               [12]  920 	inc	r0
      000456 86 07            [24]  921 	mov	ar7,@r0
      000458 8A 82            [24]  922 	mov	dpl,r2
      00045A 8B 83            [24]  923 	mov	dph,r3
      00045C 8F F0            [24]  924 	mov	b,r7
      00045E 12r00r00         [24]  925 	lcall	__gptrget
      000461 FA               [12]  926 	mov	r2,a
      000462 C3               [12]  927 	clr	c
      000463 9E               [12]  928 	subb	a,r6
      000464 40 04            [24]  929 	jc	00108$
      000466 7F 00            [12]  930 	mov	r7,#0x00
      000468 80 02            [24]  931 	sjmp	00109$
      00046A                        932 00108$:
      00046A 7F 01            [12]  933 	mov	r7,#0x01
      00046C                        934 00109$:
      00046C A8 81            [24]  935 	mov	r0,sp
      00046E 18               [12]  936 	dec	r0
      00046F 18               [12]  937 	dec	r0
      000470 74 21            [12]  938 	mov	a,#0x21
      000472 26               [12]  939 	add	a,@r0
      000473 FB               [12]  940 	mov	r3,a
      000474 E4               [12]  941 	clr	a
      000475 08               [12]  942 	inc	r0
      000476 36               [12]  943 	addc	a,@r0
      000477 FD               [12]  944 	mov	r5,a
      000478 08               [12]  945 	inc	r0
      000479 86 06            [24]  946 	mov	ar6,@r0
      00047B 8B 82            [24]  947 	mov	dpl,r3
      00047D 8D 83            [24]  948 	mov	dph,r5
      00047F 8E F0            [24]  949 	mov	b,r6
      000481 12r00r00         [24]  950 	lcall	__gptrget
      000484 FB               [12]  951 	mov	r3,a
      000485 A3               [24]  952 	inc	dptr
      000486 12r00r00         [24]  953 	lcall	__gptrget
      000489 FD               [12]  954 	mov	r5,a
      00048A A3               [24]  955 	inc	dptr
      00048B 12r00r00         [24]  956 	lcall	__gptrget
      00048E FE               [12]  957 	mov	r6,a
      00048F C0 07            [24]  958 	push	ar7
      000491 E5 81            [12]  959 	mov	a,sp
      000493 24 FA            [12]  960 	add	a,#0xfa
      000495 F8               [12]  961 	mov	r0,a
      000496 E6               [12]  962 	mov	a,@r0
      000497 C0 E0            [24]  963 	push	acc
      000499 08               [12]  964 	inc	r0
      00049A E6               [12]  965 	mov	a,@r0
      00049B C0 E0            [24]  966 	push	acc
      00049D 08               [12]  967 	inc	r0
      00049E E6               [12]  968 	mov	a,@r0
      00049F C0 E0            [24]  969 	push	acc
      0004A1 8B 82            [24]  970 	mov	dpl,r3
      0004A3 8D 83            [24]  971 	mov	dph,r5
      0004A5 8E F0            [24]  972 	mov	b,r6
      0004A7 D0 02            [24]  973 	pop	ar2
      0004A9 D0 01            [24]  974 	pop	ar1
      0004AB D0 00            [24]  975 	pop	ar0
      0004AD 12r00r00         [24]  976 	lcall	__sdcc_banked_call
      0004B0 15 81            [12]  977 	dec	sp
      0004B2                        978 00102$:
                                    979 ;	../../core/lib/trickle-timer.c:280: if(trickle_timer_is_running(loctt)) {
      0004B2 90r00r00         [24]  980 	mov	dptr,#_loctt
      0004B5 E0               [24]  981 	movx	a,@dptr
      0004B6 FE               [12]  982 	mov	r6,a
      0004B7 A3               [24]  983 	inc	dptr
      0004B8 E0               [24]  984 	movx	a,@dptr
      0004B9 FD               [12]  985 	mov	r5,a
      0004BA A3               [24]  986 	inc	dptr
      0004BB E0               [24]  987 	movx	a,@dptr
      0004BC FC               [12]  988 	mov	r4,a
      0004BD 74 02            [12]  989 	mov	a,#0x02
      0004BF 2E               [12]  990 	add	a,r6
      0004C0 FA               [12]  991 	mov	r2,a
      0004C1 E4               [12]  992 	clr	a
      0004C2 3D               [12]  993 	addc	a,r5
      0004C3 FB               [12]  994 	mov	r3,a
      0004C4 8C 07            [24]  995 	mov	ar7,r4
      0004C6 8A 82            [24]  996 	mov	dpl,r2
      0004C8 8B 83            [24]  997 	mov	dph,r3
      0004CA 8F F0            [24]  998 	mov	b,r7
      0004CC 12r00r00         [24]  999 	lcall	__gptrget
      0004CF FA               [12] 1000 	mov	r2,a
      0004D0 A3               [24] 1001 	inc	dptr
      0004D1 12r00r00         [24] 1002 	lcall	__gptrget
      0004D4 FB               [12] 1003 	mov	r3,a
      0004D5 4A               [12] 1004 	orl	a,r2
      0004D6 60 0F            [24] 1005 	jz	00105$
                                   1006 ;	../../core/lib/trickle-timer.c:281: schedule_for_end(loctt);
      0004D8 8E 82            [24] 1007 	mov	dpl,r6
      0004DA 8D 83            [24] 1008 	mov	dph,r5
      0004DC 8C F0            [24] 1009 	mov	b,r4
      0004DE 78r25            [12] 1010 	mov	r0,#_schedule_for_end
      0004E0 79s01            [12] 1011 	mov	r1,#(_schedule_for_end >> 8)
      0004E2 7As00            [12] 1012 	mov	r2,#(_schedule_for_end >> 16)
      0004E4 12r00r00         [24] 1013 	lcall	__sdcc_banked_call
      0004E7                       1014 00105$:
      0004E7 E5 81            [12] 1015 	mov	a,sp
      0004E9 24 FA            [12] 1016 	add	a,#0xFA
      0004EB F5 81            [12] 1017 	mov	sp,a
      0004ED 02r00r00         [24] 1018 	ljmp	__sdcc_banked_ret
                                   1019 ;------------------------------------------------------------
                                   1020 ;Allocation info for local variables in function 'new_interval'
                                   1021 ;------------------------------------------------------------
                                   1022 ;tt                        Allocated to stack - sp -5
                                   1023 ;sloc0                     Allocated to stack - sp -2
                                   1024 ;------------------------------------------------------------
                                   1025 ;	../../core/lib/trickle-timer.c:288: new_interval(struct trickle_timer *tt)
                                   1026 ;	-----------------------------------------
                                   1027 ;	 function new_interval
                                   1028 ;	-----------------------------------------
      0004F0                       1029 _new_interval:
      0004F0 C0 82            [24] 1030 	push	dpl
      0004F2 C0 83            [24] 1031 	push	dph
      0004F4 C0 F0            [24] 1032 	push	b
      0004F6 05 81            [12] 1033 	inc	sp
      0004F8 05 81            [12] 1034 	inc	sp
      0004FA 05 81            [12] 1035 	inc	sp
                                   1036 ;	../../core/lib/trickle-timer.c:290: tt->c = 0;
      0004FC E5 81            [12] 1037 	mov	a,sp
      0004FE 24 FB            [12] 1038 	add	a,#0xfb
      000500 F8               [12] 1039 	mov	r0,a
      000501 74 26            [12] 1040 	mov	a,#0x26
      000503 26               [12] 1041 	add	a,@r0
      000504 FA               [12] 1042 	mov	r2,a
      000505 E4               [12] 1043 	clr	a
      000506 08               [12] 1044 	inc	r0
      000507 36               [12] 1045 	addc	a,@r0
      000508 FB               [12] 1046 	mov	r3,a
      000509 08               [12] 1047 	inc	r0
      00050A 86 04            [24] 1048 	mov	ar4,@r0
      00050C 8A 82            [24] 1049 	mov	dpl,r2
      00050E 8B 83            [24] 1050 	mov	dph,r3
      000510 8C F0            [24] 1051 	mov	b,r4
      000512 E4               [12] 1052 	clr	a
      000513 12r00r00         [24] 1053 	lcall	__gptrput
                                   1054 ;	../../core/lib/trickle-timer.c:293: loc_clock = get_t(tt->i_cur);
      000516 E5 81            [12] 1055 	mov	a,sp
      000518 24 FB            [12] 1056 	add	a,#0xfb
      00051A F8               [12] 1057 	mov	r0,a
      00051B 74 02            [12] 1058 	mov	a,#0x02
      00051D 26               [12] 1059 	add	a,@r0
      00051E FA               [12] 1060 	mov	r2,a
      00051F E4               [12] 1061 	clr	a
      000520 08               [12] 1062 	inc	r0
      000521 36               [12] 1063 	addc	a,@r0
      000522 FB               [12] 1064 	mov	r3,a
      000523 08               [12] 1065 	inc	r0
      000524 86 04            [24] 1066 	mov	ar4,@r0
      000526 8A 82            [24] 1067 	mov	dpl,r2
      000528 8B 83            [24] 1068 	mov	dph,r3
      00052A 8C F0            [24] 1069 	mov	b,r4
      00052C 12r00r00         [24] 1070 	lcall	__gptrget
      00052F FA               [12] 1071 	mov	r2,a
      000530 A3               [24] 1072 	inc	dptr
      000531 12r00r00         [24] 1073 	lcall	__gptrget
      000534 FB               [12] 1074 	mov	r3,a
      000535 8A 82            [24] 1075 	mov	dpl,r2
      000537 8B 83            [24] 1076 	mov	dph,r3
      000539 78rB9            [12] 1077 	mov	r0,#_get_t
      00053B 79s00            [12] 1078 	mov	r1,#(_get_t >> 8)
      00053D 7As00            [12] 1079 	mov	r2,#(_get_t >> 16)
      00053F 12r00r00         [24] 1080 	lcall	__sdcc_banked_call
      000542 AB 82            [24] 1081 	mov	r3,dpl
      000544 AC 83            [24] 1082 	mov	r4,dph
      000546 90r00r03         [24] 1083 	mov	dptr,#_loc_clock
      000549 EB               [12] 1084 	mov	a,r3
      00054A F0               [24] 1085 	movx	@dptr,a
      00054B EC               [12] 1086 	mov	a,r4
      00054C A3               [24] 1087 	inc	dptr
      00054D F0               [24] 1088 	movx	@dptr,a
                                   1089 ;	../../core/lib/trickle-timer.c:295: ctimer_set(&tt->ct, loc_clock, fire, tt);
      00054E E5 81            [12] 1090 	mov	a,sp
      000550 24 FB            [12] 1091 	add	a,#0xfb
      000552 F8               [12] 1092 	mov	r0,a
      000553 A9 81            [24] 1093 	mov	r1,sp
      000555 19               [12] 1094 	dec	r1
      000556 19               [12] 1095 	dec	r1
      000557 E6               [12] 1096 	mov	a,@r0
      000558 F7               [12] 1097 	mov	@r1,a
      000559 08               [12] 1098 	inc	r0
      00055A 09               [12] 1099 	inc	r1
      00055B E6               [12] 1100 	mov	a,@r0
      00055C F7               [12] 1101 	mov	@r1,a
      00055D 08               [12] 1102 	inc	r0
      00055E 09               [12] 1103 	inc	r1
      00055F E6               [12] 1104 	mov	a,@r0
      000560 F7               [12] 1105 	mov	@r1,a
      000561 E5 81            [12] 1106 	mov	a,sp
      000563 24 FB            [12] 1107 	add	a,#0xfb
      000565 F8               [12] 1108 	mov	r0,a
      000566 74 08            [12] 1109 	mov	a,#0x08
      000568 26               [12] 1110 	add	a,@r0
      000569 FD               [12] 1111 	mov	r5,a
      00056A E4               [12] 1112 	clr	a
      00056B 08               [12] 1113 	inc	r0
      00056C 36               [12] 1114 	addc	a,@r0
      00056D FE               [12] 1115 	mov	r6,a
      00056E 08               [12] 1116 	inc	r0
      00056F 86 07            [24] 1117 	mov	ar7,@r0
      000571 A8 81            [24] 1118 	mov	r0,sp
      000573 18               [12] 1119 	dec	r0
      000574 18               [12] 1120 	dec	r0
      000575 E6               [12] 1121 	mov	a,@r0
      000576 C0 E0            [24] 1122 	push	acc
      000578 08               [12] 1123 	inc	r0
      000579 E6               [12] 1124 	mov	a,@r0
      00057A C0 E0            [24] 1125 	push	acc
      00057C 08               [12] 1126 	inc	r0
      00057D E6               [12] 1127 	mov	a,@r0
      00057E C0 E0            [24] 1128 	push	acc
      000580 74rCE            [12] 1129 	mov	a,#_fire
      000582 C0 E0            [24] 1130 	push	acc
      000584 74s03            [12] 1131 	mov	a,#(_fire >> 8)
      000586 C0 E0            [24] 1132 	push	acc
      000588 74s00            [12] 1133 	mov	a,#(_fire >> 16)
      00058A C0 E0            [24] 1134 	push	acc
      00058C C0 03            [24] 1135 	push	ar3
      00058E C0 04            [24] 1136 	push	ar4
      000590 8D 82            [24] 1137 	mov	dpl,r5
      000592 8E 83            [24] 1138 	mov	dph,r6
      000594 8F F0            [24] 1139 	mov	b,r7
      000596 78r00            [12] 1140 	mov	r0,#_ctimer_set
      000598 79s00            [12] 1141 	mov	r1,#(_ctimer_set >> 8)
      00059A 7As00            [12] 1142 	mov	r2,#(_ctimer_set >> 16)
      00059C 12r00r00         [24] 1143 	lcall	__sdcc_banked_call
      00059F E5 81            [12] 1144 	mov	a,sp
      0005A1 24 F8            [12] 1145 	add	a,#0xf8
                                   1146 ;	../../core/lib/trickle-timer.c:298: tt->i_start = tt->ct.etimer.timer.start;
      0005A3 F5 81            [12] 1147 	mov	sp,a
      0005A5 24 FB            [12] 1148 	add	a,#0xfb
      0005A7 F8               [12] 1149 	mov	r0,a
      0005A8 74 04            [12] 1150 	mov	a,#0x04
      0005AA 26               [12] 1151 	add	a,@r0
      0005AB FD               [12] 1152 	mov	r5,a
      0005AC E4               [12] 1153 	clr	a
      0005AD 08               [12] 1154 	inc	r0
      0005AE 36               [12] 1155 	addc	a,@r0
      0005AF FE               [12] 1156 	mov	r6,a
      0005B0 08               [12] 1157 	inc	r0
      0005B1 86 07            [24] 1158 	mov	ar7,@r0
      0005B3 E5 81            [12] 1159 	mov	a,sp
      0005B5 24 FB            [12] 1160 	add	a,#0xfb
      0005B7 F8               [12] 1161 	mov	r0,a
      0005B8 74 08            [12] 1162 	mov	a,#0x08
      0005BA 26               [12] 1163 	add	a,@r0
      0005BB FA               [12] 1164 	mov	r2,a
      0005BC E4               [12] 1165 	clr	a
      0005BD 08               [12] 1166 	inc	r0
      0005BE 36               [12] 1167 	addc	a,@r0
      0005BF FB               [12] 1168 	mov	r3,a
      0005C0 08               [12] 1169 	inc	r0
      0005C1 86 04            [24] 1170 	mov	ar4,@r0
      0005C3 74 03            [12] 1171 	mov	a,#0x03
      0005C5 2A               [12] 1172 	add	a,r2
      0005C6 FA               [12] 1173 	mov	r2,a
      0005C7 E4               [12] 1174 	clr	a
      0005C8 3B               [12] 1175 	addc	a,r3
      0005C9 FB               [12] 1176 	mov	r3,a
      0005CA 8A 82            [24] 1177 	mov	dpl,r2
      0005CC 8B 83            [24] 1178 	mov	dph,r3
      0005CE 8C F0            [24] 1179 	mov	b,r4
      0005D0 12r00r00         [24] 1180 	lcall	__gptrget
      0005D3 FA               [12] 1181 	mov	r2,a
      0005D4 A3               [24] 1182 	inc	dptr
      0005D5 12r00r00         [24] 1183 	lcall	__gptrget
      0005D8 FB               [12] 1184 	mov	r3,a
      0005D9 8D 82            [24] 1185 	mov	dpl,r5
      0005DB 8E 83            [24] 1186 	mov	dph,r6
      0005DD 8F F0            [24] 1187 	mov	b,r7
      0005DF EA               [12] 1188 	mov	a,r2
      0005E0 12r00r00         [24] 1189 	lcall	__gptrput
      0005E3 A3               [24] 1190 	inc	dptr
      0005E4 EB               [12] 1191 	mov	a,r3
      0005E5 12r00r00         [24] 1192 	lcall	__gptrput
      0005E8 E5 81            [12] 1193 	mov	a,sp
      0005EA 24 FA            [12] 1194 	add	a,#0xFA
      0005EC F5 81            [12] 1195 	mov	sp,a
      0005EE 02r00r00         [24] 1196 	ljmp	__sdcc_banked_ret
                                   1197 ;------------------------------------------------------------
                                   1198 ;Allocation info for local variables in function 'trickle_timer_consistency'
                                   1199 ;------------------------------------------------------------
                                   1200 ;tt                        Allocated to registers r5 r6 r7 
                                   1201 ;------------------------------------------------------------
                                   1202 ;	../../core/lib/trickle-timer.c:308: trickle_timer_consistency(struct trickle_timer *tt)
                                   1203 ;	-----------------------------------------
                                   1204 ;	 function trickle_timer_consistency
                                   1205 ;	-----------------------------------------
      0005F1                       1206 _trickle_timer_consistency:
      0005F1 AD 82            [24] 1207 	mov	r5,dpl
      0005F3 AE 83            [24] 1208 	mov	r6,dph
      0005F5 AF F0            [24] 1209 	mov	r7,b
                                   1210 ;	../../core/lib/trickle-timer.c:310: if(tt->c < 0xFF) {
      0005F7 74 26            [12] 1211 	mov	a,#0x26
      0005F9 2D               [12] 1212 	add	a,r5
      0005FA FD               [12] 1213 	mov	r5,a
      0005FB E4               [12] 1214 	clr	a
      0005FC 3E               [12] 1215 	addc	a,r6
      0005FD FE               [12] 1216 	mov	r6,a
      0005FE 8D 82            [24] 1217 	mov	dpl,r5
      000600 8E 83            [24] 1218 	mov	dph,r6
      000602 8F F0            [24] 1219 	mov	b,r7
      000604 12r00r00         [24] 1220 	lcall	__gptrget
      000607 FC               [12] 1221 	mov	r4,a
      000608 BC FF 00         [24] 1222 	cjne	r4,#0xFF,00108$
      00060B                       1223 00108$:
      00060B 50 0B            [24] 1224 	jnc	00103$
                                   1225 ;	../../core/lib/trickle-timer.c:311: tt->c++;
      00060D 0C               [12] 1226 	inc	r4
      00060E 8D 82            [24] 1227 	mov	dpl,r5
      000610 8E 83            [24] 1228 	mov	dph,r6
      000612 8F F0            [24] 1229 	mov	b,r7
      000614 EC               [12] 1230 	mov	a,r4
      000615 12r00r00         [24] 1231 	lcall	__gptrput
      000618                       1232 00103$:
      000618 02r00r00         [24] 1233 	ljmp	__sdcc_banked_ret
                                   1234 ;------------------------------------------------------------
                                   1235 ;Allocation info for local variables in function 'trickle_timer_inconsistency'
                                   1236 ;------------------------------------------------------------
                                   1237 ;tt                        Allocated to registers r5 r6 r7 
                                   1238 ;sloc0                     Allocated to stack - sp -3
                                   1239 ;sloc1                     Allocated to stack - sp -1
                                   1240 ;------------------------------------------------------------
                                   1241 ;	../../core/lib/trickle-timer.c:317: trickle_timer_inconsistency(struct trickle_timer *tt)
                                   1242 ;	-----------------------------------------
                                   1243 ;	 function trickle_timer_inconsistency
                                   1244 ;	-----------------------------------------
      00061B                       1245 _trickle_timer_inconsistency:
      00061B E5 81            [12] 1246 	mov	a,sp
      00061D 24 04            [12] 1247 	add	a,#0x04
      00061F F5 81            [12] 1248 	mov	sp,a
      000621 AD 82            [24] 1249 	mov	r5,dpl
      000623 AE 83            [24] 1250 	mov	r6,dph
      000625 AF F0            [24] 1251 	mov	r7,b
                                   1252 ;	../../core/lib/trickle-timer.c:321: if(tt->i_cur != tt->i_min) {
      000627 74 02            [12] 1253 	mov	a,#0x02
      000629 2D               [12] 1254 	add	a,r5
      00062A FA               [12] 1255 	mov	r2,a
      00062B E4               [12] 1256 	clr	a
      00062C 3E               [12] 1257 	addc	a,r6
      00062D FB               [12] 1258 	mov	r3,a
      00062E 8F 04            [24] 1259 	mov	ar4,r7
      000630 8A 82            [24] 1260 	mov	dpl,r2
      000632 8B 83            [24] 1261 	mov	dph,r3
      000634 8C F0            [24] 1262 	mov	b,r4
      000636 A8 81            [24] 1263 	mov	r0,sp
      000638 18               [12] 1264 	dec	r0
      000639 12r00r00         [24] 1265 	lcall	__gptrget
      00063C F6               [12] 1266 	mov	@r0,a
      00063D A3               [24] 1267 	inc	dptr
      00063E 12r00r00         [24] 1268 	lcall	__gptrget
      000641 08               [12] 1269 	inc	r0
      000642 F6               [12] 1270 	mov	@r0,a
      000643 8D 82            [24] 1271 	mov	dpl,r5
      000645 8E 83            [24] 1272 	mov	dph,r6
      000647 8F F0            [24] 1273 	mov	b,r7
      000649 E5 81            [12] 1274 	mov	a,sp
      00064B 24 FD            [12] 1275 	add	a,#0xfd
      00064D F8               [12] 1276 	mov	r0,a
      00064E 12r00r00         [24] 1277 	lcall	__gptrget
      000651 F6               [12] 1278 	mov	@r0,a
      000652 A3               [24] 1279 	inc	dptr
      000653 12r00r00         [24] 1280 	lcall	__gptrget
      000656 08               [12] 1281 	inc	r0
      000657 F6               [12] 1282 	mov	@r0,a
      000658 A8 81            [24] 1283 	mov	r0,sp
      00065A 18               [12] 1284 	dec	r0
      00065B E5 81            [12] 1285 	mov	a,sp
      00065D 24 FD            [12] 1286 	add	a,#0xfd
      00065F F9               [12] 1287 	mov	r1,a
      000660 86 F0            [24] 1288 	mov	b,@r0
      000662 E7               [12] 1289 	mov	a,@r1
      000663 B5 F0 0A         [24] 1290 	cjne	a,b,00108$
      000666 08               [12] 1291 	inc	r0
      000667 86 F0            [24] 1292 	mov	b,@r0
      000669 09               [12] 1293 	inc	r1
      00066A E7               [12] 1294 	mov	a,@r1
      00066B B5 F0 02         [24] 1295 	cjne	a,b,00108$
      00066E 80 24            [24] 1296 	sjmp	00103$
      000670                       1297 00108$:
                                   1298 ;	../../core/lib/trickle-timer.c:323: tt->i_cur = tt->i_min;
      000670 8A 82            [24] 1299 	mov	dpl,r2
      000672 8B 83            [24] 1300 	mov	dph,r3
      000674 8C F0            [24] 1301 	mov	b,r4
      000676 E5 81            [12] 1302 	mov	a,sp
      000678 24 FD            [12] 1303 	add	a,#0xfd
      00067A F8               [12] 1304 	mov	r0,a
      00067B E6               [12] 1305 	mov	a,@r0
      00067C 12r00r00         [24] 1306 	lcall	__gptrput
      00067F A3               [24] 1307 	inc	dptr
      000680 08               [12] 1308 	inc	r0
      000681 E6               [12] 1309 	mov	a,@r0
      000682 12r00r00         [24] 1310 	lcall	__gptrput
                                   1311 ;	../../core/lib/trickle-timer.c:325: new_interval(tt);
      000685 8D 82            [24] 1312 	mov	dpl,r5
      000687 8E 83            [24] 1313 	mov	dph,r6
      000689 8F F0            [24] 1314 	mov	b,r7
      00068B 78rF0            [12] 1315 	mov	r0,#_new_interval
      00068D 79s04            [12] 1316 	mov	r1,#(_new_interval >> 8)
      00068F 7As00            [12] 1317 	mov	r2,#(_new_interval >> 16)
      000691 12r00r00         [24] 1318 	lcall	__sdcc_banked_call
      000694                       1319 00103$:
      000694 E5 81            [12] 1320 	mov	a,sp
      000696 24 FC            [12] 1321 	add	a,#0xFC
      000698 F5 81            [12] 1322 	mov	sp,a
      00069A 02r00r00         [24] 1323 	ljmp	__sdcc_banked_ret
                                   1324 ;------------------------------------------------------------
                                   1325 ;Allocation info for local variables in function 'trickle_timer_config'
                                   1326 ;------------------------------------------------------------
                                   1327 ;i_min                     Allocated to stack - sp -7
                                   1328 ;i_max                     Allocated to stack - sp -8
                                   1329 ;k                         Allocated to stack - sp -9
                                   1330 ;tt                        Allocated to stack - sp -2
                                   1331 ;------------------------------------------------------------
                                   1332 ;	../../core/lib/trickle-timer.c:330: trickle_timer_config(struct trickle_timer *tt, clock_time_t i_min,
                                   1333 ;	-----------------------------------------
                                   1334 ;	 function trickle_timer_config
                                   1335 ;	-----------------------------------------
      00069D                       1336 _trickle_timer_config:
      00069D C0 82            [24] 1337 	push	dpl
      00069F C0 83            [24] 1338 	push	dph
      0006A1 C0 F0            [24] 1339 	push	b
                                   1340 ;	../../core/lib/trickle-timer.c:339: if(TRICKLE_TIMER_IMIN_IS_BAD(i_min)) {
      0006A3 E5 81            [12] 1341 	mov	a,sp
      0006A5 24 F9            [12] 1342 	add	a,#0xf9
      0006A7 F8               [12] 1343 	mov	r0,a
      0006A8 C3               [12] 1344 	clr	c
      0006A9 E6               [12] 1345 	mov	a,@r0
      0006AA 94 02            [12] 1346 	subb	a,#0x02
      0006AC 08               [12] 1347 	inc	r0
      0006AD E6               [12] 1348 	mov	a,@r0
      0006AE 94 00            [12] 1349 	subb	a,#0x00
      0006B0 40 0F            [24] 1350 	jc	00101$
      0006B2 E5 81            [12] 1351 	mov	a,sp
      0006B4 24 F9            [12] 1352 	add	a,#0xf9
      0006B6 F8               [12] 1353 	mov	r0,a
      0006B7 C3               [12] 1354 	clr	c
      0006B8 74 FF            [12] 1355 	mov	a,#0xFF
      0006BA 96               [12] 1356 	subb	a,@r0
      0006BB 74 7F            [12] 1357 	mov	a,#0x7F
      0006BD 08               [12] 1358 	inc	r0
      0006BE 96               [12] 1359 	subb	a,@r0
      0006BF 50 06            [24] 1360 	jnc	00102$
      0006C1                       1361 00101$:
                                   1362 ;	../../core/lib/trickle-timer.c:341: return TRICKLE_TIMER_ERROR;
      0006C1 75 82 00         [24] 1363 	mov	dpl,#0x00
      0006C4 02r07rCF         [24] 1364 	ljmp	00110$
      0006C7                       1365 00102$:
                                   1366 ;	../../core/lib/trickle-timer.c:344: if(tt == NULL || i_max == 0 || k == 0) {
      0006C7 A8 81            [24] 1367 	mov	r0,sp
      0006C9 18               [12] 1368 	dec	r0
      0006CA 18               [12] 1369 	dec	r0
      0006CB E6               [12] 1370 	mov	a,@r0
      0006CC 08               [12] 1371 	inc	r0
      0006CD 46               [12] 1372 	orl	a,@r0
      0006CE 60 10            [24] 1373 	jz	00104$
      0006D0 E5 81            [12] 1374 	mov	a,sp
      0006D2 24 F8            [12] 1375 	add	a,#0xf8
      0006D4 F8               [12] 1376 	mov	r0,a
      0006D5 E6               [12] 1377 	mov	a,@r0
      0006D6 60 08            [24] 1378 	jz	00104$
      0006D8 E5 81            [12] 1379 	mov	a,sp
      0006DA 24 F7            [12] 1380 	add	a,#0xf7
      0006DC F8               [12] 1381 	mov	r0,a
      0006DD E6               [12] 1382 	mov	a,@r0
      0006DE 70 06            [24] 1383 	jnz	00105$
      0006E0                       1384 00104$:
                                   1385 ;	../../core/lib/trickle-timer.c:346: return TRICKLE_TIMER_ERROR;
      0006E0 75 82 00         [24] 1386 	mov	dpl,#0x00
      0006E3 02r07rCF         [24] 1387 	ljmp	00110$
      0006E6                       1388 00105$:
                                   1389 ;	../../core/lib/trickle-timer.c:355: if(TRICKLE_TIMER_IPAIR_IS_BAD(i_min, i_max)) {
      0006E6 E5 81            [12] 1390 	mov	a,sp
      0006E8 24 F8            [12] 1391 	add	a,#0xf8
      0006EA F8               [12] 1392 	mov	r0,a
      0006EB 86 03            [24] 1393 	mov	ar3,@r0
      0006ED 7C 00            [12] 1394 	mov	r4,#0x00
      0006EF 0B               [12] 1395 	inc	r3
      0006F0 BB 00 01         [24] 1396 	cjne	r3,#0x00,00129$
      0006F3 0C               [12] 1397 	inc	r4
      0006F4                       1398 00129$:
      0006F4 8B F0            [24] 1399 	mov	b,r3
      0006F6 05 F0            [12] 1400 	inc	b
      0006F8 7B FF            [12] 1401 	mov	r3,#0xFF
      0006FA 7C FF            [12] 1402 	mov	r4,#0xFF
      0006FC 80 07            [24] 1403 	sjmp	00131$
      0006FE                       1404 00130$:
      0006FE C3               [12] 1405 	clr	c
      0006FF EC               [12] 1406 	mov	a,r4
      000700 13               [12] 1407 	rrc	a
      000701 FC               [12] 1408 	mov	r4,a
      000702 EB               [12] 1409 	mov	a,r3
      000703 13               [12] 1410 	rrc	a
      000704 FB               [12] 1411 	mov	r3,a
      000705                       1412 00131$:
      000705 D5 F0 F6         [24] 1413 	djnz	b,00130$
      000708 E5 81            [12] 1414 	mov	a,sp
      00070A 24 F9            [12] 1415 	add	a,#0xf9
      00070C F8               [12] 1416 	mov	r0,a
      00070D E6               [12] 1417 	mov	a,@r0
      00070E 24 FF            [12] 1418 	add	a,#0xFF
      000710 FA               [12] 1419 	mov	r2,a
      000711 08               [12] 1420 	inc	r0
      000712 E6               [12] 1421 	mov	a,@r0
      000713 34 FF            [12] 1422 	addc	a,#0xFF
      000715 FF               [12] 1423 	mov	r7,a
      000716 C3               [12] 1424 	clr	c
      000717 EB               [12] 1425 	mov	a,r3
      000718 9A               [12] 1426 	subb	a,r2
      000719 EC               [12] 1427 	mov	a,r4
      00071A 9F               [12] 1428 	subb	a,r7
      00071B 50 1C            [24] 1429 	jnc	00109$
                                   1430 ;	../../core/lib/trickle-timer.c:360: i_max = max_imax(i_min);
      00071D E5 81            [12] 1431 	mov	a,sp
      00071F 24 F9            [12] 1432 	add	a,#0xf9
      000721 F8               [12] 1433 	mov	r0,a
      000722 86 82            [24] 1434 	mov	dpl,@r0
      000724 08               [12] 1435 	inc	r0
      000725 86 83            [24] 1436 	mov	dph,@r0
      000727 78r4F            [12] 1437 	mov	r0,#_max_imax
      000729 79s00            [12] 1438 	mov	r1,#(_max_imax >> 8)
      00072B 7As00            [12] 1439 	mov	r2,#(_max_imax >> 16)
      00072D 12r00r00         [24] 1440 	lcall	__sdcc_banked_call
      000730 AC 82            [24] 1441 	mov	r4,dpl
      000732 E5 81            [12] 1442 	mov	a,sp
      000734 24 F8            [12] 1443 	add	a,#0xf8
      000736 F8               [12] 1444 	mov	r0,a
      000737 A6 04            [24] 1445 	mov	@r0,ar4
      000739                       1446 00109$:
                                   1447 ;	../../core/lib/trickle-timer.c:365: tt->i_min = i_min;
      000739 A8 81            [24] 1448 	mov	r0,sp
      00073B 18               [12] 1449 	dec	r0
      00073C 18               [12] 1450 	dec	r0
      00073D 86 82            [24] 1451 	mov	dpl,@r0
      00073F 08               [12] 1452 	inc	r0
      000740 86 83            [24] 1453 	mov	dph,@r0
      000742 08               [12] 1454 	inc	r0
      000743 86 F0            [24] 1455 	mov	b,@r0
      000745 E5 81            [12] 1456 	mov	a,sp
      000747 24 F9            [12] 1457 	add	a,#0xf9
      000749 F9               [12] 1458 	mov	r1,a
      00074A E7               [12] 1459 	mov	a,@r1
      00074B 12r00r00         [24] 1460 	lcall	__gptrput
      00074E A3               [24] 1461 	inc	dptr
      00074F 09               [12] 1462 	inc	r1
      000750 E7               [12] 1463 	mov	a,@r1
      000751 12r00r00         [24] 1464 	lcall	__gptrput
                                   1465 ;	../../core/lib/trickle-timer.c:366: tt->i_max = i_max;
      000754 A8 81            [24] 1466 	mov	r0,sp
      000756 18               [12] 1467 	dec	r0
      000757 18               [12] 1468 	dec	r0
      000758 74 24            [12] 1469 	mov	a,#0x24
      00075A 26               [12] 1470 	add	a,@r0
      00075B FA               [12] 1471 	mov	r2,a
      00075C E4               [12] 1472 	clr	a
      00075D 08               [12] 1473 	inc	r0
      00075E 36               [12] 1474 	addc	a,@r0
      00075F FB               [12] 1475 	mov	r3,a
      000760 08               [12] 1476 	inc	r0
      000761 86 04            [24] 1477 	mov	ar4,@r0
      000763 8A 82            [24] 1478 	mov	dpl,r2
      000765 8B 83            [24] 1479 	mov	dph,r3
      000767 8C F0            [24] 1480 	mov	b,r4
      000769 E5 81            [12] 1481 	mov	a,sp
      00076B 24 F8            [12] 1482 	add	a,#0xf8
      00076D F8               [12] 1483 	mov	r0,a
      00076E E6               [12] 1484 	mov	a,@r0
      00076F 12r00r00         [24] 1485 	lcall	__gptrput
                                   1486 ;	../../core/lib/trickle-timer.c:367: tt->i_max_abs = i_min << i_max;
      000772 A8 81            [24] 1487 	mov	r0,sp
      000774 18               [12] 1488 	dec	r0
      000775 18               [12] 1489 	dec	r0
      000776 74 06            [12] 1490 	mov	a,#0x06
      000778 26               [12] 1491 	add	a,@r0
      000779 FA               [12] 1492 	mov	r2,a
      00077A E4               [12] 1493 	clr	a
      00077B 08               [12] 1494 	inc	r0
      00077C 36               [12] 1495 	addc	a,@r0
      00077D FB               [12] 1496 	mov	r3,a
      00077E 08               [12] 1497 	inc	r0
      00077F 86 04            [24] 1498 	mov	ar4,@r0
      000781 E5 81            [12] 1499 	mov	a,sp
      000783 24 F8            [12] 1500 	add	a,#0xf8
      000785 F8               [12] 1501 	mov	r0,a
      000786 86 F0            [24] 1502 	mov	b,@r0
      000788 05 F0            [12] 1503 	inc	b
      00078A E5 81            [12] 1504 	mov	a,sp
      00078C 24 F9            [12] 1505 	add	a,#0xf9
      00078E F8               [12] 1506 	mov	r0,a
      00078F 86 06            [24] 1507 	mov	ar6,@r0
      000791 08               [12] 1508 	inc	r0
      000792 86 07            [24] 1509 	mov	ar7,@r0
      000794 80 06            [24] 1510 	sjmp	00134$
      000796                       1511 00133$:
      000796 EE               [12] 1512 	mov	a,r6
      000797 2E               [12] 1513 	add	a,r6
      000798 FE               [12] 1514 	mov	r6,a
      000799 EF               [12] 1515 	mov	a,r7
      00079A 33               [12] 1516 	rlc	a
      00079B FF               [12] 1517 	mov	r7,a
      00079C                       1518 00134$:
      00079C D5 F0 F7         [24] 1519 	djnz	b,00133$
      00079F 8A 82            [24] 1520 	mov	dpl,r2
      0007A1 8B 83            [24] 1521 	mov	dph,r3
      0007A3 8C F0            [24] 1522 	mov	b,r4
      0007A5 EE               [12] 1523 	mov	a,r6
      0007A6 12r00r00         [24] 1524 	lcall	__gptrput
      0007A9 A3               [24] 1525 	inc	dptr
      0007AA EF               [12] 1526 	mov	a,r7
      0007AB 12r00r00         [24] 1527 	lcall	__gptrput
                                   1528 ;	../../core/lib/trickle-timer.c:368: tt->k = k;
      0007AE A8 81            [24] 1529 	mov	r0,sp
      0007B0 18               [12] 1530 	dec	r0
      0007B1 18               [12] 1531 	dec	r0
      0007B2 74 25            [12] 1532 	mov	a,#0x25
      0007B4 26               [12] 1533 	add	a,@r0
      0007B5 FD               [12] 1534 	mov	r5,a
      0007B6 E4               [12] 1535 	clr	a
      0007B7 08               [12] 1536 	inc	r0
      0007B8 36               [12] 1537 	addc	a,@r0
      0007B9 FE               [12] 1538 	mov	r6,a
      0007BA 08               [12] 1539 	inc	r0
      0007BB 86 07            [24] 1540 	mov	ar7,@r0
      0007BD 8D 82            [24] 1541 	mov	dpl,r5
      0007BF 8E 83            [24] 1542 	mov	dph,r6
      0007C1 8F F0            [24] 1543 	mov	b,r7
      0007C3 E5 81            [12] 1544 	mov	a,sp
      0007C5 24 F7            [12] 1545 	add	a,#0xf7
      0007C7 F8               [12] 1546 	mov	r0,a
      0007C8 E6               [12] 1547 	mov	a,@r0
      0007C9 12r00r00         [24] 1548 	lcall	__gptrput
                                   1549 ;	../../core/lib/trickle-timer.c:373: return TRICKLE_TIMER_SUCCESS;
      0007CC 75 82 01         [24] 1550 	mov	dpl,#0x01
      0007CF                       1551 00110$:
      0007CF 15 81            [12] 1552 	dec	sp
      0007D1 15 81            [12] 1553 	dec	sp
      0007D3 15 81            [12] 1554 	dec	sp
      0007D5 02r00r00         [24] 1555 	ljmp	__sdcc_banked_ret
                                   1556 ;------------------------------------------------------------
                                   1557 ;Allocation info for local variables in function 'trickle_timer_set'
                                   1558 ;------------------------------------------------------------
                                   1559 ;proto_cb                  Allocated to stack - sp -15
                                   1560 ;ptr                       Allocated to stack - sp -18
                                   1561 ;tt                        Allocated to stack - sp -9
                                   1562 ;sloc0                     Allocated to stack - sp -6
                                   1563 ;sloc1                     Allocated to stack - sp -6
                                   1564 ;sloc2                     Allocated to stack - sp -3
                                   1565 ;------------------------------------------------------------
                                   1566 ;	../../core/lib/trickle-timer.c:377: trickle_timer_set(struct trickle_timer *tt, trickle_timer_cb_t proto_cb,
                                   1567 ;	-----------------------------------------
                                   1568 ;	 function trickle_timer_set
                                   1569 ;	-----------------------------------------
      0007D8                       1570 _trickle_timer_set:
      0007D8 C0 82            [24] 1571 	push	dpl
      0007DA C0 83            [24] 1572 	push	dph
      0007DC C0 F0            [24] 1573 	push	b
      0007DE E5 81            [12] 1574 	mov	a,sp
      0007E0 24 07            [12] 1575 	add	a,#0x07
                                   1576 ;	../../core/lib/trickle-timer.c:382: if(tt == NULL || proto_cb == NULL) {
      0007E2 F5 81            [12] 1577 	mov	sp,a
      0007E4 24 F7            [12] 1578 	add	a,#0xf7
      0007E6 F8               [12] 1579 	mov	r0,a
      0007E7 E6               [12] 1580 	mov	a,@r0
      0007E8 08               [12] 1581 	inc	r0
      0007E9 46               [12] 1582 	orl	a,@r0
      0007EA 60 0A            [24] 1583 	jz	00101$
      0007EC E5 81            [12] 1584 	mov	a,sp
      0007EE 24 F1            [12] 1585 	add	a,#0xf1
      0007F0 F8               [12] 1586 	mov	r0,a
      0007F1 E6               [12] 1587 	mov	a,@r0
      0007F2 08               [12] 1588 	inc	r0
      0007F3 46               [12] 1589 	orl	a,@r0
      0007F4 70 06            [24] 1590 	jnz	00102$
      0007F6                       1591 00101$:
                                   1592 ;	../../core/lib/trickle-timer.c:384: return TRICKLE_TIMER_ERROR;
      0007F6 75 82 00         [24] 1593 	mov	dpl,#0x00
      0007F9 02r09r65         [24] 1594 	ljmp	00104$
      0007FC                       1595 00102$:
                                   1596 ;	../../core/lib/trickle-timer.c:388: tt->cb = proto_cb;
      0007FC E5 81            [12] 1597 	mov	a,sp
      0007FE 24 F7            [12] 1598 	add	a,#0xf7
      000800 F8               [12] 1599 	mov	r0,a
      000801 74 1E            [12] 1600 	mov	a,#0x1E
      000803 26               [12] 1601 	add	a,@r0
      000804 FA               [12] 1602 	mov	r2,a
      000805 E4               [12] 1603 	clr	a
      000806 08               [12] 1604 	inc	r0
      000807 36               [12] 1605 	addc	a,@r0
      000808 FB               [12] 1606 	mov	r3,a
      000809 08               [12] 1607 	inc	r0
      00080A 86 04            [24] 1608 	mov	ar4,@r0
      00080C 8A 82            [24] 1609 	mov	dpl,r2
      00080E 8B 83            [24] 1610 	mov	dph,r3
      000810 8C F0            [24] 1611 	mov	b,r4
      000812 E5 81            [12] 1612 	mov	a,sp
      000814 24 F1            [12] 1613 	add	a,#0xf1
      000816 F8               [12] 1614 	mov	r0,a
      000817 E6               [12] 1615 	mov	a,@r0
      000818 12r00r00         [24] 1616 	lcall	__gptrput
      00081B A3               [24] 1617 	inc	dptr
      00081C 08               [12] 1618 	inc	r0
      00081D E6               [12] 1619 	mov	a,@r0
      00081E 12r00r00         [24] 1620 	lcall	__gptrput
      000821 A3               [24] 1621 	inc	dptr
      000822 08               [12] 1622 	inc	r0
      000823 E6               [12] 1623 	mov	a,@r0
      000824 12r00r00         [24] 1624 	lcall	__gptrput
                                   1625 ;	../../core/lib/trickle-timer.c:389: tt->cb_arg = ptr;
      000827 E5 81            [12] 1626 	mov	a,sp
      000829 24 F7            [12] 1627 	add	a,#0xf7
      00082B F8               [12] 1628 	mov	r0,a
      00082C 74 21            [12] 1629 	mov	a,#0x21
      00082E 26               [12] 1630 	add	a,@r0
      00082F FA               [12] 1631 	mov	r2,a
      000830 E4               [12] 1632 	clr	a
      000831 08               [12] 1633 	inc	r0
      000832 36               [12] 1634 	addc	a,@r0
      000833 FB               [12] 1635 	mov	r3,a
      000834 08               [12] 1636 	inc	r0
      000835 86 04            [24] 1637 	mov	ar4,@r0
      000837 8A 82            [24] 1638 	mov	dpl,r2
      000839 8B 83            [24] 1639 	mov	dph,r3
      00083B 8C F0            [24] 1640 	mov	b,r4
      00083D E5 81            [12] 1641 	mov	a,sp
      00083F 24 EE            [12] 1642 	add	a,#0xee
      000841 F8               [12] 1643 	mov	r0,a
      000842 E6               [12] 1644 	mov	a,@r0
      000843 12r00r00         [24] 1645 	lcall	__gptrput
      000846 A3               [24] 1646 	inc	dptr
      000847 08               [12] 1647 	inc	r0
      000848 E6               [12] 1648 	mov	a,@r0
      000849 12r00r00         [24] 1649 	lcall	__gptrput
      00084C A3               [24] 1650 	inc	dptr
      00084D 08               [12] 1651 	inc	r0
      00084E E6               [12] 1652 	mov	a,@r0
      00084F 12r00r00         [24] 1653 	lcall	__gptrput
                                   1654 ;	../../core/lib/trickle-timer.c:392: tt->i_cur = tt->i_min +
      000852 E5 81            [12] 1655 	mov	a,sp
      000854 24 F7            [12] 1656 	add	a,#0xf7
      000856 F8               [12] 1657 	mov	r0,a
      000857 E5 81            [12] 1658 	mov	a,sp
      000859 24 FA            [12] 1659 	add	a,#0xfa
      00085B F9               [12] 1660 	mov	r1,a
      00085C 74 02            [12] 1661 	mov	a,#0x02
      00085E 26               [12] 1662 	add	a,@r0
      00085F F7               [12] 1663 	mov	@r1,a
      000860 E4               [12] 1664 	clr	a
      000861 08               [12] 1665 	inc	r0
      000862 36               [12] 1666 	addc	a,@r0
      000863 09               [12] 1667 	inc	r1
      000864 F7               [12] 1668 	mov	@r1,a
      000865 08               [12] 1669 	inc	r0
      000866 09               [12] 1670 	inc	r1
      000867 E6               [12] 1671 	mov	a,@r0
      000868 F7               [12] 1672 	mov	@r1,a
      000869 E5 81            [12] 1673 	mov	a,sp
      00086B 24 F7            [12] 1674 	add	a,#0xf7
      00086D F8               [12] 1675 	mov	r0,a
      00086E 86 82            [24] 1676 	mov	dpl,@r0
      000870 08               [12] 1677 	inc	r0
      000871 86 83            [24] 1678 	mov	dph,@r0
      000873 08               [12] 1679 	inc	r0
      000874 86 F0            [24] 1680 	mov	b,@r0
      000876 12r00r00         [24] 1681 	lcall	__gptrget
      000879 FD               [12] 1682 	mov	r5,a
      00087A A3               [24] 1683 	inc	dptr
      00087B 12r00r00         [24] 1684 	lcall	__gptrget
      00087E FC               [12] 1685 	mov	r4,a
                                   1686 ;	../../core/lib/trickle-timer.c:393: (tt_rand() % (TRICKLE_TIMER_INTERVAL_MAX(tt) - tt->i_min + 1));
      00087F C0 05            [24] 1687 	push	ar5
      000881 C0 04            [24] 1688 	push	ar4
      000883 78r00            [12] 1689 	mov	r0,#_wide_rand
      000885 79s00            [12] 1690 	mov	r1,#(_wide_rand >> 8)
      000887 7As00            [12] 1691 	mov	r2,#(_wide_rand >> 16)
      000889 12r00r00         [24] 1692 	lcall	__sdcc_banked_call
      00088C C8               [12] 1693 	xch	a,r0
      00088D E5 81            [12] 1694 	mov	a,sp
      00088F 24 FB            [12] 1695 	add	a,#0xfb
      000891 C8               [12] 1696 	xch	a,r0
      000892 A6 82            [24] 1697 	mov	@r0,dpl
      000894 08               [12] 1698 	inc	r0
      000895 A6 83            [24] 1699 	mov	@r0,dph
      000897 08               [12] 1700 	inc	r0
      000898 A6 F0            [24] 1701 	mov	@r0,b
      00089A 08               [12] 1702 	inc	r0
      00089B F6               [12] 1703 	mov	@r0,a
      00089C D0 04            [24] 1704 	pop	ar4
      00089E D0 05            [24] 1705 	pop	ar5
      0008A0 E5 81            [12] 1706 	mov	a,sp
      0008A2 24 F7            [12] 1707 	add	a,#0xf7
      0008A4 F8               [12] 1708 	mov	r0,a
      0008A5 74 06            [12] 1709 	mov	a,#0x06
      0008A7 26               [12] 1710 	add	a,@r0
      0008A8 FA               [12] 1711 	mov	r2,a
      0008A9 E4               [12] 1712 	clr	a
      0008AA 08               [12] 1713 	inc	r0
      0008AB 36               [12] 1714 	addc	a,@r0
      0008AC FB               [12] 1715 	mov	r3,a
      0008AD 08               [12] 1716 	inc	r0
      0008AE 86 07            [24] 1717 	mov	ar7,@r0
      0008B0 8A 82            [24] 1718 	mov	dpl,r2
      0008B2 8B 83            [24] 1719 	mov	dph,r3
      0008B4 8F F0            [24] 1720 	mov	b,r7
      0008B6 12r00r00         [24] 1721 	lcall	__gptrget
      0008B9 FA               [12] 1722 	mov	r2,a
      0008BA A3               [24] 1723 	inc	dptr
      0008BB 12r00r00         [24] 1724 	lcall	__gptrget
      0008BE FB               [12] 1725 	mov	r3,a
      0008BF E5 81            [12] 1726 	mov	a,sp
      0008C1 24 F7            [12] 1727 	add	a,#0xf7
      0008C3 F8               [12] 1728 	mov	r0,a
      0008C4 86 82            [24] 1729 	mov	dpl,@r0
      0008C6 08               [12] 1730 	inc	r0
      0008C7 86 83            [24] 1731 	mov	dph,@r0
      0008C9 08               [12] 1732 	inc	r0
      0008CA 86 F0            [24] 1733 	mov	b,@r0
      0008CC 12r00r00         [24] 1734 	lcall	__gptrget
      0008CF FE               [12] 1735 	mov	r6,a
      0008D0 A3               [24] 1736 	inc	dptr
      0008D1 12r00r00         [24] 1737 	lcall	__gptrget
      0008D4 FF               [12] 1738 	mov	r7,a
      0008D5 EA               [12] 1739 	mov	a,r2
      0008D6 C3               [12] 1740 	clr	c
      0008D7 9E               [12] 1741 	subb	a,r6
      0008D8 FA               [12] 1742 	mov	r2,a
      0008D9 EB               [12] 1743 	mov	a,r3
      0008DA 9F               [12] 1744 	subb	a,r7
      0008DB FB               [12] 1745 	mov	r3,a
      0008DC 0A               [12] 1746 	inc	r2
      0008DD BA 00 01         [24] 1747 	cjne	r2,#0x00,00111$
      0008E0 0B               [12] 1748 	inc	r3
      0008E1                       1749 00111$:
      0008E1 7F 00            [12] 1750 	mov	r7,#0x00
      0008E3 7E 00            [12] 1751 	mov	r6,#0x00
      0008E5 C0 05            [24] 1752 	push	ar5
      0008E7 C0 04            [24] 1753 	push	ar4
      0008E9 C0 02            [24] 1754 	push	ar2
      0008EB C0 03            [24] 1755 	push	ar3
      0008ED C0 07            [24] 1756 	push	ar7
      0008EF C0 06            [24] 1757 	push	ar6
      0008F1 E5 81            [12] 1758 	mov	a,sp
      0008F3 24 F7            [12] 1759 	add	a,#0xf7
      0008F5 F8               [12] 1760 	mov	r0,a
      0008F6 86 82            [24] 1761 	mov	dpl,@r0
      0008F8 08               [12] 1762 	inc	r0
      0008F9 86 83            [24] 1763 	mov	dph,@r0
      0008FB 08               [12] 1764 	inc	r0
      0008FC 86 F0            [24] 1765 	mov	b,@r0
      0008FE 08               [12] 1766 	inc	r0
      0008FF E6               [12] 1767 	mov	a,@r0
      000900 12r00r00         [24] 1768 	lcall	__modulong
      000903 C8               [12] 1769 	xch	a,r0
      000904 E5 81            [12] 1770 	mov	a,sp
      000906 24 F7            [12] 1771 	add	a,#0xf7
      000908 C8               [12] 1772 	xch	a,r0
      000909 A6 82            [24] 1773 	mov	@r0,dpl
      00090B 08               [12] 1774 	inc	r0
      00090C A6 83            [24] 1775 	mov	@r0,dph
      00090E 08               [12] 1776 	inc	r0
      00090F A6 F0            [24] 1777 	mov	@r0,b
      000911 08               [12] 1778 	inc	r0
      000912 F6               [12] 1779 	mov	@r0,a
      000913 E5 81            [12] 1780 	mov	a,sp
      000915 24 FC            [12] 1781 	add	a,#0xfc
      000917 F5 81            [12] 1782 	mov	sp,a
      000919 D0 04            [24] 1783 	pop	ar4
      00091B D0 05            [24] 1784 	pop	ar5
      00091D 8D 02            [24] 1785 	mov	ar2,r5
      00091F 8C 03            [24] 1786 	mov	ar3,r4
      000921 E4               [12] 1787 	clr	a
      000922 FE               [12] 1788 	mov	r6,a
      000923 FF               [12] 1789 	mov	r7,a
      000924 E5 81            [12] 1790 	mov	a,sp
      000926 24 FD            [12] 1791 	add	a,#0xfd
      000928 F8               [12] 1792 	mov	r0,a
      000929 E6               [12] 1793 	mov	a,@r0
      00092A 2A               [12] 1794 	add	a,r2
      00092B FA               [12] 1795 	mov	r2,a
      00092C 08               [12] 1796 	inc	r0
      00092D E6               [12] 1797 	mov	a,@r0
      00092E 3B               [12] 1798 	addc	a,r3
      00092F FB               [12] 1799 	mov	r3,a
      000930 08               [12] 1800 	inc	r0
      000931 E6               [12] 1801 	mov	a,@r0
      000932 3E               [12] 1802 	addc	a,r6
      000933 08               [12] 1803 	inc	r0
      000934 E6               [12] 1804 	mov	a,@r0
      000935 3F               [12] 1805 	addc	a,r7
      000936 E5 81            [12] 1806 	mov	a,sp
      000938 24 FA            [12] 1807 	add	a,#0xfa
      00093A F8               [12] 1808 	mov	r0,a
      00093B 86 82            [24] 1809 	mov	dpl,@r0
      00093D 08               [12] 1810 	inc	r0
      00093E 86 83            [24] 1811 	mov	dph,@r0
      000940 08               [12] 1812 	inc	r0
      000941 86 F0            [24] 1813 	mov	b,@r0
      000943 EA               [12] 1814 	mov	a,r2
      000944 12r00r00         [24] 1815 	lcall	__gptrput
      000947 A3               [24] 1816 	inc	dptr
      000948 EB               [12] 1817 	mov	a,r3
      000949 12r00r00         [24] 1818 	lcall	__gptrput
                                   1819 ;	../../core/lib/trickle-timer.c:399: new_interval(tt);
      00094C E5 81            [12] 1820 	mov	a,sp
      00094E 24 F7            [12] 1821 	add	a,#0xf7
      000950 F8               [12] 1822 	mov	r0,a
      000951 86 82            [24] 1823 	mov	dpl,@r0
      000953 08               [12] 1824 	inc	r0
      000954 86 83            [24] 1825 	mov	dph,@r0
      000956 08               [12] 1826 	inc	r0
      000957 86 F0            [24] 1827 	mov	b,@r0
      000959 78rF0            [12] 1828 	mov	r0,#_new_interval
      00095B 79s04            [12] 1829 	mov	r1,#(_new_interval >> 8)
      00095D 7As00            [12] 1830 	mov	r2,#(_new_interval >> 16)
      00095F 12r00r00         [24] 1831 	lcall	__sdcc_banked_call
                                   1832 ;	../../core/lib/trickle-timer.c:407: return TRICKLE_TIMER_SUCCESS;
      000962 75 82 01         [24] 1833 	mov	dpl,#0x01
      000965                       1834 00104$:
      000965 E5 81            [12] 1835 	mov	a,sp
      000967 24 F6            [12] 1836 	add	a,#0xF6
      000969 F5 81            [12] 1837 	mov	sp,a
      00096B 02r00r00         [24] 1838 	ljmp	__sdcc_banked_ret
                                   1839 	.area CSEG    (CODE)
                                   1840 	.area CONST   (CODE)
                                   1841 	.area XINIT   (CODE)
                                   1842 	.area CABS    (ABS,CODE)
