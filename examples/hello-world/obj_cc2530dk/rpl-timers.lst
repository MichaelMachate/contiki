                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:45:24 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module rpl_timers
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _random_rand
                                     13 	.globl _rpl_purge_routes
                                     14 	.globl _rpl_recalculate_ranks
                                     15 	.globl _dao_output
                                     16 	.globl _dio_output
                                     17 	.globl _dis_output
                                     18 	.globl _rpl_get_mode
                                     19 	.globl _rpl_get_parent_ipaddr
                                     20 	.globl _rpl_get_any_dag
                                     21 	.globl _uip_ds6_get_link_local
                                     22 	.globl _nbr_table_next
                                     23 	.globl _nbr_table_head
                                     24 	.globl _ctimer_stop
                                     25 	.globl _ctimer_set
                                     26 	.globl _ctimer_reset
                                     27 	.globl _etimer_expired
                                     28 	.globl _etimer_expiration_time
                                     29 	.globl _clock_time
                                     30 	.globl _ACTIVE
                                     31 	.globl _TX_BYTE
                                     32 	.globl _RX_BYTE
                                     33 	.globl _ERR
                                     34 	.globl _FE
                                     35 	.globl _SLAVE
                                     36 	.globl _RE
                                     37 	.globl _MODE
                                     38 	.globl _T3OVFIF
                                     39 	.globl _T3CH0IF
                                     40 	.globl _T3CH1IF
                                     41 	.globl _T4OVFIF
                                     42 	.globl _T4CH0IF
                                     43 	.globl _T4CH1IF
                                     44 	.globl _OVFIM
                                     45 	.globl _B_0
                                     46 	.globl _B_1
                                     47 	.globl _B_2
                                     48 	.globl _B_3
                                     49 	.globl _B_4
                                     50 	.globl _B_5
                                     51 	.globl _B_6
                                     52 	.globl _B_7
                                     53 	.globl _P2IF
                                     54 	.globl _UTX0IF
                                     55 	.globl _UTX1IF
                                     56 	.globl _P1IF
                                     57 	.globl _WDTIF
                                     58 	.globl _ACC_0
                                     59 	.globl _ACC_1
                                     60 	.globl _ACC_2
                                     61 	.globl _ACC_3
                                     62 	.globl _ACC_4
                                     63 	.globl _ACC_5
                                     64 	.globl _ACC_6
                                     65 	.globl _ACC_7
                                     66 	.globl _P
                                     67 	.globl _F1
                                     68 	.globl _OV
                                     69 	.globl _RS0
                                     70 	.globl _RS1
                                     71 	.globl _F0
                                     72 	.globl _AC
                                     73 	.globl _CY
                                     74 	.globl _DMAIF
                                     75 	.globl _T1IF
                                     76 	.globl _T2IF
                                     77 	.globl _T3IF
                                     78 	.globl _T4IF
                                     79 	.globl _P0IF
                                     80 	.globl _STIF
                                     81 	.globl _DMAIE
                                     82 	.globl _T1IE
                                     83 	.globl _T2IE
                                     84 	.globl _T3IE
                                     85 	.globl _T4IE
                                     86 	.globl _P0IE
                                     87 	.globl _RFERRIE
                                     88 	.globl _ADCIE
                                     89 	.globl _URX0IE
                                     90 	.globl _URX1IE
                                     91 	.globl _ENCIE
                                     92 	.globl _STIE
                                     93 	.globl _EA
                                     94 	.globl _P2_0
                                     95 	.globl _P2_1
                                     96 	.globl _P2_2
                                     97 	.globl _P2_3
                                     98 	.globl _P2_4
                                     99 	.globl _P2_5
                                    100 	.globl _P2_6
                                    101 	.globl _P2_7
                                    102 	.globl _ENCIF_0
                                    103 	.globl _ENCIF_1
                                    104 	.globl _P1_0
                                    105 	.globl _P1_1
                                    106 	.globl _P1_2
                                    107 	.globl _P1_3
                                    108 	.globl _P1_4
                                    109 	.globl _P1_5
                                    110 	.globl _P1_6
                                    111 	.globl _P1_7
                                    112 	.globl _IT0
                                    113 	.globl _RFERRIF
                                    114 	.globl _IT1
                                    115 	.globl _URX0IF
                                    116 	.globl _ADCIF
                                    117 	.globl _URX1IF
                                    118 	.globl _P0_0
                                    119 	.globl _P0_1
                                    120 	.globl _P0_2
                                    121 	.globl _P0_3
                                    122 	.globl _P0_4
                                    123 	.globl _P0_5
                                    124 	.globl _P0_6
                                    125 	.globl _P0_7
                                    126 	.globl _WDCTL
                                    127 	.globl _U1GCR
                                    128 	.globl _U1UCR
                                    129 	.globl _U1BAUD
                                    130 	.globl _U1DBUF
                                    131 	.globl _U1CSR
                                    132 	.globl _U0GCR
                                    133 	.globl _U0UCR
                                    134 	.globl _U0BAUD
                                    135 	.globl _U0DBUF
                                    136 	.globl _U0CSR
                                    137 	.globl _TIMIF
                                    138 	.globl _T4CC1
                                    139 	.globl _T4CCTL1
                                    140 	.globl _T4CC0
                                    141 	.globl _T4CCTL0
                                    142 	.globl _T4CTL
                                    143 	.globl _T4CNT
                                    144 	.globl _T3CC1
                                    145 	.globl _T3CCTL1
                                    146 	.globl _T3CC0
                                    147 	.globl _T3CCTL0
                                    148 	.globl _T3CTL
                                    149 	.globl _T3CNT
                                    150 	.globl _T2MSEL
                                    151 	.globl _T2IRQM
                                    152 	.globl _T2MOVF2
                                    153 	.globl _T2MOVF1
                                    154 	.globl _T2MOVF0
                                    155 	.globl _T2M1
                                    156 	.globl _T2M0
                                    157 	.globl _T2IRQF
                                    158 	.globl _T2EVTCFG
                                    159 	.globl _T2CTRL
                                    160 	.globl _T1STAT
                                    161 	.globl _T1CCTL2
                                    162 	.globl _T1CCTL1
                                    163 	.globl _T1CCTL0
                                    164 	.globl _T1CTL
                                    165 	.globl _T1CNTH
                                    166 	.globl _T1CNTL
                                    167 	.globl _T1CC2H
                                    168 	.globl _T1CC2L
                                    169 	.globl _T1CC1H
                                    170 	.globl _T1CC1L
                                    171 	.globl _T1CC0H
                                    172 	.globl _T1CC0L
                                    173 	.globl _CLKCONSTA
                                    174 	.globl _CLKCONCMD
                                    175 	.globl _SLEEPSTA
                                    176 	.globl _SLEEPCMD
                                    177 	.globl _STLOAD
                                    178 	.globl _ST2
                                    179 	.globl _ST1
                                    180 	.globl _ST0
                                    181 	.globl _RFERRF
                                    182 	.globl _RFIRQF0
                                    183 	.globl _RFST
                                    184 	.globl _RFD
                                    185 	.globl _RFIRQF1
                                    186 	.globl _PSBANK
                                    187 	.globl _FMAP
                                    188 	.globl _MEMCTR
                                    189 	.globl __XPAGE
                                    190 	.globl _MPAGE
                                    191 	.globl _PMUX
                                    192 	.globl _P2DIR
                                    193 	.globl _P1DIR
                                    194 	.globl _P0DIR
                                    195 	.globl _P2INP
                                    196 	.globl _P1INP
                                    197 	.globl _P2SEL
                                    198 	.globl _P1SEL
                                    199 	.globl _P0SEL
                                    200 	.globl _APCFG
                                    201 	.globl _PERCFG
                                    202 	.globl _P0INP
                                    203 	.globl _P2IEN
                                    204 	.globl _P1IEN
                                    205 	.globl _P0IEN
                                    206 	.globl _PICTL
                                    207 	.globl _P2IFG
                                    208 	.globl _P1IFG
                                    209 	.globl _P0IFG
                                    210 	.globl _DMAREQ
                                    211 	.globl _DMAARM
                                    212 	.globl _DMA0CFGH
                                    213 	.globl _DMA0CFGL
                                    214 	.globl _DMA1CFGH
                                    215 	.globl _DMA1CFGL
                                    216 	.globl _DMAIRQ
                                    217 	.globl _ENCCS
                                    218 	.globl _ENCDO
                                    219 	.globl _ENCDI
                                    220 	.globl _RNDH
                                    221 	.globl _RNDL
                                    222 	.globl _ADCH
                                    223 	.globl _ADCL
                                    224 	.globl _ADCCON3
                                    225 	.globl _ADCCON2
                                    226 	.globl _ADCCON1
                                    227 	.globl _B
                                    228 	.globl _IRCON2
                                    229 	.globl _ACC
                                    230 	.globl _PSW
                                    231 	.globl _IRCON
                                    232 	.globl _IP1
                                    233 	.globl _IEN1
                                    234 	.globl _IP0
                                    235 	.globl _IEN0
                                    236 	.globl _P2
                                    237 	.globl _S1CON
                                    238 	.globl _IEN2
                                    239 	.globl _S0CON
                                    240 	.globl _DPS
                                    241 	.globl _P1
                                    242 	.globl _TCON
                                    243 	.globl _PCON
                                    244 	.globl _DPH1
                                    245 	.globl _DPL1
                                    246 	.globl _DPH0
                                    247 	.globl _DPL0
                                    248 	.globl _SP
                                    249 	.globl _P0
                                    250 	.globl _X_IEEE_ADDR
                                    251 	.globl _X_INFOPAGE
                                    252 	.globl _X_P2DIR
                                    253 	.globl _X_P1DIR
                                    254 	.globl _X_P0DIR
                                    255 	.globl _X_U1GCR
                                    256 	.globl _X_U1UCR
                                    257 	.globl _X_U1BAUD
                                    258 	.globl _X_U1DBUF
                                    259 	.globl _X_U1CSR
                                    260 	.globl _X_P2INP
                                    261 	.globl _X_P1INP
                                    262 	.globl _X_P2SEL
                                    263 	.globl _X_P1SEL
                                    264 	.globl _X_P0SEL
                                    265 	.globl _X_APCFG
                                    266 	.globl _X_PERCFG
                                    267 	.globl _X_T4CC1
                                    268 	.globl _X_T4CCTL1
                                    269 	.globl _X_T4CC0
                                    270 	.globl _X_T4CCTL0
                                    271 	.globl _X_T4CTL
                                    272 	.globl _X_T4CNT
                                    273 	.globl _X_RFIRQF0
                                    274 	.globl _X_T1CCTL2
                                    275 	.globl _X_T1CCTL1
                                    276 	.globl _X_T1CCTL0
                                    277 	.globl _X_T1CTL
                                    278 	.globl _X_T1CNTH
                                    279 	.globl _X_T1CNTL
                                    280 	.globl _X_RFST
                                    281 	.globl _X_T1CC2H
                                    282 	.globl _X_T1CC2L
                                    283 	.globl _X_T1CC1H
                                    284 	.globl _X_T1CC1L
                                    285 	.globl _X_T1CC0H
                                    286 	.globl _X_T1CC0L
                                    287 	.globl _X_RFD
                                    288 	.globl _X_TIMIF
                                    289 	.globl _X_DMAREQ
                                    290 	.globl _X_DMAARM
                                    291 	.globl _X_DMA0CFGH
                                    292 	.globl _X_DMA0CFGL
                                    293 	.globl _X_DMA1CFGH
                                    294 	.globl _X_DMA1CFGL
                                    295 	.globl _X_DMAIRQ
                                    296 	.globl _X_T3CC1
                                    297 	.globl _X_T3CCTL1
                                    298 	.globl _X_T3CC0
                                    299 	.globl _X_T3CCTL0
                                    300 	.globl _X_T3CTL
                                    301 	.globl _X_T3CNT
                                    302 	.globl _X_WDCTL
                                    303 	.globl _X_MEMCTR
                                    304 	.globl _X_CLKCONCMD
                                    305 	.globl _X_U0GCR
                                    306 	.globl _X_U0UCR
                                    307 	.globl _X_T2MSEL
                                    308 	.globl _X_U0BAUD
                                    309 	.globl _X_U0DBUF
                                    310 	.globl _X_RFERRF
                                    311 	.globl _X_SLEEPCMD
                                    312 	.globl _X_RNDH
                                    313 	.globl _X_RNDL
                                    314 	.globl _X_ADCH
                                    315 	.globl _X_ADCL
                                    316 	.globl _X_ADCCON3
                                    317 	.globl _X_ADCCON2
                                    318 	.globl _X_ADCCON1
                                    319 	.globl _X_ENCCS
                                    320 	.globl _X_ENCDO
                                    321 	.globl _X_ENCDI
                                    322 	.globl _X_T1STAT
                                    323 	.globl _X_PMUX
                                    324 	.globl _X_STLOAD
                                    325 	.globl _X_P2IEN
                                    326 	.globl _X_P0IEN
                                    327 	.globl _X_T2IRQM
                                    328 	.globl _X_T2MOVF2
                                    329 	.globl _X_T2MOVF1
                                    330 	.globl _X_T2MOVF0
                                    331 	.globl _X_T2M1
                                    332 	.globl _X_T2M0
                                    333 	.globl _X_T2IRQF
                                    334 	.globl _X_P2
                                    335 	.globl _X_PSBANK
                                    336 	.globl _X_FMAP
                                    337 	.globl _X_CLKCONSTA
                                    338 	.globl _X_SLEEPSTA
                                    339 	.globl _X_T2EVTCFG
                                    340 	.globl _X_ST2
                                    341 	.globl _X_ST1
                                    342 	.globl _X_ST0
                                    343 	.globl _X_T2CTRL
                                    344 	.globl _X__XPAGE
                                    345 	.globl _X_MPAGE
                                    346 	.globl _X_RFIRQF1
                                    347 	.globl _X_P1
                                    348 	.globl _X_P0INP
                                    349 	.globl _X_P1IEN
                                    350 	.globl _X_PICTL
                                    351 	.globl _X_P2IFG
                                    352 	.globl _X_P1IFG
                                    353 	.globl _X_P0IFG
                                    354 	.globl _X_U0CSR
                                    355 	.globl _X_P0
                                    356 	.globl _USBF5
                                    357 	.globl _USBF4
                                    358 	.globl _USBF3
                                    359 	.globl _USBF2
                                    360 	.globl _USBF1
                                    361 	.globl _USBF0
                                    362 	.globl _USBCNTH
                                    363 	.globl _USBCNTL
                                    364 	.globl _USBCNT0
                                    365 	.globl _USBCSOH
                                    366 	.globl _USBCSOL
                                    367 	.globl _USBMAXO
                                    368 	.globl _USBCSIH
                                    369 	.globl _USBCSIL
                                    370 	.globl _USBCS0
                                    371 	.globl _USBMAXI
                                    372 	.globl _USBCTRL
                                    373 	.globl _USBINDEX
                                    374 	.globl _USBFRMH
                                    375 	.globl _USBFRML
                                    376 	.globl _USBCIE
                                    377 	.globl _USBOIE
                                    378 	.globl _USBIIE
                                    379 	.globl _USBCIF
                                    380 	.globl _USBOIF
                                    381 	.globl _USBIIF
                                    382 	.globl _USBPOW
                                    383 	.globl _USBADDR
                                    384 	.globl _CSPT
                                    385 	.globl _CSPZ
                                    386 	.globl _CSPY
                                    387 	.globl _CSPX
                                    388 	.globl _CSPSTAT
                                    389 	.globl _CSPCTRL
                                    390 	.globl _CSPPROG23
                                    391 	.globl _CSPPROG22
                                    392 	.globl _CSPPROG21
                                    393 	.globl _CSPPROG20
                                    394 	.globl _CSPPROG19
                                    395 	.globl _CSPPROG18
                                    396 	.globl _CSPPROG17
                                    397 	.globl _CSPPROG16
                                    398 	.globl _CSPPROG15
                                    399 	.globl _CSPPROG14
                                    400 	.globl _CSPPROG13
                                    401 	.globl _CSPPROG12
                                    402 	.globl _CSPPROG11
                                    403 	.globl _CSPPROG10
                                    404 	.globl _CSPPROG9
                                    405 	.globl _CSPPROG8
                                    406 	.globl _CSPPROG7
                                    407 	.globl _CSPPROG6
                                    408 	.globl _CSPPROG5
                                    409 	.globl _CSPPROG4
                                    410 	.globl _CSPPROG3
                                    411 	.globl _CSPPROG2
                                    412 	.globl _CSPPROG1
                                    413 	.globl _CSPPROG0
                                    414 	.globl _RFC_OBS_CTRL2
                                    415 	.globl _RFC_OBS_CTRL1
                                    416 	.globl _RFC_OBS_CTRL0
                                    417 	.globl _TXFILTCFG
                                    418 	.globl _PTEST1
                                    419 	.globl _PTEST0
                                    420 	.globl _ATEST
                                    421 	.globl _DACTEST2
                                    422 	.globl _DACTEST1
                                    423 	.globl _DACTEST0
                                    424 	.globl _MDMTEST1
                                    425 	.globl _MDMTEST0
                                    426 	.globl _ADCTEST2
                                    427 	.globl _ADCTEST1
                                    428 	.globl _ADCTEST0
                                    429 	.globl _AGCCTRL3
                                    430 	.globl _AGCCTRL2
                                    431 	.globl _AGCCTRL1
                                    432 	.globl _AGCCTRL0
                                    433 	.globl _FSCAL3
                                    434 	.globl _FSCAL2
                                    435 	.globl _FSCAL1
                                    436 	.globl _FSCAL0
                                    437 	.globl _FSCTRL
                                    438 	.globl _RXCTRL
                                    439 	.globl _FREQEST
                                    440 	.globl _MDMCTRL1
                                    441 	.globl _MDMCTRL0
                                    442 	.globl _RFRND
                                    443 	.globl _RFERRM
                                    444 	.globl _RFIRQM1
                                    445 	.globl _RFIRQM0
                                    446 	.globl _TXLAST_PTR
                                    447 	.globl _TXFIRST_PTR
                                    448 	.globl _RXP1_PTR
                                    449 	.globl _RXLAST_PTR
                                    450 	.globl _RXFIRST_PTR
                                    451 	.globl _TXFIFOCNT
                                    452 	.globl _RXFIFOCNT
                                    453 	.globl _RXFIRST
                                    454 	.globl _RSSISTAT
                                    455 	.globl _RSSI
                                    456 	.globl _CCACTRL1
                                    457 	.globl _CCACTRL0
                                    458 	.globl _FSMCTRL
                                    459 	.globl _FIFOPCTRL
                                    460 	.globl _FSMSTAT1
                                    461 	.globl _FSMSTAT0
                                    462 	.globl _TXCTRL
                                    463 	.globl _TXPOWER
                                    464 	.globl _FREQCTRL
                                    465 	.globl _FREQTUNE
                                    466 	.globl _RXMASKCLR
                                    467 	.globl _RXMASKSET
                                    468 	.globl _RXENABLE
                                    469 	.globl _FRMCTRL1
                                    470 	.globl _FRMCTRL0
                                    471 	.globl _SRCEXTEN2
                                    472 	.globl _SRCEXTEN1
                                    473 	.globl _SRCEXTEN0
                                    474 	.globl _SRCSHORTEN2
                                    475 	.globl _SRCSHORTEN1
                                    476 	.globl _SRCSHORTEN0
                                    477 	.globl _SRCMATCH
                                    478 	.globl _FRMFILT1
                                    479 	.globl _FRMFILT0
                                    480 	.globl _SHORT_ADDR1
                                    481 	.globl _SHORT_ADDR0
                                    482 	.globl _PAN_ID1
                                    483 	.globl _PAN_ID0
                                    484 	.globl _EXT_ADDR7
                                    485 	.globl _EXT_ADDR6
                                    486 	.globl _EXT_ADDR5
                                    487 	.globl _EXT_ADDR4
                                    488 	.globl _EXT_ADDR3
                                    489 	.globl _EXT_ADDR2
                                    490 	.globl _EXT_ADDR1
                                    491 	.globl _EXT_ADDR0
                                    492 	.globl _SRCSHORTPENDEN2
                                    493 	.globl _SRCSHORTPENDEN1
                                    494 	.globl _SRCSHORTPENDEN0
                                    495 	.globl _SRCEXTPENDEN2
                                    496 	.globl _SRCEXTPENDEN1
                                    497 	.globl _SRCEXTPENDEN0
                                    498 	.globl _SRCRESINDEX
                                    499 	.globl _SRCRESMASK2
                                    500 	.globl _SRCRESMASK1
                                    501 	.globl _SRCRESMASK0
                                    502 	.globl _SRC_ADDR_TABLE
                                    503 	.globl _TXFIFO
                                    504 	.globl _RXFIFO
                                    505 	.globl _RFCORE_RAM
                                    506 	.globl _CMPCTL
                                    507 	.globl _OPAMPS
                                    508 	.globl _OPAMPC
                                    509 	.globl _STCV2
                                    510 	.globl _STCV1
                                    511 	.globl _STCV0
                                    512 	.globl _STCS
                                    513 	.globl _STCC
                                    514 	.globl _T1CC4H
                                    515 	.globl _T1CC4L
                                    516 	.globl _T1CC3H
                                    517 	.globl _T1CC3L
                                    518 	.globl _XX_T1CC2H
                                    519 	.globl _XX_T1CC2L
                                    520 	.globl _XX_T1CC1H
                                    521 	.globl _XX_T1CC1L
                                    522 	.globl _XX_T1CC0H
                                    523 	.globl _XX_T1CC0L
                                    524 	.globl _T1CCTL4
                                    525 	.globl _T1CCTL3
                                    526 	.globl _XX_T1CCTL2
                                    527 	.globl _XX_T1CCTL1
                                    528 	.globl _XX_T1CCTL0
                                    529 	.globl _CLD
                                    530 	.globl _IRCTL
                                    531 	.globl _CHIPINFO1
                                    532 	.globl _CHIPINFO0
                                    533 	.globl _FWDATA
                                    534 	.globl _FADDRH
                                    535 	.globl _FADDRL
                                    536 	.globl _FCTL
                                    537 	.globl _IVCTRL
                                    538 	.globl _BATTMON
                                    539 	.globl _SRCRC
                                    540 	.globl _DBGDATA
                                    541 	.globl _TESTREG0
                                    542 	.globl _CHIPID
                                    543 	.globl _CHVER
                                    544 	.globl _OBSSEL5
                                    545 	.globl _OBSSEL4
                                    546 	.globl _OBSSEL3
                                    547 	.globl _OBSSEL2
                                    548 	.globl _OBSSEL1
                                    549 	.globl _OBSSEL0
                                    550 	.globl _I2CIO
                                    551 	.globl _I2CWC
                                    552 	.globl _I2CADDR
                                    553 	.globl _I2CDATA
                                    554 	.globl _I2CSTAT
                                    555 	.globl _I2CCFG
                                    556 	.globl _OPAMPMC
                                    557 	.globl _MONMUX
                                    558 	.globl _rpl_reset_periodic_timer
                                    559 	.globl _rpl_reset_dio_timer
                                    560 	.globl _rpl_schedule_dao
                                    561 	.globl _rpl_schedule_dao_immediately
                                    562 	.globl _rpl_cancel_dao
                                    563 	.globl _rpl_schedule_probing
                                    564 ;--------------------------------------------------------
                                    565 ; special function registers
                                    566 ;--------------------------------------------------------
                                    567 	.area RSEG    (ABS,DATA)
      000000                        568 	.org 0x0000
                           000080   569 _P0	=	0x0080
                           000081   570 _SP	=	0x0081
                           000082   571 _DPL0	=	0x0082
                           000083   572 _DPH0	=	0x0083
                           000084   573 _DPL1	=	0x0084
                           000085   574 _DPH1	=	0x0085
                           000087   575 _PCON	=	0x0087
                           000088   576 _TCON	=	0x0088
                           000090   577 _P1	=	0x0090
                           000092   578 _DPS	=	0x0092
                           000098   579 _S0CON	=	0x0098
                           00009A   580 _IEN2	=	0x009a
                           00009B   581 _S1CON	=	0x009b
                           0000A0   582 _P2	=	0x00a0
                           0000A8   583 _IEN0	=	0x00a8
                           0000A9   584 _IP0	=	0x00a9
                           0000B8   585 _IEN1	=	0x00b8
                           0000B9   586 _IP1	=	0x00b9
                           0000C0   587 _IRCON	=	0x00c0
                           0000D0   588 _PSW	=	0x00d0
                           0000E0   589 _ACC	=	0x00e0
                           0000E8   590 _IRCON2	=	0x00e8
                           0000F0   591 _B	=	0x00f0
                           0000B4   592 _ADCCON1	=	0x00b4
                           0000B5   593 _ADCCON2	=	0x00b5
                           0000B6   594 _ADCCON3	=	0x00b6
                           0000BA   595 _ADCL	=	0x00ba
                           0000BB   596 _ADCH	=	0x00bb
                           0000BC   597 _RNDL	=	0x00bc
                           0000BD   598 _RNDH	=	0x00bd
                           0000B1   599 _ENCDI	=	0x00b1
                           0000B2   600 _ENCDO	=	0x00b2
                           0000B3   601 _ENCCS	=	0x00b3
                           0000D1   602 _DMAIRQ	=	0x00d1
                           0000D2   603 _DMA1CFGL	=	0x00d2
                           0000D3   604 _DMA1CFGH	=	0x00d3
                           0000D4   605 _DMA0CFGL	=	0x00d4
                           0000D5   606 _DMA0CFGH	=	0x00d5
                           0000D6   607 _DMAARM	=	0x00d6
                           0000D7   608 _DMAREQ	=	0x00d7
                           000089   609 _P0IFG	=	0x0089
                           00008A   610 _P1IFG	=	0x008a
                           00008B   611 _P2IFG	=	0x008b
                           00008C   612 _PICTL	=	0x008c
                           0000AB   613 _P0IEN	=	0x00ab
                           00008D   614 _P1IEN	=	0x008d
                           0000AC   615 _P2IEN	=	0x00ac
                           00008F   616 _P0INP	=	0x008f
                           0000F1   617 _PERCFG	=	0x00f1
                           0000F2   618 _APCFG	=	0x00f2
                           0000F3   619 _P0SEL	=	0x00f3
                           0000F4   620 _P1SEL	=	0x00f4
                           0000F5   621 _P2SEL	=	0x00f5
                           0000F6   622 _P1INP	=	0x00f6
                           0000F7   623 _P2INP	=	0x00f7
                           0000FD   624 _P0DIR	=	0x00fd
                           0000FE   625 _P1DIR	=	0x00fe
                           0000FF   626 _P2DIR	=	0x00ff
                           0000AE   627 _PMUX	=	0x00ae
                           000093   628 _MPAGE	=	0x0093
                           000093   629 __XPAGE	=	0x0093
                           0000C7   630 _MEMCTR	=	0x00c7
                           00009F   631 _FMAP	=	0x009f
                           00009F   632 _PSBANK	=	0x009f
                           000091   633 _RFIRQF1	=	0x0091
                           0000D9   634 _RFD	=	0x00d9
                           0000E1   635 _RFST	=	0x00e1
                           0000E9   636 _RFIRQF0	=	0x00e9
                           0000BF   637 _RFERRF	=	0x00bf
                           000095   638 _ST0	=	0x0095
                           000096   639 _ST1	=	0x0096
                           000097   640 _ST2	=	0x0097
                           0000AD   641 _STLOAD	=	0x00ad
                           0000BE   642 _SLEEPCMD	=	0x00be
                           00009D   643 _SLEEPSTA	=	0x009d
                           0000C6   644 _CLKCONCMD	=	0x00c6
                           00009E   645 _CLKCONSTA	=	0x009e
                           0000DA   646 _T1CC0L	=	0x00da
                           0000DB   647 _T1CC0H	=	0x00db
                           0000DC   648 _T1CC1L	=	0x00dc
                           0000DD   649 _T1CC1H	=	0x00dd
                           0000DE   650 _T1CC2L	=	0x00de
                           0000DF   651 _T1CC2H	=	0x00df
                           0000E2   652 _T1CNTL	=	0x00e2
                           0000E3   653 _T1CNTH	=	0x00e3
                           0000E4   654 _T1CTL	=	0x00e4
                           0000E5   655 _T1CCTL0	=	0x00e5
                           0000E6   656 _T1CCTL1	=	0x00e6
                           0000E7   657 _T1CCTL2	=	0x00e7
                           0000AF   658 _T1STAT	=	0x00af
                           000094   659 _T2CTRL	=	0x0094
                           00009C   660 _T2EVTCFG	=	0x009c
                           0000A1   661 _T2IRQF	=	0x00a1
                           0000A2   662 _T2M0	=	0x00a2
                           0000A3   663 _T2M1	=	0x00a3
                           0000A4   664 _T2MOVF0	=	0x00a4
                           0000A5   665 _T2MOVF1	=	0x00a5
                           0000A6   666 _T2MOVF2	=	0x00a6
                           0000A7   667 _T2IRQM	=	0x00a7
                           0000C3   668 _T2MSEL	=	0x00c3
                           0000CA   669 _T3CNT	=	0x00ca
                           0000CB   670 _T3CTL	=	0x00cb
                           0000CC   671 _T3CCTL0	=	0x00cc
                           0000CD   672 _T3CC0	=	0x00cd
                           0000CE   673 _T3CCTL1	=	0x00ce
                           0000CF   674 _T3CC1	=	0x00cf
                           0000EA   675 _T4CNT	=	0x00ea
                           0000EB   676 _T4CTL	=	0x00eb
                           0000EC   677 _T4CCTL0	=	0x00ec
                           0000ED   678 _T4CC0	=	0x00ed
                           0000EE   679 _T4CCTL1	=	0x00ee
                           0000EF   680 _T4CC1	=	0x00ef
                           0000D8   681 _TIMIF	=	0x00d8
                           000086   682 _U0CSR	=	0x0086
                           0000C1   683 _U0DBUF	=	0x00c1
                           0000C2   684 _U0BAUD	=	0x00c2
                           0000C4   685 _U0UCR	=	0x00c4
                           0000C5   686 _U0GCR	=	0x00c5
                           0000F8   687 _U1CSR	=	0x00f8
                           0000F9   688 _U1DBUF	=	0x00f9
                           0000FA   689 _U1BAUD	=	0x00fa
                           0000FB   690 _U1UCR	=	0x00fb
                           0000FC   691 _U1GCR	=	0x00fc
                           0000C9   692 _WDCTL	=	0x00c9
                                    693 ;--------------------------------------------------------
                                    694 ; special function bits
                                    695 ;--------------------------------------------------------
                                    696 	.area RSEG    (ABS,DATA)
      000000                        697 	.org 0x0000
                           000087   698 _P0_7	=	0x0087
                           000086   699 _P0_6	=	0x0086
                           000085   700 _P0_5	=	0x0085
                           000084   701 _P0_4	=	0x0084
                           000083   702 _P0_3	=	0x0083
                           000082   703 _P0_2	=	0x0082
                           000081   704 _P0_1	=	0x0081
                           000080   705 _P0_0	=	0x0080
                           00008F   706 _URX1IF	=	0x008f
                           00008D   707 _ADCIF	=	0x008d
                           00008B   708 _URX0IF	=	0x008b
                           00008A   709 _IT1	=	0x008a
                           000089   710 _RFERRIF	=	0x0089
                           000088   711 _IT0	=	0x0088
                           000097   712 _P1_7	=	0x0097
                           000096   713 _P1_6	=	0x0096
                           000095   714 _P1_5	=	0x0095
                           000094   715 _P1_4	=	0x0094
                           000093   716 _P1_3	=	0x0093
                           000092   717 _P1_2	=	0x0092
                           000091   718 _P1_1	=	0x0091
                           000090   719 _P1_0	=	0x0090
                           000099   720 _ENCIF_1	=	0x0099
                           000098   721 _ENCIF_0	=	0x0098
                           0000A7   722 _P2_7	=	0x00a7
                           0000A6   723 _P2_6	=	0x00a6
                           0000A5   724 _P2_5	=	0x00a5
                           0000A4   725 _P2_4	=	0x00a4
                           0000A3   726 _P2_3	=	0x00a3
                           0000A2   727 _P2_2	=	0x00a2
                           0000A1   728 _P2_1	=	0x00a1
                           0000A0   729 _P2_0	=	0x00a0
                           0000AF   730 _EA	=	0x00af
                           0000AD   731 _STIE	=	0x00ad
                           0000AC   732 _ENCIE	=	0x00ac
                           0000AB   733 _URX1IE	=	0x00ab
                           0000AA   734 _URX0IE	=	0x00aa
                           0000A9   735 _ADCIE	=	0x00a9
                           0000A8   736 _RFERRIE	=	0x00a8
                           0000BD   737 _P0IE	=	0x00bd
                           0000BC   738 _T4IE	=	0x00bc
                           0000BB   739 _T3IE	=	0x00bb
                           0000BA   740 _T2IE	=	0x00ba
                           0000B9   741 _T1IE	=	0x00b9
                           0000B8   742 _DMAIE	=	0x00b8
                           0000C7   743 _STIF	=	0x00c7
                           0000C5   744 _P0IF	=	0x00c5
                           0000C4   745 _T4IF	=	0x00c4
                           0000C3   746 _T3IF	=	0x00c3
                           0000C2   747 _T2IF	=	0x00c2
                           0000C1   748 _T1IF	=	0x00c1
                           0000C0   749 _DMAIF	=	0x00c0
                           0000D7   750 _CY	=	0x00d7
                           0000D6   751 _AC	=	0x00d6
                           0000D5   752 _F0	=	0x00d5
                           0000D4   753 _RS1	=	0x00d4
                           0000D3   754 _RS0	=	0x00d3
                           0000D2   755 _OV	=	0x00d2
                           0000D1   756 _F1	=	0x00d1
                           0000D0   757 _P	=	0x00d0
                           0000E7   758 _ACC_7	=	0x00e7
                           0000E6   759 _ACC_6	=	0x00e6
                           0000E5   760 _ACC_5	=	0x00e5
                           0000E4   761 _ACC_4	=	0x00e4
                           0000E3   762 _ACC_3	=	0x00e3
                           0000E2   763 _ACC_2	=	0x00e2
                           0000E1   764 _ACC_1	=	0x00e1
                           0000E0   765 _ACC_0	=	0x00e0
                           0000EC   766 _WDTIF	=	0x00ec
                           0000EB   767 _P1IF	=	0x00eb
                           0000EA   768 _UTX1IF	=	0x00ea
                           0000E9   769 _UTX0IF	=	0x00e9
                           0000E8   770 _P2IF	=	0x00e8
                           0000F7   771 _B_7	=	0x00f7
                           0000F6   772 _B_6	=	0x00f6
                           0000F5   773 _B_5	=	0x00f5
                           0000F4   774 _B_4	=	0x00f4
                           0000F3   775 _B_3	=	0x00f3
                           0000F2   776 _B_2	=	0x00f2
                           0000F1   777 _B_1	=	0x00f1
                           0000F0   778 _B_0	=	0x00f0
                           0000DE   779 _OVFIM	=	0x00de
                           0000DD   780 _T4CH1IF	=	0x00dd
                           0000DC   781 _T4CH0IF	=	0x00dc
                           0000DB   782 _T4OVFIF	=	0x00db
                           0000DA   783 _T3CH1IF	=	0x00da
                           0000D9   784 _T3CH0IF	=	0x00d9
                           0000D8   785 _T3OVFIF	=	0x00d8
                           0000FF   786 _MODE	=	0x00ff
                           0000FE   787 _RE	=	0x00fe
                           0000FD   788 _SLAVE	=	0x00fd
                           0000FC   789 _FE	=	0x00fc
                           0000FB   790 _ERR	=	0x00fb
                           0000FA   791 _RX_BYTE	=	0x00fa
                           0000F9   792 _TX_BYTE	=	0x00f9
                           0000F8   793 _ACTIVE	=	0x00f8
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable register banks
                                    796 ;--------------------------------------------------------
                                    797 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        798 	.ds 8
                                    799 ;--------------------------------------------------------
                                    800 ; internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area DSEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; overlayable items in internal ram 
                                    805 ;--------------------------------------------------------
                                    806 ;--------------------------------------------------------
                                    807 ; indirectly addressable internal ram data
                                    808 ;--------------------------------------------------------
                                    809 	.area ISEG    (DATA)
                                    810 ;--------------------------------------------------------
                                    811 ; absolute internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area IABS    (ABS,DATA)
                                    814 	.area IABS    (ABS,DATA)
                                    815 ;--------------------------------------------------------
                                    816 ; bit data
                                    817 ;--------------------------------------------------------
                                    818 	.area BSEG    (BIT)
                                    819 ;--------------------------------------------------------
                                    820 ; paged external ram data
                                    821 ;--------------------------------------------------------
                                    822 	.area PSEG    (PAG,XDATA)
                                    823 ;--------------------------------------------------------
                                    824 ; external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area XSEG    (XDATA)
                           0061A6   827 _MONMUX	=	0x61a6
                           0061A6   828 _OPAMPMC	=	0x61a6
                           006230   829 _I2CCFG	=	0x6230
                           006231   830 _I2CSTAT	=	0x6231
                           006232   831 _I2CDATA	=	0x6232
                           006233   832 _I2CADDR	=	0x6233
                           006234   833 _I2CWC	=	0x6234
                           006235   834 _I2CIO	=	0x6235
                           006243   835 _OBSSEL0	=	0x6243
                           006244   836 _OBSSEL1	=	0x6244
                           006245   837 _OBSSEL2	=	0x6245
                           006246   838 _OBSSEL3	=	0x6246
                           006247   839 _OBSSEL4	=	0x6247
                           006248   840 _OBSSEL5	=	0x6248
                           006249   841 _CHVER	=	0x6249
                           00624A   842 _CHIPID	=	0x624a
                           00624B   843 _TESTREG0	=	0x624b
                           006260   844 _DBGDATA	=	0x6260
                           006262   845 _SRCRC	=	0x6262
                           006264   846 _BATTMON	=	0x6264
                           006265   847 _IVCTRL	=	0x6265
                           006270   848 _FCTL	=	0x6270
                           006271   849 _FADDRL	=	0x6271
                           006272   850 _FADDRH	=	0x6272
                           006273   851 _FWDATA	=	0x6273
                           006276   852 _CHIPINFO0	=	0x6276
                           006277   853 _CHIPINFO1	=	0x6277
                           006281   854 _IRCTL	=	0x6281
                           006290   855 _CLD	=	0x6290
                           0062A0   856 _XX_T1CCTL0	=	0x62a0
                           0062A1   857 _XX_T1CCTL1	=	0x62a1
                           0062A2   858 _XX_T1CCTL2	=	0x62a2
                           0062A3   859 _T1CCTL3	=	0x62a3
                           0062A4   860 _T1CCTL4	=	0x62a4
                           0062A6   861 _XX_T1CC0L	=	0x62a6
                           0062A7   862 _XX_T1CC0H	=	0x62a7
                           0062A8   863 _XX_T1CC1L	=	0x62a8
                           0062A9   864 _XX_T1CC1H	=	0x62a9
                           0062AA   865 _XX_T1CC2L	=	0x62aa
                           0062AB   866 _XX_T1CC2H	=	0x62ab
                           0062AC   867 _T1CC3L	=	0x62ac
                           0062AD   868 _T1CC3H	=	0x62ad
                           0062AE   869 _T1CC4L	=	0x62ae
                           0062AF   870 _T1CC4H	=	0x62af
                           0062B0   871 _STCC	=	0x62b0
                           0062B1   872 _STCS	=	0x62b1
                           0062B2   873 _STCV0	=	0x62b2
                           0062B3   874 _STCV1	=	0x62b3
                           0062B4   875 _STCV2	=	0x62b4
                           0062C0   876 _OPAMPC	=	0x62c0
                           0062C1   877 _OPAMPS	=	0x62c1
                           0062D0   878 _CMPCTL	=	0x62d0
                           006000   879 _RFCORE_RAM	=	0x6000
                           006000   880 _RXFIFO	=	0x6000
                           006080   881 _TXFIFO	=	0x6080
                           006100   882 _SRC_ADDR_TABLE	=	0x6100
                           006160   883 _SRCRESMASK0	=	0x6160
                           006161   884 _SRCRESMASK1	=	0x6161
                           006162   885 _SRCRESMASK2	=	0x6162
                           006163   886 _SRCRESINDEX	=	0x6163
                           006164   887 _SRCEXTPENDEN0	=	0x6164
                           006165   888 _SRCEXTPENDEN1	=	0x6165
                           006166   889 _SRCEXTPENDEN2	=	0x6166
                           006167   890 _SRCSHORTPENDEN0	=	0x6167
                           006168   891 _SRCSHORTPENDEN1	=	0x6168
                           006169   892 _SRCSHORTPENDEN2	=	0x6169
                           00616A   893 _EXT_ADDR0	=	0x616a
                           00616B   894 _EXT_ADDR1	=	0x616b
                           00616C   895 _EXT_ADDR2	=	0x616c
                           00616D   896 _EXT_ADDR3	=	0x616d
                           00616E   897 _EXT_ADDR4	=	0x616e
                           00616F   898 _EXT_ADDR5	=	0x616f
                           006170   899 _EXT_ADDR6	=	0x6170
                           006171   900 _EXT_ADDR7	=	0x6171
                           006172   901 _PAN_ID0	=	0x6172
                           006173   902 _PAN_ID1	=	0x6173
                           006174   903 _SHORT_ADDR0	=	0x6174
                           006175   904 _SHORT_ADDR1	=	0x6175
                           006180   905 _FRMFILT0	=	0x6180
                           006181   906 _FRMFILT1	=	0x6181
                           006182   907 _SRCMATCH	=	0x6182
                           006183   908 _SRCSHORTEN0	=	0x6183
                           006184   909 _SRCSHORTEN1	=	0x6184
                           006185   910 _SRCSHORTEN2	=	0x6185
                           006186   911 _SRCEXTEN0	=	0x6186
                           006187   912 _SRCEXTEN1	=	0x6187
                           006188   913 _SRCEXTEN2	=	0x6188
                           006189   914 _FRMCTRL0	=	0x6189
                           00618A   915 _FRMCTRL1	=	0x618a
                           00618B   916 _RXENABLE	=	0x618b
                           00618C   917 _RXMASKSET	=	0x618c
                           00618D   918 _RXMASKCLR	=	0x618d
                           00618E   919 _FREQTUNE	=	0x618e
                           00618F   920 _FREQCTRL	=	0x618f
                           006190   921 _TXPOWER	=	0x6190
                           006191   922 _TXCTRL	=	0x6191
                           006192   923 _FSMSTAT0	=	0x6192
                           006193   924 _FSMSTAT1	=	0x6193
                           006194   925 _FIFOPCTRL	=	0x6194
                           006195   926 _FSMCTRL	=	0x6195
                           006196   927 _CCACTRL0	=	0x6196
                           006197   928 _CCACTRL1	=	0x6197
                           006198   929 _RSSI	=	0x6198
                           006199   930 _RSSISTAT	=	0x6199
                           00619A   931 _RXFIRST	=	0x619a
                           00619B   932 _RXFIFOCNT	=	0x619b
                           00619C   933 _TXFIFOCNT	=	0x619c
                           00619D   934 _RXFIRST_PTR	=	0x619d
                           00619E   935 _RXLAST_PTR	=	0x619e
                           00619F   936 _RXP1_PTR	=	0x619f
                           0061A1   937 _TXFIRST_PTR	=	0x61a1
                           0061A2   938 _TXLAST_PTR	=	0x61a2
                           0061A3   939 _RFIRQM0	=	0x61a3
                           0061A4   940 _RFIRQM1	=	0x61a4
                           0061A5   941 _RFERRM	=	0x61a5
                           0061A7   942 _RFRND	=	0x61a7
                           0061A8   943 _MDMCTRL0	=	0x61a8
                           0061A9   944 _MDMCTRL1	=	0x61a9
                           0061AA   945 _FREQEST	=	0x61aa
                           0061AB   946 _RXCTRL	=	0x61ab
                           0061AC   947 _FSCTRL	=	0x61ac
                           0061AD   948 _FSCAL0	=	0x61ad
                           0061AE   949 _FSCAL1	=	0x61ae
                           0061AF   950 _FSCAL2	=	0x61af
                           0061B0   951 _FSCAL3	=	0x61b0
                           0061B1   952 _AGCCTRL0	=	0x61b1
                           0061B2   953 _AGCCTRL1	=	0x61b2
                           0061B3   954 _AGCCTRL2	=	0x61b3
                           0061B4   955 _AGCCTRL3	=	0x61b4
                           0061B5   956 _ADCTEST0	=	0x61b5
                           0061B6   957 _ADCTEST1	=	0x61b6
                           0061B7   958 _ADCTEST2	=	0x61b7
                           0061B8   959 _MDMTEST0	=	0x61b8
                           0061B9   960 _MDMTEST1	=	0x61b9
                           0061BA   961 _DACTEST0	=	0x61ba
                           0061BB   962 _DACTEST1	=	0x61bb
                           0061BC   963 _DACTEST2	=	0x61bc
                           0061BD   964 _ATEST	=	0x61bd
                           0061BE   965 _PTEST0	=	0x61be
                           0061BF   966 _PTEST1	=	0x61bf
                           0061FA   967 _TXFILTCFG	=	0x61fa
                           0061EB   968 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   969 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   970 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   971 _CSPPROG0	=	0x61c0
                           0061C1   972 _CSPPROG1	=	0x61c1
                           0061C2   973 _CSPPROG2	=	0x61c2
                           0061C3   974 _CSPPROG3	=	0x61c3
                           0061C4   975 _CSPPROG4	=	0x61c4
                           0061C5   976 _CSPPROG5	=	0x61c5
                           0061C6   977 _CSPPROG6	=	0x61c6
                           0061C7   978 _CSPPROG7	=	0x61c7
                           0061C8   979 _CSPPROG8	=	0x61c8
                           0061C9   980 _CSPPROG9	=	0x61c9
                           0061CA   981 _CSPPROG10	=	0x61ca
                           0061CB   982 _CSPPROG11	=	0x61cb
                           0061CC   983 _CSPPROG12	=	0x61cc
                           0061CD   984 _CSPPROG13	=	0x61cd
                           0061CE   985 _CSPPROG14	=	0x61ce
                           0061CF   986 _CSPPROG15	=	0x61cf
                           0061D0   987 _CSPPROG16	=	0x61d0
                           0061D1   988 _CSPPROG17	=	0x61d1
                           0061D2   989 _CSPPROG18	=	0x61d2
                           0061D3   990 _CSPPROG19	=	0x61d3
                           0061D4   991 _CSPPROG20	=	0x61d4
                           0061D5   992 _CSPPROG21	=	0x61d5
                           0061D6   993 _CSPPROG22	=	0x61d6
                           0061D7   994 _CSPPROG23	=	0x61d7
                           0061E0   995 _CSPCTRL	=	0x61e0
                           0061E1   996 _CSPSTAT	=	0x61e1
                           0061E2   997 _CSPX	=	0x61e2
                           0061E3   998 _CSPY	=	0x61e3
                           0061E4   999 _CSPZ	=	0x61e4
                           0061E5  1000 _CSPT	=	0x61e5
                           006200  1001 _USBADDR	=	0x6200
                           006201  1002 _USBPOW	=	0x6201
                           006202  1003 _USBIIF	=	0x6202
                           006204  1004 _USBOIF	=	0x6204
                           006206  1005 _USBCIF	=	0x6206
                           006207  1006 _USBIIE	=	0x6207
                           006209  1007 _USBOIE	=	0x6209
                           00620B  1008 _USBCIE	=	0x620b
                           00620C  1009 _USBFRML	=	0x620c
                           00620D  1010 _USBFRMH	=	0x620d
                           00620E  1011 _USBINDEX	=	0x620e
                           00620F  1012 _USBCTRL	=	0x620f
                           006210  1013 _USBMAXI	=	0x6210
                           006211  1014 _USBCS0	=	0x6211
                           006211  1015 _USBCSIL	=	0x6211
                           006212  1016 _USBCSIH	=	0x6212
                           006213  1017 _USBMAXO	=	0x6213
                           006214  1018 _USBCSOL	=	0x6214
                           006215  1019 _USBCSOH	=	0x6215
                           006216  1020 _USBCNT0	=	0x6216
                           006216  1021 _USBCNTL	=	0x6216
                           006217  1022 _USBCNTH	=	0x6217
                           006220  1023 _USBF0	=	0x6220
                           006222  1024 _USBF1	=	0x6222
                           006224  1025 _USBF2	=	0x6224
                           006226  1026 _USBF3	=	0x6226
                           006228  1027 _USBF4	=	0x6228
                           00622A  1028 _USBF5	=	0x622a
                           007080  1029 _X_P0	=	0x7080
                           007086  1030 _X_U0CSR	=	0x7086
                           007089  1031 _X_P0IFG	=	0x7089
                           00708A  1032 _X_P1IFG	=	0x708a
                           00708B  1033 _X_P2IFG	=	0x708b
                           00708C  1034 _X_PICTL	=	0x708c
                           00708D  1035 _X_P1IEN	=	0x708d
                           00708F  1036 _X_P0INP	=	0x708f
                           007090  1037 _X_P1	=	0x7090
                           007091  1038 _X_RFIRQF1	=	0x7091
                           007093  1039 _X_MPAGE	=	0x7093
                           007093  1040 _X__XPAGE	=	0x7093
                           007094  1041 _X_T2CTRL	=	0x7094
                           007095  1042 _X_ST0	=	0x7095
                           007096  1043 _X_ST1	=	0x7096
                           007097  1044 _X_ST2	=	0x7097
                           00709C  1045 _X_T2EVTCFG	=	0x709c
                           00709D  1046 _X_SLEEPSTA	=	0x709d
                           00709E  1047 _X_CLKCONSTA	=	0x709e
                           00709F  1048 _X_FMAP	=	0x709f
                           00709F  1049 _X_PSBANK	=	0x709f
                           0070A0  1050 _X_P2	=	0x70a0
                           0070A1  1051 _X_T2IRQF	=	0x70a1
                           0070A2  1052 _X_T2M0	=	0x70a2
                           0070A3  1053 _X_T2M1	=	0x70a3
                           0070A4  1054 _X_T2MOVF0	=	0x70a4
                           0070A5  1055 _X_T2MOVF1	=	0x70a5
                           0070A6  1056 _X_T2MOVF2	=	0x70a6
                           0070A7  1057 _X_T2IRQM	=	0x70a7
                           0070AB  1058 _X_P0IEN	=	0x70ab
                           0070AC  1059 _X_P2IEN	=	0x70ac
                           0070AD  1060 _X_STLOAD	=	0x70ad
                           0070AE  1061 _X_PMUX	=	0x70ae
                           0070AF  1062 _X_T1STAT	=	0x70af
                           0070B1  1063 _X_ENCDI	=	0x70b1
                           0070B2  1064 _X_ENCDO	=	0x70b2
                           0070B3  1065 _X_ENCCS	=	0x70b3
                           0070B4  1066 _X_ADCCON1	=	0x70b4
                           0070B5  1067 _X_ADCCON2	=	0x70b5
                           0070B6  1068 _X_ADCCON3	=	0x70b6
                           0070BA  1069 _X_ADCL	=	0x70ba
                           0070BB  1070 _X_ADCH	=	0x70bb
                           0070BC  1071 _X_RNDL	=	0x70bc
                           0070BD  1072 _X_RNDH	=	0x70bd
                           0070BE  1073 _X_SLEEPCMD	=	0x70be
                           0070BF  1074 _X_RFERRF	=	0x70bf
                           0070C1  1075 _X_U0DBUF	=	0x70c1
                           0070C2  1076 _X_U0BAUD	=	0x70c2
                           0070C3  1077 _X_T2MSEL	=	0x70c3
                           0070C4  1078 _X_U0UCR	=	0x70c4
                           0070C5  1079 _X_U0GCR	=	0x70c5
                           0070C6  1080 _X_CLKCONCMD	=	0x70c6
                           0070C7  1081 _X_MEMCTR	=	0x70c7
                           0070C9  1082 _X_WDCTL	=	0x70c9
                           0070CA  1083 _X_T3CNT	=	0x70ca
                           0070CB  1084 _X_T3CTL	=	0x70cb
                           0070CC  1085 _X_T3CCTL0	=	0x70cc
                           0070CD  1086 _X_T3CC0	=	0x70cd
                           0070CE  1087 _X_T3CCTL1	=	0x70ce
                           0070CF  1088 _X_T3CC1	=	0x70cf
                           0070D1  1089 _X_DMAIRQ	=	0x70d1
                           0070D2  1090 _X_DMA1CFGL	=	0x70d2
                           0070D3  1091 _X_DMA1CFGH	=	0x70d3
                           0070D4  1092 _X_DMA0CFGL	=	0x70d4
                           0070D5  1093 _X_DMA0CFGH	=	0x70d5
                           0070D6  1094 _X_DMAARM	=	0x70d6
                           0070D7  1095 _X_DMAREQ	=	0x70d7
                           0070D8  1096 _X_TIMIF	=	0x70d8
                           0070D9  1097 _X_RFD	=	0x70d9
                           0070DA  1098 _X_T1CC0L	=	0x70da
                           0070DB  1099 _X_T1CC0H	=	0x70db
                           0070DC  1100 _X_T1CC1L	=	0x70dc
                           0070DD  1101 _X_T1CC1H	=	0x70dd
                           0070DE  1102 _X_T1CC2L	=	0x70de
                           0070DF  1103 _X_T1CC2H	=	0x70df
                           0070E1  1104 _X_RFST	=	0x70e1
                           0070E2  1105 _X_T1CNTL	=	0x70e2
                           0070E3  1106 _X_T1CNTH	=	0x70e3
                           0070E4  1107 _X_T1CTL	=	0x70e4
                           0070E5  1108 _X_T1CCTL0	=	0x70e5
                           0070E6  1109 _X_T1CCTL1	=	0x70e6
                           0070E7  1110 _X_T1CCTL2	=	0x70e7
                           0070E9  1111 _X_RFIRQF0	=	0x70e9
                           0070EA  1112 _X_T4CNT	=	0x70ea
                           0070EB  1113 _X_T4CTL	=	0x70eb
                           0070EC  1114 _X_T4CCTL0	=	0x70ec
                           0070ED  1115 _X_T4CC0	=	0x70ed
                           0070EE  1116 _X_T4CCTL1	=	0x70ee
                           0070EF  1117 _X_T4CC1	=	0x70ef
                           0070F1  1118 _X_PERCFG	=	0x70f1
                           0070F2  1119 _X_APCFG	=	0x70f2
                           0070F3  1120 _X_P0SEL	=	0x70f3
                           0070F4  1121 _X_P1SEL	=	0x70f4
                           0070F5  1122 _X_P2SEL	=	0x70f5
                           0070F6  1123 _X_P1INP	=	0x70f6
                           0070F7  1124 _X_P2INP	=	0x70f7
                           0070F8  1125 _X_U1CSR	=	0x70f8
                           0070F9  1126 _X_U1DBUF	=	0x70f9
                           0070FA  1127 _X_U1BAUD	=	0x70fa
                           0070FB  1128 _X_U1UCR	=	0x70fb
                           0070FC  1129 _X_U1GCR	=	0x70fc
                           0070FD  1130 _X_P0DIR	=	0x70fd
                           0070FE  1131 _X_P1DIR	=	0x70fe
                           0070FF  1132 _X_P2DIR	=	0x70ff
                           007800  1133 _X_INFOPAGE	=	0x7800
                           00780C  1134 _X_IEEE_ADDR	=	0x780c
      000000                       1135 _periodic_timer:
      000000                       1136 	.ds 22
      000016                       1137 _next_dis:
      000016                       1138 	.ds 2
      000018                       1139 _dio_send_ok:
      000018                       1140 	.ds 1
                                   1141 ;--------------------------------------------------------
                                   1142 ; absolute external ram data
                                   1143 ;--------------------------------------------------------
                                   1144 	.area XABS    (ABS,XDATA)
                                   1145 ;--------------------------------------------------------
                                   1146 ; external initialized ram data
                                   1147 ;--------------------------------------------------------
                                   1148 	.area XISEG   (XDATA)
                                   1149 	.area HOME    (CODE)
                                   1150 	.area GSINIT0 (CODE)
                                   1151 	.area GSINIT1 (CODE)
                                   1152 	.area GSINIT2 (CODE)
                                   1153 	.area GSINIT3 (CODE)
                                   1154 	.area GSINIT4 (CODE)
                                   1155 	.area GSINIT5 (CODE)
                                   1156 	.area GSINIT  (CODE)
                                   1157 	.area GSFINAL (CODE)
                                   1158 	.area CSEG    (CODE)
                                   1159 ;--------------------------------------------------------
                                   1160 ; global & static initialisations
                                   1161 ;--------------------------------------------------------
                                   1162 	.area HOME    (CODE)
                                   1163 	.area GSINIT  (CODE)
                                   1164 	.area GSFINAL (CODE)
                                   1165 	.area GSINIT  (CODE)
                                   1166 ;--------------------------------------------------------
                                   1167 ; Home
                                   1168 ;--------------------------------------------------------
                                   1169 	.area HOME    (CODE)
                                   1170 	.area HOME    (CODE)
                                   1171 ;--------------------------------------------------------
                                   1172 ; code
                                   1173 ;--------------------------------------------------------
                                   1174 	.area BANK1   (CODE)
                                   1175 ;------------------------------------------------------------
                                   1176 ;Allocation info for local variables in function 'handle_periodic_timer'
                                   1177 ;------------------------------------------------------------
                                   1178 ;ptr                       Allocated to registers 
                                   1179 ;------------------------------------------------------------
                                   1180 ;	../../core/net/rpl/rpl-timers.c:67: handle_periodic_timer(void *ptr)
                                   1181 ;	-----------------------------------------
                                   1182 ;	 function handle_periodic_timer
                                   1183 ;	-----------------------------------------
      000000                       1184 _handle_periodic_timer:
                           000007  1185 	ar7 = 0x07
                           000006  1186 	ar6 = 0x06
                           000005  1187 	ar5 = 0x05
                           000004  1188 	ar4 = 0x04
                           000003  1189 	ar3 = 0x03
                           000002  1190 	ar2 = 0x02
                           000001  1191 	ar1 = 0x01
                           000000  1192 	ar0 = 0x00
                                   1193 ;	../../core/net/rpl/rpl-timers.c:69: rpl_purge_routes();
      000000 78r00            [12] 1194 	mov	r0,#_rpl_purge_routes
      000002 79s00            [12] 1195 	mov	r1,#(_rpl_purge_routes >> 8)
      000004 7As00            [12] 1196 	mov	r2,#(_rpl_purge_routes >> 16)
      000006 12r00r00         [24] 1197 	lcall	__sdcc_banked_call
                                   1198 ;	../../core/net/rpl/rpl-timers.c:70: rpl_recalculate_ranks();
      000009 78r00            [12] 1199 	mov	r0,#_rpl_recalculate_ranks
      00000B 79s00            [12] 1200 	mov	r1,#(_rpl_recalculate_ranks >> 8)
      00000D 7As00            [12] 1201 	mov	r2,#(_rpl_recalculate_ranks >> 16)
      00000F 12r00r00         [24] 1202 	lcall	__sdcc_banked_call
                                   1203 ;	../../core/net/rpl/rpl-timers.c:74: next_dis++;
      000012 90r00r16         [24] 1204 	mov	dptr,#_next_dis
      000015 E0               [24] 1205 	movx	a,@dptr
      000016 24 01            [12] 1206 	add	a,#0x01
      000018 F0               [24] 1207 	movx	@dptr,a
      000019 A3               [24] 1208 	inc	dptr
      00001A E0               [24] 1209 	movx	a,@dptr
      00001B 34 00            [12] 1210 	addc	a,#0x00
      00001D F0               [24] 1211 	movx	@dptr,a
                                   1212 ;	../../core/net/rpl/rpl-timers.c:75: if(rpl_get_any_dag() == NULL && next_dis >= RPL_DIS_INTERVAL) {
      00001E 78r00            [12] 1213 	mov	r0,#_rpl_get_any_dag
      000020 79s00            [12] 1214 	mov	r1,#(_rpl_get_any_dag >> 8)
      000022 7As00            [12] 1215 	mov	r2,#(_rpl_get_any_dag >> 16)
      000024 12r00r00         [24] 1216 	lcall	__sdcc_banked_call
      000027 AD 82            [24] 1217 	mov	r5,dpl
      000029 AE 83            [24] 1218 	mov	r6,dph
      00002B AF F0            [24] 1219 	mov	r7,b
      00002D ED               [12] 1220 	mov	a,r5
      00002E 4E               [12] 1221 	orl	a,r6
      00002F 70 28            [24] 1222 	jnz	00102$
      000031 90r00r16         [24] 1223 	mov	dptr,#_next_dis
      000034 E0               [24] 1224 	movx	a,@dptr
      000035 FE               [12] 1225 	mov	r6,a
      000036 A3               [24] 1226 	inc	dptr
      000037 E0               [24] 1227 	movx	a,@dptr
      000038 FF               [12] 1228 	mov	r7,a
      000039 C3               [12] 1229 	clr	c
      00003A EE               [12] 1230 	mov	a,r6
      00003B 94 3C            [12] 1231 	subb	a,#0x3C
      00003D EF               [12] 1232 	mov	a,r7
      00003E 94 00            [12] 1233 	subb	a,#0x00
      000040 40 17            [24] 1234 	jc	00102$
                                   1235 ;	../../core/net/rpl/rpl-timers.c:76: next_dis = 0;
      000042 90r00r16         [24] 1236 	mov	dptr,#_next_dis
      000045 E4               [12] 1237 	clr	a
      000046 F0               [24] 1238 	movx	@dptr,a
      000047 E4               [12] 1239 	clr	a
      000048 A3               [24] 1240 	inc	dptr
      000049 F0               [24] 1241 	movx	@dptr,a
                                   1242 ;	../../core/net/rpl/rpl-timers.c:77: dis_output(NULL);
      00004A 90 00 00         [24] 1243 	mov	dptr,#0x0000
      00004D 75 F0 00         [24] 1244 	mov	b,#0x00
      000050 78r00            [12] 1245 	mov	r0,#_dis_output
      000052 79s00            [12] 1246 	mov	r1,#(_dis_output >> 8)
      000054 7As00            [12] 1247 	mov	r2,#(_dis_output >> 16)
      000056 12r00r00         [24] 1248 	lcall	__sdcc_banked_call
      000059                       1249 00102$:
                                   1250 ;	../../core/net/rpl/rpl-timers.c:80: ctimer_reset(&periodic_timer);
      000059 90r00r00         [24] 1251 	mov	dptr,#_periodic_timer
      00005C 75 F0 00         [24] 1252 	mov	b,#0x00
      00005F 78r00            [12] 1253 	mov	r0,#_ctimer_reset
      000061 79s00            [12] 1254 	mov	r1,#(_ctimer_reset >> 8)
      000063 7As00            [12] 1255 	mov	r2,#(_ctimer_reset >> 16)
      000065 12r00r00         [24] 1256 	lcall	__sdcc_banked_call
      000068 02r00r00         [24] 1257 	ljmp	__sdcc_banked_ret
                                   1258 ;------------------------------------------------------------
                                   1259 ;Allocation info for local variables in function 'new_dio_interval'
                                   1260 ;------------------------------------------------------------
                                   1261 ;instance                  Allocated to stack - sp -11
                                   1262 ;time                      Allocated to registers r5 r6 r4 r7 
                                   1263 ;ticks                     Allocated to stack - sp -1
                                   1264 ;sloc0                     Allocated to stack - sp -2
                                   1265 ;sloc1                     Allocated to stack - sp -8
                                   1266 ;sloc2                     Allocated to stack - sp +3
                                   1267 ;sloc3                     Allocated to stack - sp -5
                                   1268 ;------------------------------------------------------------
                                   1269 ;	../../core/net/rpl/rpl-timers.c:84: new_dio_interval(rpl_instance_t *instance)
                                   1270 ;	-----------------------------------------
                                   1271 ;	 function new_dio_interval
                                   1272 ;	-----------------------------------------
      00006B                       1273 _new_dio_interval:
      00006B C0 82            [24] 1274 	push	dpl
      00006D C0 83            [24] 1275 	push	dph
      00006F C0 F0            [24] 1276 	push	b
      000071 E5 81            [12] 1277 	mov	a,sp
      000073 24 09            [12] 1278 	add	a,#0x09
                                   1279 ;	../../core/net/rpl/rpl-timers.c:90: time = 1UL << instance->dio_intcurrent;
      000075 F5 81            [12] 1280 	mov	sp,a
      000077 24 F5            [12] 1281 	add	a,#0xf5
      000079 F8               [12] 1282 	mov	r0,a
      00007A 74 82            [12] 1283 	mov	a,#0x82
      00007C 26               [12] 1284 	add	a,@r0
      00007D FA               [12] 1285 	mov	r2,a
      00007E E4               [12] 1286 	clr	a
      00007F 08               [12] 1287 	inc	r0
      000080 36               [12] 1288 	addc	a,@r0
      000081 FB               [12] 1289 	mov	r3,a
      000082 08               [12] 1290 	inc	r0
      000083 86 04            [24] 1291 	mov	ar4,@r0
      000085 8A 82            [24] 1292 	mov	dpl,r2
      000087 8B 83            [24] 1293 	mov	dph,r3
      000089 8C F0            [24] 1294 	mov	b,r4
      00008B 12r00r00         [24] 1295 	lcall	__gptrget
      00008E FA               [12] 1296 	mov	r2,a
      00008F 8A F0            [24] 1297 	mov	b,r2
      000091 05 F0            [12] 1298 	inc	b
      000093 7D 01            [12] 1299 	mov	r5,#0x01
      000095 7E 00            [12] 1300 	mov	r6,#0x00
      000097 7C 00            [12] 1301 	mov	r4,#0x00
      000099 7F 00            [12] 1302 	mov	r7,#0x00
      00009B 80 0C            [24] 1303 	sjmp	00104$
      00009D                       1304 00103$:
      00009D ED               [12] 1305 	mov	a,r5
      00009E 2D               [12] 1306 	add	a,r5
      00009F FD               [12] 1307 	mov	r5,a
      0000A0 EE               [12] 1308 	mov	a,r6
      0000A1 33               [12] 1309 	rlc	a
      0000A2 FE               [12] 1310 	mov	r6,a
      0000A3 EC               [12] 1311 	mov	a,r4
      0000A4 33               [12] 1312 	rlc	a
      0000A5 FC               [12] 1313 	mov	r4,a
      0000A6 EF               [12] 1314 	mov	a,r7
      0000A7 33               [12] 1315 	rlc	a
      0000A8 FF               [12] 1316 	mov	r7,a
      0000A9                       1317 00104$:
      0000A9 D5 F0 F1         [24] 1318 	djnz	b,00103$
                                   1319 ;	../../core/net/rpl/rpl-timers.c:93: ticks = (time * CLOCK_SECOND) / 1000;
      0000AC EF               [12] 1320 	mov	a,r7
      0000AD 54 01            [12] 1321 	anl	a,#0x01
      0000AF A2 E0            [12] 1322 	mov	c,acc.0
      0000B1 CC               [12] 1323 	xch	a,r4
      0000B2 13               [12] 1324 	rrc	a
      0000B3 CC               [12] 1325 	xch	a,r4
      0000B4 13               [12] 1326 	rrc	a
      0000B5 CC               [12] 1327 	xch	a,r4
      0000B6 FF               [12] 1328 	mov	r7,a
      0000B7 EE               [12] 1329 	mov	a,r6
      0000B8 C3               [12] 1330 	clr	c
      0000B9 13               [12] 1331 	rrc	a
      0000BA 4C               [12] 1332 	orl	a,r4
      0000BB FC               [12] 1333 	mov	r4,a
      0000BC 8D 02            [24] 1334 	mov	ar2,r5
      0000BE EE               [12] 1335 	mov	a,r6
      0000BF 54 01            [12] 1336 	anl	a,#0x01
      0000C1 A2 E0            [12] 1337 	mov	c,acc.0
      0000C3 CA               [12] 1338 	xch	a,r2
      0000C4 13               [12] 1339 	rrc	a
      0000C5 CA               [12] 1340 	xch	a,r2
      0000C6 13               [12] 1341 	rrc	a
      0000C7 CA               [12] 1342 	xch	a,r2
      0000C8 FB               [12] 1343 	mov	r3,a
      0000C9 74 E8            [12] 1344 	mov	a,#0xE8
      0000CB C0 E0            [24] 1345 	push	acc
      0000CD 74 03            [12] 1346 	mov	a,#0x03
      0000CF C0 E0            [24] 1347 	push	acc
      0000D1 E4               [12] 1348 	clr	a
      0000D2 C0 E0            [24] 1349 	push	acc
      0000D4 C0 E0            [24] 1350 	push	acc
      0000D6 8A 82            [24] 1351 	mov	dpl,r2
      0000D8 8B 83            [24] 1352 	mov	dph,r3
      0000DA 8C F0            [24] 1353 	mov	b,r4
      0000DC EF               [12] 1354 	mov	a,r7
      0000DD 12r00r00         [24] 1355 	lcall	__divulong
      0000E0 AC 82            [24] 1356 	mov	r4,dpl
      0000E2 AD 83            [24] 1357 	mov	r5,dph
      0000E4 E5 81            [12] 1358 	mov	a,sp
      0000E6 24 FC            [12] 1359 	add	a,#0xfc
      0000E8 F5 81            [12] 1360 	mov	sp,a
      0000EA A8 81            [24] 1361 	mov	r0,sp
      0000EC 18               [12] 1362 	dec	r0
      0000ED A6 04            [24] 1363 	mov	@r0,ar4
      0000EF 08               [12] 1364 	inc	r0
      0000F0 A6 05            [24] 1365 	mov	@r0,ar5
                                   1366 ;	../../core/net/rpl/rpl-timers.c:94: instance->dio_next_delay = ticks;
      0000F2 E5 81            [12] 1367 	mov	a,sp
      0000F4 24 F5            [12] 1368 	add	a,#0xf5
      0000F6 F8               [12] 1369 	mov	r0,a
      0000F7 E5 81            [12] 1370 	mov	a,sp
      0000F9 24 F8            [12] 1371 	add	a,#0xf8
      0000FB F9               [12] 1372 	mov	r1,a
      0000FC 74 8B            [12] 1373 	mov	a,#0x8B
      0000FE 26               [12] 1374 	add	a,@r0
      0000FF F7               [12] 1375 	mov	@r1,a
      000100 E4               [12] 1376 	clr	a
      000101 08               [12] 1377 	inc	r0
      000102 36               [12] 1378 	addc	a,@r0
      000103 09               [12] 1379 	inc	r1
      000104 F7               [12] 1380 	mov	@r1,a
      000105 08               [12] 1381 	inc	r0
      000106 09               [12] 1382 	inc	r1
      000107 E6               [12] 1383 	mov	a,@r0
      000108 F7               [12] 1384 	mov	@r1,a
      000109 E5 81            [12] 1385 	mov	a,sp
      00010B 24 F8            [12] 1386 	add	a,#0xf8
      00010D F8               [12] 1387 	mov	r0,a
      00010E 86 82            [24] 1388 	mov	dpl,@r0
      000110 08               [12] 1389 	inc	r0
      000111 86 83            [24] 1390 	mov	dph,@r0
      000113 08               [12] 1391 	inc	r0
      000114 86 F0            [24] 1392 	mov	b,@r0
      000116 A9 81            [24] 1393 	mov	r1,sp
      000118 19               [12] 1394 	dec	r1
      000119 E7               [12] 1395 	mov	a,@r1
      00011A 12r00r00         [24] 1396 	lcall	__gptrput
      00011D A3               [24] 1397 	inc	dptr
      00011E 09               [12] 1398 	inc	r1
      00011F E7               [12] 1399 	mov	a,@r1
      000120 12r00r00         [24] 1400 	lcall	__gptrput
                                   1401 ;	../../core/net/rpl/rpl-timers.c:97: ticks = ticks / 2 + (ticks / 2 * (uint32_t)random_rand()) / RANDOM_RAND_MAX;
      000123 A8 81            [24] 1402 	mov	r0,sp
      000125 18               [12] 1403 	dec	r0
      000126 86 07            [24] 1404 	mov	ar7,@r0
      000128 08               [12] 1405 	inc	r0
      000129 E6               [12] 1406 	mov	a,@r0
      00012A C3               [12] 1407 	clr	c
      00012B 13               [12] 1408 	rrc	a
      00012C CF               [12] 1409 	xch	a,r7
      00012D 13               [12] 1410 	rrc	a
      00012E CF               [12] 1411 	xch	a,r7
      00012F FE               [12] 1412 	mov	r6,a
      000130 C0 07            [24] 1413 	push	ar7
      000132 C0 06            [24] 1414 	push	ar6
      000134 78r00            [12] 1415 	mov	r0,#_random_rand
      000136 79s00            [12] 1416 	mov	r1,#(_random_rand >> 8)
      000138 7As00            [12] 1417 	mov	r2,#(_random_rand >> 16)
      00013A 12r00r00         [24] 1418 	lcall	__sdcc_banked_call
      00013D AC 82            [24] 1419 	mov	r4,dpl
      00013F AD 83            [24] 1420 	mov	r5,dph
      000141 D0 06            [24] 1421 	pop	ar6
      000143 D0 07            [24] 1422 	pop	ar7
      000145 E4               [12] 1423 	clr	a
      000146 FB               [12] 1424 	mov	r3,a
      000147 FA               [12] 1425 	mov	r2,a
      000148 E5 81            [12] 1426 	mov	a,sp
      00014A 24 FB            [12] 1427 	add	a,#0xfb
      00014C F8               [12] 1428 	mov	r0,a
      00014D A6 07            [24] 1429 	mov	@r0,ar7
      00014F 08               [12] 1430 	inc	r0
      000150 A6 06            [24] 1431 	mov	@r0,ar6
      000152 08               [12] 1432 	inc	r0
      000153 76 00            [12] 1433 	mov	@r0,#0x00
      000155 08               [12] 1434 	inc	r0
      000156 76 00            [12] 1435 	mov	@r0,#0x00
      000158 C0 04            [24] 1436 	push	ar4
      00015A C0 05            [24] 1437 	push	ar5
      00015C C0 03            [24] 1438 	push	ar3
      00015E C0 02            [24] 1439 	push	ar2
      000160 E5 81            [12] 1440 	mov	a,sp
      000162 24 F7            [12] 1441 	add	a,#0xf7
      000164 F8               [12] 1442 	mov	r0,a
      000165 86 82            [24] 1443 	mov	dpl,@r0
      000167 08               [12] 1444 	inc	r0
      000168 86 83            [24] 1445 	mov	dph,@r0
      00016A 08               [12] 1446 	inc	r0
      00016B 86 F0            [24] 1447 	mov	b,@r0
      00016D 08               [12] 1448 	inc	r0
      00016E E6               [12] 1449 	mov	a,@r0
      00016F 12r00r00         [24] 1450 	lcall	__mullong
      000172 AA 82            [24] 1451 	mov	r2,dpl
      000174 AC 83            [24] 1452 	mov	r4,dph
      000176 AE F0            [24] 1453 	mov	r6,b
      000178 FF               [12] 1454 	mov	r7,a
      000179 E5 81            [12] 1455 	mov	a,sp
      00017B 24 FC            [12] 1456 	add	a,#0xfc
      00017D F5 81            [12] 1457 	mov	sp,a
      00017F 74 FF            [12] 1458 	mov	a,#0xFF
      000181 C0 E0            [24] 1459 	push	acc
      000183 C0 E0            [24] 1460 	push	acc
      000185 E4               [12] 1461 	clr	a
      000186 C0 E0            [24] 1462 	push	acc
      000188 C0 E0            [24] 1463 	push	acc
      00018A 8A 82            [24] 1464 	mov	dpl,r2
      00018C 8C 83            [24] 1465 	mov	dph,r4
      00018E 8E F0            [24] 1466 	mov	b,r6
      000190 EF               [12] 1467 	mov	a,r7
      000191 12r00r00         [24] 1468 	lcall	__divulong
      000194 AC 82            [24] 1469 	mov	r4,dpl
      000196 AD 83            [24] 1470 	mov	r5,dph
      000198 AE F0            [24] 1471 	mov	r6,b
      00019A FF               [12] 1472 	mov	r7,a
      00019B E5 81            [12] 1473 	mov	a,sp
      00019D 24 FC            [12] 1474 	add	a,#0xfc
      00019F F5 81            [12] 1475 	mov	sp,a
      0001A1 24 FB            [12] 1476 	add	a,#0xfb
      0001A3 F8               [12] 1477 	mov	r0,a
      0001A4 EC               [12] 1478 	mov	a,r4
      0001A5 26               [12] 1479 	add	a,@r0
      0001A6 FC               [12] 1480 	mov	r4,a
      0001A7 ED               [12] 1481 	mov	a,r5
      0001A8 08               [12] 1482 	inc	r0
      0001A9 36               [12] 1483 	addc	a,@r0
      0001AA FD               [12] 1484 	mov	r5,a
      0001AB EE               [12] 1485 	mov	a,r6
      0001AC 08               [12] 1486 	inc	r0
      0001AD 36               [12] 1487 	addc	a,@r0
      0001AE EF               [12] 1488 	mov	a,r7
      0001AF 08               [12] 1489 	inc	r0
      0001B0 36               [12] 1490 	addc	a,@r0
      0001B1 A8 81            [24] 1491 	mov	r0,sp
      0001B3 18               [12] 1492 	dec	r0
      0001B4 A6 04            [24] 1493 	mov	@r0,ar4
      0001B6 08               [12] 1494 	inc	r0
      0001B7 A6 05            [24] 1495 	mov	@r0,ar5
                                   1496 ;	../../core/net/rpl/rpl-timers.c:104: instance->dio_next_delay -= ticks;
      0001B9 E5 81            [12] 1497 	mov	a,sp
      0001BB 24 F8            [12] 1498 	add	a,#0xf8
      0001BD F8               [12] 1499 	mov	r0,a
      0001BE 86 82            [24] 1500 	mov	dpl,@r0
      0001C0 08               [12] 1501 	inc	r0
      0001C1 86 83            [24] 1502 	mov	dph,@r0
      0001C3 08               [12] 1503 	inc	r0
      0001C4 86 F0            [24] 1504 	mov	b,@r0
      0001C6 12r00r00         [24] 1505 	lcall	__gptrget
      0001C9 FE               [12] 1506 	mov	r6,a
      0001CA A3               [24] 1507 	inc	dptr
      0001CB 12r00r00         [24] 1508 	lcall	__gptrget
      0001CE FF               [12] 1509 	mov	r7,a
      0001CF A8 81            [24] 1510 	mov	r0,sp
      0001D1 18               [12] 1511 	dec	r0
      0001D2 EE               [12] 1512 	mov	a,r6
      0001D3 C3               [12] 1513 	clr	c
      0001D4 96               [12] 1514 	subb	a,@r0
      0001D5 FE               [12] 1515 	mov	r6,a
      0001D6 EF               [12] 1516 	mov	a,r7
      0001D7 08               [12] 1517 	inc	r0
      0001D8 96               [12] 1518 	subb	a,@r0
      0001D9 FF               [12] 1519 	mov	r7,a
      0001DA E5 81            [12] 1520 	mov	a,sp
      0001DC 24 F8            [12] 1521 	add	a,#0xf8
      0001DE F8               [12] 1522 	mov	r0,a
      0001DF 86 82            [24] 1523 	mov	dpl,@r0
      0001E1 08               [12] 1524 	inc	r0
      0001E2 86 83            [24] 1525 	mov	dph,@r0
      0001E4 08               [12] 1526 	inc	r0
      0001E5 86 F0            [24] 1527 	mov	b,@r0
      0001E7 EE               [12] 1528 	mov	a,r6
      0001E8 12r00r00         [24] 1529 	lcall	__gptrput
      0001EB A3               [24] 1530 	inc	dptr
      0001EC EF               [12] 1531 	mov	a,r7
      0001ED 12r00r00         [24] 1532 	lcall	__gptrput
                                   1533 ;	../../core/net/rpl/rpl-timers.c:105: instance->dio_send = 1;
      0001F0 E5 81            [12] 1534 	mov	a,sp
      0001F2 24 F5            [12] 1535 	add	a,#0xf5
      0001F4 F8               [12] 1536 	mov	r0,a
      0001F5 74 83            [12] 1537 	mov	a,#0x83
      0001F7 26               [12] 1538 	add	a,@r0
      0001F8 FD               [12] 1539 	mov	r5,a
      0001F9 E4               [12] 1540 	clr	a
      0001FA 08               [12] 1541 	inc	r0
      0001FB 36               [12] 1542 	addc	a,@r0
      0001FC FE               [12] 1543 	mov	r6,a
      0001FD 08               [12] 1544 	inc	r0
      0001FE 86 07            [24] 1545 	mov	ar7,@r0
      000200 8D 82            [24] 1546 	mov	dpl,r5
      000202 8E 83            [24] 1547 	mov	dph,r6
      000204 8F F0            [24] 1548 	mov	b,r7
      000206 74 01            [12] 1549 	mov	a,#0x01
      000208 12r00r00         [24] 1550 	lcall	__gptrput
                                   1551 ;	../../core/net/rpl/rpl-timers.c:121: instance->dio_counter = 0;
      00020B E5 81            [12] 1552 	mov	a,sp
      00020D 24 F5            [12] 1553 	add	a,#0xf5
      00020F F8               [12] 1554 	mov	r0,a
      000210 74 84            [12] 1555 	mov	a,#0x84
      000212 26               [12] 1556 	add	a,@r0
      000213 FD               [12] 1557 	mov	r5,a
      000214 E4               [12] 1558 	clr	a
      000215 08               [12] 1559 	inc	r0
      000216 36               [12] 1560 	addc	a,@r0
      000217 FE               [12] 1561 	mov	r6,a
      000218 08               [12] 1562 	inc	r0
      000219 86 07            [24] 1563 	mov	ar7,@r0
      00021B 8D 82            [24] 1564 	mov	dpl,r5
      00021D 8E 83            [24] 1565 	mov	dph,r6
      00021F 8F F0            [24] 1566 	mov	b,r7
      000221 E4               [12] 1567 	clr	a
      000222 12r00r00         [24] 1568 	lcall	__gptrput
                                   1569 ;	../../core/net/rpl/rpl-timers.c:125: ctimer_set(&instance->dio_timer, ticks, &handle_dio_timer, instance);
      000225 E5 81            [12] 1570 	mov	a,sp
      000227 24 F5            [12] 1571 	add	a,#0xf5
      000229 F8               [12] 1572 	mov	r0,a
      00022A 86 05            [24] 1573 	mov	ar5,@r0
      00022C 08               [12] 1574 	inc	r0
      00022D 86 06            [24] 1575 	mov	ar6,@r0
      00022F 08               [12] 1576 	inc	r0
      000230 86 07            [24] 1577 	mov	ar7,@r0
      000232 E5 81            [12] 1578 	mov	a,sp
      000234 24 F5            [12] 1579 	add	a,#0xf5
      000236 F8               [12] 1580 	mov	r0,a
      000237 74 A3            [12] 1581 	mov	a,#0xA3
      000239 26               [12] 1582 	add	a,@r0
      00023A FA               [12] 1583 	mov	r2,a
      00023B E4               [12] 1584 	clr	a
      00023C 08               [12] 1585 	inc	r0
      00023D 36               [12] 1586 	addc	a,@r0
      00023E FB               [12] 1587 	mov	r3,a
      00023F 08               [12] 1588 	inc	r0
      000240 86 04            [24] 1589 	mov	ar4,@r0
      000242 C0 05            [24] 1590 	push	ar5
      000244 C0 06            [24] 1591 	push	ar6
      000246 C0 07            [24] 1592 	push	ar7
      000248 74r7A            [12] 1593 	mov	a,#_handle_dio_timer
      00024A C0 E0            [24] 1594 	push	acc
      00024C 74s02            [12] 1595 	mov	a,#(_handle_dio_timer >> 8)
      00024E C0 E0            [24] 1596 	push	acc
      000250 74s00            [12] 1597 	mov	a,#(_handle_dio_timer >> 16)
      000252 C0 E0            [24] 1598 	push	acc
      000254 E5 81            [12] 1599 	mov	a,sp
      000256 24 F9            [12] 1600 	add	a,#0xf9
      000258 F8               [12] 1601 	mov	r0,a
      000259 E6               [12] 1602 	mov	a,@r0
      00025A C0 E0            [24] 1603 	push	acc
      00025C 08               [12] 1604 	inc	r0
      00025D E6               [12] 1605 	mov	a,@r0
      00025E C0 E0            [24] 1606 	push	acc
      000260 8A 82            [24] 1607 	mov	dpl,r2
      000262 8B 83            [24] 1608 	mov	dph,r3
      000264 8C F0            [24] 1609 	mov	b,r4
      000266 78r00            [12] 1610 	mov	r0,#_ctimer_set
      000268 79s00            [12] 1611 	mov	r1,#(_ctimer_set >> 8)
      00026A 7As00            [12] 1612 	mov	r2,#(_ctimer_set >> 16)
      00026C 12r00r00         [24] 1613 	lcall	__sdcc_banked_call
      00026F E5 81            [12] 1614 	mov	a,sp
      000271 24 F8            [12] 1615 	add	a,#0xf8
      000273 24 F4            [12] 1616 	add	a,#0xF4
      000275 F5 81            [12] 1617 	mov	sp,a
      000277 02r00r00         [24] 1618 	ljmp	__sdcc_banked_ret
                                   1619 ;------------------------------------------------------------
                                   1620 ;Allocation info for local variables in function 'handle_dio_timer'
                                   1621 ;------------------------------------------------------------
                                   1622 ;ptr                       Allocated to registers r5 r6 r7 
                                   1623 ;instance                  Allocated to stack - sp -2
                                   1624 ;sloc0                     Allocated to stack - sp -6
                                   1625 ;sloc1                     Allocated to stack - sp -4
                                   1626 ;------------------------------------------------------------
                                   1627 ;	../../core/net/rpl/rpl-timers.c:129: handle_dio_timer(void *ptr)
                                   1628 ;	-----------------------------------------
                                   1629 ;	 function handle_dio_timer
                                   1630 ;	-----------------------------------------
      00027A                       1631 _handle_dio_timer:
      00027A E5 81            [12] 1632 	mov	a,sp
      00027C 24 07            [12] 1633 	add	a,#0x07
      00027E F5 81            [12] 1634 	mov	sp,a
      000280 AD 82            [24] 1635 	mov	r5,dpl
      000282 AE 83            [24] 1636 	mov	r6,dph
      000284 AF F0            [24] 1637 	mov	r7,b
                                   1638 ;	../../core/net/rpl/rpl-timers.c:133: instance = (rpl_instance_t *)ptr;
      000286 A8 81            [24] 1639 	mov	r0,sp
      000288 18               [12] 1640 	dec	r0
      000289 18               [12] 1641 	dec	r0
      00028A A6 05            [24] 1642 	mov	@r0,ar5
      00028C 08               [12] 1643 	inc	r0
      00028D A6 06            [24] 1644 	mov	@r0,ar6
      00028F 08               [12] 1645 	inc	r0
      000290 A6 07            [24] 1646 	mov	@r0,ar7
                                   1647 ;	../../core/net/rpl/rpl-timers.c:136: if(!dio_send_ok) {
      000292 90r00r18         [24] 1648 	mov	dptr,#_dio_send_ok
      000295 E0               [24] 1649 	movx	a,@dptr
      000296 FC               [12] 1650 	mov	r4,a
      000297 70 6A            [24] 1651 	jnz	00105$
                                   1652 ;	../../core/net/rpl/rpl-timers.c:137: if(uip_ds6_get_link_local(ADDR_PREFERRED) != NULL) {
      000299 75 82 01         [24] 1653 	mov	dpl,#0x01
      00029C 78r00            [12] 1654 	mov	r0,#_uip_ds6_get_link_local
      00029E 79s00            [12] 1655 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      0002A0 7As00            [12] 1656 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      0002A2 12r00r00         [24] 1657 	lcall	__sdcc_banked_call
      0002A5 AA 82            [24] 1658 	mov	r2,dpl
      0002A7 AB 83            [24] 1659 	mov	r3,dph
      0002A9 AC F0            [24] 1660 	mov	r4,b
      0002AB EA               [12] 1661 	mov	a,r2
      0002AC 4B               [12] 1662 	orl	a,r3
      0002AD 60 08            [24] 1663 	jz	00102$
                                   1664 ;	../../core/net/rpl/rpl-timers.c:138: dio_send_ok = 1;
      0002AF 90r00r18         [24] 1665 	mov	dptr,#_dio_send_ok
      0002B2 74 01            [12] 1666 	mov	a,#0x01
      0002B4 F0               [24] 1667 	movx	@dptr,a
      0002B5 80 4C            [24] 1668 	sjmp	00105$
      0002B7                       1669 00102$:
                                   1670 ;	../../core/net/rpl/rpl-timers.c:141: ctimer_set(&instance->dio_timer, CLOCK_SECOND, &handle_dio_timer, instance);
      0002B7 A8 81            [24] 1671 	mov	r0,sp
      0002B9 18               [12] 1672 	dec	r0
      0002BA 18               [12] 1673 	dec	r0
      0002BB 86 02            [24] 1674 	mov	ar2,@r0
      0002BD 08               [12] 1675 	inc	r0
      0002BE 86 03            [24] 1676 	mov	ar3,@r0
      0002C0 08               [12] 1677 	inc	r0
      0002C1 86 04            [24] 1678 	mov	ar4,@r0
      0002C3 A8 81            [24] 1679 	mov	r0,sp
      0002C5 18               [12] 1680 	dec	r0
      0002C6 18               [12] 1681 	dec	r0
      0002C7 74 A3            [12] 1682 	mov	a,#0xA3
      0002C9 26               [12] 1683 	add	a,@r0
      0002CA FD               [12] 1684 	mov	r5,a
      0002CB E4               [12] 1685 	clr	a
      0002CC 08               [12] 1686 	inc	r0
      0002CD 36               [12] 1687 	addc	a,@r0
      0002CE FE               [12] 1688 	mov	r6,a
      0002CF 08               [12] 1689 	inc	r0
      0002D0 86 07            [24] 1690 	mov	ar7,@r0
      0002D2 C0 02            [24] 1691 	push	ar2
      0002D4 C0 03            [24] 1692 	push	ar3
      0002D6 C0 04            [24] 1693 	push	ar4
      0002D8 74r7A            [12] 1694 	mov	a,#_handle_dio_timer
      0002DA C0 E0            [24] 1695 	push	acc
      0002DC 74s02            [12] 1696 	mov	a,#(_handle_dio_timer >> 8)
      0002DE C0 E0            [24] 1697 	push	acc
      0002E0 74s00            [12] 1698 	mov	a,#(_handle_dio_timer >> 16)
      0002E2 C0 E0            [24] 1699 	push	acc
      0002E4 74 80            [12] 1700 	mov	a,#0x80
      0002E6 C0 E0            [24] 1701 	push	acc
      0002E8 E4               [12] 1702 	clr	a
      0002E9 C0 E0            [24] 1703 	push	acc
      0002EB 8D 82            [24] 1704 	mov	dpl,r5
      0002ED 8E 83            [24] 1705 	mov	dph,r6
      0002EF 8F F0            [24] 1706 	mov	b,r7
      0002F1 78r00            [12] 1707 	mov	r0,#_ctimer_set
      0002F3 79s00            [12] 1708 	mov	r1,#(_ctimer_set >> 8)
      0002F5 7As00            [12] 1709 	mov	r2,#(_ctimer_set >> 16)
      0002F7 12r00r00         [24] 1710 	lcall	__sdcc_banked_call
      0002FA E5 81            [12] 1711 	mov	a,sp
      0002FC 24 F8            [12] 1712 	add	a,#0xf8
      0002FE F5 81            [12] 1713 	mov	sp,a
                                   1714 ;	../../core/net/rpl/rpl-timers.c:142: return;
      000300 02r04rBF         [24] 1715 	ljmp	00114$
      000303                       1716 00105$:
                                   1717 ;	../../core/net/rpl/rpl-timers.c:146: if(instance->dio_send) {
      000303 A8 81            [24] 1718 	mov	r0,sp
      000305 18               [12] 1719 	dec	r0
      000306 18               [12] 1720 	dec	r0
      000307 74 83            [12] 1721 	mov	a,#0x83
      000309 26               [12] 1722 	add	a,@r0
      00030A FD               [12] 1723 	mov	r5,a
      00030B E4               [12] 1724 	clr	a
      00030C 08               [12] 1725 	inc	r0
      00030D 36               [12] 1726 	addc	a,@r0
      00030E FE               [12] 1727 	mov	r6,a
      00030F 08               [12] 1728 	inc	r0
      000310 86 07            [24] 1729 	mov	ar7,@r0
      000312 8D 82            [24] 1730 	mov	dpl,r5
      000314 8E 83            [24] 1731 	mov	dph,r6
      000316 8F F0            [24] 1732 	mov	b,r7
      000318 12r00r00         [24] 1733 	lcall	__gptrget
      00031B 70 03            [24] 1734 	jnz	00136$
      00031D 02r04r13         [24] 1735 	ljmp	00112$
      000320                       1736 00136$:
                                   1737 ;	../../core/net/rpl/rpl-timers.c:148: if(instance->dio_redundancy != 0 && instance->dio_counter < instance->dio_redundancy) {
      000320 A8 81            [24] 1738 	mov	r0,sp
      000322 18               [12] 1739 	dec	r0
      000323 18               [12] 1740 	dec	r0
      000324 74 80            [12] 1741 	mov	a,#0x80
      000326 26               [12] 1742 	add	a,@r0
      000327 FA               [12] 1743 	mov	r2,a
      000328 E4               [12] 1744 	clr	a
      000329 08               [12] 1745 	inc	r0
      00032A 36               [12] 1746 	addc	a,@r0
      00032B FB               [12] 1747 	mov	r3,a
      00032C 08               [12] 1748 	inc	r0
      00032D 86 04            [24] 1749 	mov	ar4,@r0
      00032F 8A 82            [24] 1750 	mov	dpl,r2
      000331 8B 83            [24] 1751 	mov	dph,r3
      000333 8C F0            [24] 1752 	mov	b,r4
      000335 12r00r00         [24] 1753 	lcall	__gptrget
      000338 FC               [12] 1754 	mov	r4,a
      000339 60 59            [24] 1755 	jz	00107$
      00033B C0 05            [24] 1756 	push	ar5
      00033D C0 06            [24] 1757 	push	ar6
      00033F C0 07            [24] 1758 	push	ar7
      000341 E5 81            [12] 1759 	mov	a,sp
      000343 24 FB            [12] 1760 	add	a,#0xfb
      000345 F8               [12] 1761 	mov	r0,a
      000346 74 84            [12] 1762 	mov	a,#0x84
      000348 26               [12] 1763 	add	a,@r0
      000349 FA               [12] 1764 	mov	r2,a
      00034A E4               [12] 1765 	clr	a
      00034B 08               [12] 1766 	inc	r0
      00034C 36               [12] 1767 	addc	a,@r0
      00034D FB               [12] 1768 	mov	r3,a
      00034E 08               [12] 1769 	inc	r0
      00034F 86 07            [24] 1770 	mov	ar7,@r0
      000351 8A 82            [24] 1771 	mov	dpl,r2
      000353 8B 83            [24] 1772 	mov	dph,r3
      000355 8F F0            [24] 1773 	mov	b,r7
      000357 12r00r00         [24] 1774 	lcall	__gptrget
      00035A FA               [12] 1775 	mov	r2,a
      00035B C3               [12] 1776 	clr	c
      00035C 9C               [12] 1777 	subb	a,r4
      00035D D0 07            [24] 1778 	pop	ar7
      00035F D0 06            [24] 1779 	pop	ar6
      000361 D0 05            [24] 1780 	pop	ar5
      000363 50 2F            [24] 1781 	jnc	00107$
                                   1782 ;	../../core/net/rpl/rpl-timers.c:152: dio_output(instance, NULL);
      000365 C0 07            [24] 1783 	push	ar7
      000367 C0 06            [24] 1784 	push	ar6
      000369 C0 05            [24] 1785 	push	ar5
      00036B E4               [12] 1786 	clr	a
      00036C C0 E0            [24] 1787 	push	acc
      00036E C0 E0            [24] 1788 	push	acc
      000370 C0 E0            [24] 1789 	push	acc
      000372 E5 81            [12] 1790 	mov	a,sp
      000374 24 F8            [12] 1791 	add	a,#0xf8
      000376 F8               [12] 1792 	mov	r0,a
      000377 86 82            [24] 1793 	mov	dpl,@r0
      000379 08               [12] 1794 	inc	r0
      00037A 86 83            [24] 1795 	mov	dph,@r0
      00037C 08               [12] 1796 	inc	r0
      00037D 86 F0            [24] 1797 	mov	b,@r0
      00037F 78r00            [12] 1798 	mov	r0,#_dio_output
      000381 79s00            [12] 1799 	mov	r1,#(_dio_output >> 8)
      000383 7As00            [12] 1800 	mov	r2,#(_dio_output >> 16)
      000385 12r00r00         [24] 1801 	lcall	__sdcc_banked_call
      000388 15 81            [12] 1802 	dec	sp
      00038A 15 81            [12] 1803 	dec	sp
      00038C 15 81            [12] 1804 	dec	sp
      00038E D0 05            [24] 1805 	pop	ar5
      000390 D0 06            [24] 1806 	pop	ar6
      000392 D0 07            [24] 1807 	pop	ar7
      000394                       1808 00107$:
                                   1809 ;	../../core/net/rpl/rpl-timers.c:157: instance->dio_send = 0;
      000394 8D 82            [24] 1810 	mov	dpl,r5
      000396 8E 83            [24] 1811 	mov	dph,r6
      000398 8F F0            [24] 1812 	mov	b,r7
      00039A E4               [12] 1813 	clr	a
      00039B 12r00r00         [24] 1814 	lcall	__gptrput
                                   1815 ;	../../core/net/rpl/rpl-timers.c:160: ctimer_set(&instance->dio_timer, instance->dio_next_delay, handle_dio_timer, instance);
      00039E A8 81            [24] 1816 	mov	r0,sp
      0003A0 18               [12] 1817 	dec	r0
      0003A1 18               [12] 1818 	dec	r0
      0003A2 86 05            [24] 1819 	mov	ar5,@r0
      0003A4 08               [12] 1820 	inc	r0
      0003A5 86 06            [24] 1821 	mov	ar6,@r0
      0003A7 08               [12] 1822 	inc	r0
      0003A8 86 07            [24] 1823 	mov	ar7,@r0
      0003AA A8 81            [24] 1824 	mov	r0,sp
      0003AC 18               [12] 1825 	dec	r0
      0003AD 18               [12] 1826 	dec	r0
      0003AE 74 8B            [12] 1827 	mov	a,#0x8B
      0003B0 26               [12] 1828 	add	a,@r0
      0003B1 FA               [12] 1829 	mov	r2,a
      0003B2 E4               [12] 1830 	clr	a
      0003B3 08               [12] 1831 	inc	r0
      0003B4 36               [12] 1832 	addc	a,@r0
      0003B5 FB               [12] 1833 	mov	r3,a
      0003B6 08               [12] 1834 	inc	r0
      0003B7 86 04            [24] 1835 	mov	ar4,@r0
      0003B9 8A 82            [24] 1836 	mov	dpl,r2
      0003BB 8B 83            [24] 1837 	mov	dph,r3
      0003BD 8C F0            [24] 1838 	mov	b,r4
      0003BF E5 81            [12] 1839 	mov	a,sp
      0003C1 24 FA            [12] 1840 	add	a,#0xfa
      0003C3 F8               [12] 1841 	mov	r0,a
      0003C4 12r00r00         [24] 1842 	lcall	__gptrget
      0003C7 F6               [12] 1843 	mov	@r0,a
      0003C8 A3               [24] 1844 	inc	dptr
      0003C9 12r00r00         [24] 1845 	lcall	__gptrget
      0003CC 08               [12] 1846 	inc	r0
      0003CD F6               [12] 1847 	mov	@r0,a
      0003CE A8 81            [24] 1848 	mov	r0,sp
      0003D0 18               [12] 1849 	dec	r0
      0003D1 18               [12] 1850 	dec	r0
      0003D2 74 A3            [12] 1851 	mov	a,#0xA3
      0003D4 26               [12] 1852 	add	a,@r0
      0003D5 FA               [12] 1853 	mov	r2,a
      0003D6 E4               [12] 1854 	clr	a
      0003D7 08               [12] 1855 	inc	r0
      0003D8 36               [12] 1856 	addc	a,@r0
      0003D9 FB               [12] 1857 	mov	r3,a
      0003DA 08               [12] 1858 	inc	r0
      0003DB 86 04            [24] 1859 	mov	ar4,@r0
      0003DD C0 05            [24] 1860 	push	ar5
      0003DF C0 06            [24] 1861 	push	ar6
      0003E1 C0 07            [24] 1862 	push	ar7
      0003E3 74r7A            [12] 1863 	mov	a,#_handle_dio_timer
      0003E5 C0 E0            [24] 1864 	push	acc
      0003E7 74s02            [12] 1865 	mov	a,#(_handle_dio_timer >> 8)
      0003E9 C0 E0            [24] 1866 	push	acc
      0003EB 74s00            [12] 1867 	mov	a,#(_handle_dio_timer >> 16)
      0003ED C0 E0            [24] 1868 	push	acc
      0003EF E5 81            [12] 1869 	mov	a,sp
      0003F1 24 F4            [12] 1870 	add	a,#0xf4
      0003F3 F8               [12] 1871 	mov	r0,a
      0003F4 E6               [12] 1872 	mov	a,@r0
      0003F5 C0 E0            [24] 1873 	push	acc
      0003F7 08               [12] 1874 	inc	r0
      0003F8 E6               [12] 1875 	mov	a,@r0
      0003F9 C0 E0            [24] 1876 	push	acc
      0003FB 8A 82            [24] 1877 	mov	dpl,r2
      0003FD 8B 83            [24] 1878 	mov	dph,r3
      0003FF 8C F0            [24] 1879 	mov	b,r4
      000401 78r00            [12] 1880 	mov	r0,#_ctimer_set
      000403 79s00            [12] 1881 	mov	r1,#(_ctimer_set >> 8)
      000405 7As00            [12] 1882 	mov	r2,#(_ctimer_set >> 16)
      000407 12r00r00         [24] 1883 	lcall	__sdcc_banked_call
      00040A E5 81            [12] 1884 	mov	a,sp
      00040C 24 F8            [12] 1885 	add	a,#0xf8
      00040E F5 81            [12] 1886 	mov	sp,a
      000410 02r04rBF         [24] 1887 	ljmp	00114$
      000413                       1888 00112$:
                                   1889 ;	../../core/net/rpl/rpl-timers.c:163: if(instance->dio_intcurrent < instance->dio_intmin + instance->dio_intdoubl) {
      000413 A8 81            [24] 1890 	mov	r0,sp
      000415 18               [12] 1891 	dec	r0
      000416 18               [12] 1892 	dec	r0
      000417 74 82            [12] 1893 	mov	a,#0x82
      000419 26               [12] 1894 	add	a,@r0
      00041A FD               [12] 1895 	mov	r5,a
      00041B E4               [12] 1896 	clr	a
      00041C 08               [12] 1897 	inc	r0
      00041D 36               [12] 1898 	addc	a,@r0
      00041E FE               [12] 1899 	mov	r6,a
      00041F 08               [12] 1900 	inc	r0
      000420 86 07            [24] 1901 	mov	ar7,@r0
      000422 8D 82            [24] 1902 	mov	dpl,r5
      000424 8E 83            [24] 1903 	mov	dph,r6
      000426 8F F0            [24] 1904 	mov	b,r7
      000428 E5 81            [12] 1905 	mov	a,sp
      00042A 24 FA            [12] 1906 	add	a,#0xfa
      00042C F8               [12] 1907 	mov	r0,a
      00042D 12r00r00         [24] 1908 	lcall	__gptrget
      000430 F6               [12] 1909 	mov	@r0,a
      000431 A8 81            [24] 1910 	mov	r0,sp
      000433 18               [12] 1911 	dec	r0
      000434 18               [12] 1912 	dec	r0
      000435 74 7F            [12] 1913 	mov	a,#0x7F
      000437 26               [12] 1914 	add	a,@r0
      000438 FA               [12] 1915 	mov	r2,a
      000439 E4               [12] 1916 	clr	a
      00043A 08               [12] 1917 	inc	r0
      00043B 36               [12] 1918 	addc	a,@r0
      00043C FB               [12] 1919 	mov	r3,a
      00043D 08               [12] 1920 	inc	r0
      00043E 86 04            [24] 1921 	mov	ar4,@r0
      000440 8A 82            [24] 1922 	mov	dpl,r2
      000442 8B 83            [24] 1923 	mov	dph,r3
      000444 8C F0            [24] 1924 	mov	b,r4
      000446 12r00r00         [24] 1925 	lcall	__gptrget
      000449 FA               [12] 1926 	mov	r2,a
      00044A E5 81            [12] 1927 	mov	a,sp
      00044C 24 FC            [12] 1928 	add	a,#0xfc
      00044E F8               [12] 1929 	mov	r0,a
      00044F A6 02            [24] 1930 	mov	@r0,ar2
      000451 08               [12] 1931 	inc	r0
      000452 76 00            [12] 1932 	mov	@r0,#0x00
      000454 A8 81            [24] 1933 	mov	r0,sp
      000456 18               [12] 1934 	dec	r0
      000457 18               [12] 1935 	dec	r0
      000458 74 7E            [12] 1936 	mov	a,#0x7E
      00045A 26               [12] 1937 	add	a,@r0
      00045B FA               [12] 1938 	mov	r2,a
      00045C E4               [12] 1939 	clr	a
      00045D 08               [12] 1940 	inc	r0
      00045E 36               [12] 1941 	addc	a,@r0
      00045F FB               [12] 1942 	mov	r3,a
      000460 08               [12] 1943 	inc	r0
      000461 86 04            [24] 1944 	mov	ar4,@r0
      000463 8A 82            [24] 1945 	mov	dpl,r2
      000465 8B 83            [24] 1946 	mov	dph,r3
      000467 8C F0            [24] 1947 	mov	b,r4
      000469 12r00r00         [24] 1948 	lcall	__gptrget
      00046C FA               [12] 1949 	mov	r2,a
      00046D 7C 00            [12] 1950 	mov	r4,#0x00
      00046F E5 81            [12] 1951 	mov	a,sp
      000471 24 FC            [12] 1952 	add	a,#0xfc
      000473 F8               [12] 1953 	mov	r0,a
      000474 EA               [12] 1954 	mov	a,r2
      000475 26               [12] 1955 	add	a,@r0
      000476 F6               [12] 1956 	mov	@r0,a
      000477 EC               [12] 1957 	mov	a,r4
      000478 08               [12] 1958 	inc	r0
      000479 36               [12] 1959 	addc	a,@r0
      00047A F6               [12] 1960 	mov	@r0,a
      00047B E5 81            [12] 1961 	mov	a,sp
      00047D 24 FA            [12] 1962 	add	a,#0xfa
      00047F F8               [12] 1963 	mov	r0,a
      000480 86 03            [24] 1964 	mov	ar3,@r0
      000482 7C 00            [12] 1965 	mov	r4,#0x00
      000484 E5 81            [12] 1966 	mov	a,sp
      000486 24 FC            [12] 1967 	add	a,#0xfc
      000488 F8               [12] 1968 	mov	r0,a
      000489 C3               [12] 1969 	clr	c
      00048A EB               [12] 1970 	mov	a,r3
      00048B 96               [12] 1971 	subb	a,@r0
      00048C EC               [12] 1972 	mov	a,r4
      00048D 64 80            [12] 1973 	xrl	a,#0x80
      00048F 08               [12] 1974 	inc	r0
      000490 86 F0            [24] 1975 	mov	b,@r0
      000492 63 F0 80         [24] 1976 	xrl	b,#0x80
      000495 95 F0            [12] 1977 	subb	a,b
      000497 50 11            [24] 1978 	jnc	00110$
                                   1979 ;	../../core/net/rpl/rpl-timers.c:164: instance->dio_intcurrent++;
      000499 E5 81            [12] 1980 	mov	a,sp
      00049B 24 FA            [12] 1981 	add	a,#0xfa
      00049D F8               [12] 1982 	mov	r0,a
      00049E E6               [12] 1983 	mov	a,@r0
      00049F 04               [12] 1984 	inc	a
      0004A0 FC               [12] 1985 	mov	r4,a
      0004A1 8D 82            [24] 1986 	mov	dpl,r5
      0004A3 8E 83            [24] 1987 	mov	dph,r6
      0004A5 8F F0            [24] 1988 	mov	b,r7
      0004A7 12r00r00         [24] 1989 	lcall	__gptrput
      0004AA                       1990 00110$:
                                   1991 ;	../../core/net/rpl/rpl-timers.c:167: new_dio_interval(instance);
      0004AA A8 81            [24] 1992 	mov	r0,sp
      0004AC 18               [12] 1993 	dec	r0
      0004AD 18               [12] 1994 	dec	r0
      0004AE 86 82            [24] 1995 	mov	dpl,@r0
      0004B0 08               [12] 1996 	inc	r0
      0004B1 86 83            [24] 1997 	mov	dph,@r0
      0004B3 08               [12] 1998 	inc	r0
      0004B4 86 F0            [24] 1999 	mov	b,@r0
      0004B6 78r6B            [12] 2000 	mov	r0,#_new_dio_interval
      0004B8 79s00            [12] 2001 	mov	r1,#(_new_dio_interval >> 8)
      0004BA 7As00            [12] 2002 	mov	r2,#(_new_dio_interval >> 16)
      0004BC 12r00r00         [24] 2003 	lcall	__sdcc_banked_call
      0004BF                       2004 00114$:
      0004BF E5 81            [12] 2005 	mov	a,sp
      0004C1 24 F9            [12] 2006 	add	a,#0xF9
      0004C3 F5 81            [12] 2007 	mov	sp,a
      0004C5 02r00r00         [24] 2008 	ljmp	__sdcc_banked_ret
                                   2009 ;------------------------------------------------------------
                                   2010 ;Allocation info for local variables in function 'rpl_reset_periodic_timer'
                                   2011 ;------------------------------------------------------------
                                   2012 ;	../../core/net/rpl/rpl-timers.c:176: rpl_reset_periodic_timer(void)
                                   2013 ;	-----------------------------------------
                                   2014 ;	 function rpl_reset_periodic_timer
                                   2015 ;	-----------------------------------------
      0004C8                       2016 _rpl_reset_periodic_timer:
                                   2017 ;	../../core/net/rpl/rpl-timers.c:179: ((uint32_t)RPL_DIS_INTERVAL * (uint32_t)random_rand()) / RANDOM_RAND_MAX -
      0004C8 78r00            [12] 2018 	mov	r0,#_random_rand
      0004CA 79s00            [12] 2019 	mov	r1,#(_random_rand >> 8)
      0004CC 7As00            [12] 2020 	mov	r2,#(_random_rand >> 16)
      0004CE 12r00r00         [24] 2021 	lcall	__sdcc_banked_call
      0004D1 AE 82            [24] 2022 	mov	r6,dpl
      0004D3 AF 83            [24] 2023 	mov	r7,dph
      0004D5 7D 00            [12] 2024 	mov	r5,#0x00
      0004D7 7C 00            [12] 2025 	mov	r4,#0x00
      0004D9 C0 06            [24] 2026 	push	ar6
      0004DB C0 07            [24] 2027 	push	ar7
      0004DD C0 05            [24] 2028 	push	ar5
      0004DF C0 04            [24] 2029 	push	ar4
      0004E1 90 00 3C         [24] 2030 	mov	dptr,#(0x3C&0x00ff)
      0004E4 E4               [12] 2031 	clr	a
      0004E5 F5 F0            [12] 2032 	mov	b,a
      0004E7 12r00r00         [24] 2033 	lcall	__mullong
      0004EA AC 82            [24] 2034 	mov	r4,dpl
      0004EC AD 83            [24] 2035 	mov	r5,dph
      0004EE AE F0            [24] 2036 	mov	r6,b
      0004F0 FF               [12] 2037 	mov	r7,a
      0004F1 E5 81            [12] 2038 	mov	a,sp
      0004F3 24 FC            [12] 2039 	add	a,#0xfc
      0004F5 F5 81            [12] 2040 	mov	sp,a
      0004F7 74 FF            [12] 2041 	mov	a,#0xFF
      0004F9 C0 E0            [24] 2042 	push	acc
      0004FB C0 E0            [24] 2043 	push	acc
      0004FD E4               [12] 2044 	clr	a
      0004FE C0 E0            [24] 2045 	push	acc
      000500 C0 E0            [24] 2046 	push	acc
      000502 8C 82            [24] 2047 	mov	dpl,r4
      000504 8D 83            [24] 2048 	mov	dph,r5
      000506 8E F0            [24] 2049 	mov	b,r6
      000508 EF               [12] 2050 	mov	a,r7
      000509 12r00r00         [24] 2051 	lcall	__divulong
      00050C AC 82            [24] 2052 	mov	r4,dpl
      00050E AD 83            [24] 2053 	mov	r5,dph
      000510 AE F0            [24] 2054 	mov	r6,b
      000512 FF               [12] 2055 	mov	r7,a
      000513 E5 81            [12] 2056 	mov	a,sp
      000515 24 FC            [12] 2057 	add	a,#0xfc
      000517 F5 81            [12] 2058 	mov	sp,a
      000519 74 19            [12] 2059 	mov	a,#0x19
      00051B 2C               [12] 2060 	add	a,r4
      00051C FC               [12] 2061 	mov	r4,a
      00051D E4               [12] 2062 	clr	a
      00051E 3D               [12] 2063 	addc	a,r5
      00051F FD               [12] 2064 	mov	r5,a
      000520 E4               [12] 2065 	clr	a
      000521 3E               [12] 2066 	addc	a,r6
      000522 E4               [12] 2067 	clr	a
      000523 3F               [12] 2068 	addc	a,r7
      000524 90r00r16         [24] 2069 	mov	dptr,#_next_dis
      000527 EC               [12] 2070 	mov	a,r4
      000528 F0               [24] 2071 	movx	@dptr,a
      000529 ED               [12] 2072 	mov	a,r5
      00052A A3               [24] 2073 	inc	dptr
      00052B F0               [24] 2074 	movx	@dptr,a
                                   2075 ;	../../core/net/rpl/rpl-timers.c:181: ctimer_set(&periodic_timer, CLOCK_SECOND, handle_periodic_timer, NULL);
      00052C E4               [12] 2076 	clr	a
      00052D C0 E0            [24] 2077 	push	acc
      00052F C0 E0            [24] 2078 	push	acc
      000531 C0 E0            [24] 2079 	push	acc
      000533 74r00            [12] 2080 	mov	a,#_handle_periodic_timer
      000535 C0 E0            [24] 2081 	push	acc
      000537 74s00            [12] 2082 	mov	a,#(_handle_periodic_timer >> 8)
      000539 C0 E0            [24] 2083 	push	acc
      00053B 74s00            [12] 2084 	mov	a,#(_handle_periodic_timer >> 16)
      00053D C0 E0            [24] 2085 	push	acc
      00053F 74 80            [12] 2086 	mov	a,#0x80
      000541 C0 E0            [24] 2087 	push	acc
      000543 E4               [12] 2088 	clr	a
      000544 C0 E0            [24] 2089 	push	acc
      000546 90r00r00         [24] 2090 	mov	dptr,#_periodic_timer
      000549 75 F0 00         [24] 2091 	mov	b,#0x00
      00054C 78r00            [12] 2092 	mov	r0,#_ctimer_set
      00054E 79s00            [12] 2093 	mov	r1,#(_ctimer_set >> 8)
      000550 7As00            [12] 2094 	mov	r2,#(_ctimer_set >> 16)
      000552 12r00r00         [24] 2095 	lcall	__sdcc_banked_call
      000555 E5 81            [12] 2096 	mov	a,sp
      000557 24 F8            [12] 2097 	add	a,#0xf8
      000559 F5 81            [12] 2098 	mov	sp,a
      00055B 02r00r00         [24] 2099 	ljmp	__sdcc_banked_ret
                                   2100 ;------------------------------------------------------------
                                   2101 ;Allocation info for local variables in function 'rpl_reset_dio_timer'
                                   2102 ;------------------------------------------------------------
                                   2103 ;instance                  Allocated to stack - sp -5
                                   2104 ;sloc0                     Allocated to stack - sp -2
                                   2105 ;sloc1                     Allocated to stack - sp +1
                                   2106 ;------------------------------------------------------------
                                   2107 ;	../../core/net/rpl/rpl-timers.c:186: rpl_reset_dio_timer(rpl_instance_t *instance)
                                   2108 ;	-----------------------------------------
                                   2109 ;	 function rpl_reset_dio_timer
                                   2110 ;	-----------------------------------------
      00055E                       2111 _rpl_reset_dio_timer:
      00055E C0 82            [24] 2112 	push	dpl
      000560 C0 83            [24] 2113 	push	dph
      000562 C0 F0            [24] 2114 	push	b
      000564 05 81            [12] 2115 	inc	sp
      000566 05 81            [12] 2116 	inc	sp
      000568 05 81            [12] 2117 	inc	sp
                                   2118 ;	../../core/net/rpl/rpl-timers.c:191: if(instance->dio_intcurrent > instance->dio_intmin) {
      00056A E5 81            [12] 2119 	mov	a,sp
      00056C 24 FB            [12] 2120 	add	a,#0xfb
      00056E F8               [12] 2121 	mov	r0,a
      00056F 74 82            [12] 2122 	mov	a,#0x82
      000571 26               [12] 2123 	add	a,@r0
      000572 FA               [12] 2124 	mov	r2,a
      000573 E4               [12] 2125 	clr	a
      000574 08               [12] 2126 	inc	r0
      000575 36               [12] 2127 	addc	a,@r0
      000576 FB               [12] 2128 	mov	r3,a
      000577 08               [12] 2129 	inc	r0
      000578 86 04            [24] 2130 	mov	ar4,@r0
      00057A 8A 82            [24] 2131 	mov	dpl,r2
      00057C 8B 83            [24] 2132 	mov	dph,r3
      00057E 8C F0            [24] 2133 	mov	b,r4
      000580 12r00r00         [24] 2134 	lcall	__gptrget
      000583 FE               [12] 2135 	mov	r6,a
      000584 E5 81            [12] 2136 	mov	a,sp
      000586 24 FB            [12] 2137 	add	a,#0xfb
      000588 F8               [12] 2138 	mov	r0,a
      000589 A9 81            [24] 2139 	mov	r1,sp
      00058B 19               [12] 2140 	dec	r1
      00058C 19               [12] 2141 	dec	r1
      00058D 74 7F            [12] 2142 	mov	a,#0x7F
      00058F 26               [12] 2143 	add	a,@r0
      000590 F7               [12] 2144 	mov	@r1,a
      000591 E4               [12] 2145 	clr	a
      000592 08               [12] 2146 	inc	r0
      000593 36               [12] 2147 	addc	a,@r0
      000594 09               [12] 2148 	inc	r1
      000595 F7               [12] 2149 	mov	@r1,a
      000596 08               [12] 2150 	inc	r0
      000597 09               [12] 2151 	inc	r1
      000598 E6               [12] 2152 	mov	a,@r0
      000599 F7               [12] 2153 	mov	@r1,a
      00059A A8 81            [24] 2154 	mov	r0,sp
      00059C 18               [12] 2155 	dec	r0
      00059D 18               [12] 2156 	dec	r0
      00059E 86 82            [24] 2157 	mov	dpl,@r0
      0005A0 08               [12] 2158 	inc	r0
      0005A1 86 83            [24] 2159 	mov	dph,@r0
      0005A3 08               [12] 2160 	inc	r0
      0005A4 86 F0            [24] 2161 	mov	b,@r0
      0005A6 12r00r00         [24] 2162 	lcall	__gptrget
      0005A9 FF               [12] 2163 	mov	r7,a
      0005AA C3               [12] 2164 	clr	c
      0005AB 9E               [12] 2165 	subb	a,r6
      0005AC 50 48            [24] 2166 	jnc	00103$
                                   2167 ;	../../core/net/rpl/rpl-timers.c:192: instance->dio_counter = 0;
      0005AE E5 81            [12] 2168 	mov	a,sp
      0005B0 24 FB            [12] 2169 	add	a,#0xfb
      0005B2 F8               [12] 2170 	mov	r0,a
      0005B3 74 84            [12] 2171 	mov	a,#0x84
      0005B5 26               [12] 2172 	add	a,@r0
      0005B6 FD               [12] 2173 	mov	r5,a
      0005B7 E4               [12] 2174 	clr	a
      0005B8 08               [12] 2175 	inc	r0
      0005B9 36               [12] 2176 	addc	a,@r0
      0005BA FE               [12] 2177 	mov	r6,a
      0005BB 08               [12] 2178 	inc	r0
      0005BC 86 07            [24] 2179 	mov	ar7,@r0
      0005BE 8D 82            [24] 2180 	mov	dpl,r5
      0005C0 8E 83            [24] 2181 	mov	dph,r6
      0005C2 8F F0            [24] 2182 	mov	b,r7
      0005C4 E4               [12] 2183 	clr	a
      0005C5 12r00r00         [24] 2184 	lcall	__gptrput
                                   2185 ;	../../core/net/rpl/rpl-timers.c:193: instance->dio_intcurrent = instance->dio_intmin;
      0005C8 A8 81            [24] 2186 	mov	r0,sp
      0005CA 18               [12] 2187 	dec	r0
      0005CB 18               [12] 2188 	dec	r0
      0005CC 86 82            [24] 2189 	mov	dpl,@r0
      0005CE 08               [12] 2190 	inc	r0
      0005CF 86 83            [24] 2191 	mov	dph,@r0
      0005D1 08               [12] 2192 	inc	r0
      0005D2 86 F0            [24] 2193 	mov	b,@r0
      0005D4 12r00r00         [24] 2194 	lcall	__gptrget
      0005D7 8A 82            [24] 2195 	mov	dpl,r2
      0005D9 8B 83            [24] 2196 	mov	dph,r3
      0005DB 8C F0            [24] 2197 	mov	b,r4
      0005DD 12r00r00         [24] 2198 	lcall	__gptrput
                                   2199 ;	../../core/net/rpl/rpl-timers.c:194: new_dio_interval(instance);
      0005E0 E5 81            [12] 2200 	mov	a,sp
      0005E2 24 FB            [12] 2201 	add	a,#0xfb
      0005E4 F8               [12] 2202 	mov	r0,a
      0005E5 86 82            [24] 2203 	mov	dpl,@r0
      0005E7 08               [12] 2204 	inc	r0
      0005E8 86 83            [24] 2205 	mov	dph,@r0
      0005EA 08               [12] 2206 	inc	r0
      0005EB 86 F0            [24] 2207 	mov	b,@r0
      0005ED 78r6B            [12] 2208 	mov	r0,#_new_dio_interval
      0005EF 79s00            [12] 2209 	mov	r1,#(_new_dio_interval >> 8)
      0005F1 7As00            [12] 2210 	mov	r2,#(_new_dio_interval >> 16)
      0005F3 12r00r00         [24] 2211 	lcall	__sdcc_banked_call
      0005F6                       2212 00103$:
      0005F6 E5 81            [12] 2213 	mov	a,sp
      0005F8 24 FA            [12] 2214 	add	a,#0xFA
      0005FA F5 81            [12] 2215 	mov	sp,a
      0005FC 02r00r00         [24] 2216 	ljmp	__sdcc_banked_ret
                                   2217 ;------------------------------------------------------------
                                   2218 ;Allocation info for local variables in function 'set_dao_lifetime_timer'
                                   2219 ;------------------------------------------------------------
                                   2220 ;instance                  Allocated to stack - sp -4
                                   2221 ;expiration_time           Allocated to stack - sp -1
                                   2222 ;sloc0                     Allocated to stack - sp +1
                                   2223 ;------------------------------------------------------------
                                   2224 ;	../../core/net/rpl/rpl-timers.c:204: set_dao_lifetime_timer(rpl_instance_t *instance)
                                   2225 ;	-----------------------------------------
                                   2226 ;	 function set_dao_lifetime_timer
                                   2227 ;	-----------------------------------------
      0005FF                       2228 _set_dao_lifetime_timer:
      0005FF C0 82            [24] 2229 	push	dpl
      000601 C0 83            [24] 2230 	push	dph
      000603 C0 F0            [24] 2231 	push	b
      000605 05 81            [12] 2232 	inc	sp
      000607 05 81            [12] 2233 	inc	sp
                                   2234 ;	../../core/net/rpl/rpl-timers.c:206: if(rpl_get_mode() == RPL_MODE_FEATHER) {
      000609 78r00            [12] 2235 	mov	r0,#_rpl_get_mode
      00060B 79s00            [12] 2236 	mov	r1,#(_rpl_get_mode >> 8)
      00060D 7As00            [12] 2237 	mov	r2,#(_rpl_get_mode >> 16)
      00060F 12r00r00         [24] 2238 	lcall	__sdcc_banked_call
      000612 AC 82            [24] 2239 	mov	r4,dpl
      000614 BC 01 03         [24] 2240 	cjne	r4,#0x01,00102$
                                   2241 ;	../../core/net/rpl/rpl-timers.c:207: return;
      000617 02r06rE4         [24] 2242 	ljmp	00106$
      00061A                       2243 00102$:
                                   2244 ;	../../core/net/rpl/rpl-timers.c:212: if(instance->lifetime_unit != 0xffff && instance->default_lifetime != 0xff) {
      00061A E5 81            [12] 2245 	mov	a,sp
      00061C 24 FC            [12] 2246 	add	a,#0xfc
      00061E F8               [12] 2247 	mov	r0,a
      00061F 74 89            [12] 2248 	mov	a,#0x89
      000621 26               [12] 2249 	add	a,@r0
      000622 FA               [12] 2250 	mov	r2,a
      000623 E4               [12] 2251 	clr	a
      000624 08               [12] 2252 	inc	r0
      000625 36               [12] 2253 	addc	a,@r0
      000626 FB               [12] 2254 	mov	r3,a
      000627 08               [12] 2255 	inc	r0
      000628 86 04            [24] 2256 	mov	ar4,@r0
      00062A 8A 82            [24] 2257 	mov	dpl,r2
      00062C 8B 83            [24] 2258 	mov	dph,r3
      00062E 8C F0            [24] 2259 	mov	b,r4
      000630 12r00r00         [24] 2260 	lcall	__gptrget
      000633 FB               [12] 2261 	mov	r3,a
      000634 A3               [24] 2262 	inc	dptr
      000635 12r00r00         [24] 2263 	lcall	__gptrget
      000638 FC               [12] 2264 	mov	r4,a
      000639 BB FF 06         [24] 2265 	cjne	r3,#0xFF,00119$
      00063C BC FF 03         [24] 2266 	cjne	r4,#0xFF,00119$
      00063F 02r06rE4         [24] 2267 	ljmp	00106$
      000642                       2268 00119$:
      000642 C0 03            [24] 2269 	push	ar3
      000644 C0 04            [24] 2270 	push	ar4
      000646 E5 81            [12] 2271 	mov	a,sp
      000648 24 FA            [12] 2272 	add	a,#0xfa
      00064A F8               [12] 2273 	mov	r0,a
      00064B 74 81            [12] 2274 	mov	a,#0x81
      00064D 26               [12] 2275 	add	a,@r0
      00064E FA               [12] 2276 	mov	r2,a
      00064F E4               [12] 2277 	clr	a
      000650 08               [12] 2278 	inc	r0
      000651 36               [12] 2279 	addc	a,@r0
      000652 FB               [12] 2280 	mov	r3,a
      000653 08               [12] 2281 	inc	r0
      000654 86 04            [24] 2282 	mov	ar4,@r0
      000656 8A 82            [24] 2283 	mov	dpl,r2
      000658 8B 83            [24] 2284 	mov	dph,r3
      00065A 8C F0            [24] 2285 	mov	b,r4
      00065C 12r00r00         [24] 2286 	lcall	__gptrget
      00065F FF               [12] 2287 	mov	r7,a
      000660 BF FF 06         [24] 2288 	cjne	r7,#0xFF,00120$
      000663 D0 04            [24] 2289 	pop	ar4
      000665 D0 03            [24] 2290 	pop	ar3
      000667 80 7B            [24] 2291 	sjmp	00106$
      000669                       2292 00120$:
                                   2293 ;	../../core/net/rpl/rpl-timers.c:214: expiration_time = (clock_time_t)instance->default_lifetime *
      000669 8F 02            [24] 2294 	mov	ar2,r7
      00066B 7F 00            [12] 2295 	mov	r7,#0x00
                                   2296 ;	../../core/net/rpl/rpl-timers.c:215: (clock_time_t)instance->lifetime_unit *
      00066D 8A 82            [24] 2297 	mov	dpl,r2
      00066F 8F 83            [24] 2298 	mov	dph,r7
      000671 12r00r00         [24] 2299 	lcall	__mulint
      000674 AE 82            [24] 2300 	mov	r6,dpl
      000676 AF 83            [24] 2301 	mov	r7,dph
      000678 15 81            [12] 2302 	dec	sp
      00067A 15 81            [12] 2303 	dec	sp
      00067C EF               [12] 2304 	mov	a,r7
      00067D 54 01            [12] 2305 	anl	a,#0x01
      00067F A2 E0            [12] 2306 	mov	c,acc.0
      000681 CE               [12] 2307 	xch	a,r6
      000682 13               [12] 2308 	rrc	a
      000683 CE               [12] 2309 	xch	a,r6
      000684 13               [12] 2310 	rrc	a
      000685 CE               [12] 2311 	xch	a,r6
      000686 FF               [12] 2312 	mov	r7,a
      000687 A8 81            [24] 2313 	mov	r0,sp
      000689 18               [12] 2314 	dec	r0
      00068A A6 06            [24] 2315 	mov	@r0,ar6
      00068C EF               [12] 2316 	mov	a,r7
      00068D C3               [12] 2317 	clr	c
      00068E 13               [12] 2318 	rrc	a
      00068F C6               [12] 2319 	xch	a,@r0
      000690 13               [12] 2320 	rrc	a
      000691 C6               [12] 2321 	xch	a,@r0
      000692 08               [12] 2322 	inc	r0
      000693 F6               [12] 2323 	mov	@r0,a
                                   2324 ;	../../core/net/rpl/rpl-timers.c:220: handle_dao_timer, instance);
      000694 E5 81            [12] 2325 	mov	a,sp
      000696 24 FC            [12] 2326 	add	a,#0xfc
      000698 F8               [12] 2327 	mov	r0,a
      000699 86 03            [24] 2328 	mov	ar3,@r0
      00069B 08               [12] 2329 	inc	r0
      00069C 86 04            [24] 2330 	mov	ar4,@r0
      00069E 08               [12] 2331 	inc	r0
      00069F 86 05            [24] 2332 	mov	ar5,@r0
                                   2333 ;	../../core/net/rpl/rpl-timers.c:219: ctimer_set(&instance->dao_lifetime_timer, expiration_time,
      0006A1 E5 81            [12] 2334 	mov	a,sp
      0006A3 24 FC            [12] 2335 	add	a,#0xfc
      0006A5 F8               [12] 2336 	mov	r0,a
      0006A6 74 CF            [12] 2337 	mov	a,#0xCF
      0006A8 26               [12] 2338 	add	a,@r0
      0006A9 FA               [12] 2339 	mov	r2,a
      0006AA E4               [12] 2340 	clr	a
      0006AB 08               [12] 2341 	inc	r0
      0006AC 36               [12] 2342 	addc	a,@r0
      0006AD FE               [12] 2343 	mov	r6,a
      0006AE 08               [12] 2344 	inc	r0
      0006AF 86 07            [24] 2345 	mov	ar7,@r0
      0006B1 C0 03            [24] 2346 	push	ar3
      0006B3 C0 04            [24] 2347 	push	ar4
      0006B5 C0 05            [24] 2348 	push	ar5
      0006B7 74rED            [12] 2349 	mov	a,#_handle_dao_timer
      0006B9 C0 E0            [24] 2350 	push	acc
      0006BB 74s06            [12] 2351 	mov	a,#(_handle_dao_timer >> 8)
      0006BD C0 E0            [24] 2352 	push	acc
      0006BF 74s00            [12] 2353 	mov	a,#(_handle_dao_timer >> 16)
      0006C1 C0 E0            [24] 2354 	push	acc
      0006C3 E5 81            [12] 2355 	mov	a,sp
      0006C5 24 F9            [12] 2356 	add	a,#0xf9
      0006C7 F8               [12] 2357 	mov	r0,a
      0006C8 E6               [12] 2358 	mov	a,@r0
      0006C9 C0 E0            [24] 2359 	push	acc
      0006CB 08               [12] 2360 	inc	r0
      0006CC E6               [12] 2361 	mov	a,@r0
      0006CD C0 E0            [24] 2362 	push	acc
      0006CF 8A 82            [24] 2363 	mov	dpl,r2
      0006D1 8E 83            [24] 2364 	mov	dph,r6
      0006D3 8F F0            [24] 2365 	mov	b,r7
      0006D5 78r00            [12] 2366 	mov	r0,#_ctimer_set
      0006D7 79s00            [12] 2367 	mov	r1,#(_ctimer_set >> 8)
      0006D9 7As00            [12] 2368 	mov	r2,#(_ctimer_set >> 16)
      0006DB 12r00r00         [24] 2369 	lcall	__sdcc_banked_call
      0006DE E5 81            [12] 2370 	mov	a,sp
      0006E0 24 F8            [12] 2371 	add	a,#0xf8
      0006E2 F5 81            [12] 2372 	mov	sp,a
      0006E4                       2373 00106$:
      0006E4 E5 81            [12] 2374 	mov	a,sp
      0006E6 24 FB            [12] 2375 	add	a,#0xFB
      0006E8 F5 81            [12] 2376 	mov	sp,a
      0006EA 02r00r00         [24] 2377 	ljmp	__sdcc_banked_ret
                                   2378 ;------------------------------------------------------------
                                   2379 ;Allocation info for local variables in function 'handle_dao_timer'
                                   2380 ;------------------------------------------------------------
                                   2381 ;ptr                       Allocated to registers r5 r6 r7 
                                   2382 ;instance                  Allocated to stack - sp -2
                                   2383 ;------------------------------------------------------------
                                   2384 ;	../../core/net/rpl/rpl-timers.c:225: handle_dao_timer(void *ptr)
                                   2385 ;	-----------------------------------------
                                   2386 ;	 function handle_dao_timer
                                   2387 ;	-----------------------------------------
      0006ED                       2388 _handle_dao_timer:
      0006ED 05 81            [12] 2389 	inc	sp
      0006EF 05 81            [12] 2390 	inc	sp
      0006F1 05 81            [12] 2391 	inc	sp
      0006F3 AD 82            [24] 2392 	mov	r5,dpl
      0006F5 AE 83            [24] 2393 	mov	r6,dph
      0006F7 AF F0            [24] 2394 	mov	r7,b
                                   2395 ;	../../core/net/rpl/rpl-timers.c:233: instance = (rpl_instance_t *)ptr;
      0006F9 A8 81            [24] 2396 	mov	r0,sp
      0006FB 18               [12] 2397 	dec	r0
      0006FC 18               [12] 2398 	dec	r0
      0006FD A6 05            [24] 2399 	mov	@r0,ar5
      0006FF 08               [12] 2400 	inc	r0
      000700 A6 06            [24] 2401 	mov	@r0,ar6
      000702 08               [12] 2402 	inc	r0
      000703 A6 07            [24] 2403 	mov	@r0,ar7
                                   2404 ;	../../core/net/rpl/rpl-timers.c:235: if(!dio_send_ok && uip_ds6_get_link_local(ADDR_PREFERRED) == NULL) {
      000705 90r00r18         [24] 2405 	mov	dptr,#_dio_send_ok
      000708 E0               [24] 2406 	movx	a,@dptr
      000709 FC               [12] 2407 	mov	r4,a
      00070A 70 62            [24] 2408 	jnz	00102$
      00070C 75 82 01         [24] 2409 	mov	dpl,#0x01
      00070F 78r00            [12] 2410 	mov	r0,#_uip_ds6_get_link_local
      000711 79s00            [12] 2411 	mov	r1,#(_uip_ds6_get_link_local >> 8)
      000713 7As00            [12] 2412 	mov	r2,#(_uip_ds6_get_link_local >> 16)
      000715 12r00r00         [24] 2413 	lcall	__sdcc_banked_call
      000718 AA 82            [24] 2414 	mov	r2,dpl
      00071A AB 83            [24] 2415 	mov	r3,dph
      00071C AC F0            [24] 2416 	mov	r4,b
      00071E EA               [12] 2417 	mov	a,r2
      00071F 4B               [12] 2418 	orl	a,r3
      000720 70 4C            [24] 2419 	jnz	00102$
                                   2420 ;	../../core/net/rpl/rpl-timers.c:237: ctimer_set(&instance->dao_timer, CLOCK_SECOND, handle_dao_timer, instance);
      000722 A8 81            [24] 2421 	mov	r0,sp
      000724 18               [12] 2422 	dec	r0
      000725 18               [12] 2423 	dec	r0
      000726 86 02            [24] 2424 	mov	ar2,@r0
      000728 08               [12] 2425 	inc	r0
      000729 86 03            [24] 2426 	mov	ar3,@r0
      00072B 08               [12] 2427 	inc	r0
      00072C 86 04            [24] 2428 	mov	ar4,@r0
      00072E A8 81            [24] 2429 	mov	r0,sp
      000730 18               [12] 2430 	dec	r0
      000731 18               [12] 2431 	dec	r0
      000732 74 B9            [12] 2432 	mov	a,#0xB9
      000734 26               [12] 2433 	add	a,@r0
      000735 FD               [12] 2434 	mov	r5,a
      000736 E4               [12] 2435 	clr	a
      000737 08               [12] 2436 	inc	r0
      000738 36               [12] 2437 	addc	a,@r0
      000739 FE               [12] 2438 	mov	r6,a
      00073A 08               [12] 2439 	inc	r0
      00073B 86 07            [24] 2440 	mov	ar7,@r0
      00073D C0 02            [24] 2441 	push	ar2
      00073F C0 03            [24] 2442 	push	ar3
      000741 C0 04            [24] 2443 	push	ar4
      000743 74rED            [12] 2444 	mov	a,#_handle_dao_timer
      000745 C0 E0            [24] 2445 	push	acc
      000747 74s06            [12] 2446 	mov	a,#(_handle_dao_timer >> 8)
      000749 C0 E0            [24] 2447 	push	acc
      00074B 74s00            [12] 2448 	mov	a,#(_handle_dao_timer >> 16)
      00074D C0 E0            [24] 2449 	push	acc
      00074F 74 80            [12] 2450 	mov	a,#0x80
      000751 C0 E0            [24] 2451 	push	acc
      000753 E4               [12] 2452 	clr	a
      000754 C0 E0            [24] 2453 	push	acc
      000756 8D 82            [24] 2454 	mov	dpl,r5
      000758 8E 83            [24] 2455 	mov	dph,r6
      00075A 8F F0            [24] 2456 	mov	b,r7
      00075C 78r00            [12] 2457 	mov	r0,#_ctimer_set
      00075E 79s00            [12] 2458 	mov	r1,#(_ctimer_set >> 8)
      000760 7As00            [12] 2459 	mov	r2,#(_ctimer_set >> 16)
      000762 12r00r00         [24] 2460 	lcall	__sdcc_banked_call
      000765 E5 81            [12] 2461 	mov	a,sp
      000767 24 F8            [12] 2462 	add	a,#0xf8
      000769 F5 81            [12] 2463 	mov	sp,a
                                   2464 ;	../../core/net/rpl/rpl-timers.c:238: return;
      00076B 02r08r3D         [24] 2465 	ljmp	00108$
      00076E                       2466 00102$:
                                   2467 ;	../../core/net/rpl/rpl-timers.c:242: if(instance->current_dag->preferred_parent != NULL) {
      00076E A8 81            [24] 2468 	mov	r0,sp
      000770 18               [12] 2469 	dec	r0
      000771 18               [12] 2470 	dec	r0
      000772 74 0A            [12] 2471 	mov	a,#0x0A
      000774 26               [12] 2472 	add	a,@r0
      000775 FD               [12] 2473 	mov	r5,a
      000776 E4               [12] 2474 	clr	a
      000777 08               [12] 2475 	inc	r0
      000778 36               [12] 2476 	addc	a,@r0
      000779 FE               [12] 2477 	mov	r6,a
      00077A 08               [12] 2478 	inc	r0
      00077B 86 07            [24] 2479 	mov	ar7,@r0
      00077D 8D 82            [24] 2480 	mov	dpl,r5
      00077F 8E 83            [24] 2481 	mov	dph,r6
      000781 8F F0            [24] 2482 	mov	b,r7
      000783 12r00r00         [24] 2483 	lcall	__gptrget
      000786 FD               [12] 2484 	mov	r5,a
      000787 A3               [24] 2485 	inc	dptr
      000788 12r00r00         [24] 2486 	lcall	__gptrget
      00078B FE               [12] 2487 	mov	r6,a
      00078C A3               [24] 2488 	inc	dptr
      00078D 12r00r00         [24] 2489 	lcall	__gptrget
      000790 FF               [12] 2490 	mov	r7,a
      000791 74 17            [12] 2491 	mov	a,#0x17
      000793 2D               [12] 2492 	add	a,r5
      000794 FD               [12] 2493 	mov	r5,a
      000795 E4               [12] 2494 	clr	a
      000796 3E               [12] 2495 	addc	a,r6
      000797 FE               [12] 2496 	mov	r6,a
      000798 8D 82            [24] 2497 	mov	dpl,r5
      00079A 8E 83            [24] 2498 	mov	dph,r6
      00079C 8F F0            [24] 2499 	mov	b,r7
      00079E 12r00r00         [24] 2500 	lcall	__gptrget
      0007A1 FD               [12] 2501 	mov	r5,a
      0007A2 A3               [24] 2502 	inc	dptr
      0007A3 12r00r00         [24] 2503 	lcall	__gptrget
      0007A6 FE               [12] 2504 	mov	r6,a
      0007A7 A3               [24] 2505 	inc	dptr
      0007A8 12r00r00         [24] 2506 	lcall	__gptrget
      0007AB FF               [12] 2507 	mov	r7,a
      0007AC ED               [12] 2508 	mov	a,r5
      0007AD 4E               [12] 2509 	orl	a,r6
      0007AE 60 2C            [24] 2510 	jz	00105$
                                   2511 ;	../../core/net/rpl/rpl-timers.c:245: dao_output(instance->current_dag->preferred_parent, instance->default_lifetime);
      0007B0 A8 81            [24] 2512 	mov	r0,sp
      0007B2 18               [12] 2513 	dec	r0
      0007B3 18               [12] 2514 	dec	r0
      0007B4 74 81            [12] 2515 	mov	a,#0x81
      0007B6 26               [12] 2516 	add	a,@r0
      0007B7 FA               [12] 2517 	mov	r2,a
      0007B8 E4               [12] 2518 	clr	a
      0007B9 08               [12] 2519 	inc	r0
      0007BA 36               [12] 2520 	addc	a,@r0
      0007BB FB               [12] 2521 	mov	r3,a
      0007BC 08               [12] 2522 	inc	r0
      0007BD 86 04            [24] 2523 	mov	ar4,@r0
      0007BF 8A 82            [24] 2524 	mov	dpl,r2
      0007C1 8B 83            [24] 2525 	mov	dph,r3
      0007C3 8C F0            [24] 2526 	mov	b,r4
      0007C5 12r00r00         [24] 2527 	lcall	__gptrget
      0007C8 FA               [12] 2528 	mov	r2,a
      0007C9 C0 02            [24] 2529 	push	ar2
      0007CB 8D 82            [24] 2530 	mov	dpl,r5
      0007CD 8E 83            [24] 2531 	mov	dph,r6
      0007CF 8F F0            [24] 2532 	mov	b,r7
      0007D1 78r00            [12] 2533 	mov	r0,#_dao_output
      0007D3 79s00            [12] 2534 	mov	r1,#(_dao_output >> 8)
      0007D5 7As00            [12] 2535 	mov	r2,#(_dao_output >> 16)
      0007D7 12r00r00         [24] 2536 	lcall	__sdcc_banked_call
      0007DA 15 81            [12] 2537 	dec	sp
      0007DC                       2538 00105$:
                                   2539 ;	../../core/net/rpl/rpl-timers.c:275: ctimer_stop(&instance->dao_timer);
      0007DC A8 81            [24] 2540 	mov	r0,sp
      0007DE 18               [12] 2541 	dec	r0
      0007DF 18               [12] 2542 	dec	r0
      0007E0 74 B9            [12] 2543 	mov	a,#0xB9
      0007E2 26               [12] 2544 	add	a,@r0
      0007E3 FD               [12] 2545 	mov	r5,a
      0007E4 E4               [12] 2546 	clr	a
      0007E5 08               [12] 2547 	inc	r0
      0007E6 36               [12] 2548 	addc	a,@r0
      0007E7 FE               [12] 2549 	mov	r6,a
      0007E8 08               [12] 2550 	inc	r0
      0007E9 86 07            [24] 2551 	mov	ar7,@r0
      0007EB 8D 82            [24] 2552 	mov	dpl,r5
      0007ED 8E 83            [24] 2553 	mov	dph,r6
      0007EF 8F F0            [24] 2554 	mov	b,r7
      0007F1 78r00            [12] 2555 	mov	r0,#_ctimer_stop
      0007F3 79s00            [12] 2556 	mov	r1,#(_ctimer_stop >> 8)
      0007F5 7As00            [12] 2557 	mov	r2,#(_ctimer_stop >> 16)
      0007F7 12r00r00         [24] 2558 	lcall	__sdcc_banked_call
                                   2559 ;	../../core/net/rpl/rpl-timers.c:277: if(etimer_expired(&instance->dao_lifetime_timer.etimer)) {
      0007FA A8 81            [24] 2560 	mov	r0,sp
      0007FC 18               [12] 2561 	dec	r0
      0007FD 18               [12] 2562 	dec	r0
      0007FE 74 CF            [12] 2563 	mov	a,#0xCF
      000800 26               [12] 2564 	add	a,@r0
      000801 FD               [12] 2565 	mov	r5,a
      000802 E4               [12] 2566 	clr	a
      000803 08               [12] 2567 	inc	r0
      000804 36               [12] 2568 	addc	a,@r0
      000805 FE               [12] 2569 	mov	r6,a
      000806 08               [12] 2570 	inc	r0
      000807 86 07            [24] 2571 	mov	ar7,@r0
      000809 74 03            [12] 2572 	mov	a,#0x03
      00080B 2D               [12] 2573 	add	a,r5
      00080C FD               [12] 2574 	mov	r5,a
      00080D E4               [12] 2575 	clr	a
      00080E 3E               [12] 2576 	addc	a,r6
      00080F FE               [12] 2577 	mov	r6,a
      000810 8D 82            [24] 2578 	mov	dpl,r5
      000812 8E 83            [24] 2579 	mov	dph,r6
      000814 8F F0            [24] 2580 	mov	b,r7
      000816 78r00            [12] 2581 	mov	r0,#_etimer_expired
      000818 79s00            [12] 2582 	mov	r1,#(_etimer_expired >> 8)
      00081A 7As00            [12] 2583 	mov	r2,#(_etimer_expired >> 16)
      00081C 12r00r00         [24] 2584 	lcall	__sdcc_banked_call
      00081F E5 82            [12] 2585 	mov	a,dpl
      000821 85 83 F0         [24] 2586 	mov	b,dph
      000824 45 F0            [12] 2587 	orl	a,b
      000826 60 15            [24] 2588 	jz	00108$
                                   2589 ;	../../core/net/rpl/rpl-timers.c:278: set_dao_lifetime_timer(instance);
      000828 A8 81            [24] 2590 	mov	r0,sp
      00082A 18               [12] 2591 	dec	r0
      00082B 18               [12] 2592 	dec	r0
      00082C 86 82            [24] 2593 	mov	dpl,@r0
      00082E 08               [12] 2594 	inc	r0
      00082F 86 83            [24] 2595 	mov	dph,@r0
      000831 08               [12] 2596 	inc	r0
      000832 86 F0            [24] 2597 	mov	b,@r0
      000834 78rFF            [12] 2598 	mov	r0,#_set_dao_lifetime_timer
      000836 79s05            [12] 2599 	mov	r1,#(_set_dao_lifetime_timer >> 8)
      000838 7As00            [12] 2600 	mov	r2,#(_set_dao_lifetime_timer >> 16)
      00083A 12r00r00         [24] 2601 	lcall	__sdcc_banked_call
      00083D                       2602 00108$:
      00083D 15 81            [12] 2603 	dec	sp
      00083F 15 81            [12] 2604 	dec	sp
      000841 15 81            [12] 2605 	dec	sp
      000843 02r00r00         [24] 2606 	ljmp	__sdcc_banked_ret
                                   2607 ;------------------------------------------------------------
                                   2608 ;Allocation info for local variables in function 'schedule_dao'
                                   2609 ;------------------------------------------------------------
                                   2610 ;latency                   Allocated to stack - sp -9
                                   2611 ;instance                  Allocated to stack - sp -4
                                   2612 ;expiration_time           Allocated to stack - sp -1
                                   2613 ;------------------------------------------------------------
                                   2614 ;	../../core/net/rpl/rpl-timers.c:283: schedule_dao(rpl_instance_t *instance, clock_time_t latency)
                                   2615 ;	-----------------------------------------
                                   2616 ;	 function schedule_dao
                                   2617 ;	-----------------------------------------
      000846                       2618 _schedule_dao:
      000846 C0 82            [24] 2619 	push	dpl
      000848 C0 83            [24] 2620 	push	dph
      00084A C0 F0            [24] 2621 	push	b
      00084C 05 81            [12] 2622 	inc	sp
      00084E 05 81            [12] 2623 	inc	sp
                                   2624 ;	../../core/net/rpl/rpl-timers.c:287: if(rpl_get_mode() == RPL_MODE_FEATHER) {
      000850 78r00            [12] 2625 	mov	r0,#_rpl_get_mode
      000852 79s00            [12] 2626 	mov	r1,#(_rpl_get_mode >> 8)
      000854 7As00            [12] 2627 	mov	r2,#(_rpl_get_mode >> 16)
      000856 12r00r00         [24] 2628 	lcall	__sdcc_banked_call
      000859 AC 82            [24] 2629 	mov	r4,dpl
      00085B BC 01 03         [24] 2630 	cjne	r4,#0x01,00102$
                                   2631 ;	../../core/net/rpl/rpl-timers.c:288: return;
      00085E 02r09r8B         [24] 2632 	ljmp	00109$
      000861                       2633 00102$:
                                   2634 ;	../../core/net/rpl/rpl-timers.c:291: expiration_time = etimer_expiration_time(&instance->dao_timer.etimer);
      000861 E5 81            [12] 2635 	mov	a,sp
      000863 24 FC            [12] 2636 	add	a,#0xfc
      000865 F8               [12] 2637 	mov	r0,a
      000866 74 B9            [12] 2638 	mov	a,#0xB9
      000868 26               [12] 2639 	add	a,@r0
      000869 FA               [12] 2640 	mov	r2,a
      00086A E4               [12] 2641 	clr	a
      00086B 08               [12] 2642 	inc	r0
      00086C 36               [12] 2643 	addc	a,@r0
      00086D FB               [12] 2644 	mov	r3,a
      00086E 08               [12] 2645 	inc	r0
      00086F 86 04            [24] 2646 	mov	ar4,@r0
      000871 74 03            [12] 2647 	mov	a,#0x03
      000873 2A               [12] 2648 	add	a,r2
      000874 FD               [12] 2649 	mov	r5,a
      000875 E4               [12] 2650 	clr	a
      000876 3B               [12] 2651 	addc	a,r3
      000877 FE               [12] 2652 	mov	r6,a
      000878 8C 07            [24] 2653 	mov	ar7,r4
      00087A 8D 82            [24] 2654 	mov	dpl,r5
      00087C 8E 83            [24] 2655 	mov	dph,r6
      00087E 8F F0            [24] 2656 	mov	b,r7
      000880 C0 04            [24] 2657 	push	ar4
      000882 C0 03            [24] 2658 	push	ar3
      000884 C0 02            [24] 2659 	push	ar2
      000886 78r00            [12] 2660 	mov	r0,#_etimer_expiration_time
      000888 79s00            [12] 2661 	mov	r1,#(_etimer_expiration_time >> 8)
      00088A 7As00            [12] 2662 	mov	r2,#(_etimer_expiration_time >> 16)
      00088C 12r00r00         [24] 2663 	lcall	__sdcc_banked_call
      00088F D0 02            [24] 2664 	pop	ar2
      000891 D0 03            [24] 2665 	pop	ar3
      000893 D0 04            [24] 2666 	pop	ar4
                                   2667 ;	../../core/net/rpl/rpl-timers.c:293: if(!etimer_expired(&instance->dao_timer.etimer)) {
      000895 74 03            [12] 2668 	mov	a,#0x03
      000897 2A               [12] 2669 	add	a,r2
      000898 FD               [12] 2670 	mov	r5,a
      000899 E4               [12] 2671 	clr	a
      00089A 3B               [12] 2672 	addc	a,r3
      00089B FE               [12] 2673 	mov	r6,a
      00089C 8C 07            [24] 2674 	mov	ar7,r4
      00089E 8D 82            [24] 2675 	mov	dpl,r5
      0008A0 8E 83            [24] 2676 	mov	dph,r6
      0008A2 8F F0            [24] 2677 	mov	b,r7
      0008A4 C0 04            [24] 2678 	push	ar4
      0008A6 C0 03            [24] 2679 	push	ar3
      0008A8 C0 02            [24] 2680 	push	ar2
      0008AA 78r00            [12] 2681 	mov	r0,#_etimer_expired
      0008AC 79s00            [12] 2682 	mov	r1,#(_etimer_expired >> 8)
      0008AE 7As00            [12] 2683 	mov	r2,#(_etimer_expired >> 16)
      0008B0 12r00r00         [24] 2684 	lcall	__sdcc_banked_call
      0008B3 E5 82            [12] 2685 	mov	a,dpl
      0008B5 85 83 F0         [24] 2686 	mov	b,dph
      0008B8 D0 02            [24] 2687 	pop	ar2
      0008BA D0 03            [24] 2688 	pop	ar3
      0008BC D0 04            [24] 2689 	pop	ar4
      0008BE 45 F0            [12] 2690 	orl	a,b
      0008C0 70 03            [24] 2691 	jnz	00122$
      0008C2 02r09r8B         [24] 2692 	ljmp	00109$
      0008C5                       2693 00122$:
                                   2694 ;	../../core/net/rpl/rpl-timers.c:296: if(latency != 0) {
      0008C5 E5 81            [12] 2695 	mov	a,sp
      0008C7 24 F7            [12] 2696 	add	a,#0xf7
      0008C9 F8               [12] 2697 	mov	r0,a
      0008CA E6               [12] 2698 	mov	a,@r0
      0008CB 08               [12] 2699 	inc	r0
      0008CC 46               [12] 2700 	orl	a,@r0
      0008CD 60 61            [24] 2701 	jz	00104$
                                   2702 ;	../../core/net/rpl/rpl-timers.c:297: expiration_time = latency / 2 +
      0008CF C0 02            [24] 2703 	push	ar2
      0008D1 C0 03            [24] 2704 	push	ar3
      0008D3 C0 04            [24] 2705 	push	ar4
      0008D5 E5 81            [12] 2706 	mov	a,sp
      0008D7 24 F4            [12] 2707 	add	a,#0xf4
      0008D9 F8               [12] 2708 	mov	r0,a
      0008DA 86 03            [24] 2709 	mov	ar3,@r0
      0008DC 08               [12] 2710 	inc	r0
      0008DD E6               [12] 2711 	mov	a,@r0
      0008DE C3               [12] 2712 	clr	c
      0008DF 13               [12] 2713 	rrc	a
      0008E0 CB               [12] 2714 	xch	a,r3
      0008E1 13               [12] 2715 	rrc	a
      0008E2 CB               [12] 2716 	xch	a,r3
      0008E3 FC               [12] 2717 	mov	r4,a
                                   2718 ;	../../core/net/rpl/rpl-timers.c:298: (random_rand() % (latency));
      0008E4 C0 04            [24] 2719 	push	ar4
      0008E6 C0 03            [24] 2720 	push	ar3
      0008E8 78r00            [12] 2721 	mov	r0,#_random_rand
      0008EA 79s00            [12] 2722 	mov	r1,#(_random_rand >> 8)
      0008EC 7As00            [12] 2723 	mov	r2,#(_random_rand >> 16)
      0008EE 12r00r00         [24] 2724 	lcall	__sdcc_banked_call
      0008F1 AA 82            [24] 2725 	mov	r2,dpl
      0008F3 AF 83            [24] 2726 	mov	r7,dph
      0008F5 C0 02            [24] 2727 	push	ar2
      0008F7 E5 81            [12] 2728 	mov	a,sp
      0008F9 24 F1            [12] 2729 	add	a,#0xf1
      0008FB F8               [12] 2730 	mov	r0,a
      0008FC E6               [12] 2731 	mov	a,@r0
      0008FD C0 E0            [24] 2732 	push	acc
      0008FF 08               [12] 2733 	inc	r0
      000900 E6               [12] 2734 	mov	a,@r0
      000901 C0 E0            [24] 2735 	push	acc
      000903 8A 82            [24] 2736 	mov	dpl,r2
      000905 8F 83            [24] 2737 	mov	dph,r7
      000907 12r00r00         [24] 2738 	lcall	__moduint
      00090A AE 82            [24] 2739 	mov	r6,dpl
      00090C AF 83            [24] 2740 	mov	r7,dph
      00090E 15 81            [12] 2741 	dec	sp
      000910 15 81            [12] 2742 	dec	sp
      000912 D0 02            [24] 2743 	pop	ar2
      000914 D0 03            [24] 2744 	pop	ar3
      000916 D0 04            [24] 2745 	pop	ar4
      000918 EE               [12] 2746 	mov	a,r6
      000919 2B               [12] 2747 	add	a,r3
      00091A FB               [12] 2748 	mov	r3,a
      00091B EF               [12] 2749 	mov	a,r7
      00091C 3C               [12] 2750 	addc	a,r4
      00091D FC               [12] 2751 	mov	r4,a
      00091E E5 81            [12] 2752 	mov	a,sp
      000920 24 FC            [12] 2753 	add	a,#0xfc
      000922 F8               [12] 2754 	mov	r0,a
      000923 A6 03            [24] 2755 	mov	@r0,ar3
      000925 08               [12] 2756 	inc	r0
      000926 A6 04            [24] 2757 	mov	@r0,ar4
      000928 D0 04            [24] 2758 	pop	ar4
      00092A D0 03            [24] 2759 	pop	ar3
      00092C D0 02            [24] 2760 	pop	ar2
      00092E 80 07            [24] 2761 	sjmp	00105$
      000930                       2762 00104$:
                                   2763 ;	../../core/net/rpl/rpl-timers.c:300: expiration_time = 0;
      000930 A8 81            [24] 2764 	mov	r0,sp
      000932 18               [12] 2765 	dec	r0
      000933 E4               [12] 2766 	clr	a
      000934 F6               [12] 2767 	mov	@r0,a
      000935 08               [12] 2768 	inc	r0
      000936 F6               [12] 2769 	mov	@r0,a
      000937                       2770 00105$:
                                   2771 ;	../../core/net/rpl/rpl-timers.c:305: handle_dao_timer, instance);
      000937 E5 81            [12] 2772 	mov	a,sp
      000939 24 FC            [12] 2773 	add	a,#0xfc
      00093B F8               [12] 2774 	mov	r0,a
      00093C 86 05            [24] 2775 	mov	ar5,@r0
      00093E 08               [12] 2776 	inc	r0
      00093F 86 06            [24] 2777 	mov	ar6,@r0
      000941 08               [12] 2778 	inc	r0
      000942 86 07            [24] 2779 	mov	ar7,@r0
                                   2780 ;	../../core/net/rpl/rpl-timers.c:304: ctimer_set(&instance->dao_timer, expiration_time,
      000944 C0 05            [24] 2781 	push	ar5
      000946 C0 06            [24] 2782 	push	ar6
      000948 C0 07            [24] 2783 	push	ar7
      00094A 74rED            [12] 2784 	mov	a,#_handle_dao_timer
      00094C C0 E0            [24] 2785 	push	acc
      00094E 74s06            [12] 2786 	mov	a,#(_handle_dao_timer >> 8)
      000950 C0 E0            [24] 2787 	push	acc
      000952 74s00            [12] 2788 	mov	a,#(_handle_dao_timer >> 16)
      000954 C0 E0            [24] 2789 	push	acc
      000956 E5 81            [12] 2790 	mov	a,sp
      000958 24 F9            [12] 2791 	add	a,#0xf9
      00095A F8               [12] 2792 	mov	r0,a
      00095B E6               [12] 2793 	mov	a,@r0
      00095C C0 E0            [24] 2794 	push	acc
      00095E 08               [12] 2795 	inc	r0
      00095F E6               [12] 2796 	mov	a,@r0
      000960 C0 E0            [24] 2797 	push	acc
      000962 8A 82            [24] 2798 	mov	dpl,r2
      000964 8B 83            [24] 2799 	mov	dph,r3
      000966 8C F0            [24] 2800 	mov	b,r4
      000968 78r00            [12] 2801 	mov	r0,#_ctimer_set
      00096A 79s00            [12] 2802 	mov	r1,#(_ctimer_set >> 8)
      00096C 7As00            [12] 2803 	mov	r2,#(_ctimer_set >> 16)
      00096E 12r00r00         [24] 2804 	lcall	__sdcc_banked_call
      000971 E5 81            [12] 2805 	mov	a,sp
      000973 24 F8            [12] 2806 	add	a,#0xf8
                                   2807 ;	../../core/net/rpl/rpl-timers.c:307: set_dao_lifetime_timer(instance);
      000975 F5 81            [12] 2808 	mov	sp,a
      000977 24 FC            [12] 2809 	add	a,#0xfc
      000979 F8               [12] 2810 	mov	r0,a
      00097A 86 82            [24] 2811 	mov	dpl,@r0
      00097C 08               [12] 2812 	inc	r0
      00097D 86 83            [24] 2813 	mov	dph,@r0
      00097F 08               [12] 2814 	inc	r0
      000980 86 F0            [24] 2815 	mov	b,@r0
      000982 78rFF            [12] 2816 	mov	r0,#_set_dao_lifetime_timer
      000984 79s05            [12] 2817 	mov	r1,#(_set_dao_lifetime_timer >> 8)
      000986 7As00            [12] 2818 	mov	r2,#(_set_dao_lifetime_timer >> 16)
      000988 12r00r00         [24] 2819 	lcall	__sdcc_banked_call
      00098B                       2820 00109$:
      00098B E5 81            [12] 2821 	mov	a,sp
      00098D 24 FB            [12] 2822 	add	a,#0xFB
      00098F F5 81            [12] 2823 	mov	sp,a
      000991 02r00r00         [24] 2824 	ljmp	__sdcc_banked_ret
                                   2825 ;------------------------------------------------------------
                                   2826 ;Allocation info for local variables in function 'rpl_schedule_dao'
                                   2827 ;------------------------------------------------------------
                                   2828 ;instance                  Allocated to registers r5 r6 r7 
                                   2829 ;------------------------------------------------------------
                                   2830 ;	../../core/net/rpl/rpl-timers.c:312: rpl_schedule_dao(rpl_instance_t *instance)
                                   2831 ;	-----------------------------------------
                                   2832 ;	 function rpl_schedule_dao
                                   2833 ;	-----------------------------------------
      000994                       2834 _rpl_schedule_dao:
      000994 AD 82            [24] 2835 	mov	r5,dpl
      000996 AE 83            [24] 2836 	mov	r6,dph
      000998 AF F0            [24] 2837 	mov	r7,b
                                   2838 ;	../../core/net/rpl/rpl-timers.c:314: schedule_dao(instance, RPL_DAO_LATENCY);
      00099A E4               [12] 2839 	clr	a
      00099B C0 E0            [24] 2840 	push	acc
      00099D 74 02            [12] 2841 	mov	a,#0x02
      00099F C0 E0            [24] 2842 	push	acc
      0009A1 8D 82            [24] 2843 	mov	dpl,r5
      0009A3 8E 83            [24] 2844 	mov	dph,r6
      0009A5 8F F0            [24] 2845 	mov	b,r7
      0009A7 78r46            [12] 2846 	mov	r0,#_schedule_dao
      0009A9 79s08            [12] 2847 	mov	r1,#(_schedule_dao >> 8)
      0009AB 7As00            [12] 2848 	mov	r2,#(_schedule_dao >> 16)
      0009AD 12r00r00         [24] 2849 	lcall	__sdcc_banked_call
      0009B0 15 81            [12] 2850 	dec	sp
      0009B2 15 81            [12] 2851 	dec	sp
      0009B4 02r00r00         [24] 2852 	ljmp	__sdcc_banked_ret
                                   2853 ;------------------------------------------------------------
                                   2854 ;Allocation info for local variables in function 'rpl_schedule_dao_immediately'
                                   2855 ;------------------------------------------------------------
                                   2856 ;instance                  Allocated to registers r5 r6 r7 
                                   2857 ;------------------------------------------------------------
                                   2858 ;	../../core/net/rpl/rpl-timers.c:318: rpl_schedule_dao_immediately(rpl_instance_t *instance)
                                   2859 ;	-----------------------------------------
                                   2860 ;	 function rpl_schedule_dao_immediately
                                   2861 ;	-----------------------------------------
      0009B7                       2862 _rpl_schedule_dao_immediately:
      0009B7 AD 82            [24] 2863 	mov	r5,dpl
      0009B9 AE 83            [24] 2864 	mov	r6,dph
      0009BB AF F0            [24] 2865 	mov	r7,b
                                   2866 ;	../../core/net/rpl/rpl-timers.c:320: schedule_dao(instance, 0);
      0009BD E4               [12] 2867 	clr	a
      0009BE C0 E0            [24] 2868 	push	acc
      0009C0 C0 E0            [24] 2869 	push	acc
      0009C2 8D 82            [24] 2870 	mov	dpl,r5
      0009C4 8E 83            [24] 2871 	mov	dph,r6
      0009C6 8F F0            [24] 2872 	mov	b,r7
      0009C8 78r46            [12] 2873 	mov	r0,#_schedule_dao
      0009CA 79s08            [12] 2874 	mov	r1,#(_schedule_dao >> 8)
      0009CC 7As00            [12] 2875 	mov	r2,#(_schedule_dao >> 16)
      0009CE 12r00r00         [24] 2876 	lcall	__sdcc_banked_call
      0009D1 15 81            [12] 2877 	dec	sp
      0009D3 15 81            [12] 2878 	dec	sp
      0009D5 02r00r00         [24] 2879 	ljmp	__sdcc_banked_ret
                                   2880 ;------------------------------------------------------------
                                   2881 ;Allocation info for local variables in function 'rpl_cancel_dao'
                                   2882 ;------------------------------------------------------------
                                   2883 ;instance                  Allocated to registers r5 r6 r7 
                                   2884 ;------------------------------------------------------------
                                   2885 ;	../../core/net/rpl/rpl-timers.c:324: rpl_cancel_dao(rpl_instance_t *instance)
                                   2886 ;	-----------------------------------------
                                   2887 ;	 function rpl_cancel_dao
                                   2888 ;	-----------------------------------------
      0009D8                       2889 _rpl_cancel_dao:
      0009D8 AD 82            [24] 2890 	mov	r5,dpl
      0009DA AE 83            [24] 2891 	mov	r6,dph
      0009DC AF F0            [24] 2892 	mov	r7,b
                                   2893 ;	../../core/net/rpl/rpl-timers.c:326: ctimer_stop(&instance->dao_timer);
      0009DE 74 B9            [12] 2894 	mov	a,#0xB9
      0009E0 2D               [12] 2895 	add	a,r5
      0009E1 FA               [12] 2896 	mov	r2,a
      0009E2 E4               [12] 2897 	clr	a
      0009E3 3E               [12] 2898 	addc	a,r6
      0009E4 FB               [12] 2899 	mov	r3,a
      0009E5 8F 04            [24] 2900 	mov	ar4,r7
      0009E7 8A 82            [24] 2901 	mov	dpl,r2
      0009E9 8B 83            [24] 2902 	mov	dph,r3
      0009EB 8C F0            [24] 2903 	mov	b,r4
      0009ED C0 07            [24] 2904 	push	ar7
      0009EF C0 06            [24] 2905 	push	ar6
      0009F1 C0 05            [24] 2906 	push	ar5
      0009F3 78r00            [12] 2907 	mov	r0,#_ctimer_stop
      0009F5 79s00            [12] 2908 	mov	r1,#(_ctimer_stop >> 8)
      0009F7 7As00            [12] 2909 	mov	r2,#(_ctimer_stop >> 16)
      0009F9 12r00r00         [24] 2910 	lcall	__sdcc_banked_call
      0009FC D0 05            [24] 2911 	pop	ar5
      0009FE D0 06            [24] 2912 	pop	ar6
      000A00 D0 07            [24] 2913 	pop	ar7
                                   2914 ;	../../core/net/rpl/rpl-timers.c:327: ctimer_stop(&instance->dao_lifetime_timer);
      000A02 74 CF            [12] 2915 	mov	a,#0xCF
      000A04 2D               [12] 2916 	add	a,r5
      000A05 FD               [12] 2917 	mov	r5,a
      000A06 E4               [12] 2918 	clr	a
      000A07 3E               [12] 2919 	addc	a,r6
      000A08 FE               [12] 2920 	mov	r6,a
      000A09 8D 82            [24] 2921 	mov	dpl,r5
      000A0B 8E 83            [24] 2922 	mov	dph,r6
      000A0D 8F F0            [24] 2923 	mov	b,r7
      000A0F 78r00            [12] 2924 	mov	r0,#_ctimer_stop
      000A11 79s00            [12] 2925 	mov	r1,#(_ctimer_stop >> 8)
      000A13 7As00            [12] 2926 	mov	r2,#(_ctimer_stop >> 16)
      000A15 12r00r00         [24] 2927 	lcall	__sdcc_banked_call
      000A18 02r00r00         [24] 2928 	ljmp	__sdcc_banked_ret
                                   2929 ;------------------------------------------------------------
                                   2930 ;Allocation info for local variables in function 'get_probing_target'
                                   2931 ;------------------------------------------------------------
                                   2932 ;dag                       Allocated to stack - sp -12
                                   2933 ;p                         Allocated to stack - sp -9
                                   2934 ;probing_target            Allocated to stack - sp -6
                                   2935 ;probing_target_rank       Allocated to stack - sp -3
                                   2936 ;min_last_tx               Allocated to stack - sp -1
                                   2937 ;p_rank                    Allocated to registers r4 r3 
                                   2938 ;------------------------------------------------------------
                                   2939 ;	../../core/net/rpl/rpl-timers.c:332: get_probing_target(rpl_dag_t *dag)
                                   2940 ;	-----------------------------------------
                                   2941 ;	 function get_probing_target
                                   2942 ;	-----------------------------------------
      000A1B                       2943 _get_probing_target:
      000A1B C0 82            [24] 2944 	push	dpl
      000A1D C0 83            [24] 2945 	push	dph
      000A1F C0 F0            [24] 2946 	push	b
      000A21 E5 81            [12] 2947 	mov	a,sp
      000A23 24 0A            [12] 2948 	add	a,#0x0A
                                   2949 ;	../../core/net/rpl/rpl-timers.c:342: rpl_parent_t *probing_target = NULL;
      000A25 F5 81            [12] 2950 	mov	sp,a
      000A27 24 FA            [12] 2951 	add	a,#0xfa
      000A29 F8               [12] 2952 	mov	r0,a
      000A2A E4               [12] 2953 	clr	a
      000A2B F6               [12] 2954 	mov	@r0,a
      000A2C 08               [12] 2955 	inc	r0
      000A2D F6               [12] 2956 	mov	@r0,a
      000A2E 08               [12] 2957 	inc	r0
      000A2F 76 00            [12] 2958 	mov	@r0,#0x00
                                   2959 ;	../../core/net/rpl/rpl-timers.c:343: rpl_rank_t probing_target_rank = INFINITE_RANK;
      000A31 E5 81            [12] 2960 	mov	a,sp
      000A33 24 FD            [12] 2961 	add	a,#0xfd
      000A35 F8               [12] 2962 	mov	r0,a
      000A36 76 FF            [12] 2963 	mov	@r0,#0xFF
      000A38 08               [12] 2964 	inc	r0
      000A39 76 FF            [12] 2965 	mov	@r0,#0xFF
                                   2966 ;	../../core/net/rpl/rpl-timers.c:345: clock_time_t min_last_tx = clock_time();
      000A3B 78r00            [12] 2967 	mov	r0,#_clock_time
      000A3D 79s00            [12] 2968 	mov	r1,#(_clock_time >> 8)
      000A3F 7As00            [12] 2969 	mov	r2,#(_clock_time >> 16)
      000A41 12r00r00         [24] 2970 	lcall	__sdcc_banked_call
      000A44 AF 82            [24] 2971 	mov	r7,dpl
      000A46 AE 83            [24] 2972 	mov	r6,dph
      000A48 A8 81            [24] 2973 	mov	r0,sp
      000A4A 18               [12] 2974 	dec	r0
      000A4B A6 07            [24] 2975 	mov	@r0,ar7
      000A4D 08               [12] 2976 	inc	r0
      000A4E A6 06            [24] 2977 	mov	@r0,ar6
                                   2978 ;	../../core/net/rpl/rpl-timers.c:347: ? min_last_tx - RPL_PROBING_EXPIRATION_TIME : 1;
      000A50 A8 81            [24] 2979 	mov	r0,sp
      000A52 18               [12] 2980 	dec	r0
      000A53 C3               [12] 2981 	clr	c
      000A54 E4               [12] 2982 	clr	a
      000A55 96               [12] 2983 	subb	a,@r0
      000A56 74 58            [12] 2984 	mov	a,#0x58
      000A58 08               [12] 2985 	inc	r0
      000A59 96               [12] 2986 	subb	a,@r0
      000A5A 50 0C            [24] 2987 	jnc	00131$
      000A5C A8 81            [24] 2988 	mov	r0,sp
      000A5E 18               [12] 2989 	dec	r0
      000A5F 86 06            [24] 2990 	mov	ar6,@r0
      000A61 08               [12] 2991 	inc	r0
      000A62 E6               [12] 2992 	mov	a,@r0
      000A63 24 D4            [12] 2993 	add	a,#0xD4
      000A65 FF               [12] 2994 	mov	r7,a
      000A66 80 04            [24] 2995 	sjmp	00132$
      000A68                       2996 00131$:
      000A68 7E 01            [12] 2997 	mov	r6,#0x01
      000A6A 7F 00            [12] 2998 	mov	r7,#0x00
      000A6C                       2999 00132$:
      000A6C A8 81            [24] 3000 	mov	r0,sp
      000A6E 18               [12] 3001 	dec	r0
      000A6F A6 06            [24] 3002 	mov	@r0,ar6
      000A71 08               [12] 3003 	inc	r0
      000A72 A6 07            [24] 3004 	mov	@r0,ar7
                                   3005 ;	../../core/net/rpl/rpl-timers.c:349: if(dag == NULL ||
      000A74 E5 81            [12] 3006 	mov	a,sp
      000A76 24 F4            [12] 3007 	add	a,#0xf4
      000A78 F8               [12] 3008 	mov	r0,a
      000A79 E6               [12] 3009 	mov	a,@r0
      000A7A 08               [12] 3010 	inc	r0
      000A7B 46               [12] 3011 	orl	a,@r0
      000A7C 60 50            [24] 3012 	jz	00101$
                                   3013 ;	../../core/net/rpl/rpl-timers.c:350: dag->instance == NULL ||
      000A7E E5 81            [12] 3014 	mov	a,sp
      000A80 24 F4            [12] 3015 	add	a,#0xf4
      000A82 F8               [12] 3016 	mov	r0,a
      000A83 74 1C            [12] 3017 	mov	a,#0x1C
      000A85 26               [12] 3018 	add	a,@r0
      000A86 FD               [12] 3019 	mov	r5,a
      000A87 E4               [12] 3020 	clr	a
      000A88 08               [12] 3021 	inc	r0
      000A89 36               [12] 3022 	addc	a,@r0
      000A8A FE               [12] 3023 	mov	r6,a
      000A8B 08               [12] 3024 	inc	r0
      000A8C 86 07            [24] 3025 	mov	ar7,@r0
      000A8E 8D 82            [24] 3026 	mov	dpl,r5
      000A90 8E 83            [24] 3027 	mov	dph,r6
      000A92 8F F0            [24] 3028 	mov	b,r7
      000A94 12r00r00         [24] 3029 	lcall	__gptrget
      000A97 FA               [12] 3030 	mov	r2,a
      000A98 A3               [24] 3031 	inc	dptr
      000A99 12r00r00         [24] 3032 	lcall	__gptrget
      000A9C FB               [12] 3033 	mov	r3,a
      000A9D A3               [24] 3034 	inc	dptr
      000A9E 12r00r00         [24] 3035 	lcall	__gptrget
      000AA1 FC               [12] 3036 	mov	r4,a
      000AA2 EA               [12] 3037 	mov	a,r2
      000AA3 4B               [12] 3038 	orl	a,r3
      000AA4 60 28            [24] 3039 	jz	00101$
                                   3040 ;	../../core/net/rpl/rpl-timers.c:351: dag->preferred_parent == NULL) {
      000AA6 E5 81            [12] 3041 	mov	a,sp
      000AA8 24 F4            [12] 3042 	add	a,#0xf4
      000AAA F8               [12] 3043 	mov	r0,a
      000AAB 74 17            [12] 3044 	mov	a,#0x17
      000AAD 26               [12] 3045 	add	a,@r0
      000AAE FA               [12] 3046 	mov	r2,a
      000AAF E4               [12] 3047 	clr	a
      000AB0 08               [12] 3048 	inc	r0
      000AB1 36               [12] 3049 	addc	a,@r0
      000AB2 FB               [12] 3050 	mov	r3,a
      000AB3 08               [12] 3051 	inc	r0
      000AB4 86 04            [24] 3052 	mov	ar4,@r0
      000AB6 8A 82            [24] 3053 	mov	dpl,r2
      000AB8 8B 83            [24] 3054 	mov	dph,r3
      000ABA 8C F0            [24] 3055 	mov	b,r4
      000ABC 12r00r00         [24] 3056 	lcall	__gptrget
      000ABF FA               [12] 3057 	mov	r2,a
      000AC0 A3               [24] 3058 	inc	dptr
      000AC1 12r00r00         [24] 3059 	lcall	__gptrget
      000AC4 FB               [12] 3060 	mov	r3,a
      000AC5 A3               [24] 3061 	inc	dptr
      000AC6 12r00r00         [24] 3062 	lcall	__gptrget
      000AC9 FC               [12] 3063 	mov	r4,a
      000ACA EA               [12] 3064 	mov	a,r2
      000ACB 4B               [12] 3065 	orl	a,r3
      000ACC 70 09            [24] 3066 	jnz	00102$
      000ACE                       3067 00101$:
                                   3068 ;	../../core/net/rpl/rpl-timers.c:352: return NULL;
      000ACE 90 00 00         [24] 3069 	mov	dptr,#0x0000
      000AD1 75 F0 00         [24] 3070 	mov	b,#0x00
      000AD4 02r0Er5F         [24] 3071 	ljmp	00129$
      000AD7                       3072 00102$:
                                   3073 ;	../../core/net/rpl/rpl-timers.c:356: if(dag->preferred_parent->last_tx_time < min_last_tx) {
      000AD7 C0 05            [24] 3074 	push	ar5
      000AD9 C0 06            [24] 3075 	push	ar6
      000ADB C0 07            [24] 3076 	push	ar7
      000ADD 74 08            [12] 3077 	mov	a,#0x08
      000ADF 2A               [12] 3078 	add	a,r2
      000AE0 FD               [12] 3079 	mov	r5,a
      000AE1 E4               [12] 3080 	clr	a
      000AE2 3B               [12] 3081 	addc	a,r3
      000AE3 FE               [12] 3082 	mov	r6,a
      000AE4 8C 07            [24] 3083 	mov	ar7,r4
      000AE6 8D 82            [24] 3084 	mov	dpl,r5
      000AE8 8E 83            [24] 3085 	mov	dph,r6
      000AEA 8F F0            [24] 3086 	mov	b,r7
      000AEC 12r00r00         [24] 3087 	lcall	__gptrget
      000AEF FD               [12] 3088 	mov	r5,a
      000AF0 A3               [24] 3089 	inc	dptr
      000AF1 12r00r00         [24] 3090 	lcall	__gptrget
      000AF4 FE               [12] 3091 	mov	r6,a
      000AF5 E5 81            [12] 3092 	mov	a,sp
      000AF7 24 FC            [12] 3093 	add	a,#0xfc
      000AF9 F8               [12] 3094 	mov	r0,a
      000AFA C3               [12] 3095 	clr	c
      000AFB ED               [12] 3096 	mov	a,r5
      000AFC 96               [12] 3097 	subb	a,@r0
      000AFD EE               [12] 3098 	mov	a,r6
      000AFE 08               [12] 3099 	inc	r0
      000AFF 96               [12] 3100 	subb	a,@r0
      000B00 D0 07            [24] 3101 	pop	ar7
      000B02 D0 06            [24] 3102 	pop	ar6
      000B04 D0 05            [24] 3103 	pop	ar5
      000B06 50 0D            [24] 3104 	jnc	00106$
                                   3105 ;	../../core/net/rpl/rpl-timers.c:357: probing_target = dag->preferred_parent;
      000B08 E5 81            [12] 3106 	mov	a,sp
      000B0A 24 FA            [12] 3107 	add	a,#0xfa
      000B0C F8               [12] 3108 	mov	r0,a
      000B0D A6 02            [24] 3109 	mov	@r0,ar2
      000B0F 08               [12] 3110 	inc	r0
      000B10 A6 03            [24] 3111 	mov	@r0,ar3
      000B12 08               [12] 3112 	inc	r0
      000B13 A6 04            [24] 3113 	mov	@r0,ar4
      000B15                       3114 00106$:
                                   3115 ;	../../core/net/rpl/rpl-timers.c:361: if(probing_target == NULL && (random_rand() % 2) == 0) {
      000B15 E5 81            [12] 3116 	mov	a,sp
      000B17 24 FA            [12] 3117 	add	a,#0xfa
      000B19 F8               [12] 3118 	mov	r0,a
      000B1A E6               [12] 3119 	mov	a,@r0
      000B1B 08               [12] 3120 	inc	r0
      000B1C 46               [12] 3121 	orl	a,@r0
      000B1D 60 03            [24] 3122 	jz	00186$
      000B1F 02r0Dr1D         [24] 3123 	ljmp	00117$
      000B22                       3124 00186$:
      000B22 C0 07            [24] 3125 	push	ar7
      000B24 C0 06            [24] 3126 	push	ar6
      000B26 C0 05            [24] 3127 	push	ar5
      000B28 78r00            [12] 3128 	mov	r0,#_random_rand
      000B2A 79s00            [12] 3129 	mov	r1,#(_random_rand >> 8)
      000B2C 7As00            [12] 3130 	mov	r2,#(_random_rand >> 16)
      000B2E 12r00r00         [24] 3131 	lcall	__sdcc_banked_call
      000B31 E5 82            [12] 3132 	mov	a,dpl
      000B33 85 83 F0         [24] 3133 	mov	b,dph
      000B36 D0 05            [24] 3134 	pop	ar5
      000B38 D0 06            [24] 3135 	pop	ar6
      000B3A D0 07            [24] 3136 	pop	ar7
      000B3C 30 E0 03         [24] 3137 	jnb	acc.0,00187$
      000B3F 02r0Dr1D         [24] 3138 	ljmp	00117$
      000B42                       3139 00187$:
                                   3140 ;	../../core/net/rpl/rpl-timers.c:362: p = nbr_table_head(rpl_parents);
      000B42 90r00r00         [24] 3141 	mov	dptr,#_rpl_parents
      000B45 E0               [24] 3142 	movx	a,@dptr
      000B46 FA               [12] 3143 	mov	r2,a
      000B47 A3               [24] 3144 	inc	dptr
      000B48 E0               [24] 3145 	movx	a,@dptr
      000B49 FB               [12] 3146 	mov	r3,a
      000B4A A3               [24] 3147 	inc	dptr
      000B4B E0               [24] 3148 	movx	a,@dptr
      000B4C FC               [12] 3149 	mov	r4,a
      000B4D 8A 82            [24] 3150 	mov	dpl,r2
      000B4F 8B 83            [24] 3151 	mov	dph,r3
      000B51 8C F0            [24] 3152 	mov	b,r4
      000B53 C0 07            [24] 3153 	push	ar7
      000B55 C0 06            [24] 3154 	push	ar6
      000B57 C0 05            [24] 3155 	push	ar5
      000B59 78r00            [12] 3156 	mov	r0,#_nbr_table_head
      000B5B 79s00            [12] 3157 	mov	r1,#(_nbr_table_head >> 8)
      000B5D 7As00            [12] 3158 	mov	r2,#(_nbr_table_head >> 16)
      000B5F 12r00r00         [24] 3159 	lcall	__sdcc_banked_call
      000B62 AA 82            [24] 3160 	mov	r2,dpl
      000B64 AB 83            [24] 3161 	mov	r3,dph
      000B66 AC F0            [24] 3162 	mov	r4,b
      000B68 D0 05            [24] 3163 	pop	ar5
      000B6A D0 06            [24] 3164 	pop	ar6
      000B6C D0 07            [24] 3165 	pop	ar7
      000B6E E5 81            [12] 3166 	mov	a,sp
      000B70 24 F7            [12] 3167 	add	a,#0xf7
      000B72 F8               [12] 3168 	mov	r0,a
      000B73 A6 02            [24] 3169 	mov	@r0,ar2
      000B75 08               [12] 3170 	inc	r0
      000B76 A6 03            [24] 3171 	mov	@r0,ar3
      000B78 08               [12] 3172 	inc	r0
      000B79 A6 04            [24] 3173 	mov	@r0,ar4
                                   3174 ;	../../core/net/rpl/rpl-timers.c:363: while(p != NULL) {
      000B7B                       3175 00113$:
      000B7B E5 81            [12] 3176 	mov	a,sp
      000B7D 24 F7            [12] 3177 	add	a,#0xf7
      000B7F F8               [12] 3178 	mov	r0,a
      000B80 E6               [12] 3179 	mov	a,@r0
      000B81 08               [12] 3180 	inc	r0
      000B82 46               [12] 3181 	orl	a,@r0
      000B83 70 03            [24] 3182 	jnz	00188$
      000B85 02r0Dr1D         [24] 3183 	ljmp	00117$
      000B88                       3184 00188$:
                                   3185 ;	../../core/net/rpl/rpl-timers.c:364: if(p->dag == dag && p->last_tx_time < min_last_tx) {
      000B88 C0 05            [24] 3186 	push	ar5
      000B8A C0 06            [24] 3187 	push	ar6
      000B8C C0 07            [24] 3188 	push	ar7
      000B8E E5 81            [12] 3189 	mov	a,sp
      000B90 24 F4            [12] 3190 	add	a,#0xf4
      000B92 F8               [12] 3191 	mov	r0,a
      000B93 74 03            [12] 3192 	mov	a,#0x03
      000B95 26               [12] 3193 	add	a,@r0
      000B96 FD               [12] 3194 	mov	r5,a
      000B97 E4               [12] 3195 	clr	a
      000B98 08               [12] 3196 	inc	r0
      000B99 36               [12] 3197 	addc	a,@r0
      000B9A FE               [12] 3198 	mov	r6,a
      000B9B 08               [12] 3199 	inc	r0
      000B9C 86 07            [24] 3200 	mov	ar7,@r0
      000B9E 8D 82            [24] 3201 	mov	dpl,r5
      000BA0 8E 83            [24] 3202 	mov	dph,r6
      000BA2 8F F0            [24] 3203 	mov	b,r7
      000BA4 12r00r00         [24] 3204 	lcall	__gptrget
      000BA7 FD               [12] 3205 	mov	r5,a
      000BA8 A3               [24] 3206 	inc	dptr
      000BA9 12r00r00         [24] 3207 	lcall	__gptrget
      000BAC FE               [12] 3208 	mov	r6,a
      000BAD A3               [24] 3209 	inc	dptr
      000BAE 12r00r00         [24] 3210 	lcall	__gptrget
      000BB1 FF               [12] 3211 	mov	r7,a
      000BB2 E5 81            [12] 3212 	mov	a,sp
      000BB4 24 F1            [12] 3213 	add	a,#0xf1
      000BB6 F8               [12] 3214 	mov	r0,a
      000BB7 C0 05            [24] 3215 	push	ar5
      000BB9 C0 06            [24] 3216 	push	ar6
      000BBB C0 07            [24] 3217 	push	ar7
      000BBD 86 82            [24] 3218 	mov	dpl,@r0
      000BBF 08               [12] 3219 	inc	r0
      000BC0 86 83            [24] 3220 	mov	dph,@r0
      000BC2 08               [12] 3221 	inc	r0
      000BC3 86 F0            [24] 3222 	mov	b,@r0
      000BC5 12r00r00         [24] 3223 	lcall	___gptr_cmp
      000BC8 15 81            [12] 3224 	dec	sp
      000BCA 15 81            [12] 3225 	dec	sp
      000BCC 15 81            [12] 3226 	dec	sp
      000BCE 60 09            [24] 3227 	jz	00190$
      000BD0 D0 07            [24] 3228 	pop	ar7
      000BD2 D0 06            [24] 3229 	pop	ar6
      000BD4 D0 05            [24] 3230 	pop	ar5
      000BD6 02r0CrC8         [24] 3231 	ljmp	00111$
      000BD9                       3232 00190$:
      000BD9 E5 81            [12] 3233 	mov	a,sp
      000BDB 24 F4            [12] 3234 	add	a,#0xf4
      000BDD F8               [12] 3235 	mov	r0,a
      000BDE 74 08            [12] 3236 	mov	a,#0x08
      000BE0 26               [12] 3237 	add	a,@r0
      000BE1 FD               [12] 3238 	mov	r5,a
      000BE2 E4               [12] 3239 	clr	a
      000BE3 08               [12] 3240 	inc	r0
      000BE4 36               [12] 3241 	addc	a,@r0
      000BE5 FE               [12] 3242 	mov	r6,a
      000BE6 08               [12] 3243 	inc	r0
      000BE7 86 07            [24] 3244 	mov	ar7,@r0
      000BE9 8D 82            [24] 3245 	mov	dpl,r5
      000BEB 8E 83            [24] 3246 	mov	dph,r6
      000BED 8F F0            [24] 3247 	mov	b,r7
      000BEF 12r00r00         [24] 3248 	lcall	__gptrget
      000BF2 FD               [12] 3249 	mov	r5,a
      000BF3 A3               [24] 3250 	inc	dptr
      000BF4 12r00r00         [24] 3251 	lcall	__gptrget
      000BF7 FE               [12] 3252 	mov	r6,a
      000BF8 E5 81            [12] 3253 	mov	a,sp
      000BFA 24 FC            [12] 3254 	add	a,#0xfc
      000BFC F8               [12] 3255 	mov	r0,a
      000BFD C3               [12] 3256 	clr	c
      000BFE ED               [12] 3257 	mov	a,r5
      000BFF 96               [12] 3258 	subb	a,@r0
      000C00 EE               [12] 3259 	mov	a,r6
      000C01 08               [12] 3260 	inc	r0
      000C02 96               [12] 3261 	subb	a,@r0
      000C03 D0 07            [24] 3262 	pop	ar7
      000C05 D0 06            [24] 3263 	pop	ar6
      000C07 D0 05            [24] 3264 	pop	ar5
      000C09 40 03            [24] 3265 	jc	00191$
      000C0B 02r0CrC8         [24] 3266 	ljmp	00111$
      000C0E                       3267 00191$:
                                   3268 ;	../../core/net/rpl/rpl-timers.c:366: rpl_rank_t p_rank = dag->instance->of->calculate_rank(p, 0);
      000C0E 8D 82            [24] 3269 	mov	dpl,r5
      000C10 8E 83            [24] 3270 	mov	dph,r6
      000C12 8F F0            [24] 3271 	mov	b,r7
      000C14 12r00r00         [24] 3272 	lcall	__gptrget
      000C17 FA               [12] 3273 	mov	r2,a
      000C18 A3               [24] 3274 	inc	dptr
      000C19 12r00r00         [24] 3275 	lcall	__gptrget
      000C1C FB               [12] 3276 	mov	r3,a
      000C1D A3               [24] 3277 	inc	dptr
      000C1E 12r00r00         [24] 3278 	lcall	__gptrget
      000C21 FC               [12] 3279 	mov	r4,a
      000C22 74 07            [12] 3280 	mov	a,#0x07
      000C24 2A               [12] 3281 	add	a,r2
      000C25 FA               [12] 3282 	mov	r2,a
      000C26 E4               [12] 3283 	clr	a
      000C27 3B               [12] 3284 	addc	a,r3
      000C28 FB               [12] 3285 	mov	r3,a
      000C29 8A 82            [24] 3286 	mov	dpl,r2
      000C2B 8B 83            [24] 3287 	mov	dph,r3
      000C2D 8C F0            [24] 3288 	mov	b,r4
      000C2F 12r00r00         [24] 3289 	lcall	__gptrget
      000C32 FA               [12] 3290 	mov	r2,a
      000C33 A3               [24] 3291 	inc	dptr
      000C34 12r00r00         [24] 3292 	lcall	__gptrget
      000C37 FB               [12] 3293 	mov	r3,a
      000C38 A3               [24] 3294 	inc	dptr
      000C39 12r00r00         [24] 3295 	lcall	__gptrget
      000C3C FC               [12] 3296 	mov	r4,a
      000C3D 74 0C            [12] 3297 	mov	a,#0x0C
      000C3F 2A               [12] 3298 	add	a,r2
      000C40 FA               [12] 3299 	mov	r2,a
      000C41 E4               [12] 3300 	clr	a
      000C42 3B               [12] 3301 	addc	a,r3
      000C43 FB               [12] 3302 	mov	r3,a
      000C44 8A 82            [24] 3303 	mov	dpl,r2
      000C46 8B 83            [24] 3304 	mov	dph,r3
      000C48 8C F0            [24] 3305 	mov	b,r4
      000C4A 12r00r00         [24] 3306 	lcall	__gptrget
      000C4D FA               [12] 3307 	mov	r2,a
      000C4E A3               [24] 3308 	inc	dptr
      000C4F 12r00r00         [24] 3309 	lcall	__gptrget
      000C52 FB               [12] 3310 	mov	r3,a
      000C53 A3               [24] 3311 	inc	dptr
      000C54 12r00r00         [24] 3312 	lcall	__gptrget
      000C57 FC               [12] 3313 	mov	r4,a
      000C58 C0 07            [24] 3314 	push	ar7
      000C5A C0 06            [24] 3315 	push	ar6
      000C5C C0 05            [24] 3316 	push	ar5
      000C5E C0 04            [24] 3317 	push	ar4
      000C60 E4               [12] 3318 	clr	a
      000C61 C0 E0            [24] 3319 	push	acc
      000C63 C0 E0            [24] 3320 	push	acc
      000C65 C0 02            [24] 3321 	push	ar2
      000C67 C0 03            [24] 3322 	push	ar3
      000C69 C0 04            [24] 3323 	push	ar4
      000C6B E5 81            [12] 3324 	mov	a,sp
      000C6D 24 EE            [12] 3325 	add	a,#0xee
      000C6F F8               [12] 3326 	mov	r0,a
      000C70 86 82            [24] 3327 	mov	dpl,@r0
      000C72 08               [12] 3328 	inc	r0
      000C73 86 83            [24] 3329 	mov	dph,@r0
      000C75 08               [12] 3330 	inc	r0
      000C76 86 F0            [24] 3331 	mov	b,@r0
      000C78 D0 02            [24] 3332 	pop	ar2
      000C7A D0 01            [24] 3333 	pop	ar1
      000C7C D0 00            [24] 3334 	pop	ar0
      000C7E 12r00r00         [24] 3335 	lcall	__sdcc_banked_call
      000C81 AA 82            [24] 3336 	mov	r2,dpl
      000C83 AB 83            [24] 3337 	mov	r3,dph
      000C85 15 81            [12] 3338 	dec	sp
      000C87 15 81            [12] 3339 	dec	sp
      000C89 D0 04            [24] 3340 	pop	ar4
      000C8B D0 05            [24] 3341 	pop	ar5
      000C8D D0 06            [24] 3342 	pop	ar6
      000C8F D0 07            [24] 3343 	pop	ar7
      000C91 8A 04            [24] 3344 	mov	ar4,r2
                                   3345 ;	../../core/net/rpl/rpl-timers.c:367: if(probing_target == NULL
      000C93 E5 81            [12] 3346 	mov	a,sp
      000C95 24 FA            [12] 3347 	add	a,#0xfa
      000C97 F8               [12] 3348 	mov	r0,a
      000C98 E6               [12] 3349 	mov	a,@r0
      000C99 08               [12] 3350 	inc	r0
      000C9A 46               [12] 3351 	orl	a,@r0
      000C9B 60 0D            [24] 3352 	jz	00107$
                                   3353 ;	../../core/net/rpl/rpl-timers.c:368: || p_rank < probing_target_rank) {
      000C9D E5 81            [12] 3354 	mov	a,sp
      000C9F 24 FD            [12] 3355 	add	a,#0xfd
      000CA1 F8               [12] 3356 	mov	r0,a
      000CA2 C3               [12] 3357 	clr	c
      000CA3 EC               [12] 3358 	mov	a,r4
      000CA4 96               [12] 3359 	subb	a,@r0
      000CA5 EB               [12] 3360 	mov	a,r3
      000CA6 08               [12] 3361 	inc	r0
      000CA7 96               [12] 3362 	subb	a,@r0
      000CA8 50 1E            [24] 3363 	jnc	00111$
      000CAA                       3364 00107$:
                                   3365 ;	../../core/net/rpl/rpl-timers.c:369: probing_target = p;
      000CAA E5 81            [12] 3366 	mov	a,sp
      000CAC 24 F7            [12] 3367 	add	a,#0xf7
      000CAE F8               [12] 3368 	mov	r0,a
      000CAF E5 81            [12] 3369 	mov	a,sp
      000CB1 24 FA            [12] 3370 	add	a,#0xfa
      000CB3 F9               [12] 3371 	mov	r1,a
      000CB4 E6               [12] 3372 	mov	a,@r0
      000CB5 F7               [12] 3373 	mov	@r1,a
      000CB6 08               [12] 3374 	inc	r0
      000CB7 09               [12] 3375 	inc	r1
      000CB8 E6               [12] 3376 	mov	a,@r0
      000CB9 F7               [12] 3377 	mov	@r1,a
      000CBA 08               [12] 3378 	inc	r0
      000CBB 09               [12] 3379 	inc	r1
      000CBC E6               [12] 3380 	mov	a,@r0
      000CBD F7               [12] 3381 	mov	@r1,a
                                   3382 ;	../../core/net/rpl/rpl-timers.c:370: probing_target_rank = p_rank;
      000CBE E5 81            [12] 3383 	mov	a,sp
      000CC0 24 FD            [12] 3384 	add	a,#0xfd
      000CC2 F8               [12] 3385 	mov	r0,a
      000CC3 A6 04            [24] 3386 	mov	@r0,ar4
      000CC5 08               [12] 3387 	inc	r0
      000CC6 A6 03            [24] 3388 	mov	@r0,ar3
      000CC8                       3389 00111$:
                                   3390 ;	../../core/net/rpl/rpl-timers.c:373: p = nbr_table_next(rpl_parents, p);
      000CC8 C0 05            [24] 3391 	push	ar5
      000CCA C0 06            [24] 3392 	push	ar6
      000CCC C0 07            [24] 3393 	push	ar7
      000CCE E5 81            [12] 3394 	mov	a,sp
      000CD0 24 F4            [12] 3395 	add	a,#0xf4
      000CD2 F8               [12] 3396 	mov	r0,a
      000CD3 86 02            [24] 3397 	mov	ar2,@r0
      000CD5 08               [12] 3398 	inc	r0
      000CD6 86 03            [24] 3399 	mov	ar3,@r0
      000CD8 08               [12] 3400 	inc	r0
      000CD9 86 04            [24] 3401 	mov	ar4,@r0
      000CDB 90r00r00         [24] 3402 	mov	dptr,#_rpl_parents
      000CDE E0               [24] 3403 	movx	a,@dptr
      000CDF FD               [12] 3404 	mov	r5,a
      000CE0 A3               [24] 3405 	inc	dptr
      000CE1 E0               [24] 3406 	movx	a,@dptr
      000CE2 FE               [12] 3407 	mov	r6,a
      000CE3 A3               [24] 3408 	inc	dptr
      000CE4 E0               [24] 3409 	movx	a,@dptr
      000CE5 FF               [12] 3410 	mov	r7,a
      000CE6 C0 02            [24] 3411 	push	ar2
      000CE8 C0 03            [24] 3412 	push	ar3
      000CEA C0 04            [24] 3413 	push	ar4
      000CEC 8D 82            [24] 3414 	mov	dpl,r5
      000CEE 8E 83            [24] 3415 	mov	dph,r6
      000CF0 8F F0            [24] 3416 	mov	b,r7
      000CF2 78r00            [12] 3417 	mov	r0,#_nbr_table_next
      000CF4 79s00            [12] 3418 	mov	r1,#(_nbr_table_next >> 8)
      000CF6 7As00            [12] 3419 	mov	r2,#(_nbr_table_next >> 16)
      000CF8 12r00r00         [24] 3420 	lcall	__sdcc_banked_call
      000CFB AD 82            [24] 3421 	mov	r5,dpl
      000CFD AE 83            [24] 3422 	mov	r6,dph
      000CFF AF F0            [24] 3423 	mov	r7,b
      000D01 15 81            [12] 3424 	dec	sp
      000D03 15 81            [12] 3425 	dec	sp
      000D05 15 81            [12] 3426 	dec	sp
      000D07 E5 81            [12] 3427 	mov	a,sp
      000D09 24 F4            [12] 3428 	add	a,#0xf4
      000D0B F8               [12] 3429 	mov	r0,a
      000D0C A6 05            [24] 3430 	mov	@r0,ar5
      000D0E 08               [12] 3431 	inc	r0
      000D0F A6 06            [24] 3432 	mov	@r0,ar6
      000D11 08               [12] 3433 	inc	r0
      000D12 A6 07            [24] 3434 	mov	@r0,ar7
      000D14 D0 07            [24] 3435 	pop	ar7
      000D16 D0 06            [24] 3436 	pop	ar6
      000D18 D0 05            [24] 3437 	pop	ar5
      000D1A 02r0Br7B         [24] 3438 	ljmp	00113$
      000D1D                       3439 00117$:
                                   3440 ;	../../core/net/rpl/rpl-timers.c:378: if(probing_target == NULL) {
      000D1D E5 81            [12] 3441 	mov	a,sp
      000D1F 24 FA            [12] 3442 	add	a,#0xfa
      000D21 F8               [12] 3443 	mov	r0,a
      000D22 E6               [12] 3444 	mov	a,@r0
      000D23 08               [12] 3445 	inc	r0
      000D24 46               [12] 3446 	orl	a,@r0
      000D25 60 03            [24] 3447 	jz	00194$
      000D27 02r0Er52         [24] 3448 	ljmp	00128$
      000D2A                       3449 00194$:
                                   3450 ;	../../core/net/rpl/rpl-timers.c:379: p = nbr_table_head(rpl_parents);
      000D2A 90r00r00         [24] 3451 	mov	dptr,#_rpl_parents
      000D2D E0               [24] 3452 	movx	a,@dptr
      000D2E FD               [12] 3453 	mov	r5,a
      000D2F A3               [24] 3454 	inc	dptr
      000D30 E0               [24] 3455 	movx	a,@dptr
      000D31 FE               [12] 3456 	mov	r6,a
      000D32 A3               [24] 3457 	inc	dptr
      000D33 E0               [24] 3458 	movx	a,@dptr
      000D34 FF               [12] 3459 	mov	r7,a
      000D35 8D 82            [24] 3460 	mov	dpl,r5
      000D37 8E 83            [24] 3461 	mov	dph,r6
      000D39 8F F0            [24] 3462 	mov	b,r7
      000D3B 78r00            [12] 3463 	mov	r0,#_nbr_table_head
      000D3D 79s00            [12] 3464 	mov	r1,#(_nbr_table_head >> 8)
      000D3F 7As00            [12] 3465 	mov	r2,#(_nbr_table_head >> 16)
      000D41 12r00r00         [24] 3466 	lcall	__sdcc_banked_call
      000D44 AD 82            [24] 3467 	mov	r5,dpl
      000D46 AE 83            [24] 3468 	mov	r6,dph
      000D48 AF F0            [24] 3469 	mov	r7,b
      000D4A E5 81            [12] 3470 	mov	a,sp
      000D4C 24 F7            [12] 3471 	add	a,#0xf7
      000D4E F8               [12] 3472 	mov	r0,a
      000D4F A6 05            [24] 3473 	mov	@r0,ar5
      000D51 08               [12] 3474 	inc	r0
      000D52 A6 06            [24] 3475 	mov	@r0,ar6
      000D54 08               [12] 3476 	inc	r0
      000D55 A6 07            [24] 3477 	mov	@r0,ar7
                                   3478 ;	../../core/net/rpl/rpl-timers.c:380: while(p != NULL) {
      000D57                       3479 00124$:
      000D57 E5 81            [12] 3480 	mov	a,sp
      000D59 24 F7            [12] 3481 	add	a,#0xf7
      000D5B F8               [12] 3482 	mov	r0,a
      000D5C E6               [12] 3483 	mov	a,@r0
      000D5D 08               [12] 3484 	inc	r0
      000D5E 46               [12] 3485 	orl	a,@r0
      000D5F 70 03            [24] 3486 	jnz	00195$
      000D61 02r0Er52         [24] 3487 	ljmp	00128$
      000D64                       3488 00195$:
                                   3489 ;	../../core/net/rpl/rpl-timers.c:381: if(p->dag == dag) {
      000D64 E5 81            [12] 3490 	mov	a,sp
      000D66 24 F7            [12] 3491 	add	a,#0xf7
      000D68 F8               [12] 3492 	mov	r0,a
      000D69 74 03            [12] 3493 	mov	a,#0x03
      000D6B 26               [12] 3494 	add	a,@r0
      000D6C FD               [12] 3495 	mov	r5,a
      000D6D E4               [12] 3496 	clr	a
      000D6E 08               [12] 3497 	inc	r0
      000D6F 36               [12] 3498 	addc	a,@r0
      000D70 FE               [12] 3499 	mov	r6,a
      000D71 08               [12] 3500 	inc	r0
      000D72 86 07            [24] 3501 	mov	ar7,@r0
      000D74 8D 82            [24] 3502 	mov	dpl,r5
      000D76 8E 83            [24] 3503 	mov	dph,r6
      000D78 8F F0            [24] 3504 	mov	b,r7
      000D7A 12r00r00         [24] 3505 	lcall	__gptrget
      000D7D FD               [12] 3506 	mov	r5,a
      000D7E A3               [24] 3507 	inc	dptr
      000D7F 12r00r00         [24] 3508 	lcall	__gptrget
      000D82 FE               [12] 3509 	mov	r6,a
      000D83 A3               [24] 3510 	inc	dptr
      000D84 12r00r00         [24] 3511 	lcall	__gptrget
      000D87 FF               [12] 3512 	mov	r7,a
      000D88 E5 81            [12] 3513 	mov	a,sp
      000D8A 24 F4            [12] 3514 	add	a,#0xf4
      000D8C F8               [12] 3515 	mov	r0,a
      000D8D C0 05            [24] 3516 	push	ar5
      000D8F C0 06            [24] 3517 	push	ar6
      000D91 C0 07            [24] 3518 	push	ar7
      000D93 86 82            [24] 3519 	mov	dpl,@r0
      000D95 08               [12] 3520 	inc	r0
      000D96 86 83            [24] 3521 	mov	dph,@r0
      000D98 08               [12] 3522 	inc	r0
      000D99 86 F0            [24] 3523 	mov	b,@r0
      000D9B 12r00r00         [24] 3524 	lcall	___gptr_cmp
      000D9E 15 81            [12] 3525 	dec	sp
      000DA0 15 81            [12] 3526 	dec	sp
      000DA2 15 81            [12] 3527 	dec	sp
      000DA4 70 63            [24] 3528 	jnz	00123$
                                   3529 ;	../../core/net/rpl/rpl-timers.c:382: if(probing_target == NULL
      000DA6 E5 81            [12] 3530 	mov	a,sp
      000DA8 24 FA            [12] 3531 	add	a,#0xfa
      000DAA F8               [12] 3532 	mov	r0,a
      000DAB E6               [12] 3533 	mov	a,@r0
      000DAC 08               [12] 3534 	inc	r0
      000DAD 46               [12] 3535 	orl	a,@r0
      000DAE 60 45            [24] 3536 	jz	00119$
                                   3537 ;	../../core/net/rpl/rpl-timers.c:383: || p->last_tx_time < probing_target->last_tx_time) {
      000DB0 E5 81            [12] 3538 	mov	a,sp
      000DB2 24 F7            [12] 3539 	add	a,#0xf7
      000DB4 F8               [12] 3540 	mov	r0,a
      000DB5 74 08            [12] 3541 	mov	a,#0x08
      000DB7 26               [12] 3542 	add	a,@r0
      000DB8 FD               [12] 3543 	mov	r5,a
      000DB9 E4               [12] 3544 	clr	a
      000DBA 08               [12] 3545 	inc	r0
      000DBB 36               [12] 3546 	addc	a,@r0
      000DBC FE               [12] 3547 	mov	r6,a
      000DBD 08               [12] 3548 	inc	r0
      000DBE 86 07            [24] 3549 	mov	ar7,@r0
      000DC0 8D 82            [24] 3550 	mov	dpl,r5
      000DC2 8E 83            [24] 3551 	mov	dph,r6
      000DC4 8F F0            [24] 3552 	mov	b,r7
      000DC6 12r00r00         [24] 3553 	lcall	__gptrget
      000DC9 FD               [12] 3554 	mov	r5,a
      000DCA A3               [24] 3555 	inc	dptr
      000DCB 12r00r00         [24] 3556 	lcall	__gptrget
      000DCE FE               [12] 3557 	mov	r6,a
      000DCF E5 81            [12] 3558 	mov	a,sp
      000DD1 24 FA            [12] 3559 	add	a,#0xfa
      000DD3 F8               [12] 3560 	mov	r0,a
      000DD4 74 08            [12] 3561 	mov	a,#0x08
      000DD6 26               [12] 3562 	add	a,@r0
      000DD7 FB               [12] 3563 	mov	r3,a
      000DD8 E4               [12] 3564 	clr	a
      000DD9 08               [12] 3565 	inc	r0
      000DDA 36               [12] 3566 	addc	a,@r0
      000DDB FC               [12] 3567 	mov	r4,a
      000DDC 08               [12] 3568 	inc	r0
      000DDD 86 07            [24] 3569 	mov	ar7,@r0
      000DDF 8B 82            [24] 3570 	mov	dpl,r3
      000DE1 8C 83            [24] 3571 	mov	dph,r4
      000DE3 8F F0            [24] 3572 	mov	b,r7
      000DE5 12r00r00         [24] 3573 	lcall	__gptrget
      000DE8 FB               [12] 3574 	mov	r3,a
      000DE9 A3               [24] 3575 	inc	dptr
      000DEA 12r00r00         [24] 3576 	lcall	__gptrget
      000DED FC               [12] 3577 	mov	r4,a
      000DEE C3               [12] 3578 	clr	c
      000DEF ED               [12] 3579 	mov	a,r5
      000DF0 9B               [12] 3580 	subb	a,r3
      000DF1 EE               [12] 3581 	mov	a,r6
      000DF2 9C               [12] 3582 	subb	a,r4
      000DF3 50 14            [24] 3583 	jnc	00123$
      000DF5                       3584 00119$:
                                   3585 ;	../../core/net/rpl/rpl-timers.c:384: probing_target = p;
      000DF5 E5 81            [12] 3586 	mov	a,sp
      000DF7 24 F7            [12] 3587 	add	a,#0xf7
      000DF9 F8               [12] 3588 	mov	r0,a
      000DFA E5 81            [12] 3589 	mov	a,sp
      000DFC 24 FA            [12] 3590 	add	a,#0xfa
      000DFE F9               [12] 3591 	mov	r1,a
      000DFF E6               [12] 3592 	mov	a,@r0
      000E00 F7               [12] 3593 	mov	@r1,a
      000E01 08               [12] 3594 	inc	r0
      000E02 09               [12] 3595 	inc	r1
      000E03 E6               [12] 3596 	mov	a,@r0
      000E04 F7               [12] 3597 	mov	@r1,a
      000E05 08               [12] 3598 	inc	r0
      000E06 09               [12] 3599 	inc	r1
      000E07 E6               [12] 3600 	mov	a,@r0
      000E08 F7               [12] 3601 	mov	@r1,a
      000E09                       3602 00123$:
                                   3603 ;	../../core/net/rpl/rpl-timers.c:387: p = nbr_table_next(rpl_parents, p);
      000E09 E5 81            [12] 3604 	mov	a,sp
      000E0B 24 F7            [12] 3605 	add	a,#0xf7
      000E0D F8               [12] 3606 	mov	r0,a
      000E0E 86 02            [24] 3607 	mov	ar2,@r0
      000E10 08               [12] 3608 	inc	r0
      000E11 86 03            [24] 3609 	mov	ar3,@r0
      000E13 08               [12] 3610 	inc	r0
      000E14 86 04            [24] 3611 	mov	ar4,@r0
      000E16 90r00r00         [24] 3612 	mov	dptr,#_rpl_parents
      000E19 E0               [24] 3613 	movx	a,@dptr
      000E1A FD               [12] 3614 	mov	r5,a
      000E1B A3               [24] 3615 	inc	dptr
      000E1C E0               [24] 3616 	movx	a,@dptr
      000E1D FE               [12] 3617 	mov	r6,a
      000E1E A3               [24] 3618 	inc	dptr
      000E1F E0               [24] 3619 	movx	a,@dptr
      000E20 FF               [12] 3620 	mov	r7,a
      000E21 C0 02            [24] 3621 	push	ar2
      000E23 C0 03            [24] 3622 	push	ar3
      000E25 C0 04            [24] 3623 	push	ar4
      000E27 8D 82            [24] 3624 	mov	dpl,r5
      000E29 8E 83            [24] 3625 	mov	dph,r6
      000E2B 8F F0            [24] 3626 	mov	b,r7
      000E2D 78r00            [12] 3627 	mov	r0,#_nbr_table_next
      000E2F 79s00            [12] 3628 	mov	r1,#(_nbr_table_next >> 8)
      000E31 7As00            [12] 3629 	mov	r2,#(_nbr_table_next >> 16)
      000E33 12r00r00         [24] 3630 	lcall	__sdcc_banked_call
      000E36 AD 82            [24] 3631 	mov	r5,dpl
      000E38 AE 83            [24] 3632 	mov	r6,dph
      000E3A AF F0            [24] 3633 	mov	r7,b
      000E3C 15 81            [12] 3634 	dec	sp
      000E3E 15 81            [12] 3635 	dec	sp
      000E40 15 81            [12] 3636 	dec	sp
      000E42 E5 81            [12] 3637 	mov	a,sp
      000E44 24 F7            [12] 3638 	add	a,#0xf7
      000E46 F8               [12] 3639 	mov	r0,a
      000E47 A6 05            [24] 3640 	mov	@r0,ar5
      000E49 08               [12] 3641 	inc	r0
      000E4A A6 06            [24] 3642 	mov	@r0,ar6
      000E4C 08               [12] 3643 	inc	r0
      000E4D A6 07            [24] 3644 	mov	@r0,ar7
      000E4F 02r0Dr57         [24] 3645 	ljmp	00124$
      000E52                       3646 00128$:
                                   3647 ;	../../core/net/rpl/rpl-timers.c:391: return probing_target;
      000E52 E5 81            [12] 3648 	mov	a,sp
      000E54 24 FA            [12] 3649 	add	a,#0xfa
      000E56 F8               [12] 3650 	mov	r0,a
      000E57 86 82            [24] 3651 	mov	dpl,@r0
      000E59 08               [12] 3652 	inc	r0
      000E5A 86 83            [24] 3653 	mov	dph,@r0
      000E5C 08               [12] 3654 	inc	r0
      000E5D 86 F0            [24] 3655 	mov	b,@r0
      000E5F                       3656 00129$:
      000E5F C8               [12] 3657 	xch	a,r0
      000E60 E5 81            [12] 3658 	mov	a,sp
      000E62 24 F3            [12] 3659 	add	a,#0xF3
      000E64 F5 81            [12] 3660 	mov	sp,a
      000E66 C8               [12] 3661 	xch	a,r0
      000E67 02r00r00         [24] 3662 	ljmp	__sdcc_banked_ret
                                   3663 ;------------------------------------------------------------
                                   3664 ;Allocation info for local variables in function 'handle_probing_timer'
                                   3665 ;------------------------------------------------------------
                                   3666 ;ptr                       Allocated to registers r5 r6 r7 
                                   3667 ;instance                  Allocated to registers r5 r6 r7 
                                   3668 ;probing_target            Allocated to stack - sp -2
                                   3669 ;------------------------------------------------------------
                                   3670 ;	../../core/net/rpl/rpl-timers.c:395: handle_probing_timer(void *ptr)
                                   3671 ;	-----------------------------------------
                                   3672 ;	 function handle_probing_timer
                                   3673 ;	-----------------------------------------
      000E6A                       3674 _handle_probing_timer:
      000E6A 05 81            [12] 3675 	inc	sp
      000E6C 05 81            [12] 3676 	inc	sp
      000E6E 05 81            [12] 3677 	inc	sp
      000E70 AD 82            [24] 3678 	mov	r5,dpl
      000E72 AE 83            [24] 3679 	mov	r6,dph
      000E74 AF F0            [24] 3680 	mov	r7,b
                                   3681 ;	../../core/net/rpl/rpl-timers.c:397: rpl_instance_t *instance = (rpl_instance_t *)ptr;
                                   3682 ;	../../core/net/rpl/rpl-timers.c:398: rpl_parent_t *probing_target = RPL_PROBING_SELECT_FUNC(instance->current_dag);
      000E76 74 0A            [12] 3683 	mov	a,#0x0A
      000E78 2D               [12] 3684 	add	a,r5
      000E79 FA               [12] 3685 	mov	r2,a
      000E7A E4               [12] 3686 	clr	a
      000E7B 3E               [12] 3687 	addc	a,r6
      000E7C FB               [12] 3688 	mov	r3,a
      000E7D 8F 04            [24] 3689 	mov	ar4,r7
      000E7F 8A 82            [24] 3690 	mov	dpl,r2
      000E81 8B 83            [24] 3691 	mov	dph,r3
      000E83 8C F0            [24] 3692 	mov	b,r4
      000E85 12r00r00         [24] 3693 	lcall	__gptrget
      000E88 FA               [12] 3694 	mov	r2,a
      000E89 A3               [24] 3695 	inc	dptr
      000E8A 12r00r00         [24] 3696 	lcall	__gptrget
      000E8D FB               [12] 3697 	mov	r3,a
      000E8E A3               [24] 3698 	inc	dptr
      000E8F 12r00r00         [24] 3699 	lcall	__gptrget
      000E92 FC               [12] 3700 	mov	r4,a
      000E93 8A 82            [24] 3701 	mov	dpl,r2
      000E95 8B 83            [24] 3702 	mov	dph,r3
      000E97 8C F0            [24] 3703 	mov	b,r4
      000E99 C0 07            [24] 3704 	push	ar7
      000E9B C0 06            [24] 3705 	push	ar6
      000E9D C0 05            [24] 3706 	push	ar5
      000E9F 78r1B            [12] 3707 	mov	r0,#_get_probing_target
      000EA1 79s0A            [12] 3708 	mov	r1,#(_get_probing_target >> 8)
      000EA3 7As00            [12] 3709 	mov	r2,#(_get_probing_target >> 16)
      000EA5 12r00r00         [24] 3710 	lcall	__sdcc_banked_call
      000EA8 AA 82            [24] 3711 	mov	r2,dpl
      000EAA AB 83            [24] 3712 	mov	r3,dph
      000EAC AC F0            [24] 3713 	mov	r4,b
      000EAE D0 05            [24] 3714 	pop	ar5
      000EB0 D0 06            [24] 3715 	pop	ar6
      000EB2 D0 07            [24] 3716 	pop	ar7
      000EB4 A8 81            [24] 3717 	mov	r0,sp
      000EB6 18               [12] 3718 	dec	r0
      000EB7 18               [12] 3719 	dec	r0
      000EB8 A6 02            [24] 3720 	mov	@r0,ar2
      000EBA 08               [12] 3721 	inc	r0
      000EBB A6 03            [24] 3722 	mov	@r0,ar3
      000EBD 08               [12] 3723 	inc	r0
      000EBE A6 04            [24] 3724 	mov	@r0,ar4
                                   3725 ;	../../core/net/rpl/rpl-timers.c:401: if(probing_target != NULL && rpl_get_parent_ipaddr(probing_target) != NULL) {
      000EC0 A8 81            [24] 3726 	mov	r0,sp
      000EC2 18               [12] 3727 	dec	r0
      000EC3 18               [12] 3728 	dec	r0
      000EC4 E6               [12] 3729 	mov	a,@r0
      000EC5 08               [12] 3730 	inc	r0
      000EC6 46               [12] 3731 	orl	a,@r0
      000EC7 60 79            [24] 3732 	jz	00102$
      000EC9 A8 81            [24] 3733 	mov	r0,sp
      000ECB 18               [12] 3734 	dec	r0
      000ECC 18               [12] 3735 	dec	r0
      000ECD 86 82            [24] 3736 	mov	dpl,@r0
      000ECF 08               [12] 3737 	inc	r0
      000ED0 86 83            [24] 3738 	mov	dph,@r0
      000ED2 08               [12] 3739 	inc	r0
      000ED3 86 F0            [24] 3740 	mov	b,@r0
      000ED5 C0 07            [24] 3741 	push	ar7
      000ED7 C0 06            [24] 3742 	push	ar6
      000ED9 C0 05            [24] 3743 	push	ar5
      000EDB 78r00            [12] 3744 	mov	r0,#_rpl_get_parent_ipaddr
      000EDD 79s00            [12] 3745 	mov	r1,#(_rpl_get_parent_ipaddr >> 8)
      000EDF 7As00            [12] 3746 	mov	r2,#(_rpl_get_parent_ipaddr >> 16)
      000EE1 12r00r00         [24] 3747 	lcall	__sdcc_banked_call
      000EE4 AA 82            [24] 3748 	mov	r2,dpl
      000EE6 AB 83            [24] 3749 	mov	r3,dph
      000EE8 AC F0            [24] 3750 	mov	r4,b
      000EEA D0 05            [24] 3751 	pop	ar5
      000EEC D0 06            [24] 3752 	pop	ar6
      000EEE D0 07            [24] 3753 	pop	ar7
      000EF0 EA               [12] 3754 	mov	a,r2
      000EF1 4B               [12] 3755 	orl	a,r3
      000EF2 60 4E            [24] 3756 	jz	00102$
                                   3757 ;	../../core/net/rpl/rpl-timers.c:405: RPL_PROBING_SEND_FUNC(instance, rpl_get_parent_ipaddr(probing_target));
      000EF4 A8 81            [24] 3758 	mov	r0,sp
      000EF6 18               [12] 3759 	dec	r0
      000EF7 18               [12] 3760 	dec	r0
      000EF8 86 82            [24] 3761 	mov	dpl,@r0
      000EFA 08               [12] 3762 	inc	r0
      000EFB 86 83            [24] 3763 	mov	dph,@r0
      000EFD 08               [12] 3764 	inc	r0
      000EFE 86 F0            [24] 3765 	mov	b,@r0
      000F00 C0 07            [24] 3766 	push	ar7
      000F02 C0 06            [24] 3767 	push	ar6
      000F04 C0 05            [24] 3768 	push	ar5
      000F06 78r00            [12] 3769 	mov	r0,#_rpl_get_parent_ipaddr
      000F08 79s00            [12] 3770 	mov	r1,#(_rpl_get_parent_ipaddr >> 8)
      000F0A 7As00            [12] 3771 	mov	r2,#(_rpl_get_parent_ipaddr >> 16)
      000F0C 12r00r00         [24] 3772 	lcall	__sdcc_banked_call
      000F0F AA 82            [24] 3773 	mov	r2,dpl
      000F11 AB 83            [24] 3774 	mov	r3,dph
      000F13 AC F0            [24] 3775 	mov	r4,b
      000F15 D0 05            [24] 3776 	pop	ar5
      000F17 D0 06            [24] 3777 	pop	ar6
      000F19 D0 07            [24] 3778 	pop	ar7
      000F1B C0 07            [24] 3779 	push	ar7
      000F1D C0 06            [24] 3780 	push	ar6
      000F1F C0 05            [24] 3781 	push	ar5
      000F21 C0 02            [24] 3782 	push	ar2
      000F23 C0 03            [24] 3783 	push	ar3
      000F25 C0 04            [24] 3784 	push	ar4
      000F27 8D 82            [24] 3785 	mov	dpl,r5
      000F29 8E 83            [24] 3786 	mov	dph,r6
      000F2B 8F F0            [24] 3787 	mov	b,r7
      000F2D 78r00            [12] 3788 	mov	r0,#_dio_output
      000F2F 79s00            [12] 3789 	mov	r1,#(_dio_output >> 8)
      000F31 7As00            [12] 3790 	mov	r2,#(_dio_output >> 16)
      000F33 12r00r00         [24] 3791 	lcall	__sdcc_banked_call
      000F36 15 81            [12] 3792 	dec	sp
      000F38 15 81            [12] 3793 	dec	sp
      000F3A 15 81            [12] 3794 	dec	sp
      000F3C D0 05            [24] 3795 	pop	ar5
      000F3E D0 06            [24] 3796 	pop	ar6
      000F40 D0 07            [24] 3797 	pop	ar7
      000F42                       3798 00102$:
                                   3799 ;	../../core/net/rpl/rpl-timers.c:409: rpl_schedule_probing(instance);
      000F42 8D 82            [24] 3800 	mov	dpl,r5
      000F44 8E 83            [24] 3801 	mov	dph,r6
      000F46 8F F0            [24] 3802 	mov	b,r7
      000F48 78r5A            [12] 3803 	mov	r0,#_rpl_schedule_probing
      000F4A 79s0F            [12] 3804 	mov	r1,#(_rpl_schedule_probing >> 8)
      000F4C 7As00            [12] 3805 	mov	r2,#(_rpl_schedule_probing >> 16)
      000F4E 12r00r00         [24] 3806 	lcall	__sdcc_banked_call
      000F51 15 81            [12] 3807 	dec	sp
      000F53 15 81            [12] 3808 	dec	sp
      000F55 15 81            [12] 3809 	dec	sp
      000F57 02r00r00         [24] 3810 	ljmp	__sdcc_banked_ret
                                   3811 ;------------------------------------------------------------
                                   3812 ;Allocation info for local variables in function 'rpl_schedule_probing'
                                   3813 ;------------------------------------------------------------
                                   3814 ;instance                  Allocated to registers r5 r6 r7 
                                   3815 ;------------------------------------------------------------
                                   3816 ;	../../core/net/rpl/rpl-timers.c:417: rpl_schedule_probing(rpl_instance_t *instance)
                                   3817 ;	-----------------------------------------
                                   3818 ;	 function rpl_schedule_probing
                                   3819 ;	-----------------------------------------
      000F5A                       3820 _rpl_schedule_probing:
      000F5A AD 82            [24] 3821 	mov	r5,dpl
      000F5C AE 83            [24] 3822 	mov	r6,dph
      000F5E AF F0            [24] 3823 	mov	r7,b
                                   3824 ;	../../core/net/rpl/rpl-timers.c:420: handle_probing_timer, instance);
      000F60 8D 02            [24] 3825 	mov	ar2,r5
      000F62 8E 03            [24] 3826 	mov	ar3,r6
      000F64 8F 04            [24] 3827 	mov	ar4,r7
                                   3828 ;	../../core/net/rpl/rpl-timers.c:419: ctimer_set(&instance->probing_timer, RPL_PROBING_DELAY_FUNC(),
      000F66 C0 07            [24] 3829 	push	ar7
      000F68 C0 06            [24] 3830 	push	ar6
      000F6A C0 05            [24] 3831 	push	ar5
      000F6C C0 04            [24] 3832 	push	ar4
      000F6E C0 03            [24] 3833 	push	ar3
      000F70 C0 02            [24] 3834 	push	ar2
      000F72 78r00            [12] 3835 	mov	r0,#_random_rand
      000F74 79s00            [12] 3836 	mov	r1,#(_random_rand >> 8)
      000F76 7As00            [12] 3837 	mov	r2,#(_random_rand >> 16)
      000F78 12r00r00         [24] 3838 	lcall	__sdcc_banked_call
      000F7B A8 82            [24] 3839 	mov	r0,dpl
      000F7D A9 83            [24] 3840 	mov	r1,dph
      000F7F E4               [12] 3841 	clr	a
      000F80 C0 E0            [24] 3842 	push	acc
      000F82 74 3C            [12] 3843 	mov	a,#0x3C
      000F84 C0 E0            [24] 3844 	push	acc
      000F86 88 82            [24] 3845 	mov	dpl,r0
      000F88 89 83            [24] 3846 	mov	dph,r1
      000F8A 12r00r00         [24] 3847 	lcall	__moduint
      000F8D A8 82            [24] 3848 	mov	r0,dpl
      000F8F A9 83            [24] 3849 	mov	r1,dph
      000F91 15 81            [12] 3850 	dec	sp
      000F93 15 81            [12] 3851 	dec	sp
      000F95 D0 02            [24] 3852 	pop	ar2
      000F97 D0 03            [24] 3853 	pop	ar3
      000F99 D0 04            [24] 3854 	pop	ar4
      000F9B D0 05            [24] 3855 	pop	ar5
      000F9D D0 06            [24] 3856 	pop	ar6
      000F9F D0 07            [24] 3857 	pop	ar7
      000FA1 74 1E            [12] 3858 	mov	a,#0x1E
      000FA3 29               [12] 3859 	add	a,r1
      000FA4 F9               [12] 3860 	mov	r1,a
      000FA5 74 8D            [12] 3861 	mov	a,#0x8D
      000FA7 2D               [12] 3862 	add	a,r5
      000FA8 FD               [12] 3863 	mov	r5,a
      000FA9 E4               [12] 3864 	clr	a
      000FAA 3E               [12] 3865 	addc	a,r6
      000FAB FE               [12] 3866 	mov	r6,a
      000FAC C0 02            [24] 3867 	push	ar2
      000FAE C0 03            [24] 3868 	push	ar3
      000FB0 C0 04            [24] 3869 	push	ar4
      000FB2 74r6A            [12] 3870 	mov	a,#_handle_probing_timer
      000FB4 C0 E0            [24] 3871 	push	acc
      000FB6 74s0E            [12] 3872 	mov	a,#(_handle_probing_timer >> 8)
      000FB8 C0 E0            [24] 3873 	push	acc
      000FBA 74s00            [12] 3874 	mov	a,#(_handle_probing_timer >> 16)
      000FBC C0 E0            [24] 3875 	push	acc
      000FBE C0 00            [24] 3876 	push	ar0
      000FC0 C0 01            [24] 3877 	push	ar1
      000FC2 8D 82            [24] 3878 	mov	dpl,r5
      000FC4 8E 83            [24] 3879 	mov	dph,r6
      000FC6 8F F0            [24] 3880 	mov	b,r7
      000FC8 78r00            [12] 3881 	mov	r0,#_ctimer_set
      000FCA 79s00            [12] 3882 	mov	r1,#(_ctimer_set >> 8)
      000FCC 7As00            [12] 3883 	mov	r2,#(_ctimer_set >> 16)
      000FCE 12r00r00         [24] 3884 	lcall	__sdcc_banked_call
      000FD1 E5 81            [12] 3885 	mov	a,sp
      000FD3 24 F8            [12] 3886 	add	a,#0xf8
      000FD5 F5 81            [12] 3887 	mov	sp,a
      000FD7 02r00r00         [24] 3888 	ljmp	__sdcc_banked_ret
                                   3889 	.area CSEG    (CODE)
                                   3890 	.area CONST   (CODE)
                                   3891 	.area XINIT   (CODE)
                                   3892 	.area CABS    (ABS,CODE)
