                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.3.1 #8804 (Aug  6 2013) (Linux)
                                      4 ; This file was generated Sat Nov  3 15:44:47 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module gcr
                                      7 	.optsdcc -mmcs51 --model-huge
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _gcr_get_decoded
                                     13 	.globl _gcr_valid
                                     14 	.globl _gcr_decode
                                     15 	.globl _gcr_get_encoded
                                     16 	.globl _gcr_encode
                                     17 	.globl _gcr_finished
                                     18 	.globl _gcr_init
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 	.area RSEG    (ABS,DATA)
      000000                         23 	.org 0x0000
                                     24 ;--------------------------------------------------------
                                     25 ; special function bits
                                     26 ;--------------------------------------------------------
                                     27 	.area RSEG    (ABS,DATA)
      000000                         28 	.org 0x0000
                                     29 ;--------------------------------------------------------
                                     30 ; overlayable register banks
                                     31 ;--------------------------------------------------------
                                     32 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         33 	.ds 8
                                     34 ;--------------------------------------------------------
                                     35 ; internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area DSEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; overlayable items in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 ;--------------------------------------------------------
                                     42 ; indirectly addressable internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area ISEG    (DATA)
                                     45 ;--------------------------------------------------------
                                     46 ; absolute internal ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area IABS    (ABS,DATA)
                                     49 	.area IABS    (ABS,DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; bit data
                                     52 ;--------------------------------------------------------
                                     53 	.area BSEG    (BIT)
                                     54 ;--------------------------------------------------------
                                     55 ; paged external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area PSEG    (PAG,XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XSEG    (XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; absolute external ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XABS    (ABS,XDATA)
                                     66 ;--------------------------------------------------------
                                     67 ; external initialized ram data
                                     68 ;--------------------------------------------------------
                                     69 	.area XISEG   (XDATA)
      000000                         70 _gcr_bits:
      000000                         71 	.ds 1
      000001                         72 _gcr_val:
      000001                         73 	.ds 2
                                     74 	.area HOME    (CODE)
                                     75 	.area GSINIT0 (CODE)
                                     76 	.area GSINIT1 (CODE)
                                     77 	.area GSINIT2 (CODE)
                                     78 	.area GSINIT3 (CODE)
                                     79 	.area GSINIT4 (CODE)
                                     80 	.area GSINIT5 (CODE)
                                     81 	.area GSINIT  (CODE)
                                     82 	.area GSFINAL (CODE)
                                     83 	.area CSEG    (CODE)
                                     84 ;--------------------------------------------------------
                                     85 ; global & static initialisations
                                     86 ;--------------------------------------------------------
                                     87 	.area HOME    (CODE)
                                     88 	.area GSINIT  (CODE)
                                     89 	.area GSFINAL (CODE)
                                     90 	.area GSINIT  (CODE)
                                     91 ;--------------------------------------------------------
                                     92 ; Home
                                     93 ;--------------------------------------------------------
                                     94 	.area HOME    (CODE)
                                     95 	.area HOME    (CODE)
                                     96 ;--------------------------------------------------------
                                     97 ; code
                                     98 ;--------------------------------------------------------
                                     99 	.area BANK1   (CODE)
                                    100 ;------------------------------------------------------------
                                    101 ;Allocation info for local variables in function 'gcr_init'
                                    102 ;------------------------------------------------------------
                                    103 ;	../../core/lib/gcr.c:67: void gcr_init() {
                                    104 ;	-----------------------------------------
                                    105 ;	 function gcr_init
                                    106 ;	-----------------------------------------
      000000                        107 _gcr_init:
                           000007   108 	ar7 = 0x07
                           000006   109 	ar6 = 0x06
                           000005   110 	ar5 = 0x05
                           000004   111 	ar4 = 0x04
                           000003   112 	ar3 = 0x03
                           000002   113 	ar2 = 0x02
                           000001   114 	ar1 = 0x01
                           000000   115 	ar0 = 0x00
                                    116 ;	../../core/lib/gcr.c:68: gcr_val = 0;
      000000 90r00r01         [24]  117 	mov	dptr,#_gcr_val
      000003 E4               [12]  118 	clr	a
      000004 F0               [24]  119 	movx	@dptr,a
      000005 E4               [12]  120 	clr	a
      000006 A3               [24]  121 	inc	dptr
      000007 F0               [24]  122 	movx	@dptr,a
                                    123 ;	../../core/lib/gcr.c:69: gcr_bits = 0;
      000008 90r00r00         [24]  124 	mov	dptr,#_gcr_bits
      00000B E4               [12]  125 	clr	a
      00000C F0               [24]  126 	movx	@dptr,a
      00000D 02r00r00         [24]  127 	ljmp	__sdcc_banked_ret
                                    128 ;------------------------------------------------------------
                                    129 ;Allocation info for local variables in function 'gcr_finished'
                                    130 ;------------------------------------------------------------
                                    131 ;	../../core/lib/gcr.c:73: unsigned char gcr_finished() {
                                    132 ;	-----------------------------------------
                                    133 ;	 function gcr_finished
                                    134 ;	-----------------------------------------
      000010                        135 _gcr_finished:
                                    136 ;	../../core/lib/gcr.c:74: return gcr_bits == 0;
      000010 90r00r00         [24]  137 	mov	dptr,#_gcr_bits
      000013 E0               [24]  138 	movx	a,@dptr
      000014 FF               [12]  139 	mov	r7,a
      000015 E4               [12]  140 	clr	a
      000016 BF 00 01         [24]  141 	cjne	r7,#0x00,00103$
      000019 04               [12]  142 	inc	a
      00001A                        143 00103$:
      00001A FF               [12]  144 	mov	r7,a
      00001B F5 82            [12]  145 	mov	dpl,a
      00001D 02r00r00         [24]  146 	ljmp	__sdcc_banked_ret
                                    147 ;------------------------------------------------------------
                                    148 ;Allocation info for local variables in function 'gcr_encode'
                                    149 ;------------------------------------------------------------
                                    150 ;raw_data                  Allocated to registers r7 
                                    151 ;------------------------------------------------------------
                                    152 ;	../../core/lib/gcr.c:78: void gcr_encode(unsigned char raw_data) {
                                    153 ;	-----------------------------------------
                                    154 ;	 function gcr_encode
                                    155 ;	-----------------------------------------
      000020                        156 _gcr_encode:
                                    157 ;	../../core/lib/gcr.c:80: ((GCR_encode[raw_data >> 4u] << 5u ) |
      000020 E5 82            [12]  158 	mov	a,dpl
      000022 FF               [12]  159 	mov	r7,a
      000023 C4               [12]  160 	swap	a
      000024 54 0F            [12]  161 	anl	a,#0x0F
      000026 90r00r00         [24]  162 	mov	dptr,#_GCR_encode
      000029 93               [24]  163 	movc	a,@a+dptr
      00002A FE               [12]  164 	mov	r6,a
      00002B E4               [12]  165 	clr	a
      00002C 23               [12]  166 	rl	a
      00002D 54 E0            [12]  167 	anl	a,#0xE0
      00002F CE               [12]  168 	xch	a,r6
      000030 C4               [12]  169 	swap	a
      000031 23               [12]  170 	rl	a
      000032 CE               [12]  171 	xch	a,r6
      000033 6E               [12]  172 	xrl	a,r6
      000034 CE               [12]  173 	xch	a,r6
      000035 54 E0            [12]  174 	anl	a,#0xE0
      000037 CE               [12]  175 	xch	a,r6
      000038 6E               [12]  176 	xrl	a,r6
      000039 FD               [12]  177 	mov	r5,a
                                    178 ;	../../core/lib/gcr.c:81: GCR_encode[raw_data & 0xf]) << gcr_bits;
      00003A 74 0F            [12]  179 	mov	a,#0x0F
      00003C 5F               [12]  180 	anl	a,r7
      00003D 90r00r00         [24]  181 	mov	dptr,#_GCR_encode
      000040 93               [24]  182 	movc	a,@a+dptr
      000041 7C 00            [12]  183 	mov	r4,#0x00
      000043 42 06            [12]  184 	orl	ar6,a
      000045 EC               [12]  185 	mov	a,r4
      000046 42 05            [12]  186 	orl	ar5,a
      000048 90r00r00         [24]  187 	mov	dptr,#_gcr_bits
      00004B E0               [24]  188 	movx	a,@dptr
      00004C FF               [12]  189 	mov	r7,a
      00004D 8F F0            [24]  190 	mov	b,r7
      00004F 05 F0            [12]  191 	inc	b
      000051 80 06            [24]  192 	sjmp	00104$
      000053                        193 00103$:
      000053 EE               [12]  194 	mov	a,r6
      000054 2E               [12]  195 	add	a,r6
      000055 FE               [12]  196 	mov	r6,a
      000056 ED               [12]  197 	mov	a,r5
      000057 33               [12]  198 	rlc	a
      000058 FD               [12]  199 	mov	r5,a
      000059                        200 00104$:
      000059 D5 F0 F7         [24]  201 	djnz	b,00103$
      00005C 90r00r01         [24]  202 	mov	dptr,#_gcr_val
      00005F E0               [24]  203 	movx	a,@dptr
      000060 FB               [12]  204 	mov	r3,a
      000061 A3               [24]  205 	inc	dptr
      000062 E0               [24]  206 	movx	a,@dptr
      000063 FC               [12]  207 	mov	r4,a
      000064 90r00r01         [24]  208 	mov	dptr,#_gcr_val
      000067 EE               [12]  209 	mov	a,r6
      000068 4B               [12]  210 	orl	a,r3
      000069 F0               [24]  211 	movx	@dptr,a
      00006A ED               [12]  212 	mov	a,r5
      00006B 4C               [12]  213 	orl	a,r4
      00006C A3               [24]  214 	inc	dptr
      00006D F0               [24]  215 	movx	@dptr,a
                                    216 ;	../../core/lib/gcr.c:82: gcr_bits += 10;
      00006E 90r00r00         [24]  217 	mov	dptr,#_gcr_bits
      000071 74 0A            [12]  218 	mov	a,#0x0A
      000073 2F               [12]  219 	add	a,r7
      000074 F0               [24]  220 	movx	@dptr,a
      000075 02r00r00         [24]  221 	ljmp	__sdcc_banked_ret
                                    222 ;------------------------------------------------------------
                                    223 ;Allocation info for local variables in function 'gcr_get_encoded'
                                    224 ;------------------------------------------------------------
                                    225 ;raw_data                  Allocated to registers r5 r6 r7 
                                    226 ;------------------------------------------------------------
                                    227 ;	../../core/lib/gcr.c:86: unsigned char gcr_get_encoded(unsigned char *raw_data) {
                                    228 ;	-----------------------------------------
                                    229 ;	 function gcr_get_encoded
                                    230 ;	-----------------------------------------
      000078                        231 _gcr_get_encoded:
      000078 AD 82            [24]  232 	mov	r5,dpl
      00007A AE 83            [24]  233 	mov	r6,dph
      00007C AF F0            [24]  234 	mov	r7,b
                                    235 ;	../../core/lib/gcr.c:87: if (gcr_bits >= 8) {
      00007E 90r00r00         [24]  236 	mov	dptr,#_gcr_bits
      000081 E0               [24]  237 	movx	a,@dptr
      000082 FC               [12]  238 	mov	r4,a
      000083 BC 08 00         [24]  239 	cjne	r4,#0x08,00108$
      000086                        240 00108$:
      000086 40 34            [24]  241 	jc	00102$
                                    242 ;	../../core/lib/gcr.c:88: *raw_data = (unsigned char) (gcr_val & 0xff);
      000088 90r00r01         [24]  243 	mov	dptr,#_gcr_val
      00008B E0               [24]  244 	movx	a,@dptr
      00008C FB               [12]  245 	mov	r3,a
      00008D A3               [24]  246 	inc	dptr
      00008E E0               [24]  247 	movx	a,@dptr
      00008F 7C 00            [12]  248 	mov	r4,#0x00
      000091 8D 82            [24]  249 	mov	dpl,r5
      000093 8E 83            [24]  250 	mov	dph,r6
      000095 8F F0            [24]  251 	mov	b,r7
      000097 EB               [12]  252 	mov	a,r3
      000098 12r00r00         [24]  253 	lcall	__gptrput
                                    254 ;	../../core/lib/gcr.c:89: gcr_val = gcr_val >> 8u;
      00009B 90r00r01         [24]  255 	mov	dptr,#_gcr_val
      00009E E0               [24]  256 	movx	a,@dptr
      00009F A3               [24]  257 	inc	dptr
      0000A0 E0               [24]  258 	movx	a,@dptr
      0000A1 FE               [12]  259 	mov	r6,a
      0000A2 7F 00            [12]  260 	mov	r7,#0x00
      0000A4 90r00r01         [24]  261 	mov	dptr,#_gcr_val
      0000A7 EE               [12]  262 	mov	a,r6
      0000A8 F0               [24]  263 	movx	@dptr,a
      0000A9 EF               [12]  264 	mov	a,r7
      0000AA A3               [24]  265 	inc	dptr
      0000AB F0               [24]  266 	movx	@dptr,a
                                    267 ;	../../core/lib/gcr.c:90: gcr_bits = gcr_bits - 8;
      0000AC 90r00r00         [24]  268 	mov	dptr,#_gcr_bits
      0000AF E0               [24]  269 	movx	a,@dptr
      0000B0 FF               [12]  270 	mov	r7,a
      0000B1 24 F8            [12]  271 	add	a,#0xF8
      0000B3 90r00r00         [24]  272 	mov	dptr,#_gcr_bits
      0000B6 F0               [24]  273 	movx	@dptr,a
                                    274 ;	../../core/lib/gcr.c:91: return 1;
      0000B7 75 82 01         [24]  275 	mov	dpl,#0x01
      0000BA 80 03            [24]  276 	sjmp	00103$
      0000BC                        277 00102$:
                                    278 ;	../../core/lib/gcr.c:93: return 0;
      0000BC 75 82 00         [24]  279 	mov	dpl,#0x00
      0000BF                        280 00103$:
      0000BF 02r00r00         [24]  281 	ljmp	__sdcc_banked_ret
                                    282 ;------------------------------------------------------------
                                    283 ;Allocation info for local variables in function 'gcr_decode'
                                    284 ;------------------------------------------------------------
                                    285 ;gcr_data                  Allocated to registers r7 
                                    286 ;------------------------------------------------------------
                                    287 ;	../../core/lib/gcr.c:97: void gcr_decode(unsigned char gcr_data) {
                                    288 ;	-----------------------------------------
                                    289 ;	 function gcr_decode
                                    290 ;	-----------------------------------------
      0000C2                        291 _gcr_decode:
      0000C2 AF 82            [24]  292 	mov	r7,dpl
                                    293 ;	../../core/lib/gcr.c:98: gcr_val |= gcr_data << gcr_bits;
      0000C4 7E 00            [12]  294 	mov	r6,#0x00
      0000C6 90r00r00         [24]  295 	mov	dptr,#_gcr_bits
      0000C9 E0               [24]  296 	movx	a,@dptr
      0000CA FD               [12]  297 	mov	r5,a
      0000CB 8D F0            [24]  298 	mov	b,r5
      0000CD 05 F0            [12]  299 	inc	b
      0000CF 80 06            [24]  300 	sjmp	00104$
      0000D1                        301 00103$:
      0000D1 EF               [12]  302 	mov	a,r7
      0000D2 2F               [12]  303 	add	a,r7
      0000D3 FF               [12]  304 	mov	r7,a
      0000D4 EE               [12]  305 	mov	a,r6
      0000D5 33               [12]  306 	rlc	a
      0000D6 FE               [12]  307 	mov	r6,a
      0000D7                        308 00104$:
      0000D7 D5 F0 F7         [24]  309 	djnz	b,00103$
      0000DA 90r00r01         [24]  310 	mov	dptr,#_gcr_val
      0000DD E0               [24]  311 	movx	a,@dptr
      0000DE FB               [12]  312 	mov	r3,a
      0000DF A3               [24]  313 	inc	dptr
      0000E0 E0               [24]  314 	movx	a,@dptr
      0000E1 FC               [12]  315 	mov	r4,a
      0000E2 90r00r01         [24]  316 	mov	dptr,#_gcr_val
      0000E5 EF               [12]  317 	mov	a,r7
      0000E6 4B               [12]  318 	orl	a,r3
      0000E7 F0               [24]  319 	movx	@dptr,a
      0000E8 EE               [12]  320 	mov	a,r6
      0000E9 4C               [12]  321 	orl	a,r4
      0000EA A3               [24]  322 	inc	dptr
      0000EB F0               [24]  323 	movx	@dptr,a
                                    324 ;	../../core/lib/gcr.c:99: gcr_bits += 8;
      0000EC 90r00r00         [24]  325 	mov	dptr,#_gcr_bits
      0000EF 74 08            [12]  326 	mov	a,#0x08
      0000F1 2D               [12]  327 	add	a,r5
      0000F2 F0               [24]  328 	movx	@dptr,a
      0000F3 02r00r00         [24]  329 	ljmp	__sdcc_banked_ret
                                    330 ;------------------------------------------------------------
                                    331 ;Allocation info for local variables in function 'gcr_valid'
                                    332 ;------------------------------------------------------------
                                    333 ;val                       Allocated to registers r6 r7 
                                    334 ;------------------------------------------------------------
                                    335 ;	../../core/lib/gcr.c:103: unsigned char gcr_valid() {
                                    336 ;	-----------------------------------------
                                    337 ;	 function gcr_valid
                                    338 ;	-----------------------------------------
      0000F6                        339 _gcr_valid:
                                    340 ;	../../core/lib/gcr.c:104: if (gcr_bits >= 10) {
      0000F6 90r00r00         [24]  341 	mov	dptr,#_gcr_bits
      0000F9 E0               [24]  342 	movx	a,@dptr
      0000FA FF               [12]  343 	mov	r7,a
      0000FB BF 0A 00         [24]  344 	cjne	r7,#0x0A,00114$
      0000FE                        345 00114$:
      0000FE 40 5A            [24]  346 	jc	00105$
                                    347 ;	../../core/lib/gcr.c:105: unsigned short val = gcr_val & 0x3ff;
      000100 90r00r01         [24]  348 	mov	dptr,#_gcr_val
      000103 E0               [24]  349 	movx	a,@dptr
      000104 FE               [12]  350 	mov	r6,a
      000105 A3               [24]  351 	inc	dptr
      000106 E0               [24]  352 	movx	a,@dptr
      000107 FF               [12]  353 	mov	r7,a
      000108 53 07 03         [24]  354 	anl	ar7,#0x03
                                    355 ;	../../core/lib/gcr.c:106: if ((GCR_decode[val >> 5u] << 4u) == 0xff ||
      00010B 8E 04            [24]  356 	mov	ar4,r6
      00010D EF               [12]  357 	mov	a,r7
      00010E C4               [12]  358 	swap	a
      00010F 03               [12]  359 	rr	a
      000110 CC               [12]  360 	xch	a,r4
      000111 C4               [12]  361 	swap	a
      000112 03               [12]  362 	rr	a
      000113 54 07            [12]  363 	anl	a,#0x07
      000115 6C               [12]  364 	xrl	a,r4
      000116 CC               [12]  365 	xch	a,r4
      000117 54 07            [12]  366 	anl	a,#0x07
      000119 CC               [12]  367 	xch	a,r4
      00011A 6C               [12]  368 	xrl	a,r4
      00011B CC               [12]  369 	xch	a,r4
      00011C FD               [12]  370 	mov	r5,a
      00011D EC               [12]  371 	mov	a,r4
      00011E 24r10            [12]  372 	add	a,#_GCR_decode
      000120 F5 82            [12]  373 	mov	dpl,a
      000122 ED               [12]  374 	mov	a,r5
      000123 34s00            [12]  375 	addc	a,#(_GCR_decode >> 8)
      000125 F5 83            [12]  376 	mov	dph,a
      000127 E4               [12]  377 	clr	a
      000128 93               [24]  378 	movc	a,@a+dptr
      000129 FD               [12]  379 	mov	r5,a
      00012A E4               [12]  380 	clr	a
      00012B C4               [12]  381 	swap	a
      00012C 54 F0            [12]  382 	anl	a,#0xF0
      00012E CD               [12]  383 	xch	a,r5
      00012F C4               [12]  384 	swap	a
      000130 CD               [12]  385 	xch	a,r5
      000131 6D               [12]  386 	xrl	a,r5
      000132 CD               [12]  387 	xch	a,r5
      000133 54 F0            [12]  388 	anl	a,#0xF0
      000135 CD               [12]  389 	xch	a,r5
      000136 6D               [12]  390 	xrl	a,r5
      000137 FC               [12]  391 	mov	r4,a
      000138 BD FF 05         [24]  392 	cjne	r5,#0xFF,00116$
      00013B BC 00 02         [24]  393 	cjne	r4,#0x00,00116$
      00013E 80 15            [24]  394 	sjmp	00101$
      000140                        395 00116$:
                                    396 ;	../../core/lib/gcr.c:107: (GCR_decode[val & 0x1f]) == 0xff) {
      000140 53 06 1F         [24]  397 	anl	ar6,#0x1F
      000143 7F 00            [12]  398 	mov	r7,#0x00
      000145 EE               [12]  399 	mov	a,r6
      000146 24r10            [12]  400 	add	a,#_GCR_decode
      000148 F5 82            [12]  401 	mov	dpl,a
      00014A EF               [12]  402 	mov	a,r7
      00014B 34s00            [12]  403 	addc	a,#(_GCR_decode >> 8)
      00014D F5 83            [12]  404 	mov	dph,a
      00014F E4               [12]  405 	clr	a
      000150 93               [24]  406 	movc	a,@a+dptr
      000151 FF               [12]  407 	mov	r7,a
      000152 BF FF 05         [24]  408 	cjne	r7,#0xFF,00105$
      000155                        409 00101$:
                                    410 ;	../../core/lib/gcr.c:108: return 0;
      000155 75 82 00         [24]  411 	mov	dpl,#0x00
      000158 80 03            [24]  412 	sjmp	00106$
      00015A                        413 00105$:
                                    414 ;	../../core/lib/gcr.c:111: return 1;
      00015A 75 82 01         [24]  415 	mov	dpl,#0x01
      00015D                        416 00106$:
      00015D 02r00r00         [24]  417 	ljmp	__sdcc_banked_ret
                                    418 ;------------------------------------------------------------
                                    419 ;Allocation info for local variables in function 'gcr_get_decoded'
                                    420 ;------------------------------------------------------------
                                    421 ;raw_data                  Allocated to registers r5 r6 r7 
                                    422 ;val                       Allocated to stack - sp -1
                                    423 ;------------------------------------------------------------
                                    424 ;	../../core/lib/gcr.c:115: unsigned char gcr_get_decoded(unsigned char *raw_data) {
                                    425 ;	-----------------------------------------
                                    426 ;	 function gcr_get_decoded
                                    427 ;	-----------------------------------------
      000160                        428 _gcr_get_decoded:
      000160 05 81            [12]  429 	inc	sp
      000162 05 81            [12]  430 	inc	sp
      000164 AD 82            [24]  431 	mov	r5,dpl
      000166 AE 83            [24]  432 	mov	r6,dph
      000168 AF F0            [24]  433 	mov	r7,b
                                    434 ;	../../core/lib/gcr.c:116: if (gcr_bits >= 10) {
      00016A 90r00r00         [24]  435 	mov	dptr,#_gcr_bits
      00016D E0               [24]  436 	movx	a,@dptr
      00016E FC               [12]  437 	mov	r4,a
      00016F BC 0A 00         [24]  438 	cjne	r4,#0x0A,00108$
      000172                        439 00108$:
      000172 50 03            [24]  440 	jnc	00109$
      000174 02r01rF5         [24]  441 	ljmp	00102$
      000177                        442 00109$:
                                    443 ;	../../core/lib/gcr.c:117: unsigned short val = gcr_val & 0x3ff;
      000177 90r00r01         [24]  444 	mov	dptr,#_gcr_val
      00017A E0               [24]  445 	movx	a,@dptr
      00017B FB               [12]  446 	mov	r3,a
      00017C A3               [24]  447 	inc	dptr
      00017D E0               [24]  448 	movx	a,@dptr
      00017E FC               [12]  449 	mov	r4,a
      00017F A8 81            [24]  450 	mov	r0,sp
      000181 18               [12]  451 	dec	r0
      000182 A6 03            [24]  452 	mov	@r0,ar3
      000184 74 03            [12]  453 	mov	a,#0x03
      000186 5C               [12]  454 	anl	a,r4
      000187 08               [12]  455 	inc	r0
      000188 F6               [12]  456 	mov	@r0,a
                                    457 ;	../../core/lib/gcr.c:118: *raw_data = (unsigned char) ((GCR_decode[val >> 5] << 4) |
      000189 A8 81            [24]  458 	mov	r0,sp
      00018B 18               [12]  459 	dec	r0
      00018C 86 02            [24]  460 	mov	ar2,@r0
      00018E 08               [12]  461 	inc	r0
      00018F E6               [12]  462 	mov	a,@r0
      000190 C4               [12]  463 	swap	a
      000191 03               [12]  464 	rr	a
      000192 CA               [12]  465 	xch	a,r2
      000193 C4               [12]  466 	swap	a
      000194 03               [12]  467 	rr	a
      000195 54 07            [12]  468 	anl	a,#0x07
      000197 6A               [12]  469 	xrl	a,r2
      000198 CA               [12]  470 	xch	a,r2
      000199 54 07            [12]  471 	anl	a,#0x07
      00019B CA               [12]  472 	xch	a,r2
      00019C 6A               [12]  473 	xrl	a,r2
      00019D CA               [12]  474 	xch	a,r2
      00019E FC               [12]  475 	mov	r4,a
      00019F EA               [12]  476 	mov	a,r2
      0001A0 24r10            [12]  477 	add	a,#_GCR_decode
      0001A2 F5 82            [12]  478 	mov	dpl,a
      0001A4 EC               [12]  479 	mov	a,r4
      0001A5 34s00            [12]  480 	addc	a,#(_GCR_decode >> 8)
      0001A7 F5 83            [12]  481 	mov	dph,a
      0001A9 E4               [12]  482 	clr	a
      0001AA 93               [24]  483 	movc	a,@a+dptr
      0001AB C4               [12]  484 	swap	a
      0001AC 54 F0            [12]  485 	anl	a,#0xF0
      0001AE FC               [12]  486 	mov	r4,a
                                    487 ;	../../core/lib/gcr.c:119: (GCR_decode[val & 0x1f]));
      0001AF A8 81            [24]  488 	mov	r0,sp
      0001B1 18               [12]  489 	dec	r0
      0001B2 74 1F            [12]  490 	mov	a,#0x1F
      0001B4 56               [12]  491 	anl	a,@r0
      0001B5 FA               [12]  492 	mov	r2,a
      0001B6 7B 00            [12]  493 	mov	r3,#0x00
      0001B8 24r10            [12]  494 	add	a,#_GCR_decode
      0001BA F5 82            [12]  495 	mov	dpl,a
      0001BC EB               [12]  496 	mov	a,r3
      0001BD 34s00            [12]  497 	addc	a,#(_GCR_decode >> 8)
      0001BF F5 83            [12]  498 	mov	dph,a
      0001C1 E4               [12]  499 	clr	a
      0001C2 93               [24]  500 	movc	a,@a+dptr
      0001C3 FB               [12]  501 	mov	r3,a
      0001C4 42 04            [12]  502 	orl	ar4,a
      0001C6 8D 82            [24]  503 	mov	dpl,r5
      0001C8 8E 83            [24]  504 	mov	dph,r6
      0001CA 8F F0            [24]  505 	mov	b,r7
      0001CC EC               [12]  506 	mov	a,r4
      0001CD 12r00r00         [24]  507 	lcall	__gptrput
                                    508 ;	../../core/lib/gcr.c:120: gcr_val = gcr_val >> 10;
      0001D0 90r00r01         [24]  509 	mov	dptr,#_gcr_val
      0001D3 E0               [24]  510 	movx	a,@dptr
      0001D4 A3               [24]  511 	inc	dptr
      0001D5 E0               [24]  512 	movx	a,@dptr
      0001D6 03               [12]  513 	rr	a
      0001D7 03               [12]  514 	rr	a
      0001D8 54 3F            [12]  515 	anl	a,#0x3F
      0001DA FE               [12]  516 	mov	r6,a
      0001DB 7F 00            [12]  517 	mov	r7,#0x00
      0001DD 90r00r01         [24]  518 	mov	dptr,#_gcr_val
      0001E0 EE               [12]  519 	mov	a,r6
      0001E1 F0               [24]  520 	movx	@dptr,a
      0001E2 EF               [12]  521 	mov	a,r7
      0001E3 A3               [24]  522 	inc	dptr
      0001E4 F0               [24]  523 	movx	@dptr,a
                                    524 ;	../../core/lib/gcr.c:121: gcr_bits = gcr_bits - 10;
      0001E5 90r00r00         [24]  525 	mov	dptr,#_gcr_bits
      0001E8 E0               [24]  526 	movx	a,@dptr
      0001E9 FF               [12]  527 	mov	r7,a
      0001EA 24 F6            [12]  528 	add	a,#0xF6
      0001EC 90r00r00         [24]  529 	mov	dptr,#_gcr_bits
      0001EF F0               [24]  530 	movx	@dptr,a
                                    531 ;	../../core/lib/gcr.c:122: return 1;
      0001F0 75 82 01         [24]  532 	mov	dpl,#0x01
      0001F3 80 03            [24]  533 	sjmp	00103$
      0001F5                        534 00102$:
                                    535 ;	../../core/lib/gcr.c:124: return 0;
      0001F5 75 82 00         [24]  536 	mov	dpl,#0x00
      0001F8                        537 00103$:
      0001F8 15 81            [12]  538 	dec	sp
      0001FA 15 81            [12]  539 	dec	sp
      0001FC 02r00r00         [24]  540 	ljmp	__sdcc_banked_ret
                                    541 	.area CSEG    (CODE)
                                    542 	.area CONST   (CODE)
      000000                        543 _GCR_encode:
      000000 0A                     544 	.db #0x0A	; 10
      000001 0B                     545 	.db #0x0B	; 11
      000002 12                     546 	.db #0x12	; 18
      000003 13                     547 	.db #0x13	; 19
      000004 0E                     548 	.db #0x0E	; 14
      000005 0F                     549 	.db #0x0F	; 15
      000006 16                     550 	.db #0x16	; 22
      000007 17                     551 	.db #0x17	; 23
      000008 09                     552 	.db #0x09	; 9
      000009 19                     553 	.db #0x19	; 25
      00000A 1A                     554 	.db #0x1A	; 26
      00000B 1B                     555 	.db #0x1B	; 27
      00000C 0D                     556 	.db #0x0D	; 13
      00000D 1D                     557 	.db #0x1D	; 29
      00000E 1E                     558 	.db #0x1E	; 30
      00000F 15                     559 	.db #0x15	; 21
      000010                        560 _GCR_decode:
      000010 FF                     561 	.db #0xFF	; 255
      000011 FF                     562 	.db #0xFF	; 255
      000012 FF                     563 	.db #0xFF	; 255
      000013 FF                     564 	.db #0xFF	; 255
      000014 FF                     565 	.db #0xFF	; 255
      000015 FF                     566 	.db #0xFF	; 255
      000016 FF                     567 	.db #0xFF	; 255
      000017 FF                     568 	.db #0xFF	; 255
      000018 FF                     569 	.db #0xFF	; 255
      000019 08                     570 	.db #0x08	; 8
      00001A 00                     571 	.db #0x00	; 0
      00001B 01                     572 	.db #0x01	; 1
      00001C FF                     573 	.db #0xFF	; 255
      00001D 0C                     574 	.db #0x0C	; 12
      00001E 04                     575 	.db #0x04	; 4
      00001F 05                     576 	.db #0x05	; 5
      000020 FF                     577 	.db #0xFF	; 255
      000021 FF                     578 	.db #0xFF	; 255
      000022 02                     579 	.db #0x02	; 2
      000023 03                     580 	.db #0x03	; 3
      000024 FF                     581 	.db #0xFF	; 255
      000025 0F                     582 	.db #0x0F	; 15
      000026 06                     583 	.db #0x06	; 6
      000027 07                     584 	.db #0x07	; 7
      000028 FF                     585 	.db #0xFF	; 255
      000029 09                     586 	.db #0x09	; 9
      00002A 0A                     587 	.db #0x0A	; 10
      00002B 0B                     588 	.db #0x0B	; 11
      00002C FF                     589 	.db #0xFF	; 255
      00002D 0D                     590 	.db #0x0D	; 13
      00002E 0E                     591 	.db #0x0E	; 14
      00002F FF                     592 	.db #0xFF	; 255
                                    593 	.area XINIT   (CODE)
      000000                        594 __xinit__gcr_bits:
      000000 00                     595 	.db #0x00	; 0
      000001                        596 __xinit__gcr_val:
      000001 00 00                  597 	.byte #0x00,#0x00	; 0
                                    598 	.area CABS    (ABS,CODE)
